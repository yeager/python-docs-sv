# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Logging HOWTO"
msgstr "Loggning HOWTO"

msgid "Author"
msgstr "Författare"

msgid "Vinay Sajip <vinay_sajip at red-dove dot com>"
msgstr "Vinay Sajip <vinay_sajip at red-dove dot com>"

msgid ""
"This page contains tutorial information. For links to reference information "
"and a logging cookbook, please see :ref:`tutorial-ref-links`."
msgstr ""
"Den här sidan innehåller handledningsinformation. För länkar till "
"referensinformation och en kokbok för loggning, se :ref:`tutorial-ref-links`."

msgid "Basic Logging Tutorial"
msgstr "Grundläggande loggningshandledning"

msgid ""
"Logging is a means of tracking events that happen when some software runs. "
"The software's developer adds logging calls to their code to indicate that "
"certain events have occurred. An event is described by a descriptive message "
"which can optionally contain variable data (i.e. data that is potentially "
"different for each occurrence of the event). Events also have an importance "
"which the developer ascribes to the event; the importance can also be called "
"the *level* or *severity*."
msgstr ""
"Loggning är ett sätt att spåra händelser som inträffar när en viss "
"programvara körs. Programvarans utvecklare lägger till loggningsanrop i sin "
"kod för att indikera att vissa händelser har inträffat. En händelse beskrivs "
"med ett beskrivande meddelande som eventuellt kan innehålla variabeldata "
"(dvs. data som potentiellt är olika för varje gång händelsen inträffar). "
"Händelser har också en betydelse som utvecklaren tillskriver händelsen; "
"betydelsen kan också kallas *nivå* eller *alstringsgrad*."

msgid "When to use logging"
msgstr "När ska man använda loggning"

msgid ""
"You can access logging functionality by creating a logger via ``logger = "
"getLogger(__name__)``, and then calling the logger's :meth:`~Logger.debug`, :"
"meth:`~Logger.info`, :meth:`~Logger.warning`, :meth:`~Logger.error` and :"
"meth:`~Logger.critical` methods. To determine when to use logging, and to "
"see which logger methods to use when, see the table below. It states, for "
"each of a set of common tasks, the best tool to use for that task."
msgstr ""
"Du kan komma åt loggningsfunktionalitet genom att skapa en logger via "
"``logger = getLogger(__name__)`` och sedan anropa loggerns metoder :meth:"
"`~Logger.debug`, :meth:`~Logger.info`, :meth:`~Logger.warning`, :meth:"
"`~Logger.error` och :meth:`~Logger.critical`. För att avgöra när loggning "
"ska användas och för att se vilka loggermetoder som ska användas när, se "
"tabellen nedan. Den anger, för var och en av en uppsättning vanliga "
"uppgifter, det bästa verktyget att använda för den uppgiften."

msgid "Task you want to perform"
msgstr "Uppgift du vill utföra"

msgid "The best tool for the task"
msgstr "Det bästa verktyget för uppgiften"

msgid ""
"Display console output for ordinary usage of a command line script or program"
msgstr ""
"Visa konsolutmatning för vanlig användning av ett kommandoradsskript eller -"
"program"

msgid ":func:`print`"
msgstr ":func:`print`"

msgid ""
"Report events that occur during normal operation of a program (e.g. for "
"status monitoring or fault investigation)"
msgstr ""
"Rapportera händelser som inträffar under normal drift av ett program (t.ex. "
"för statusövervakning eller felsökning)"

msgid ""
"A logger's :meth:`~Logger.info` (or :meth:`~Logger.debug` method for very "
"detailed output for diagnostic purposes)"
msgstr ""
"En loggers :meth:`~Logger.info` (eller :meth:`~Logger.debug`-metod för "
"mycket detaljerad utdata för diagnostiska ändamål)"

msgid "Issue a warning regarding a particular runtime event"
msgstr "Utfärda en varning för en viss runtime-händelse"

msgid ""
":func:`warnings.warn` in library code if the issue is avoidable and the "
"client application should be modified to eliminate the warning"
msgstr ""
":func:`warnings.warn` i bibliotekskod om problemet kan undvikas och "
"klientprogrammet bör ändras för att eliminera varningen"

msgid ""
"A logger's :meth:`~Logger.warning` method if there is nothing the client "
"application can do about the situation, but the event should still be noted"
msgstr ""
"En loggers :meth:`~Logger.warning`-metod om det inte finns något som "
"klientprogrammet kan göra åt situationen, men händelsen bör ändå noteras"

msgid "Report an error regarding a particular runtime event"
msgstr "Rapportera ett fel angående en viss runtime-händelse"

msgid "Raise an exception"
msgstr "Upprätta ett undantag"

msgid ""
"Report suppression of an error without raising an exception (e.g. error "
"handler in a long-running server process)"
msgstr ""
"Rapportera undertryckande av ett fel utan att skapa ett undantag (t.ex. "
"felhanterare i en serverprocess som körs under lång tid)"

msgid ""
"A logger's :meth:`~Logger.error`, :meth:`~Logger.exception` or :meth:"
"`~Logger.critical` method as appropriate for the specific error and "
"application domain"
msgstr ""
"En loggers metod :meth:`~Logger.error`, :meth:`~Logger.exception` eller :"
"meth:`~Logger.critical`, beroende på vad som är lämpligt för det specifika "
"felet och applikationsdomänen"

msgid ""
"The logger methods are named after the level or severity of the events they "
"are used to track. The standard levels and their applicability are described "
"below (in increasing order of severity):"
msgstr ""
"Loggningsmetoderna har namn efter nivån eller allvarlighetsgraden på de "
"händelser som de används för att spåra. Standardnivåerna och deras "
"tillämplighet beskrivs nedan (i stigande ordning efter allvarlighetsgrad):"

msgid "Level"
msgstr "Nivå"

msgid "When it's used"
msgstr "När den används"

msgid "``DEBUG``"
msgstr "``DEBUG``"

msgid ""
"Detailed information, typically of interest only when diagnosing problems."
msgstr ""
"Detaljerad information, vanligtvis av intresse endast vid diagnostisering av "
"problem."

msgid "``INFO``"
msgstr "``INFO``"

msgid "Confirmation that things are working as expected."
msgstr "Bekräftelse på att saker och ting fungerar som förväntat."

msgid "``WARNING``"
msgstr "\"VARNING"

msgid ""
"An indication that something unexpected happened, or indicative of some "
"problem in the near future (e.g. 'disk space low'). The software is still "
"working as expected."
msgstr ""
"En indikation på att något oväntat har hänt eller en indikation på ett "
"problem inom en snar framtid (t.ex. \"lågt diskutrymme\"). Programvaran "
"fungerar fortfarande som förväntat."

msgid "``ERROR``"
msgstr "``ERROR``"

msgid ""
"Due to a more serious problem, the software has not been able to perform "
"some function."
msgstr ""
"På grund av ett mer allvarligt problem har programvaran inte kunnat utföra "
"någon funktion."

msgid "``CRITICAL``"
msgstr "\"KRITISK"

msgid ""
"A serious error, indicating that the program itself may be unable to "
"continue running."
msgstr ""
"Ett allvarligt fel som indikerar att själva programmet kanske inte kan "
"fortsätta att köras."

msgid ""
"The default level is ``WARNING``, which means that only events of this "
"severity and higher will be tracked, unless the logging package is "
"configured to do otherwise."
msgstr ""
"Standardnivån är ``WARNING``, vilket innebär att endast händelser med denna "
"allvarlighetsgrad och högre kommer att spåras, såvida inte loggningspaketet "
"är konfigurerat för att göra något annat."

msgid ""
"Events that are tracked can be handled in different ways. The simplest way "
"of handling tracked events is to print them to the console. Another common "
"way is to write them to a disk file."
msgstr ""
"Händelser som spåras kan hanteras på olika sätt. Det enklaste sättet att "
"hantera spårade händelser är att skriva ut dem till konsolen. Ett annat "
"vanligt sätt är att skriva dem till en diskfil."

msgid "A simple example"
msgstr "Ett enkelt exempel"

msgid "A very simple example is::"
msgstr "Ett mycket enkelt exempel är::"

msgid ""
"import logging\n"
"logging.warning('Watch out!')  # will print a message to the console\n"
"logging.info('I told you so')  # will not print anything"
msgstr ""
"import logging\n"
"logging.warning('Watch out!')  # will print a message to the console\n"
"logging.info('I told you so')  # will not print anything"

msgid "If you type these lines into a script and run it, you'll see:"
msgstr ""
"Om du skriver in dessa rader i ett skript och kör det, kommer du att se:"

msgid "WARNING:root:Watch out!"
msgstr "VARNING:root:Se upp!"

msgid ""
"printed out on the console. The ``INFO`` message doesn't appear because the "
"default level is ``WARNING``. The printed message includes the indication of "
"the level and the description of the event provided in the logging call, i."
"e. 'Watch out!'. The actual output can be formatted quite flexibly if you "
"need that; formatting options will also be explained later."
msgstr ""
"skrivs ut på konsolen. Meddelandet ``INFO`` visas inte eftersom "
"standardnivån är ``WARNING``. Det utskrivna meddelandet innehåller "
"nivåangivelsen och beskrivningen av händelsen i loggningsanropet, t.ex. \"Se "
"upp!\". Den faktiska utskriften kan formateras ganska flexibelt om du "
"behöver det; formateringsalternativ kommer också att förklaras senare."

msgid ""
"Notice that in this example, we use functions directly on the ``logging`` "
"module, like ``logging.debug``, rather than creating a logger and calling "
"functions on it. These functions operate on the root logger, but can be "
"useful as they will call :func:`~logging.basicConfig` for you if it has not "
"been called yet, like in this example.  In larger programs you'll usually "
"want to control the logging configuration explicitly however - so for that "
"reason as well as others, it's better to create loggers and call their "
"methods."
msgstr ""
"Observera att vi i det här exemplet använder funktioner direkt i modulen "
"``logging``, t.ex. ``logging.debug``, i stället för att skapa en logger och "
"anropa funktioner i den. Dessa funktioner arbetar på rotloggern, men kan "
"vara användbara eftersom de kommer att anropa :func:`~logging.basicConfig` "
"åt dig om den inte har anropats ännu, som i det här exemplet.  I större "
"program vill du dock vanligtvis kontrollera loggningskonfigurationen "
"explicit - så av det skälet, liksom av andra, är det bättre att skapa "
"loggrar och anropa deras metoder."

msgid "Logging to a file"
msgstr "Loggning till en fil"

msgid ""
"A very common situation is that of recording logging events in a file, so "
"let's look at that next. Be sure to try the following in a newly started "
"Python interpreter, and don't just continue from the session described "
"above::"
msgstr ""
"En mycket vanlig situation är att registrera loggningshändelser i en fil, så "
"låt oss titta på det härnäst. Var noga med att prova följande i en nystartad "
"Python-tolk, och fortsätt inte bara från den session som beskrivs ovan::"

msgid ""
"import logging\n"
"logger = logging.getLogger(__name__)\n"
"logging.basicConfig(filename='example.log', encoding='utf-8', level=logging."
"DEBUG)\n"
"logger.debug('This message should go to the log file')\n"
"logger.info('So should this')\n"
"logger.warning('And this, too')\n"
"logger.error('And non-ASCII stuff, too, like Øresund and Malmö')"
msgstr ""
"import logging\n"
"logger = logging.getLogger(__name__)\n"
"logging.basicConfig(filename='example.log', encoding='utf-8', level=logging."
"DEBUG)\n"
"logger.debug('This message should go to the log file')\n"
"logger.info('So should this')\n"
"logger.warning('And this, too')\n"
"logger.error('And non-ASCII stuff, too, like Øresund and Malmö')"

msgid ""
"The *encoding* argument was added. In earlier Python versions, or if not "
"specified, the encoding used is the default value used by :func:`open`. "
"While not shown in the above example, an *errors* argument can also now be "
"passed, which determines how encoding errors are handled. For available "
"values and the default, see the documentation for :func:`open`."
msgstr ""
"Argumentet *encoding* har lagts till. I tidigare Python-versioner, eller om "
"det inte anges, är den kodning som används det standardvärde som används av :"
"func:`open`. Även om det inte visas i exemplet ovan, kan ett *errors*-"
"argument nu också skickas, vilket avgör hur kodningsfel hanteras. För "
"tillgängliga värden och standardvärdet, se dokumentationen för :func:`open`."

msgid ""
"And now if we open the file and look at what we have, we should find the log "
"messages:"
msgstr ""
"Och om vi nu öppnar filen och tittar på vad vi har, bör vi hitta "
"loggmeddelandena:"

msgid ""
"DEBUG:__main__:This message should go to the log file\n"
"INFO:__main__:So should this\n"
"WARNING:__main__:And this, too\n"
"ERROR:__main__:And non-ASCII stuff, too, like Øresund and Malmö"
msgstr ""
"DEBUG:__main__:Detta meddelande ska gå till loggfilen\n"
"INFO:__main__:Det ska även det här\n"
"WARNING:__main__:Och det här också\n"
"ERROR:__main__:Och icke-ASCII-grejer också, som Öresund och Malmö"

msgid ""
"This example also shows how you can set the logging level which acts as the "
"threshold for tracking. In this case, because we set the threshold to "
"``DEBUG``, all of the messages were printed."
msgstr ""
"I det här exemplet visas också hur du kan ställa in den loggningsnivå som "
"fungerar som tröskel för spårning. I det här fallet skrevs alla meddelanden "
"ut eftersom vi ställde in tröskeln på ``DEBUG``."

msgid ""
"If you want to set the logging level from a command-line option such as:"
msgstr ""
"Om du vill ställa in loggningsnivån från ett kommandoradsalternativ som t.ex:"

msgid "--log=INFO"
msgstr "--log=INFO"

msgid ""
"and you have the value of the parameter passed for ``--log`` in some "
"variable *loglevel*, you can use::"
msgstr ""
"och du har värdet på parametern som skickas för ``--log`` i någon variabel "
"*loglevel*, kan du använda::"

msgid "getattr(logging, loglevel.upper())"
msgstr "getattr(logging, loglevel.upper())"

msgid ""
"to get the value which you'll pass to :func:`basicConfig` via the *level* "
"argument. You may want to error check any user input value, perhaps as in "
"the following example::"
msgstr ""
"för att få det värde som du skickar till :func:`basicConfig` via argumentet "
"*level*. Du kanske vill felkontrollera alla värden som användaren matar in, "
"kanske som i följande exempel::"

msgid ""
"# assuming loglevel is bound to the string value obtained from the\n"
"# command line argument. Convert to upper case to allow the user to\n"
"# specify --log=DEBUG or --log=debug\n"
"numeric_level = getattr(logging, loglevel.upper(), None)\n"
"if not isinstance(numeric_level, int):\n"
"    raise ValueError('Invalid log level: %s' % loglevel)\n"
"logging.basicConfig(level=numeric_level, ...)"
msgstr ""
"# loggnivån är bunden till det strängvärde som erhålls från # "
"kommandoradsargumentet\n"
"# argumentet på kommandoraden. Konvertera till versaler för att användaren "
"ska kunna\n"
"# ange --log=DEBUG eller --log=debug\n"
"numeric_level = getattr(logging, loglevel.upper(), None)\n"
"if not isinstance(numeric_level, int):\n"
"    raise ValueError('Ogiltig loggnivå: %s' % loglevel)\n"
"logging.basicConfig(nivå=numerisk_nivå, ...)"

msgid ""
"The call to :func:`basicConfig` should come *before* any calls to a logger's "
"methods such as :meth:`~Logger.debug`, :meth:`~Logger.info`, etc. Otherwise, "
"that logging event may not be handled in the desired manner."
msgstr ""
"Anropet till :func:`basicConfig` bör komma *före* alla anrop till en loggers "
"metoder såsom :meth:`~Logger.debug`, :meth:`~Logger.info`, etc. Annars kan "
"det hända att loggningshändelsen inte hanteras på önskat sätt."

msgid ""
"If you run the above script several times, the messages from successive runs "
"are appended to the file *example.log*. If you want each run to start "
"afresh, not remembering the messages from earlier runs, you can specify the "
"*filemode* argument, by changing the call in the above example to::"
msgstr ""
"Om du kör ovanstående skript flera gånger kommer meddelandena från de olika "
"körningarna att läggas till i filen *example.log*. Om du vill att varje "
"körning ska börja om på nytt och inte komma ihåg meddelandena från tidigare "
"körningar kan du ange argumentet *filemode* genom att ändra anropet i "
"exemplet ovan till::"

msgid ""
"logging.basicConfig(filename='example.log', filemode='w', level=logging."
"DEBUG)"
msgstr ""
"logging.basicConfig(filnamn='exempel.log', filemode='w', nivå=logging.DEBUG)"

msgid ""
"The output will be the same as before, but the log file is no longer "
"appended to, so the messages from earlier runs are lost."
msgstr ""
"Utdata blir samma som tidigare, men loggfilen läggs inte längre till, så "
"meddelanden från tidigare körningar går förlorade."

msgid "Logging variable data"
msgstr "Loggning av variabeldata"

msgid ""
"To log variable data, use a format string for the event description message "
"and append the variable data as arguments. For example::"
msgstr ""
"Om du vill logga variabeldata använder du en formatsträng för "
"händelsebeskrivningsmeddelandet och lägger till variabeldata som argument. "
"Till exempel::"

msgid ""
"import logging\n"
"logging.warning('%s before you %s', 'Look', 'leap!')"
msgstr ""
"import loggning\n"
"logging.warning('%s innan du %s', 'Titta', 'hoppa!')"

msgid "will display:"
msgstr "kommer att visas:"

msgid "WARNING:root:Look before you leap!"
msgstr "VARNING:root:Se dig för innan du hoppar!"

msgid ""
"As you can see, merging of variable data into the event description message "
"uses the old, %-style of string formatting. This is for backwards "
"compatibility: the logging package pre-dates newer formatting options such "
"as :meth:`str.format` and :class:`string.Template`. These newer formatting "
"options *are* supported, but exploring them is outside the scope of this "
"tutorial: see :ref:`formatting-styles` for more information."
msgstr ""
"Som du kan se används den gamla %-s-typen av strängformatering för att slå "
"samman variabeldata i meddelandet med händelsebeskrivningen. Detta är för "
"bakåtkompatibilitet: loggningspaketet är äldre än nyare "
"formateringsalternativ som :meth:`str.format` och :class:`string.Template`. "
"Dessa nyare formateringsalternativ *stödjs*, men att utforska dem ligger "
"utanför ramen för denna handledning: se :ref:`formatting-styles` för mer "
"information."

msgid "Changing the format of displayed messages"
msgstr "Ändra formatet på de meddelanden som visas"

msgid ""
"To change the format which is used to display messages, you need to specify "
"the format you want to use::"
msgstr ""
"Om du vill ändra det format som används för att visa meddelanden måste du "
"ange vilket format du vill använda::"

msgid ""
"import logging\n"
"logging.basicConfig(format='%(levelname)s:%(message)s', level=logging."
"DEBUG)\n"
"logging.debug('This message should appear on the console')\n"
"logging.info('So should this')\n"
"logging.warning('And this, too')"
msgstr ""
"import loggning\n"
"logging.basicConfig(format='%(levelname)s:%(message)s', level=logging."
"DEBUG)\n"
"logging.debug('Det här meddelandet ska visas på konsolen')\n"
"logging.info('Det här bör också visas')\n"
"logging.warning('Och det här också')"

msgid "which would print:"
msgstr "som skulle skriva ut:"

msgid ""
"DEBUG:This message should appear on the console\n"
"INFO:So should this\n"
"WARNING:And this, too"
msgstr ""
"DEBUG:Detta meddelande ska visas på konsolen\n"
"INFO:Det här bör också visas\n"
"WARNING:Och det här också"

msgid ""
"Notice that the 'root' which appeared in earlier examples has disappeared. "
"For a full set of things that can appear in format strings, you can refer to "
"the documentation for :ref:`logrecord-attributes`, but for simple usage, you "
"just need the *levelname* (severity), *message* (event description, "
"including variable data) and perhaps to display when the event occurred. "
"This is described in the next section."
msgstr ""
"Lägg märke till att \"root\", som fanns i tidigare exempel, har försvunnit. "
"För en fullständig uppsättning saker som kan visas i formatsträngar kan du "
"hänvisa till dokumentationen för :ref:`logrecord-attributes`, men för enkel "
"användning behöver du bara *levelname* (allvarlighetsgrad), *message* "
"(händelsebeskrivning, inklusive variabeldata) och kanske för att visa när "
"händelsen inträffade. Detta beskrivs i nästa avsnitt."

msgid "Displaying the date/time in messages"
msgstr "Visning av datum/tid i meddelanden"

msgid ""
"To display the date and time of an event, you would place '%(asctime)s' in "
"your format string::"
msgstr ""
"Om du vill visa datum och tid för en händelse skriver du '%(asctime)s' i "
"formatsträngen::"

msgid ""
"import logging\n"
"logging.basicConfig(format='%(asctime)s %(message)s')\n"
"logging.warning('is when this event was logged.')"
msgstr ""
"import loggning\n"
"logging.basicConfig(format='%(asctime)s %(message)s')\n"
"logging.warning('är när den här händelsen loggades.')"

msgid "which should print something like this:"
msgstr "som borde skriva ut något liknande detta:"

msgid "2010-12-12 11:41:42,612 is when this event was logged."
msgstr "2010-12-12 11:41:42,612 är när denna händelse loggades."

msgid ""
"The default format for date/time display (shown above) is like ISO8601 or :"
"rfc:`3339`. If you need more control over the formatting of the date/time, "
"provide a *datefmt* argument to ``basicConfig``, as in this example::"
msgstr ""
"Standardformatet för visning av datum/tid (visas ovan) är som ISO8601 eller :"
"rfc:`3339`. Om du behöver mer kontroll över formateringen av datum/tid kan "
"du ange ett *datefmt*-argument till ``basicConfig``, som i det här exemplet::"

msgid ""
"import logging\n"
"logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d/%Y %I:"
"%M:%S %p')\n"
"logging.warning('is when this event was logged.')"
msgstr ""
"import loggning\n"
"logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d/%Y %I:"
"%M:%S %p')\n"
"logging.warning('är när den här händelsen loggades.')"

msgid "which would display something like this:"
msgstr "vilket skulle visa något i stil med detta:"

msgid "12/12/2010 11:46:36 AM is when this event was logged."
msgstr "12/12/2010 11:46:36 AM är när denna händelse loggades."

msgid ""
"The format of the *datefmt* argument is the same as supported by :func:`time."
"strftime`."
msgstr ""
"Formatet för *datefmt*-argumentet är detsamma som stöds av :func:`time."
"strftime`."

msgid "Next Steps"
msgstr "Nästa steg"

msgid ""
"That concludes the basic tutorial. It should be enough to get you up and "
"running with logging. There's a lot more that the logging package offers, "
"but to get the best out of it, you'll need to invest a little more of your "
"time in reading the following sections. If you're ready for that, grab some "
"of your favourite beverage and carry on."
msgstr ""
"Det avslutar den grundläggande handledningen. Det borde räcka för att du ska "
"komma igång med loggning. Det finns mycket mer som loggningspaketet "
"erbjuder, men för att få ut det bästa av det måste du investera lite mer av "
"din tid i att läsa de följande avsnitten. Om du är redo för det, ta lite av "
"din favoritdryck och fortsätt."

msgid ""
"If your logging needs are simple, then use the above examples to incorporate "
"logging into your own scripts, and if you run into problems or don't "
"understand something, please post a question in the Help category of the "
"`Python discussion forum <https://discuss.python.org/c/help/7>`_ and you "
"should receive help before too long."
msgstr ""
"Om dina loggningsbehov är enkla kan du använda exemplen ovan för att "
"integrera loggning i dina egna skript, och om du stöter på problem eller "
"inte förstår något kan du ställa en fråga i Help-kategorin i "
"diskussionsforumet `Python <https://discuss.python.org/c/help/7>`_ så får du "
"hjälp inom kort."

msgid ""
"Still here? You can carry on reading the next few sections, which provide a "
"slightly more advanced/in-depth tutorial than the basic one above. After "
"that, you can take a look at the :ref:`logging-cookbook`."
msgstr ""
"Är du fortfarande kvar? Du kan fortsätta att läsa de kommande avsnitten, som "
"ger en något mer avancerad/fördjupad handledning än den grundläggande ovan. "
"Efter det kan du ta en titt på :ref:`logging-cookbook`."

msgid "Advanced Logging Tutorial"
msgstr "Handledning för avancerad loggning"

msgid ""
"The logging library takes a modular approach and offers several categories "
"of components: loggers, handlers, filters, and formatters."
msgstr ""
"Loggningsbiblioteket är modulärt uppbyggt och erbjuder flera kategorier av "
"komponenter: loggrar, hanterare, filter och formaterare."

msgid "Loggers expose the interface that application code directly uses."
msgstr "Loggar exponerar det gränssnitt som applikationskoden använder direkt."

msgid ""
"Handlers send the log records (created by loggers) to the appropriate "
"destination."
msgstr ""
"Hanterare skickar loggposter (som skapats av loggar) till lämplig "
"destination."

msgid ""
"Filters provide a finer grained facility for determining which log records "
"to output."
msgstr ""
"Filter ger en mer finfördelad möjlighet att bestämma vilka loggposter som "
"ska matas ut."

msgid "Formatters specify the layout of log records in the final output."
msgstr ""
"Formatterare specificerar layouten för loggposter i den slutliga utskriften."

msgid ""
"Log event information is passed between loggers, handlers, filters and "
"formatters in a :class:`LogRecord` instance."
msgstr ""
"Information om logghändelser skickas mellan loggar, hanterare, filter och "
"formaterare i en :class:`LogRecord`-instans."

msgid ""
"Logging is performed by calling methods on instances of the :class:`Logger` "
"class (hereafter called :dfn:`loggers`). Each instance has a name, and they "
"are conceptually arranged in a namespace hierarchy using dots (periods) as "
"separators. For example, a logger named 'scan' is the parent of loggers "
"'scan.text', 'scan.html' and 'scan.pdf'. Logger names can be anything you "
"want, and indicate the area of an application in which a logged message "
"originates."
msgstr ""
"Loggning utförs genom att anropa metoder på instanser av klassen :class:"
"`Logger` (hädanefter kallad :dfn:`loggers`). Varje instans har ett namn, och "
"de är konceptuellt ordnade i en namnrymdshierarki med punkter (punkter) som "
"separatorer. Till exempel är en logger med namnet \"scan\" överordnad "
"loggrarna \"scan.text\", \"scan.html\" och \"scan.pdf\". Loggernamn kan vara "
"vad som helst och anger det område i en applikation där ett loggat "
"meddelande har sitt ursprung."

msgid ""
"A good convention to use when naming loggers is to use a module-level "
"logger, in each module which uses logging, named as follows::"
msgstr ""
"Ett bra sätt att namnge loggar är att använda en logger på modulnivå, i "
"varje modul som använder loggning, som namnges enligt följande::"

msgid "logger = logging.getLogger(__name__)"
msgstr "logger = loggning.getLogger(__name__)"

msgid ""
"This means that logger names track the package/module hierarchy, and it's "
"intuitively obvious where events are logged just from the logger name."
msgstr ""
"Det innebär att loggarnas namn följer paket-/modulhierarkin och att det är "
"intuitivt uppenbart var händelser loggas bara genom loggarnas namn."

msgid ""
"The root of the hierarchy of loggers is called the root logger. That's the "
"logger used by the functions :func:`debug`, :func:`info`, :func:`warning`, :"
"func:`error` and :func:`critical`, which just call the same-named method of "
"the root logger. The functions and the methods have the same signatures. The "
"root logger's name is printed as 'root' in the logged output."
msgstr ""
"Roten i hierarkin av loggrar kallas root logger. Det är den logger som "
"används av funktionerna :func:`debug`, :func:`info`, :func:`warning`, :func:"
"`error` och :func:`critical`, som bara anropar rotloggerns metod med samma "
"namn. Funktionerna och metoderna har samma signaturer. Rotloggarens namn "
"skrivs ut som 'root' i den loggade utdata."

msgid ""
"It is, of course, possible to log messages to different destinations. "
"Support is included in the package for writing log messages to files, HTTP "
"GET/POST locations, email via SMTP, generic sockets, queues, or OS-specific "
"logging mechanisms such as syslog or the Windows NT event log. Destinations "
"are served by :dfn:`handler` classes. You can create your own log "
"destination class if you have special requirements not met by any of the "
"built-in handler classes."
msgstr ""
"Det är naturligtvis möjligt att logga meddelanden till olika destinationer. "
"Stöd ingår i paketet för att skriva loggmeddelanden till filer, HTTP GET/"
"POST-platser, e-post via SMTP, generiska socklar, köer eller OS-specifika "
"loggmekanismer som syslog eller Windows NT-händelseloggen. Destinationerna "
"betjänas av :dfn:`handler`-klasser. Du kan skapa en egen klass för "
"loggdestinationer om du har särskilda krav som inte uppfylls av någon av de "
"inbyggda hanterarklasserna."

msgid ""
"By default, no destination is set for any logging messages. You can specify "
"a destination (such as console or file) by using :func:`basicConfig` as in "
"the tutorial examples. If you call the functions  :func:`debug`, :func:"
"`info`, :func:`warning`, :func:`error` and :func:`critical`, they will check "
"to see if no destination is set; and if one is not set, they will set a "
"destination of the console (``sys.stderr``) and a default format for the "
"displayed message before delegating to the root logger to do the actual "
"message output."
msgstr ""
"Som standard anges ingen destination för loggade meddelanden. Du kan ange en "
"destination (t.ex. konsol eller fil) genom att använda :func:`basicConfig` "
"som i självstudieexemplen. Om du anropar funktionerna :func:`debug`, :func:"
"`info`, :func:`warning`, :func:`error` och :func:`critical` kommer de att "
"kontrollera om någon destination har angetts; och om ingen destination har "
"angetts kommer de att ange en destination för konsolen (``sys.stderr``) och "
"ett standardformat för det visade meddelandet innan de delegerar till "
"rotloggaren att göra den faktiska utmatningen av meddelandet."

msgid "The default format set by :func:`basicConfig` for messages is:"
msgstr "Standardformatet som anges av :func:`basicConfig` för meddelanden är:"

msgid "severity:logger name:message"
msgstr "allvarlighetsgrad:loggarens namn:meddelande"

msgid ""
"You can change this by passing a format string to :func:`basicConfig` with "
"the *format* keyword argument. For all options regarding how a format string "
"is constructed, see :ref:`formatter-objects`."
msgstr ""
"Du kan ändra detta genom att skicka en formatsträng till :func:`basicConfig` "
"med nyckelordsargumentet *format*. För alla alternativ för hur en "
"formatsträng konstrueras, se :ref:`formatter-objects`."

msgid "Logging Flow"
msgstr "Loggning av flöde"

msgid ""
"The flow of log event information in loggers and handlers is illustrated in "
"the following diagram."
msgstr ""
"Flödet av information om logghändelser i loggers och handlers illustreras i "
"följande diagram."

msgid "Loggers"
msgstr "Loggers"

msgid ""
":class:`Logger` objects have a threefold job.  First, they expose several "
"methods to application code so that applications can log messages at "
"runtime. Second, logger objects determine which log messages to act upon "
"based upon severity (the default filtering facility) or filter objects.  "
"Third, logger objects pass along relevant log messages to all interested log "
"handlers."
msgstr ""
":class:`Logger`-objekt har en trefaldig uppgift.  För det första exponerar "
"de flera metoder för programkod så att programmen kan logga meddelanden "
"under körning. För det andra bestämmer loggerobjekten vilka loggmeddelanden "
"som ska hanteras baserat på allvarlighetsgrad "
"(standardfiltreringsmöjligheten) eller filterobjekt.  För det tredje "
"vidarebefordrar loggerobjekt relevanta loggmeddelanden till alla "
"intresserade logghanterare."

msgid ""
"The most widely used methods on logger objects fall into two categories: "
"configuration and message sending."
msgstr ""
"De mest använda metoderna för loggerobjekt kan delas in i två kategorier: "
"konfiguration och sändning av meddelanden."

msgid "These are the most common configuration methods:"
msgstr "Dessa är de vanligaste konfigurationsmetoderna:"

msgid ""
":meth:`Logger.setLevel` specifies the lowest-severity log message a logger "
"will handle, where debug is the lowest built-in severity level and critical "
"is the highest built-in severity.  For example, if the severity level is "
"INFO, the logger will handle only INFO, WARNING, ERROR, and CRITICAL "
"messages and will ignore DEBUG messages."
msgstr ""
":meth:`Logger.setLevel` anger den lägsta allvarlighetsgraden för "
"loggmeddelanden som en logger ska hantera, där debug är den lägsta inbyggda "
"allvarlighetsgraden och critical är den högsta inbyggda "
"allvarlighetsgraden.  Om allvarlighetsgraden till exempel är INFO, kommer "
"loggern endast att hantera INFO-, WARNING-, ERROR- och CRITICAL-meddelanden "
"och ignorera DEBUG-meddelanden."

msgid ""
":meth:`Logger.addHandler` and :meth:`Logger.removeHandler` add and remove "
"handler objects from the logger object.  Handlers are covered in more detail "
"in :ref:`handler-basic`."
msgstr ""
":meth:`Logger.addHandler` och :meth:`Logger.removeHandler` lägger till och "
"tar bort hanterarobjekt från loggerobjektet.  Handläggare beskrivs mer i "
"detalj i :ref:`handler-basic`."

msgid ""
":meth:`Logger.addFilter` and :meth:`Logger.removeFilter` add and remove "
"filter objects from the logger object.  Filters are covered in more detail "
"in :ref:`filter`."
msgstr ""
":meth:`Logger.addFilter` och :meth:`Logger.removeFilter` lägger till och tar "
"bort filterobjekt från loggerobjektet.  Filter beskrivs mer i detalj i :ref:"
"`filter`."

msgid ""
"You don't need to always call these methods on every logger you create. See "
"the last two paragraphs in this section."
msgstr ""
"Du behöver inte alltid anropa dessa metoder för varje logger som du skapar. "
"Se de två sista styckena i detta avsnitt."

msgid ""
"With the logger object configured, the following methods create log messages:"
msgstr ""
"När loggerobjektet har konfigurerats kan följande metoder skapa "
"loggmeddelanden:"

msgid ""
":meth:`Logger.debug`, :meth:`Logger.info`, :meth:`Logger.warning`, :meth:"
"`Logger.error`, and :meth:`Logger.critical` all create log records with a "
"message and a level that corresponds to their respective method names. The "
"message is actually a format string, which may contain the standard string "
"substitution syntax of ``%s``, ``%d``, ``%f``, and so on.  The rest of their "
"arguments is a list of objects that correspond with the substitution fields "
"in the message.  With regard to ``**kwargs``, the logging methods care only "
"about a keyword of ``exc_info`` and use it to determine whether to log "
"exception information."
msgstr ""
":meth:`Logger.debug`, :meth:`Logger.info`, :meth:`Logger.warning`, :meth:"
"`Logger.error` och :meth:`Logger.critical` skapar alla loggposter med ett "
"meddelande och en nivå som motsvarar deras respektive metodnamn. Meddelandet "
"är egentligen en formatsträng, som kan innehålla standardsträngsyntaxen för "
"substitution av ``%s``, ``%d``, ``%f`` och så vidare.  Resten av argumenten "
"är en lista med objekt som motsvarar substitutionsfälten i meddelandet.  När "
"det gäller ``**kwargs`` bryr sig loggningsmetoderna bara om ett nyckelord i "
"``exc_info`` och använder det för att avgöra om undantagsinformation ska "
"loggas."

msgid ""
":meth:`Logger.exception` creates a log message similar to :meth:`Logger."
"error`.  The difference is that :meth:`Logger.exception` dumps a stack trace "
"along with it.  Call this method only from an exception handler."
msgstr ""
":meth:`Logger.exception` skapar ett loggmeddelande som liknar :meth:`Logger."
"error`.  Skillnaden är att :meth:`Logger.exception` dumpar en stack trace "
"tillsammans med det.  Anropa denna metod endast från en undantagshanterare."

msgid ""
":meth:`Logger.log` takes a log level as an explicit argument.  This is a "
"little more verbose for logging messages than using the log level "
"convenience methods listed above, but this is how to log at custom log "
"levels."
msgstr ""
":meth:`Logger.log` tar en loggnivå som ett explicit argument.  Detta är en "
"lite mer utförlig metod för att logga meddelanden än att använda de "
"bekvämlighetsmetoder för loggnivåer som anges ovan, men det är så här man "
"loggar på anpassade loggnivåer."

msgid ""
":func:`getLogger` returns a reference to a logger instance with the "
"specified name if it is provided, or ``root`` if not.  The names are period-"
"separated hierarchical structures.  Multiple calls to :func:`getLogger` with "
"the same name will return a reference to the same logger object.  Loggers "
"that are further down in the hierarchical list are children of loggers "
"higher up in the list. For example, given a logger with a name of ``foo``, "
"loggers with names of ``foo.bar``, ``foo.bar.baz``, and ``foo.bam`` are all "
"descendants of ``foo``."
msgstr ""
":func:`getLogger` returnerar en referens till en loggerinstans med det "
"angivna namnet om det finns, eller ``root`` om så inte är fallet.  Namnen är "
"periodseparerade hierarkiska strukturer.  Flera anrop till :func:`getLogger` "
"med samma namn kommer att returnera en referens till samma loggerobjekt.  "
"Loggrar som ligger längre ned i den hierarkiska listan är barn till loggrar "
"högre upp i listan. Om man till exempel har en logger med namnet ``foo``, är "
"loggrar med namnen ``foo.bar``, ``foo.bar.baz`` och ``foo.bam`` alla "
"ättlingar till ``foo``."

msgid ""
"Loggers have a concept of *effective level*. If a level is not explicitly "
"set on a logger, the level of its parent is used instead as its effective "
"level. If the parent has no explicit level set, *its* parent is examined, "
"and so on - all ancestors are searched until an explicitly set level is "
"found. The root logger always has an explicit level set (``WARNING`` by "
"default). When deciding whether to process an event, the effective level of "
"the logger is used to determine whether the event is passed to the logger's "
"handlers."
msgstr ""
"Loggrar har ett begrepp som kallas *effektiv nivå*. Om en nivå inte "
"uttryckligen har angetts för en logger används istället nivån för dess "
"förälder som dess effektiva nivå. Om föräldern inte har någon explicit nivå "
"inställd undersöks *dess* förälder, och så vidare - alla förfäder genomsöks "
"tills en explicit inställd nivå hittas. Rotloggaren har alltid en explicit "
"nivå inställd (``WARNING`` som standard). När man bestämmer om en händelse "
"ska behandlas används loggarens effektiva nivå för att avgöra om händelsen "
"ska skickas vidare till loggarens hanterare."

msgid ""
"Child loggers propagate messages up to the handlers associated with their "
"ancestor loggers. Because of this, it is unnecessary to define and configure "
"handlers for all the loggers an application uses. It is sufficient to "
"configure handlers for a top-level logger and create child loggers as "
"needed. (You can, however, turn off propagation by setting the *propagate* "
"attribute of a logger to ``False``.)"
msgstr ""
"Barnloggare sprider meddelanden upp till de hanterare som är associerade med "
"deras förfädersloggare. Därför är det inte nödvändigt att definiera och "
"konfigurera hanterare för alla loggrar som ett program använder. Det räcker "
"med att konfigurera hanterare för en logger på högsta nivån och skapa "
"underordnade loggrar efter behov. (Du kan dock stänga av propagering genom "
"att ställa in attributet *propagate* för en logger till ``False``)"

msgid "Handlers"
msgstr "Handläggare"

msgid ""
":class:`~logging.Handler` objects are responsible for dispatching the "
"appropriate log messages (based on the log messages' severity) to the "
"handler's specified destination.  :class:`Logger` objects can add zero or "
"more handler objects to themselves with an :meth:`~Logger.addHandler` "
"method.  As an example scenario, an application may want to send all log "
"messages to a log file, all log messages of error or higher to stdout, and "
"all messages of critical to an email address. This scenario requires three "
"individual handlers where each handler is responsible for sending messages "
"of a specific severity to a specific location."
msgstr ""
":class:`~logging.Handler`-objekt är ansvariga för att skicka lämpliga "
"loggmeddelanden (baserat på loggmeddelandets allvarlighetsgrad) till "
"hanterarens angivna destination. :class:`Logger`-objekt kan lägga till noll "
"eller fler hanterarobjekt till sig själva med en :meth:`~Logger.addHandler`-"
"metod.  Som ett exempel på ett scenario kan en applikation vilja skicka alla "
"loggmeddelanden till en loggfil, alla loggmeddelanden med fel eller högre "
"till stdout och alla kritiska meddelanden till en e-postadress. Detta "
"scenario kräver tre individuella hanterare där varje hanterare ansvarar för "
"att skicka meddelanden med en viss allvarlighetsgrad till en viss plats."

msgid ""
"The standard library includes quite a few handler types (see :ref:`useful-"
"handlers`); the tutorials use mainly :class:`StreamHandler` and :class:"
"`FileHandler` in its examples."
msgstr ""
"Standardbiblioteket innehåller en hel del handläggartyper (se :ref:`useful-"
"handlers`); i handledningarna används huvudsakligen :class:`StreamHandler` "
"och :class:`FileHandler` i exemplen."

msgid ""
"There are very few methods in a handler for application developers to "
"concern themselves with.  The only handler methods that seem relevant for "
"application developers who are using the built-in handler objects (that is, "
"not creating custom handlers) are the following configuration methods:"
msgstr ""
"Det finns väldigt få metoder i en hanterare som applikationsutvecklare "
"behöver bry sig om.  De enda hanterarmetoder som verkar relevanta för "
"programutvecklare som använder de inbyggda hanterarobjekten (dvs. inte "
"skapar egna hanterare) är följande konfigurationsmetoder:"

msgid ""
"The :meth:`~Handler.setLevel` method, just as in logger objects, specifies "
"the lowest severity that will be dispatched to the appropriate destination.  "
"Why are there two :meth:`~Handler.setLevel` methods?  The level set in the "
"logger determines which severity of messages it will pass to its handlers.  "
"The level set in each handler determines which messages that handler will "
"send on."
msgstr ""
"Metoden :meth:`~Handler.setLevel` anger, precis som i loggerobjekt, den "
"lägsta allvarlighetsgrad som ska skickas till lämplig destination.  Varför "
"finns det två :meth:`~Handler.setLevel`-metoder?  Den nivå som anges i "
"loggern bestämmer vilken allvarlighetsgrad meddelanden ska ha för att "
"skickas vidare till dess hanterare.  Den nivå som anges i varje hanterare "
"avgör vilka meddelanden som hanteraren ska skicka vidare."

msgid ""
":meth:`~Handler.setFormatter` selects a Formatter object for this handler to "
"use."
msgstr ""
":meth:`~Handler.setFormatter` väljer ett Formatter-objekt som denna "
"hanterare ska använda."

msgid ""
":meth:`~Handler.addFilter` and :meth:`~Handler.removeFilter` respectively "
"configure and deconfigure filter objects on handlers."
msgstr ""
":meth:`~Handler.addFilter` och :meth:`~Handler.removeFilter` konfigurerar "
"respektive avkonfigurerar filterobjekt på handlers."

msgid ""
"Application code should not directly instantiate and use instances of :class:"
"`Handler`.  Instead, the :class:`Handler` class is a base class that defines "
"the interface that all handlers should have and establishes some default "
"behavior that child classes can use (or override)."
msgstr ""
"Programkod bör inte direkt instansiera och använda instanser av :class:"
"`Handler`.  Istället är klassen :class:`Handler` en basklass som definierar "
"det gränssnitt som alla handläggare ska ha och fastställer ett visst "
"standardbeteende som underordnade klasser kan använda (eller åsidosätta)."

msgid "Formatters"
msgstr "Formatterare"

msgid ""
"Formatter objects configure the final order, structure, and contents of the "
"log message.  Unlike the base :class:`logging.Handler` class, application "
"code may instantiate formatter classes, although you could likely subclass "
"the formatter if your application needs special behavior.  The constructor "
"takes three optional arguments -- a message format string, a date format "
"string and a style indicator."
msgstr ""
"Formateringsobjekt konfigurerar den slutliga ordningen, strukturen och "
"innehållet i loggmeddelandet.  Till skillnad från basklassen :class:`logging."
"Handler` kan programkod instansiera formateringsklasser, även om du "
"sannolikt kan underklassa formateringsklassen om ditt program behöver ett "
"speciellt beteende.  Konstruktören tar emot tre valfria argument -- en "
"meddelandeformatsträng, en datumformatsträng och en stilindikator."

msgid ""
"If there is no message format string, the default is to use the raw "
"message.  If there is no date format string, the default date format is:"
msgstr ""
"Om det inte finns någon formatsträng för meddelandet är standardvärdet att "
"använda det obearbetade meddelandet.  Om det inte finns någon sträng för "
"datumformat är standarddatumformatet:"

msgid "%Y-%m-%d %H:%M:%S"
msgstr "%Y-%m-%d %H:%M:%S"

msgid ""
"with the milliseconds tacked on at the end. The ``style`` is one of ``'%'``, "
"``'{'``, or ``'$'``. If one of these is not specified, then ``'%'`` will be "
"used."
msgstr ""
"med millisekunderna tillagda i slutet. ``style`` är en av ``'%'``, ``'{'``, "
"eller ``'$'``. Om något av dessa inte anges kommer ``'%'`` att användas."

msgid ""
"If the ``style`` is ``'%'``, the message format string uses ``%(<dictionary "
"key>)s`` styled string substitution; the possible keys are documented in :"
"ref:`logrecord-attributes`. If the style is ``'{'``, the message format "
"string is assumed to be compatible with :meth:`str.format` (using keyword "
"arguments), while if the style is ``'$'`` then the message format string "
"should conform to what is expected by :meth:`string.Template.substitute`."
msgstr ""
"Om ``style`` är ``'%'``, använder meddelandeformatsträngen ``%(<dictionary "
"key>)s`` stiliserad strängersättning; de möjliga nycklarna finns "
"dokumenterade i :ref:`logrecord-attributes`. Om stilen är ``'{'`` antas "
"meddelandeformatsträngen vara kompatibel med :meth:`str.format` (med "
"nyckelordsargument), medan om stilen är ``'$'`` bör meddelandeformatsträngen "
"överensstämma med vad som förväntas av :meth:`string.Template.substitute`."

msgid "Added the ``style`` parameter."
msgstr "Lagt till parametern ``style``."

msgid ""
"The following message format string will log the time in a human-readable "
"format, the severity of the message, and the contents of the message, in "
"that order::"
msgstr ""
"Följande meddelandeformatsträng loggar tiden i ett mänskligt läsbart format, "
"meddelandets allvarlighetsgrad och innehållet i meddelandet, i den "
"ordningen::"

msgid "'%(asctime)s - %(levelname)s - %(message)s'"
msgstr "'%(asctime)s - %(levelname)s - %(message)s'"

msgid ""
"Formatters use a user-configurable function to convert the creation time of "
"a record to a tuple. By default, :func:`time.localtime` is used; to change "
"this for a particular formatter instance, set the ``converter`` attribute of "
"the instance to a function with the same signature as :func:`time.localtime` "
"or :func:`time.gmtime`. To change it for all formatters, for example if you "
"want all logging times to be shown in GMT, set the ``converter`` attribute "
"in the Formatter class (to ``time.gmtime`` for GMT display)."
msgstr ""
"Formaterare använder en användarkonfigurerbar funktion för att konvertera "
"skapelsetiden för en post till en tupel. Som standard används :func:`time."
"localtime`; för att ändra detta för en viss formateringsinstans, ställ in "
"attributet ``converter`` för instansen till en funktion med samma signatur "
"som :func:`time.localtime` eller :func:`time.gmtime`. Om du vill ändra det "
"för alla formaterare, t.ex. om du vill att alla loggningstider ska visas i "
"GMT, ställer du in attributet ``converter`` i klassen Formatter (till ``time."
"gmtime`` för GMT-visning)."

msgid "Configuring Logging"
msgstr "Konfigurera loggning"

msgid "Programmers can configure logging in three ways:"
msgstr "Programmerare kan konfigurera loggning på tre olika sätt:"

msgid ""
"Creating loggers, handlers, and formatters explicitly using Python code that "
"calls the configuration methods listed above."
msgstr ""
"Skapa loggrar, hanterare och formaterare explicit med Python-kod som anropar "
"konfigurationsmetoderna som listas ovan."

msgid ""
"Creating a logging config file and reading it using the :func:`fileConfig` "
"function."
msgstr ""
"Skapar en konfigurationsfil för loggning och läser den med hjälp av "
"funktionen :func:`fileConfig`."

msgid ""
"Creating a dictionary of configuration information and passing it to the :"
"func:`dictConfig` function."
msgstr ""
"Skapar en ordbok med konfigurationsinformation och skickar den till "
"funktionen :func:`dictConfig`."

msgid ""
"For the reference documentation on the last two options, see :ref:`logging-"
"config-api`.  The following example configures a very simple logger, a "
"console handler, and a simple formatter using Python code::"
msgstr ""
"För referensdokumentation om de två sista alternativen, se :ref:`logging-"
"config-api`.  Följande exempel konfigurerar en mycket enkel logger, en "
"konsolhanterare och en enkel formaterare med hjälp av Python-kod::"

msgid ""
"import logging\n"
"\n"
"# create logger\n"
"logger = logging.getLogger('simple_example')\n"
"logger.setLevel(logging.DEBUG)\n"
"\n"
"# create console handler and set level to debug\n"
"ch = logging.StreamHandler()\n"
"ch.setLevel(logging.DEBUG)\n"
"\n"
"# create formatter\n"
"formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - "
"%(message)s')\n"
"\n"
"# add formatter to ch\n"
"ch.setFormatter(formatter)\n"
"\n"
"# add ch to logger\n"
"logger.addHandler(ch)\n"
"\n"
"# 'application' code\n"
"logger.debug('debug message')\n"
"logger.info('info message')\n"
"logger.warning('warn message')\n"
"logger.error('error message')\n"
"logger.critical('critical message')"
msgstr ""
"import logging\n"
"\n"
"# create logger\n"
"logger = logging.getLogger('simple_example')\n"
"logger.setLevel(logging.DEBUG)\n"
"\n"
"# create console handler and set level to debug\n"
"ch = logging.StreamHandler()\n"
"ch.setLevel(logging.DEBUG)\n"
"\n"
"# create formatter\n"
"formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - "
"%(message)s')\n"
"\n"
"# add formatter to ch\n"
"ch.setFormatter(formatter)\n"
"\n"
"# add ch to logger\n"
"logger.addHandler(ch)\n"
"\n"
"# 'application' code\n"
"logger.debug('debug message')\n"
"logger.info('info message')\n"
"logger.warning('warn message')\n"
"logger.error('error message')\n"
"logger.critical('critical message')"

msgid ""
"Running this module from the command line produces the following output:"
msgstr "Om du kör den här modulen från kommandoraden får du följande resultat:"

msgid ""
"$ python simple_logging_module.py\n"
"2005-03-19 15:10:26,618 - simple_example - DEBUG - debug message\n"
"2005-03-19 15:10:26,620 - simple_example - INFO - info message\n"
"2005-03-19 15:10:26,695 - simple_example - WARNING - warn message\n"
"2005-03-19 15:10:26,697 - simple_example - ERROR - error message\n"
"2005-03-19 15:10:26,773 - simple_example - CRITICAL - critical message"
msgstr ""
"$ python simple_logging_module.py\n"
"2005-03-19 15:10:26,618 - simple_example - DEBUG - felsökningsmeddelande\n"
"2005-03-19 15:10:26,620 - simple_example - INFO - infomeddelande\n"
"2005-03-19 15:10:26,695 - simple_example - WARNING - varningsmeddelande\n"
"2005-03-19 15:10:26,697 - simple_example - ERROR - felmeddelande\n"
"2005-03-19 15:10:26,773 - simple_example - CRITICAL - kritiskt meddelande"

msgid ""
"The following Python module creates a logger, handler, and formatter nearly "
"identical to those in the example listed above, with the only difference "
"being the names of the objects::"
msgstr ""
"Följande Python-modul skapar en logger, en hanterare och en formaterare som "
"är nästan identiska med dem i exemplet ovan, med den enda skillnaden att "
"objekten heter::"

msgid ""
"import logging\n"
"import logging.config\n"
"\n"
"logging.config.fileConfig('logging.conf')\n"
"\n"
"# create logger\n"
"logger = logging.getLogger('simpleExample')\n"
"\n"
"# 'application' code\n"
"logger.debug('debug message')\n"
"logger.info('info message')\n"
"logger.warning('warn message')\n"
"logger.error('error message')\n"
"logger.critical('critical message')"
msgstr ""
"import logging\n"
"import logging.config\n"
"\n"
"logging.config.fileConfig('logging.conf')\n"
"\n"
"# create logger\n"
"logger = logging.getLogger('simpleExample')\n"
"\n"
"# 'application' code\n"
"logger.debug('debug message')\n"
"logger.info('info message')\n"
"logger.warning('warn message')\n"
"logger.error('error message')\n"
"logger.critical('critical message')"

msgid "Here is the logging.conf file:"
msgstr "Här är filen logging.conf:"

msgid ""
"[loggers]\n"
"keys=root,simpleExample\n"
"\n"
"[handlers]\n"
"keys=consoleHandler\n"
"\n"
"[formatters]\n"
"keys=simpleFormatter\n"
"\n"
"[logger_root]\n"
"level=DEBUG\n"
"handlers=consoleHandler\n"
"\n"
"[logger_simpleExample]\n"
"level=DEBUG\n"
"handlers=consoleHandler\n"
"qualname=simpleExample\n"
"propagate=0\n"
"\n"
"[handler_consoleHandler]\n"
"class=StreamHandler\n"
"level=DEBUG\n"
"formatter=simpleFormatter\n"
"args=(sys.stdout,)\n"
"\n"
"[formatter_simpleFormatter]\n"
"format=%(asctime)s - %(name)s - %(levelname)s - %(message)s"
msgstr ""
"[loggar]\n"
"keys=root,enkeltExempel\n"
"\n"
"[hanterare]\n"
"keys=konsolhanterare\n"
"\n"
"[formatterare]\n"
"nycklar=simpleFormatter\n"
"\n"
"[logger_root]\n"
"nivå=DEBUG\n"
"hanterare=konsolHanterare\n"
"\n"
"[logger_simpleExample]\n"
"nivå=DEBUG\n"
"hanterare=konsolhanterare\n"
"kvalnamn=enkeltExempel\n"
"sprida=0\n"
"\n"
"[handler_consoleHandler]\n"
"class=StreamHandler\n"
"nivå=DEBUG\n"
"formatter=simpleFormatter\n"
"args=(sys.stdout,)\n"
"\n"
"[formatter_simpleFormatter]\n"
"format=%(asctime)s - %(name)s - %(levelname)s - %(message)s"

msgid ""
"The output is nearly identical to that of the non-config-file-based example:"
msgstr ""
"Resultatet är nästan identiskt med det icke-konfig-filbaserade exemplet:"

msgid ""
"$ python simple_logging_config.py\n"
"2005-03-19 15:38:55,977 - simpleExample - DEBUG - debug message\n"
"2005-03-19 15:38:55,979 - simpleExample - INFO - info message\n"
"2005-03-19 15:38:56,054 - simpleExample - WARNING - warn message\n"
"2005-03-19 15:38:56,055 - simpleExample - ERROR - error message\n"
"2005-03-19 15:38:56,130 - simpleExample - CRITICAL - critical message"
msgstr ""
"$ python simple_logging_config.py\n"
"2005-03-19 15:38:55,977 - simpleExample - DEBUG - debugmeddelande\n"
"2005-03-19 15:38:55,979 - simpleExample - INFO - infomeddelande\n"
"2005-03-19 15:38:56,054 - simpleExample - WARNING - varningsmeddelande\n"
"2005-03-19 15:38:56,055 - simpleExample - ERROR - felmeddelande\n"
"2005-03-19 15:38:56,130 - simpleExample - CRITICAL - kritiskt meddelande"

msgid ""
"You can see that the config file approach has a few advantages over the "
"Python code approach, mainly separation of configuration and code and the "
"ability of noncoders to easily modify the logging properties."
msgstr ""
"Du kan se att metoden med konfigurationsfiler har några fördelar jämfört med "
"Python-kodmetoden, främst separering av konfiguration och kod och "
"möjligheten för icke-kodare att enkelt ändra loggningsegenskaperna."

msgid ""
"The :func:`fileConfig` function takes a default parameter, "
"``disable_existing_loggers``, which defaults to ``True`` for reasons of "
"backward compatibility. This may or may not be what you want, since it will "
"cause any non-root loggers existing before the :func:`fileConfig` call to be "
"disabled unless they (or an ancestor) are explicitly named in the "
"configuration. Please refer to the reference documentation for more "
"information, and specify ``False`` for this parameter if you wish."
msgstr ""
"Funktionen :func:`fileConfig` tar en standardparameter, "
"``disable_existing_loggers``, som är satt till ``True`` av "
"bakåtkompatibilitetsskäl. Det här kanske inte är vad du vill, eftersom det "
"kommer att leda till att alla loggar som inte är rotloggar och som fanns "
"före :func:`fileConfig`-anropet inaktiveras om de (eller en förfader) inte "
"uttryckligen namnges i konfigurationen. Se referensdokumentationen för mer "
"information och ange ``False`` för den här parametern om du vill."

msgid ""
"The dictionary passed to :func:`dictConfig` can also specify a Boolean value "
"with key ``disable_existing_loggers``, which if not specified explicitly in "
"the dictionary also defaults to being interpreted as ``True``. This leads to "
"the logger-disabling behaviour described above, which may not be what you "
"want - in which case, provide the key explicitly with a value of ``False``."
msgstr ""
"Den ordbok som skickas till :func:`dictConfig` kan också ange ett booleskt "
"värde med nyckeln ``disable_existing_loggers``, som om det inte anges "
"explicit i ordboken också som standard tolkas som ``True``. Detta leder till "
"att loggern inaktiveras på det sätt som beskrivs ovan, vilket kanske inte är "
"vad du vill - i så fall ska du ange nyckeln explicit med värdet ``False``."

msgid ""
"Note that the class names referenced in config files need to be either "
"relative to the logging module, or absolute values which can be resolved "
"using normal import mechanisms. Thus, you could use either :class:`~logging."
"handlers.WatchedFileHandler` (relative to the logging module) or ``mypackage."
"mymodule.MyHandler`` (for a class defined in package ``mypackage`` and "
"module ``mymodule``, where ``mypackage`` is available on the Python import "
"path)."
msgstr ""
"Observera att klassnamnen som refereras till i konfigurationsfiler måste "
"vara antingen relativa till logningsmodulen eller absoluta värden som kan "
"lösas med hjälp av normala importmekanismer. Du kan alltså använda antingen :"
"class:`~logging.handlers.WatchedFileHandler` (relativt till logningsmodulen) "
"eller ``mypackage.mymodule.MyHandler`` (för en klass som definieras i "
"paketet ``mypackage`` och modulen ``mymodule``, där ``mypackage`` finns "
"tillgänglig på Pythons importväg)."

msgid ""
"In Python 3.2, a new means of configuring logging has been introduced, using "
"dictionaries to hold configuration information. This provides a superset of "
"the functionality of the config-file-based approach outlined above, and is "
"the recommended configuration method for new applications and deployments. "
"Because a Python dictionary is used to hold configuration information, and "
"since you can populate that dictionary using different means, you have more "
"options for configuration. For example, you can use a configuration file in "
"JSON format, or, if you have access to YAML processing functionality, a file "
"in YAML format, to populate the configuration dictionary. Or, of course, you "
"can construct the dictionary in Python code, receive it in pickled form over "
"a socket, or use whatever approach makes sense for your application."
msgstr ""
"I Python 3.2 har ett nytt sätt att konfigurera loggning införts, där man "
"använder ordböcker för att lagra konfigurationsinformation. Detta ger en "
"överuppsättning av funktionaliteten i det config-filbaserade "
"tillvägagångssätt som beskrivs ovan och är den rekommenderade "
"konfigurationsmetoden för nya applikationer och driftsättningar. Eftersom en "
"Python-ordbok används för att lagra konfigurationsinformation, och eftersom "
"du kan fylla i ordboken på olika sätt, har du fler alternativ för "
"konfigurationen. Du kan t.ex. använda en konfigurationsfil i JSON-format "
"eller, om du har tillgång till YAML-bearbetningsfunktioner, en fil i YAML-"
"format för att fylla i konfigurationsordboken. Du kan naturligtvis också "
"konstruera ordlistan i Python-kod, ta emot den i inlagd form via en socket "
"eller använda den metod som passar bäst för din applikation."

msgid ""
"Here's an example of the same configuration as above, in YAML format for the "
"new dictionary-based approach:"
msgstr ""
"Här är ett exempel på samma konfiguration som ovan, i YAML-format för det "
"nya ordboksbaserade tillvägagångssättet:"

msgid ""
"version: 1\n"
"formatters:\n"
"  simple:\n"
"    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n"
"handlers:\n"
"  console:\n"
"    class: logging.StreamHandler\n"
"    level: DEBUG\n"
"    formatter: simple\n"
"    stream: ext://sys.stdout\n"
"loggers:\n"
"  simpleExample:\n"
"    level: DEBUG\n"
"    handlers: [console]\n"
"    propagate: no\n"
"root:\n"
"  level: DEBUG\n"
"  handlers: [console]"
msgstr ""
"version: 1\n"
"formaterare:\n"
"  enkel:\n"
"    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n"
"hanterare:\n"
"  console:\n"
"    klass: logging.StreamHandler\n"
"    nivå: DEBUG\n"
"    formaterare: enkel\n"
"    ström: ext://sys.stdout\n"
"loggar:\n"
"  simpleExample:\n"
"    nivå: DEBUG\n"
"    hanterare: [konsol]\n"
"    sprida: nej\n"
"root:\n"
"  nivå: DEBUG\n"
"  hanterare: [konsol]"

msgid ""
"For more information about logging using a dictionary, see :ref:`logging-"
"config-api`."
msgstr ""
"Mer information om loggning med hjälp av en ordbok finns i :ref:`logging-"
"config-api`."

msgid "What happens if no configuration is provided"
msgstr "Vad händer om ingen konfiguration anges?"

msgid ""
"If no logging configuration is provided, it is possible to have a situation "
"where a logging event needs to be output, but no handlers can be found to "
"output the event."
msgstr ""
"Om ingen loggningskonfiguration anges kan det uppstå en situation där en "
"loggningshändelse måste matas ut, men inga hanterare kan hittas för att mata "
"ut händelsen."

msgid ""
"The event is output using a 'handler of last resort', stored in :data:"
"`lastResort`. This internal handler is not associated with any logger, and "
"acts like a :class:`~logging.StreamHandler` which writes the event "
"description message to the current value of ``sys.stderr`` (therefore "
"respecting any redirections which may be in effect). No formatting is done "
"on the message - just the bare event description message is printed. The "
"handler's level is set to ``WARNING``, so all events at this and greater "
"severities will be output."
msgstr ""
"Händelsen matas ut med hjälp av en \"sista utvägens hanterare\", som lagras "
"i :data:`lastResort`. Denna interna hanterare är inte associerad med någon "
"logger, utan fungerar som en :class:`~logging.StreamHandler` som skriver ut "
"händelsebeskrivningsmeddelandet till det aktuella värdet för ``sys.stderr`` "
"(och därmed respekterar eventuella omdirigeringar som kan vara i kraft). "
"Ingen formatering görs på meddelandet - bara det rena "
"händelsebeskrivningsmeddelandet skrivs ut. Hanterarens nivå är inställd på "
"``WARNING``, så alla händelser med denna och högre allvarlighetsgrad kommer "
"att skrivas ut."

msgid "For versions of Python prior to 3.2, the behaviour is as follows:"
msgstr "För versioner av Python före 3.2 är beteendet som följer:"

msgid ""
"If :data:`raiseExceptions` is ``False`` (production mode), the event is "
"silently dropped."
msgstr ""
"Om :data:`raiseExceptions` är ``False`` (produktionsläge), avbryts händelsen "
"i tysthet."

msgid ""
"If :data:`raiseExceptions` is ``True`` (development mode), a message 'No "
"handlers could be found for logger X.Y.Z' is printed once."
msgstr ""
"Om :data:`raiseExceptions` är ``True`` (utvecklingsläge), skrivs meddelandet "
"\"No handlers could be found for logger X.Y.Z\" ut en gång."

msgid ""
"To obtain the pre-3.2 behaviour, :data:`lastResort` can be set to ``None``."
msgstr ""
"För att få samma beteende som före 3.2 kan :data:`lastResort` sättas till "
"``None``."

msgid "Configuring Logging for a Library"
msgstr "Konfigurera loggning för ett bibliotek"

msgid ""
"When developing a library which uses logging, you should take care to "
"document how the library uses logging - for example, the names of loggers "
"used. Some consideration also needs to be given to its logging "
"configuration. If the using application does not use logging, and library "
"code makes logging calls, then (as described in the previous section) events "
"of severity ``WARNING`` and greater will be printed to ``sys.stderr``. This "
"is regarded as the best default behaviour."
msgstr ""
"När du utvecklar ett bibliotek som använder loggning bör du vara noga med "
"att dokumentera hur biblioteket använder loggning, t.ex. namnen på de loggar "
"som används. Viss hänsyn måste också tas till dess loggningskonfiguration. "
"Om programmet inte använder loggning och bibliotekskoden gör anrop till "
"loggning kommer (som beskrivs i föregående avsnitt) händelser av "
"allvarlighetsgraden ``WARNING`` och högre att skrivas ut till ``sys."
"stderr``. Detta anses vara det bästa standardbeteendet."

msgid ""
"If for some reason you *don't* want these messages printed in the absence of "
"any logging configuration, you can attach a do-nothing handler to the top-"
"level logger for your library. This avoids the message being printed, since "
"a handler will always be found for the library's events: it just doesn't "
"produce any output. If the library user configures logging for application "
"use, presumably that configuration will add some handlers, and if levels are "
"suitably configured then logging calls made in library code will send output "
"to those handlers, as normal."
msgstr ""
"Om du av någon anledning *inte* vill att dessa meddelanden ska skrivas ut "
"utan någon loggningskonfiguration kan du koppla en \"do-nothing\"-hanterare "
"till toppnivåloggaren för ditt bibliotek. Detta gör att meddelandet inte "
"skrivs ut, eftersom en hanterare alltid kommer att hittas för bibliotekets "
"händelser: den producerar bara inte någon utdata. Om biblioteksanvändaren "
"konfigurerar loggning för applikationsanvändning kommer förmodligen den "
"konfigurationen att lägga till några hanterare, och om nivåerna är lämpligt "
"konfigurerade kommer loggningsanrop som görs i bibliotekskoden att skicka "
"utdata till dessa hanterare, som vanligt."

msgid ""
"A do-nothing handler is included in the logging package: :class:`~logging."
"NullHandler` (since Python 3.1). An instance of this handler could be added "
"to the top-level logger of the logging namespace used by the library (*if* "
"you want to prevent your library's logged events being output to ``sys."
"stderr`` in the absence of logging configuration). If all logging by a "
"library *foo* is done using loggers with names matching 'foo.x', 'foo.x.y', "
"etc. then the code::"
msgstr ""
"En hanterare som inte gör något ingår i loggningspaketet: :class:`~logging."
"NullHandler` (sedan Python 3.1). En instans av denna hanterare kan läggas "
"till i toppnivåloggaren i det loggningsnamnrum som används av biblioteket "
"(*om* du vill förhindra att bibliotekets loggade händelser matas ut till "
"``sys.stderr`` i avsaknad av loggningskonfiguration). Om all loggning av ett "
"bibliotek *foo* görs med hjälp av loggar med namn som matchar 'foo.x', 'foo."
"x.y', etc. så är koden::"

msgid ""
"import logging\n"
"logging.getLogger('foo').addHandler(logging.NullHandler())"
msgstr ""
"import logging\n"
"logging.getLogger('foo').addHandler(logging.NullHandler())"

msgid ""
"should have the desired effect. If an organisation produces a number of "
"libraries, then the logger name specified can be 'orgname.foo' rather than "
"just 'foo'."
msgstr ""
"bör ha önskad effekt. Om en organisation producerar ett antal bibliotek kan "
"det angivna loggernamnet vara \"orgname.foo\" i stället för bara \"foo\"."

msgid ""
"It is strongly advised that you *do not log to the root logger* in your "
"library. Instead, use a logger with a unique and easily identifiable name, "
"such as the ``__name__`` for your library's top-level package or module. "
"Logging to the root logger will make it difficult or impossible for the "
"application developer to configure the logging verbosity or handlers of your "
"library as they wish."
msgstr ""
"Det rekommenderas starkt att du *inte loggar till rotloggaren* i ditt "
"bibliotek. Använd i stället en logger med ett unikt och lätt identifierbart "
"namn, t.ex. ``__name__`` för bibliotekets paket eller modul på högsta nivån. "
"Om du loggar till rotloggaren blir det svårt eller omöjligt för "
"programutvecklaren att konfigurera loggningens ordalydelse eller hanterare i "
"ditt bibliotek som de vill."

msgid ""
"It is strongly advised that you *do not add any handlers other than* :class:"
"`~logging.NullHandler` *to your library's loggers*. This is because the "
"configuration of handlers is the prerogative of the application developer "
"who uses your library. The application developer knows their target audience "
"and what handlers are most appropriate for their application: if you add "
"handlers 'under the hood', you might well interfere with their ability to "
"carry out unit tests and deliver logs which suit their requirements."
msgstr ""
"Det rekommenderas starkt att du *inte lägger till några andra hanterare än* :"
"class:`~logging.NullHandler` *till ditt biblioteks loggrar*. Detta beror på "
"att konfigurationen av hanterare är förbehållen den programutvecklare som "
"använder ditt bibliotek. Applikationsutvecklaren känner sin målgrupp och vet "
"vilka hanterare som är lämpligast för deras applikation: om du lägger till "
"hanterare \"under huven\" kan du mycket väl störa deras förmåga att utföra "
"enhetstester och leverera loggar som uppfyller deras krav."

msgid "Logging Levels"
msgstr "Loggningsnivåer"

msgid ""
"The numeric values of logging levels are given in the following table. These "
"are primarily of interest if you want to define your own levels, and need "
"them to have specific values relative to the predefined levels. If you "
"define a level with the same numeric value, it overwrites the predefined "
"value; the predefined name is lost."
msgstr ""
"De numeriska värdena för loggningsnivåerna anges i följande tabell. Dessa är "
"främst intressanta om du vill definiera dina egna nivåer och vill att de ska "
"ha specifika värden i förhållande till de fördefinierade nivåerna. Om du "
"definierar en nivå med samma numeriska värde, skriver den över det "
"fördefinierade värdet; det fördefinierade namnet försvinner."

msgid "Numeric value"
msgstr "Numeriskt värde"

msgid "50"
msgstr "50"

msgid "40"
msgstr "40"

msgid "30"
msgstr "30"

msgid "20"
msgstr "20"

msgid "10"
msgstr "10"

msgid "``NOTSET``"
msgstr "``NOTSET``"

msgid "0"
msgstr "0"

msgid ""
"Levels can also be associated with loggers, being set either by the "
"developer or through loading a saved logging configuration. When a logging "
"method is called on a logger, the logger compares its own level with the "
"level associated with the method call. If the logger's level is higher than "
"the method call's, no logging message is actually generated. This is the "
"basic mechanism controlling the verbosity of logging output."
msgstr ""
"Nivåer kan också kopplas till loggrar, antingen genom att de ställs in av "
"utvecklaren eller genom att en sparad loggningskonfiguration laddas. När en "
"loggmetod anropas på en logger jämför loggern sin egen nivå med den nivå som "
"är associerad med metodanropet. Om loggarens nivå är högre än metodanropets "
"genereras inget loggmeddelande. Detta är den grundläggande mekanismen för "
"att kontrollera loggutmatningens ordrikedom."

msgid ""
"Logging messages are encoded as instances of the :class:`~logging.LogRecord` "
"class. When a logger decides to actually log an event, a :class:`~logging."
"LogRecord` instance is created from the logging message."
msgstr ""
"Loggningsmeddelanden kodas som instanser av klassen :class:`~logging."
"LogRecord`. När en logger bestämmer sig för att faktiskt logga en händelse "
"skapas en instans av :class:`~logging.LogRecord` från loggmeddelandet."

msgid ""
"Logging messages are subjected to a dispatch mechanism through the use of :"
"dfn:`handlers`, which are instances of subclasses of the :class:`Handler` "
"class. Handlers are responsible for ensuring that a logged message (in the "
"form of a :class:`LogRecord`) ends up in a particular location (or set of "
"locations) which is useful for the target audience for that message (such as "
"end users, support desk staff, system administrators, developers). Handlers "
"are passed :class:`LogRecord` instances intended for particular "
"destinations. Each logger can have zero, one or more handlers associated "
"with it (via the :meth:`~Logger.addHandler` method of :class:`Logger`). In "
"addition to any handlers directly associated with a logger, *all handlers "
"associated with all ancestors of the logger* are called to dispatch the "
"message (unless the *propagate* flag for a logger is set to a false value, "
"at which point the passing to ancestor handlers stops)."
msgstr ""
"Loggade meddelanden är föremål för en avsändningsmekanism genom användning "
"av :dfn:`handlers`, som är instanser av underklasser av :class:`Handler`-"
"klassen. Hanterare ansvarar för att ett loggat meddelande (i form av en :"
"class:`LogRecord`) hamnar på en viss plats (eller en uppsättning platser) "
"som är användbar för målgruppen för meddelandet (t.ex. slutanvändare, "
"supportpersonal, systemadministratörer, utvecklare). Hanterare får :class:"
"`LogRecord`-instanser som är avsedda för särskilda destinationer. Varje "
"logger kan ha noll, en eller flera handläggare associerade med sig (via "
"metoden :meth:`~Logger.addHandler` i :class:`Logger`). Förutom alla "
"handläggare som är direkt associerade med en logger, anropas *alla "
"handläggare som är associerade med alla förfäder till loggern* för att "
"skicka meddelandet (såvida inte flaggan *propagate* för en logger är satt "
"till ett falskt värde, då slutar överföringen till förfädernas handläggare)."

msgid ""
"Just as for loggers, handlers can have levels associated with them. A "
"handler's level acts as a filter in the same way as a logger's level does. "
"If a handler decides to actually dispatch an event, the :meth:`~Handler."
"emit` method is used to send the message to its destination. Most user-"
"defined subclasses of :class:`Handler` will need to override this :meth:"
"`~Handler.emit`."
msgstr ""
"Precis som för loggar kan hanterare ha nivåer associerade med sig. En "
"hanterares nivå fungerar som ett filter på samma sätt som en loggares nivå "
"gör. Om en hanterare bestämmer sig för att faktiskt skicka en händelse "
"används metoden :meth:`~Handler.emit` för att skicka meddelandet till dess "
"destination. De flesta användardefinierade subklasser av :class:`Handler` "
"kommer att behöva åsidosätta denna :meth:`~Handler.emit`."

msgid "Custom Levels"
msgstr "Anpassade nivåer"

msgid ""
"Defining your own levels is possible, but should not be necessary, as the "
"existing levels have been chosen on the basis of practical experience. "
"However, if you are convinced that you need custom levels, great care should "
"be exercised when doing this, and it is possibly *a very bad idea to define "
"custom levels if you are developing a library*. That's because if multiple "
"library authors all define their own custom levels, there is a chance that "
"the logging output from such multiple libraries used together will be "
"difficult for the using developer to control and/or interpret, because a "
"given numeric value might mean different things for different libraries."
msgstr ""
"Det är möjligt att definiera egna nivåer, men det bör inte vara nödvändigt, "
"eftersom de befintliga nivåerna har valts utifrån praktisk erfarenhet. Om du "
"är övertygad om att du behöver egna nivåer bör du dock vara mycket försiktig "
"när du gör detta, och det är möjligen *en mycket dålig idé att definiera "
"egna nivåer om du utvecklar ett bibliotek*. Om flera biblioteksförfattare "
"definierar sina egna anpassade nivåer finns det nämligen en risk att "
"loggningsutdata från flera bibliotek som används tillsammans blir svåra att "
"kontrollera och/eller tolka för den utvecklare som använder dem, eftersom "
"ett visst numeriskt värde kan betyda olika saker för olika bibliotek."

msgid "Useful Handlers"
msgstr "Användbara handläggare"

msgid ""
"In addition to the base :class:`Handler` class, many useful subclasses are "
"provided:"
msgstr ""
"Förutom basklassen :class:`Handler` finns många användbara underklasser:"

msgid ""
":class:`StreamHandler` instances send messages to streams (file-like "
"objects)."
msgstr ""
":class:`StreamHandler`-instanser skickar meddelanden till strömmar "
"(filliknande objekt)."

msgid ":class:`FileHandler` instances send messages to disk files."
msgstr ":class:`FileHandler`-instanser skickar meddelanden till diskfiler."

msgid ""
":class:`~handlers.BaseRotatingHandler` is the base class for handlers that "
"rotate log files at a certain point. It is not meant to be  instantiated "
"directly. Instead, use :class:`~handlers.RotatingFileHandler` or :class:"
"`~handlers.TimedRotatingFileHandler`."
msgstr ""
":class:`~handlers.BaseRotatingHandler` är basklassen för handlers som "
"roterar loggfiler vid en viss punkt. Det är inte meningen att den ska "
"instansieras direkt. Använd istället :class:`~handlers.RotatingFileHandler` "
"eller :class:`~handlers.TimedRotatingFileHandler`."

msgid ""
":class:`~handlers.RotatingFileHandler` instances send messages to disk "
"files, with support for maximum log file sizes and log file rotation."
msgstr ""
":class:`~handlers.RotatingFileHandler`-instanser skickar meddelanden till "
"diskfiler, med stöd för maximal loggfilsstorlek och rotation av loggfiler."

msgid ""
":class:`~handlers.TimedRotatingFileHandler` instances send messages to disk "
"files, rotating the log file at certain timed intervals."
msgstr ""
":class:`~handlers.TimedRotatingFileHandler`-instanser skickar meddelanden "
"till diskfiler och roterar loggfilen med vissa tidsintervaller."

msgid ""
":class:`~handlers.SocketHandler` instances send messages to TCP/IP sockets. "
"Since 3.4, Unix domain sockets are also supported."
msgstr ""
":class:`~handlers.SocketHandler`-instanser skickar meddelanden till TCP/IP-"
"socklar. Sedan 3.4 stöds även Unix domain sockets."

msgid ""
":class:`~handlers.DatagramHandler` instances send messages to UDP sockets. "
"Since 3.4, Unix domain sockets are also supported."
msgstr ""
":class:`~handlers.DatagramHandler`-instanser skickar meddelanden till UDP-"
"sockets. Sedan 3.4 stöds även Unix domain sockets."

msgid ""
":class:`~handlers.SMTPHandler` instances send messages to a designated email "
"address."
msgstr ""
":class:`~handlers.SMTPHandler` instanser skickar meddelanden till en angiven "
"e-postadress."

msgid ""
":class:`~handlers.SysLogHandler` instances send messages to a Unix syslog "
"daemon, possibly on a remote machine."
msgstr ""
":class:`~handlers.SysLogHandler`-instanser skickar meddelanden till en Unix "
"syslog-daemon, eventuellt på en fjärrmaskin."

msgid ""
":class:`~handlers.NTEventLogHandler` instances send messages to a Windows "
"NT/2000/XP event log."
msgstr ""
":class:`~handlers.NTEventLogHandler`-instanser skickar meddelanden till en "
"händelselogg i Windows NT/2000/XP."

msgid ""
":class:`~handlers.MemoryHandler` instances send messages to a buffer in "
"memory, which is flushed whenever specific criteria are met."
msgstr ""
":class:`~handlers.MemoryHandler`-instanser skickar meddelanden till en "
"buffert i minnet, som rensas när specifika kriterier uppfylls."

msgid ""
":class:`~handlers.HTTPHandler` instances send messages to an HTTP server "
"using either ``GET`` or ``POST`` semantics."
msgstr ""
":class:`~handlers.HTTPHandler` instanser skickar meddelanden till en HTTP-"
"server med antingen ``GET`` eller ``POST`` semantik."

msgid ""
":class:`~handlers.WatchedFileHandler` instances watch the file they are "
"logging to. If the file changes, it is closed and reopened using the file "
"name. This handler is only useful on Unix-like systems; Windows does not "
"support the underlying mechanism used."
msgstr ""
":class:`~handlers.WatchedFileHandler`-instanser övervakar den fil de loggar "
"till. Om filen ändras stängs den och öppnas igen med hjälp av filnamnet. "
"Denna hanterare är endast användbar på Unix-liknande system; Windows stöder "
"inte den underliggande mekanism som används."

msgid ""
":class:`~handlers.QueueHandler` instances send messages to a queue, such as "
"those implemented in the :mod:`queue` or :mod:`multiprocessing` modules."
msgstr ""
":class:`~handlers.QueueHandler`-instanser skickar meddelanden till en kö, t."
"ex. de som implementeras i modulerna :mod:`queue` eller :mod:"
"`multiprocessing`."

msgid ""
":class:`NullHandler` instances do nothing with error messages. They are used "
"by library developers who want to use logging, but want to avoid the 'No "
"handlers could be found for logger *XXX*' message which can be displayed if "
"the library user has not configured logging. See :ref:`library-config` for "
"more information."
msgstr ""
":class:`NullHandler`-instanser gör ingenting med felmeddelanden. De används "
"av biblioteksutvecklare som vill använda loggning, men som vill undvika "
"meddelandet \"No handlers could be found for logger *XXX*\" som kan visas om "
"biblioteksanvändaren inte har konfigurerat loggning. Se :ref:`library-"
"config` för mer information."

msgid "The :class:`NullHandler` class."
msgstr "Klassen :class:`NullHandler`."

msgid "The :class:`~handlers.QueueHandler` class."
msgstr "Klassen :class:`~handlers.QueueHandler`."

msgid ""
"The :class:`NullHandler`, :class:`StreamHandler` and :class:`FileHandler` "
"classes are defined in the core logging package. The other handlers are "
"defined in a sub-module, :mod:`logging.handlers`. (There is also another sub-"
"module, :mod:`logging.config`, for configuration functionality.)"
msgstr ""
"Klasserna :class:`NullHandler`, :class:`StreamHandler` och :class:"
"`FileHandler` definieras i kärnpaketet för loggning. De andra hanterarna "
"definieras i en undermodul, :mod:`logging.handlers`. (Det finns också en "
"annan undermodul, :mod:`logging.config`, för konfigurationsfunktioner)"

msgid ""
"Logged messages are formatted for presentation through instances of the :"
"class:`Formatter` class. They are initialized with a format string suitable "
"for use with the % operator and a dictionary."
msgstr ""
"Loggade meddelanden formateras för presentation genom instanser av klassen :"
"class:`Formatter`. De initialiseras med en formatsträng som är lämplig att "
"använda med % operatorn och en ordbok."

msgid ""
"For formatting multiple messages in a batch, instances of :class:"
"`BufferingFormatter` can be used. In addition to the format string (which is "
"applied to each message in the batch), there is provision for header and "
"trailer format strings."
msgstr ""
"För formatering av flera meddelanden i en batch kan instanser av :class:"
"`BufferingFormatter` användas. Förutom formatsträngen (som används för varje "
"meddelande i batchen) finns det möjlighet att använda formatsträngar för "
"header och trailer."

msgid ""
"When filtering based on logger level and/or handler level is not enough, "
"instances of :class:`Filter` can be added to both :class:`Logger` and :class:"
"`Handler` instances (through their :meth:`~Handler.addFilter` method). "
"Before deciding to process a message further, both loggers and handlers "
"consult all their filters for permission. If any filter returns a false "
"value, the message is not processed further."
msgstr ""
"När filtrering baserad på loggar- och/eller hanterarnivå inte är tillräcklig "
"kan instanser av :class:`Filter` läggas till i både :class:`Logger` och :"
"class:`Handler` (genom deras :meth:`~Handler.addFilter`-metod). Innan de "
"bestämmer sig för att bearbeta ett meddelande vidare, frågar både loggar och "
"handlare alla sina filter om tillstånd. Om något filter returnerar ett "
"falskt värde bearbetas inte meddelandet vidare."

msgid ""
"The basic :class:`Filter` functionality allows filtering by specific logger "
"name. If this feature is used, messages sent to the named logger and its "
"children are allowed through the filter, and all others dropped."
msgstr ""
"Den grundläggande :class:`Filter`-funktionen gör det möjligt att filtrera "
"efter ett specifikt loggarnamn. Om den här funktionen används tillåts "
"meddelanden som skickas till den namngivna loggern och dess underordnade "
"loggar att passera genom filtret, medan alla andra meddelanden släpps igenom."

msgid "Exceptions raised during logging"
msgstr "Undantag som uppstår under loggning"

msgid ""
"The logging package is designed to swallow exceptions which occur while "
"logging in production. This is so that errors which occur while handling "
"logging events - such as logging misconfiguration, network or other similar "
"errors - do not cause the application using logging to terminate prematurely."
msgstr ""
"Loggningspaketet är utformat så att det kan hantera undantag som uppstår vid "
"loggning i produktion. Detta för att fel som uppstår vid hanteringen av "
"loggningshändelser - t.ex. felkonfigurering av loggning, nätverksfel eller "
"andra liknande fel - inte ska leda till att programmet som använder loggning "
"avslutas i förtid."

msgid ""
":class:`SystemExit` and :class:`KeyboardInterrupt` exceptions are never "
"swallowed. Other exceptions which occur during the :meth:`~Handler.emit` "
"method of a :class:`Handler` subclass are passed to its :meth:`~Handler."
"handleError` method."
msgstr ""
"undantagen :class:`SystemExit` och :class:`KeyboardInterrupt` sväljs aldrig. "
"Andra undantag som inträffar under :meth:`~Handler.emit`-metoden i en :class:"
"`Handler`-underklass skickas till dess :meth:`~Handler.handleError`-metod."

msgid ""
"The default implementation of :meth:`~Handler.handleError` in :class:"
"`Handler` checks to see if a module-level variable, :data:`raiseExceptions`, "
"is set. If set, a traceback is printed to :data:`sys.stderr`. If not set, "
"the exception is swallowed."
msgstr ""
"Standardimplementationen av :meth:`~Handler.handleError` i :class:`Handler` "
"kontrollerar om variabeln på modulnivå, :data:`raiseExceptions`, är "
"inställd. Om den är inställd skrivs en spårning ut till :data:`sys.stderr`. "
"Om variabeln inte är inställd slukas undantaget."

msgid ""
"The default value of :data:`raiseExceptions` is ``True``. This is because "
"during development, you typically want to be notified of any exceptions that "
"occur. It's advised that you set :data:`raiseExceptions` to ``False`` for "
"production usage."
msgstr ""
"Standardvärdet för :data:`raiseExceptions` är ``True``. Detta beror på att "
"du under utveckling vanligtvis vill bli underrättad om eventuella undantag "
"som inträffar. Det rekommenderas att du ställer in :data:`raiseExceptions` "
"till ``False`` för produktionsanvändning."

msgid "Using arbitrary objects as messages"
msgstr "Använda godtyckliga objekt som meddelanden"

msgid ""
"In the preceding sections and examples, it has been assumed that the message "
"passed when logging the event is a string. However, this is not the only "
"possibility. You can pass an arbitrary object as a message, and its :meth:"
"`~object.__str__` method will be called when the logging system needs to "
"convert it to a string representation. In fact, if you want to, you can "
"avoid computing a string representation altogether - for example, the :class:"
"`~handlers.SocketHandler` emits an event by pickling it and sending it over "
"the wire."
msgstr ""
"I de föregående avsnitten och exemplen har det antagits att det meddelande "
"som skickas när händelsen loggas är en sträng. Detta är dock inte den enda "
"möjligheten. Du kan skicka ett godtyckligt objekt som ett meddelande, och "
"dess :meth:`~object.__str__`-metod kommer att anropas när loggningssystemet "
"behöver konvertera det till en strängrepresentation. Om du vill kan du "
"faktiskt undvika att beräkna en strängrepresentation helt och hållet - till "
"exempel avger :class:`~handlers.SocketHandler` en händelse genom att plocka "
"upp den och skicka den över kabeln."

msgid "Optimization"
msgstr "Optimering"

msgid ""
"Formatting of message arguments is deferred until it cannot be avoided. "
"However, computing the arguments passed to the logging method can also be "
"expensive, and you may want to avoid doing it if the logger will just throw "
"away your event. To decide what to do, you can call the :meth:`~Logger."
"isEnabledFor` method which takes a level argument and returns true if the "
"event would be created by the Logger for that level of call. You can write "
"code like this::"
msgstr ""
"Formatering av meddelandeargument skjuts upp tills det inte kan undvikas. "
"Men det kan också vara dyrt att beräkna de argument som skickas till "
"loggarmetoden, och du kanske vill undvika att göra det om loggern bara "
"kommer att kasta bort din händelse. För att bestämma vad du ska göra kan du "
"anropa metoden :meth:`~Logger.isEnabledFor` som tar ett nivåargument och "
"returnerar true om händelsen skulle skapas av Logger för den anropsnivån. Du "
"kan skriva kod så här::"

msgid ""
"if logger.isEnabledFor(logging.DEBUG):\n"
"    logger.debug('Message with %s, %s', expensive_func1(),\n"
"                                        expensive_func2())"
msgstr ""
"if logger.isEnabledFor(logging.DEBUG):\n"
"    logger.debug('Meddelande med %s, %s', expensive_func1(),\n"
"                                        expensive_func2())"

msgid ""
"so that if the logger's threshold is set above ``DEBUG``, the calls to "
"``expensive_func1`` and ``expensive_func2`` are never made."
msgstr ""
"så att anropen till ``expensive_func1`` och ``expensive_func2`` aldrig görs "
"om loggarens tröskelvärde är högre än ``DEBUG``."

msgid ""
"In some cases, :meth:`~Logger.isEnabledFor` can itself be more expensive "
"than you'd like (e.g. for deeply nested loggers where an explicit level is "
"only set high up in the logger hierarchy). In such cases (or if you want to "
"avoid calling a method in tight loops), you can cache the result of a call "
"to :meth:`~Logger.isEnabledFor` in a local or instance variable, and use "
"that instead of calling the method each time. Such a cached value would only "
"need to be recomputed when the logging configuration changes dynamically "
"while the application is running (which is not all that common)."
msgstr ""
"I vissa fall kan :meth:`~Logger.isEnabledFor` i sig vara dyrare än du vill "
"(t.ex. för djupt nästlade loggrar där en explicit nivå bara sätts högt upp i "
"loggerhierarkin). I sådana fall (eller om du vill undvika att anropa en "
"metod i täta loopar) kan du cacha resultatet av ett anrop till :meth:"
"`~Logger.isEnabledFor` i en lokal variabel eller instansvariabel och använda "
"det istället för att anropa metoden varje gång. Ett sådant cachat värde "
"skulle bara behöva beräknas på nytt när loggningskonfigurationen ändras "
"dynamiskt medan programmet körs (vilket inte är så vanligt)."

msgid ""
"There are other optimizations which can be made for specific applications "
"which need more precise control over what logging information is collected. "
"Here's a list of things you can do to avoid processing during logging which "
"you don't need:"
msgstr ""
"Det finns andra optimeringar som kan göras för specifika applikationer som "
"behöver mer exakt kontroll över vilken loggningsinformation som samlas in. "
"Här är en lista över saker du kan göra för att undvika bearbetning under "
"loggning som du inte behöver:"

msgid "What you don't want to collect"
msgstr "Vad du inte vill samla in"

msgid "How to avoid collecting it"
msgstr "Hur man undviker att samla in det"

msgid "Information about where calls were made from."
msgstr "Information om varifrån samtalen gjordes."

msgid ""
"Set ``logging._srcfile`` to ``None``. This avoids calling :func:`sys."
"_getframe`, which may help to speed up your code in environments like PyPy "
"(which can't speed up code that uses :func:`sys._getframe`)."
msgstr ""
"Sätt ``logging._srcfile`` till ``None``. Detta undviker att anropa :func:"
"`sys._getframe`, vilket kan hjälpa till att snabba upp din kod i miljöer som "
"PyPy (som inte kan snabba upp kod som använder :func:`sys._getframe`)."

msgid "Threading information."
msgstr "Information om gängning."

msgid "Set ``logging.logThreads`` to ``False``."
msgstr "Ställ in ``logging.logThreads`` till ``False``."

msgid "Current process ID (:func:`os.getpid`)"
msgstr "ID för aktuell process (:func:`os.getpid`)"

msgid "Set ``logging.logProcesses`` to ``False``."
msgstr "Sätt ``logging.logProcesses`` till ``False``."

msgid ""
"Current process name when using ``multiprocessing`` to manage multiple "
"processes."
msgstr ""
"Aktuellt processnamn när ``multiprocessing`` används för att hantera flera "
"processer."

msgid "Set ``logging.logMultiprocessing`` to ``False``."
msgstr "Sätt ``logging.logMultiprocessing`` till ``False``."

msgid "Current :class:`asyncio.Task` name when using ``asyncio``."
msgstr "Nuvarande :class:`asyncio.Task` namn när man använder ``asyncio``."

msgid "Set ``logging.logAsyncioTasks`` to ``False``."
msgstr "Ställ in ``logging.logAsyncioTasks`` till ``False``."

msgid ""
"Also note that the core logging module only includes the basic handlers. If "
"you don't import :mod:`logging.handlers` and :mod:`logging.config`, they "
"won't take up any memory."
msgstr ""
"Observera också att kärnmodulen för loggning bara innehåller de "
"grundläggande hanterarna. Om du inte importerar :mod:`logging.handlers` och :"
"mod:`logging.config` kommer de inte att ta upp något minne."

msgid "Other resources"
msgstr "Övriga resurser"

msgid "Module :mod:`logging`"
msgstr "Modul :mod:`logging`"

msgid "API reference for the logging module."
msgstr "API-referens för loggningsmodulen."

msgid "Module :mod:`logging.config`"
msgstr "Modul :mod:`logging.config`"

msgid "Configuration API for the logging module."
msgstr "Konfigurations-API för loggningsmodulen."

msgid "Module :mod:`logging.handlers`"
msgstr "Modul :mod:`logging.handlers`"

msgid "Useful handlers included with the logging module."
msgstr "Användbara hanterare som ingår i loggningsmodulen."

msgid ":ref:`A logging cookbook <logging-cookbook>`"
msgstr ":ref:`En kokbok om loggning <logging-cookbook>`"
