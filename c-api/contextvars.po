# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Context Variables Objects"
msgstr "Kontextvariabelobjekt"

msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of :c:type:"
"`PyContext`, :c:type:`PyContextVar`, and :c:type:`PyContextToken`, e.g.::"
msgstr ""
"I Python 3.7.1 ändrades signaturerna för alla kontextvariabler C API:er till "
"att använda :c:type:`PyObject` pekare istället för :c:type:`PyContext`, :c:"
"type:`PyContextVar`, och :c:type:`PyContextToken`, t.ex:"

msgid ""
"// in 3.7.0:\n"
"PyContext *PyContext_New(void);\n"
"\n"
"// in 3.7.1+:\n"
"PyObject *PyContext_New(void);"
msgstr ""
"// i 3.7.0:\n"
"PyContext *PyContext_New(void);\n"
"\n"
"// i 3.7.1+:\n"
"PyObject *PyContext_New(void);"

msgid "See :issue:`34762` for more details."
msgstr "Se :issue:`34762` för mer information."

msgid ""
"This section details the public C API for the :mod:`contextvars` module."
msgstr ""
"Detta avsnitt beskriver det publika C API:et för modulen :mod:`contextvars`."

msgid ""
"The C structure used to represent a :class:`contextvars.Context` object."
msgstr ""
"Den C-struktur som används för att representera ett :class:`contextvars."
"Context`-objekt."

msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` object."
msgstr ""
"Den C-struktur som används för att representera ett :class:`contextvars."
"ContextVar`-objekt."

msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr ""
"Den C-struktur som används för att representera ett :class:`contextvars."
"Token`-objekt."

msgid "The type object representing the *context* type."
msgstr "Typobjektet som representerar *kontext*-typen."

msgid "The type object representing the *context variable* type."
msgstr "Typobjektet som representerar typen av *kontextvariabel*."

msgid "The type object representing the *context variable token* type."
msgstr "Typobjektet som representerar *kontextvariabelns token*-typ."

msgid "Type-check macros:"
msgstr "Typkontrollera makron:"

msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *o* är av typen :c:data:`PyContext_Type`. *o* får inte "
"vara ``NULL``.  Denna funktion lyckas alltid."

msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *o* är av typen :c:data:`PyContextVar_Type`. *o* får inte "
"vara ``NULL``.  Denna funktion lyckas alltid."

msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Returnerar true om *o* är av typen :c:data:`PyContextToken_Type`. *o* får "
"inte vara ``NULL``.  Denna funktion lyckas alltid."

msgid "Context object management functions:"
msgstr "Funktioner för hantering av kontextobjekt:"

msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr ""
"Skapar ett nytt tomt kontextobjekt.  Returnerar ``NULL`` om ett fel har "
"inträffat."

msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns ``NULL`` "
"if an error has occurred."
msgstr ""
"Skapar en ytlig kopia av det passerade *ctx* kontextobjektet. Returnerar "
"``NULL`` om ett fel har inträffat."

msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if an "
"error has occurred."
msgstr ""
"Skapar en ytlig kopia av den aktuella trådkontexten. Returnerar ``NULL`` om "
"ett fel har inträffat."

msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on "
"success, and ``-1`` on error."
msgstr ""
"Ställ in *ctx* som aktuell kontext för aktuell tråd. Returnerar ``0`` vid "
"framgång och ``-1`` vid fel."

msgid ""
"Deactivate the *ctx* context and restore the previous context as the current "
"context for the current thread.  Returns ``0`` on success, and ``-1`` on "
"error."
msgstr ""
"Avaktiverar *ctx*-kontexten och återställer den föregående kontexten som "
"aktuell kontext för den aktuella tråden.  Returnerar ``0`` vid framgång och "
"``-1`` vid fel."

msgid ""
"Register *callback* as a context object watcher for the current interpreter. "
"Return an ID which may be passed to :c:func:`PyContext_ClearWatcher`. In "
"case of error (e.g. no more watcher IDs available), return ``-1`` and set an "
"exception."
msgstr ""
"Registrerar *callback* som en kontextobjekt-vaktare för den aktuella tolken. "
"Returnerar ett ID som kan skickas till :c:func:`PyContext_ClearWatcher`. I "
"händelse av fel (t.ex. inga fler ID:n tillgängliga), returnera ``-1`` och "
"sätt ett undantag."

msgid ""
"Clear watcher identified by *watcher_id* previously returned from :c:func:"
"`PyContext_AddWatcher` for the current interpreter. Return ``0`` on success, "
"or ``-1`` and set an exception on error (e.g. if the given *watcher_id* was "
"never registered.)"
msgstr ""
"Rensa den observatör som identifieras av *watcher_id* och som tidigare "
"returnerats från :c:func:`PyContext_AddWatcher` för den aktuella tolken. "
"Returnerar ``0`` vid framgång, eller ``-1`` och sätter ett undantag vid fel "
"(t.ex. om det givna *watcher_id* aldrig registrerades)"

msgid "Enumeration of possible context object watcher events:"
msgstr "Uppräkning av möjliga händelser för kontextobjektets bevakare:"

msgid ""
"``Py_CONTEXT_SWITCHED``: The :term:`current context` has switched to a "
"different context.  The object passed to the watch callback is the now-"
"current :class:`contextvars.Context` object, or None if no context is "
"current."
msgstr ""
"``Py_CONTEXT_SWITCHED``: Den :term:`aktuella kontexten` har bytt till en "
"annan kontext.  Objektet som skickas till watch callback är det nu aktuella :"
"class:`contextvars.Context`-objektet, eller None om inget sammanhang är "
"aktuellt."

msgid ""
"Context object watcher callback function.  The object passed to the callback "
"is event-specific; see :c:type:`PyContextEvent` for details."
msgstr ""
"Återkallelsefunktion för kontextobjektets bevakare.  Objektet som skickas "
"till återuppringningen är händelsespecifikt; se :c:type:`PyContextEvent` för "
"detaljer."

msgid ""
"If the callback returns with an exception set, it must return ``-1``; this "
"exception will be printed as an unraisable exception using :c:func:"
"`PyErr_FormatUnraisable`. Otherwise it should return ``0``."
msgstr ""
"Om callbacken returneras med ett undantag inställt måste den returnera "
"``-1``; detta undantag kommer att skrivas ut som ett undantag som inte kan "
"bedömas med :c:func:`PyErr_FormatUnraisable`. Annars bör det returnera ``0``."

msgid ""
"There may already be a pending exception set on entry to the callback. In "
"this case, the callback should return ``0`` with the same exception still "
"set. This means the callback may not call any other API that can set an "
"exception unless it saves and clears the exception state first, and restores "
"it before returning."
msgstr ""
"Det kan redan finnas ett väntande undantag inställt vid ingången till "
"återuppringningen. I detta fall bör återuppringningen returnera ``0`` med "
"samma undantag fortfarande inställt. Detta innebär att återuppringningen "
"inte får anropa något annat API som kan ställa in ett undantag om det inte "
"sparar och rensar undantagstillståndet först och återställer det innan det "
"returneras."

msgid "Context variable functions:"
msgstr "Funktioner för kontextvariabler:"

msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter specifies a default "
"value for the context variable, or ``NULL`` for no default. If an error has "
"occurred, this function returns ``NULL``."
msgstr ""
"Skapar ett nytt ``ContextVar``-objekt.  Parametern *name* används för "
"introspektion och felsökning.  Parametern *def* anger ett standardvärde för "
"kontextvariabeln, eller ``NULL`` om inget standardvärde anges. Om ett fel "
"har inträffat returnerar denna funktion ``NULL``."

msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""
"Hämtar värdet på en kontextvariabel.  Returnerar ``-1`` om ett fel har "
"inträffat under sökningen, och ``0`` om inget fel har inträffat, oavsett om "
"ett värde hittades eller inte."

msgid ""
"If the context variable was found, *value* will be a pointer to it. If the "
"context variable was *not* found, *value* will point to:"
msgstr ""
"Om kontextvariabeln hittades kommer *value* att vara en pekare till den. Om "
"kontextvariabeln *inte* hittades kommer *value* att peka på:"

msgid "*default_value*, if not ``NULL``;"
msgstr "*default_value*, om inte ``NULL``;"

msgid "the default value of *var*, if not ``NULL``;"
msgstr "standardvärdet för *var*, om det inte är ``NULL``;"

msgid "``NULL``"
msgstr "``NULL``"

msgid "Except for ``NULL``, the function returns a new reference."
msgstr "Med undantag för ``NULL`` returnerar funktionen en ny referens."

msgid ""
"Set the value of *var* to *value* in the current context.  Returns a new "
"token object for this change, or ``NULL`` if an error has occurred."
msgstr ""
"Ställer in värdet på *var* till *värde* i det aktuella sammanhanget.  "
"Returnerar ett nytt token-objekt för denna ändring, eller ``NULL`` om ett "
"fel har inträffat."

msgid ""
"Reset the state of the *var* context variable to that it was in before :c:"
"func:`PyContextVar_Set` that returned the *token* was called. This function "
"returns ``0`` on success and ``-1`` on error."
msgstr ""
"Återställer tillståndet för kontextvariabeln *var* till det tillstånd den "
"hade innan :c:func:`PyContextVar_Set` som returnerade *token* anropades. "
"Denna funktion returnerar ``0`` vid framgång och ``-1`` vid fel."
