# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!runpy` --- Locating and executing Python modules"
msgstr ":mod:`!runpy` --- Lokalisering och exekvering av Python-moduler"

msgid "**Source code:** :source:`Lib/runpy.py`"
msgstr "**Källkod:** :source:`Lib/runpy.py`"

msgid ""
"The :mod:`runpy` module is used to locate and run Python modules without "
"importing them first. Its main use is to implement the :option:`-m` command "
"line switch that allows scripts to be located using the Python module "
"namespace rather than the filesystem."
msgstr ""
"Modulen :mod:`runpy` används för att hitta och köra Python-moduler utan att "
"importera dem först. Den används huvudsakligen för att implementera "
"kommandoradsalternativet :option:`-m` som gör att skript kan lokaliseras med "
"hjälp av Python-modulens namnrymd i stället för filsystemet."

msgid ""
"Note that this is *not* a sandbox module - all code is executed in the "
"current process, and any side effects (such as cached imports of other "
"modules) will remain in place after the functions have returned."
msgstr ""
"Observera att detta *inte* är en sandlådemodul - all kod exekveras i den "
"aktuella processen och eventuella sidoeffekter (t.ex. cachad import av andra "
"moduler) kommer att finnas kvar efter att funktionerna har returnerats."

msgid ""
"Furthermore, any functions and classes defined by the executed code are not "
"guaranteed to work correctly after a :mod:`runpy` function has returned. If "
"that limitation is not acceptable for a given use case, :mod:`importlib` is "
"likely to be a more suitable choice than this module."
msgstr ""
"Dessutom är det inte garanterat att funktioner och klasser som definieras av "
"den exekverade koden fungerar korrekt efter att en :mod:`runpy`-funktion har "
"returnerats. Om denna begränsning inte är acceptabel för ett visst "
"användningsfall, är :mod:`importlib` sannolikt ett lämpligare val än denna "
"modul."

msgid "The :mod:`runpy` module provides two functions:"
msgstr "Modulen :mod:`runpy` innehåller två funktioner:"

msgid ""
"Execute the code of the specified module and return the resulting module's "
"globals dictionary. The module's code is first located using the standard "
"import mechanism (refer to :pep:`302` for details) and then executed in a "
"fresh module namespace."
msgstr ""
"Exekverar koden för den angivna modulen och returnerar den resulterande "
"modulens globals-ordbok. Modulens kod lokaliseras först med hjälp av "
"standardimportmekanismen (se :pep:`302` för detaljer) och exekveras sedan i "
"ett nytt modulnamnområde."

msgid ""
"The *mod_name* argument should be an absolute module name. If the module "
"name refers to a package rather than a normal module, then that package is "
"imported and the :mod:`__main__` submodule within that package is then "
"executed and the resulting module globals dictionary returned."
msgstr ""
"Argumentet *mod_name* bör vara ett absolut modulnamn. Om modulnamnet "
"hänvisar till ett paket i stället för en vanlig modul importeras paketet och "
"undermodulen :mod:`__main__` i paketet exekveras och den resulterande "
"modulens globala ordbok returneras."

msgid ""
"The optional dictionary argument *init_globals* may be used to pre-populate "
"the module's globals dictionary before the code is executed. *init_globals* "
"will not be modified. If any of the special global variables below are "
"defined in *init_globals*, those definitions are overridden by :func:"
"`run_module`."
msgstr ""
"Det valfria ordboksargumentet *init_globals* kan användas för att fylla på "
"modulens globala ordbok innan koden exekveras. *init_globals* kommer inte "
"att modifieras. Om någon av de speciella globala variablerna nedan är "
"definierade i *init_globals*, åsidosätts dessa definitioner av :func:"
"`run_module`."

msgid ""
"The special global variables ``__name__``, ``__spec__``, ``__file__``, "
"``__cached__``, ``__loader__`` and ``__package__`` are set in the globals "
"dictionary before the module code is executed. (Note that this is a minimal "
"set of variables - other variables may be set implicitly as an interpreter "
"implementation detail.)"
msgstr ""
"De speciella globala variablerna ``__name__``, ``__spec__``, ``__file__``, "
"``__cached__``, ``__loader__`` och ``__package__`` sätts i globals-ordlistan "
"innan modulkoden exekveras. (Observera att detta är en minimal uppsättning "
"variabler - andra variabler kan ställas in implicit som en "
"implementationsdetalj för tolken)"

msgid ""
"``__name__`` is set to *run_name* if this optional argument is not :const:"
"`None`, to ``mod_name + '.__main__'`` if the named module is a package and "
"to the *mod_name* argument otherwise."
msgstr ""
"``__name__`` sätts till *run_name* om detta valfria argument inte är :const:"
"`None`, till ``mod_name + '.__main__'`` om den namngivna modulen är ett "
"paket och till argumentet *mod_name* i annat fall."

msgid ""
"``__spec__`` will be set appropriately for the *actually* imported module "
"(that is, ``__spec__.name`` will always be *mod_name* or ``mod_name + '."
"__main__'``, never *run_name*)."
msgstr ""
"``__spec__`` kommer att ställas in på lämpligt sätt för den *verkligen* "
"importerade modulen (dvs. ``__spec__.name`` kommer alltid att vara "
"*mod_name* eller ``mod_name + '.__main__'``, aldrig *run_name*)."

msgid ""
"``__file__``, ``__cached__``, ``__loader__`` and ``__package__`` are :ref:"
"`set as normal <import-mod-attrs>` based on the module spec."
msgstr ""
"``__file__``, ``__cached__``, ``__loader__`` och ``__package__`` är :ref:"
"``inställda som normala <import-mod-attrs>`` baserat på modulspecifikationen."

msgid ""
"If the argument *alter_sys* is supplied and evaluates to :const:`True`, then "
"``sys.argv[0]`` is updated with the value of ``__file__`` and ``sys."
"modules[__name__]`` is updated with a temporary module object for the module "
"being executed. Both ``sys.argv[0]`` and ``sys.modules[__name__]`` are "
"restored to their original values before the function returns."
msgstr ""
"Om argumentet *alter_sys* anges och utvärderas till :const:`True`, "
"uppdateras ``sys.argv[0]`` med värdet för ``__file__`` och ``sys."
"modules[__name__]`` uppdateras med ett temporärt modulobjekt för den modul "
"som körs. Både ``sys.argv[0]`` och ``sys.modules[__name__]`` återställs till "
"sina ursprungliga värden innan funktionen returneras."

msgid ""
"Note that this manipulation of :mod:`sys` is not thread-safe. Other threads "
"may see the partially initialised module, as well as the altered list of "
"arguments. It is recommended that the ``sys`` module be left alone when "
"invoking this function from threaded code."
msgstr ""
"Observera att denna manipulation av :mod:`sys` inte är trådsäker. Andra "
"trådar kan se den delvis initialiserade modulen, liksom den ändrade listan "
"med argument. Det rekommenderas att ``sys``-modulen lämnas ifred när denna "
"funktion anropas från trådad kod."

msgid ""
"The :option:`-m` option offering equivalent functionality from the command "
"line."
msgstr ""
"Alternativet :option:`-m` erbjuder motsvarande funktionalitet från "
"kommandoraden."

msgid ""
"Added ability to execute packages by looking for a :mod:`__main__` submodule."
msgstr ""
"Lagt till möjligheten att exekvera paket genom att leta efter en :mod:"
"`__main__`-undermodul."

msgid "Added ``__cached__`` global variable (see :pep:`3147`)."
msgstr "Lagt till den globala variabeln ``__cached__`` (se :pep:`3147`)."

msgid ""
"Updated to take advantage of the module spec feature added by :pep:`451`. "
"This allows ``__cached__`` to be set correctly for modules run this way, as "
"well as ensuring the real module name is always accessible as ``__spec__."
"name``."
msgstr ""
"Uppdaterad för att dra nytta av modulspecifikationsfunktionen som lagts till "
"av :pep:`451`. Detta gör att ``__cached__`` kan ställas in korrekt för "
"moduler som körs på detta sätt, samt att det verkliga modulnamnet alltid är "
"tillgängligt som ``__spec__.name``."

msgid ""
"The setting of ``__cached__``, ``__loader__``, and ``__package__`` are "
"deprecated. See :class:`~importlib.machinery.ModuleSpec` for alternatives."
msgstr ""
"Inställningen av ``__cached__``, ``__loader__`` och ``__package__`` är "
"föråldrad. Se :class:`~importlib.machinery.ModuleSpec` för alternativ."

msgid ""
"Execute the code at the named filesystem location and return the resulting "
"module's globals dictionary. As with a script name supplied to the CPython "
"command line, *file_path* may refer to a Python source file, a compiled "
"bytecode file or a valid :data:`sys.path` entry containing a :mod:`__main__` "
"module (e.g. a zipfile containing a top-level :file:`__main__.py` file)."
msgstr ""
"Exekvera koden på den angivna platsen i filsystemet och returnera den "
"resulterande modulens globals-ordbok. Precis som med ett skriptnamn som "
"anges på CPythons kommandorad kan *file_path* hänvisa till en Python-"
"källfil, en kompilerad bytecode-fil eller en giltig :data:`sys.path`-post "
"som innehåller en :mod:`__main__`-modul (t.ex. en zip-fil som innehåller en :"
"file:`__main__.py`-fil på toppnivå)."

msgid ""
"For a simple script, the specified code is simply executed in a fresh module "
"namespace. For a valid :data:`sys.path` entry (typically a zipfile or "
"directory), the entry is first added to the beginning of ``sys.path``. The "
"function then looks for and executes a :mod:`__main__` module using the "
"updated path. Note that there is no special protection against invoking an "
"existing ``__main__`` entry located elsewhere on ``sys.path`` if there is no "
"such module at the specified location."
msgstr ""
"För ett enkelt skript exekveras den angivna koden helt enkelt i ett nytt "
"modulnamnområde. För en giltig :data:`sys.path`-post (vanligtvis en zip-fil "
"eller katalog) läggs posten först till i början av ``sys.path``. Funktionen "
"söker sedan efter och exekverar en :mod:`__main__`-modul med den uppdaterade "
"sökvägen. Observera att det inte finns något särskilt skydd mot att anropa "
"en befintlig ``__main__``-post som finns någon annanstans på ``sys.path`` om "
"det inte finns någon sådan modul på den angivna platsen."

msgid ""
"The optional dictionary argument *init_globals* may be used to pre-populate "
"the module's globals dictionary before the code is executed. *init_globals* "
"will not be modified. If any of the special global variables below are "
"defined in *init_globals*, those definitions are overridden by :func:"
"`run_path`."
msgstr ""
"Det valfria ordboksargumentet *init_globals* kan användas för att fylla på "
"modulens globala ordbok innan koden exekveras. *init_globals* kommer inte "
"att modifieras. Om någon av de speciella globala variablerna nedan är "
"definierade i *init_globals*, åsidosätts dessa definitioner av :func:"
"`run_path`."

msgid ""
"``__name__`` is set to *run_name* if this optional argument is not :const:"
"`None` and to ``'<run_path>'`` otherwise."
msgstr ""
"``__name__`` sätts till *run_name* om detta valfria argument inte är :const:"
"`None` och till ``'<run_path>'`` annars."

msgid ""
"If *file_path* directly references a script file (whether as source or as "
"precompiled byte code), then ``__file__`` will be set to *file_path*, and "
"``__spec__``, ``__cached__``, ``__loader__`` and ``__package__`` will all be "
"set to :const:`None`."
msgstr ""
"Om *file_path* direkt refererar till en skriptfil (antingen som källkod "
"eller som förkompilerad bytekod), kommer ``__file__`` att sättas till "
"*file_path*, och ``__spec__``, ``__cached__``, ``__loader__`` och "
"``__package__`` kommer alla att sättas till :const:`None`."

msgid ""
"If *file_path* is a reference to a valid :data:`sys.path` entry, then "
"``__spec__`` will be set appropriately for the imported :mod:`__main__` "
"module (that is, ``__spec__.name`` will always be ``__main__``). "
"``__file__``, ``__cached__``, ``__loader__`` and ``__package__`` will be :"
"ref:`set as normal <import-mod-attrs>` based on the module spec."
msgstr ""
"Om *file_path* är en referens till en giltig :data:`sys.path`-post kommer "
"``__spec__`` att ställas in på lämpligt sätt för den importerade :mod:"
"`__main__`-modulen (det vill säga ``__spec__.name`` kommer alltid att vara "
"``__main__``). ``__file__``, ``__cached__``, ``__loader__`` och "
"``package__`` kommer att :ref:`ställas in som vanligt <import-mod-attrs>` "
"baserat på modulspecifikationen."

msgid ""
"A number of alterations are also made to the :mod:`sys` module. Firstly, :"
"data:`sys.path` may be altered as described above. ``sys.argv[0]`` is "
"updated with the value of *file_path* and ``sys.modules[__name__]`` is "
"updated with a temporary module object for the module being executed. All "
"modifications to items in :mod:`sys` are reverted before the function "
"returns."
msgstr ""
"Ett antal ändringar görs också i modulen :mod:`sys`. För det första kan :"
"data:`sys.path` ändras enligt beskrivningen ovan. ``sys.argv[0]`` uppdateras "
"med värdet för *file_path* och ``sys.modules[__name__]`` uppdateras med ett "
"temporärt modulobjekt för den modul som exekveras. Alla ändringar av objekt "
"i :mod:`sys` återställs innan funktionen returneras."

msgid ""
"Note that, unlike :func:`run_module`, the alterations made to :mod:`sys` are "
"not optional in this function as these adjustments are essential to allowing "
"the execution of :data:`sys.path` entries. As the thread-safety limitations "
"still apply, use of this function in threaded code should be either "
"serialised with the import lock or delegated to a separate process."
msgstr ""
"Observera att till skillnad från :func:`run_module` är ändringarna i :mod:"
"`sys` inte valfria i denna funktion eftersom dessa justeringar är nödvändiga "
"för att möjliggöra exekvering av :data:`sys.path`-poster. Eftersom "
"begränsningarna för trådsäkerhet fortfarande gäller, bör användning av denna "
"funktion i trådad kod antingen serialiseras med importlåset eller delegeras "
"till en separat process."

msgid ""
":ref:`using-on-interface-options` for equivalent functionality on the "
"command line (``python path/to/script``)."
msgstr ""
":ref:`using-on-interface-options` för motsvarande funktionalitet på "
"kommandoraden (``python path/to/script``)."

msgid ""
"Updated to take advantage of the module spec feature added by :pep:`451`. "
"This allows ``__cached__`` to be set correctly in the case where "
"``__main__`` is imported from a valid :data:`sys.path` entry rather than "
"being executed directly."
msgstr ""
"Uppdaterad för att dra nytta av funktionen modulspecifikation som lagts till "
"av :pep:`451`. Detta gör att ``__cached__`` kan ställas in korrekt i de fall "
"där ``__main__`` importeras från en giltig :data:`sys.path`-post istället "
"för att exekveras direkt."

msgid ""
"The setting of ``__cached__``, ``__loader__``, and ``__package__`` are "
"deprecated."
msgstr ""
"Inställningen av ``__cached__``, ``__loader__`` och ``__package__`` är "
"föråldrad."

msgid ":pep:`338` -- Executing modules as scripts"
msgstr ":pep:`338` -- Exekvera moduler som skript"

msgid "PEP written and implemented by Nick Coghlan."
msgstr "PEP skrivet och genomfört av Nick Coghlan."

msgid ":pep:`366` -- Main module explicit relative imports"
msgstr ":pep:`366` -- Huvudmodulens explicita relativa import"

msgid ":pep:`451` -- A ModuleSpec Type for the Import System"
msgstr ":pep:`451` -- En ModuleSpec-typ för importsystemet"

msgid "PEP written and implemented by Eric Snow"
msgstr "PEP skrivet och implementerat av Eric Snow"

msgid ":ref:`using-on-general` - CPython command line details"
msgstr ":ref:`using-on-general` - CPython-kommandoradsdetaljer"

msgid "The :func:`importlib.import_module` function"
msgstr "Funktionen :func:`importlib.import_module`"

msgid "module"
msgstr "modul"

msgid "__main__"
msgstr "__main__"
