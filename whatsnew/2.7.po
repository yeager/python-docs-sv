# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "What's New in Python 2.7"
msgstr "Vad är nytt i Python 2.7"

msgid "Author"
msgstr "Författare"

msgid "A.M. Kuchling (amk at amk.ca)"
msgstr "A.M. Kuchling (amk at amk.ca)"

msgid ""
"This article explains the new features in Python 2.7.  Python 2.7 was "
"released on July 3, 2010."
msgstr ""
"I den här artikeln förklaras de nya funktionerna i Python 2.7.  Python 2.7 "
"släpptes den 3 juli 2010."

msgid ""
"Numeric handling has been improved in many ways, for both floating-point "
"numbers and for the :class:`~decimal.Decimal` class. There are some useful "
"additions to the standard library, such as a greatly enhanced :mod:"
"`unittest` module, the :mod:`argparse` module for parsing command-line "
"options, convenient :class:`~collections.OrderedDict` and :class:"
"`~collections.Counter` classes in the :mod:`collections` module, and many "
"other improvements."
msgstr ""
"Hanteringen av numeriska tal har förbättrats på många sätt, både för flyttal "
"och för klassen :class:`~decimal.Decimal`. Det finns en del användbara "
"tillägg till standardbiblioteket, t.ex. en kraftigt förbättrad modul :mod:"
"`unittest`, modulen :mod:`argparse` för tolkning av kommandoradsalternativ, "
"praktiska klasserna :class:`~collections.OrderedDict` och :class:"
"`~collections.Counter` i modulen :mod:`collections` och många andra "
"förbättringar."

msgid ""
"Python 2.7 is planned to be the last of the 2.x releases, so we worked on "
"making it a good release for the long term.  To help with porting to Python "
"3, several new features from the Python 3.x series have been included in 2.7."
msgstr ""
"Python 2.7 är planerad att vara den sista av 2.x-utgåvorna, så vi har "
"arbetat för att göra det till en bra utgåva på lång sikt.  För att hjälpa "
"till med porteringen till Python 3 har flera nya funktioner från Python 3.x-"
"serien inkluderats i 2.7."

msgid ""
"This article doesn't attempt to provide a complete specification of the new "
"features, but instead provides a convenient overview.  For full details, you "
"should refer to the documentation for Python 2.7 at https://docs.python.org. "
"If you want to understand the rationale for the design and implementation, "
"refer to the PEP for a particular new feature or the issue on https://bugs."
"python.org in which a change was discussed.  Whenever possible, \"What's New "
"in Python\" links to the bug/patch item for each change."
msgstr ""
"Den här artikeln försöker inte ge en fullständig specifikation av de nya "
"funktionerna, utan ger istället en praktisk översikt.  För fullständiga "
"detaljer hänvisas till dokumentationen för Python 2.7 på https://docs.python."
"org. Om du vill förstå bakgrunden till utformningen och implementeringen, se "
"PEP för en viss ny funktion eller frågan på https://bugs.python.org där en "
"ändring diskuterades.  När det är möjligt länkar \"What's New in Python\" "
"till buggen/patch-objektet för varje ändring."

msgid "The Future for Python 2.x"
msgstr "Framtiden för Python 2.x"

msgid ""
"Python 2.7 is the last major release in the 2.x series, as the Python "
"maintainers have shifted the focus of their new feature development efforts "
"to the Python 3.x series. This means that while Python 2 continues to "
"receive bug fixes, and to be updated to build correctly on new hardware and "
"versions of supported operated systems, there will be no new full feature "
"releases for the language or standard library."
msgstr ""
"Python 2.7 är den sista större utgåvan i 2.x-serien, eftersom Python-"
"underhållarna har flyttat fokus för sina ansträngningar att utveckla nya "
"funktioner till Python 3.x-serien. Detta innebär att medan Python 2 "
"fortsätter att få buggfixar och uppdateras för att bygga korrekt på ny "
"hårdvara och versioner av operativsystem som stöds, kommer det inte att "
"finnas några nya fullständiga funktionsversioner för språket eller "
"standardbiblioteket."

msgid ""
"However, while there is a large common subset between Python 2.7 and Python "
"3, and many of the changes involved in migrating to that common subset, or "
"directly to Python 3, can be safely automated, some other changes (notably "
"those associated with Unicode handling) may require careful consideration, "
"and preferably robust automated regression test suites, to migrate "
"effectively."
msgstr ""
"Men även om det finns en stor gemensam delmängd mellan Python 2.7 och Python "
"3, och många av de ändringar som är involverade i migreringen till den "
"gemensamma delmängden, eller direkt till Python 3, kan automatiseras på ett "
"säkert sätt, kan vissa andra ändringar (särskilt de som är förknippade med "
"Unicode-hantering) kräva noggrant övervägande, och helst robusta "
"automatiserade regressionstestsviter, för att migrera effektivt."

msgid ""
"This means that Python 2.7 will remain in place for a long time, providing a "
"stable and supported base platform for production systems that have not yet "
"been ported to Python 3. The full expected lifecycle of the Python 2.7 "
"series is detailed in :pep:`373`."
msgstr ""
"Detta innebär att Python 2.7 kommer att finnas kvar under lång tid och "
"utgöra en stabil basplattform med stöd för produktionssystem som ännu inte "
"har portats till Python 3. Den fullständiga förväntade livscykeln för Python "
"2.7-serien beskrivs i :pep:`373`."

msgid "Some key consequences of the long-term significance of 2.7 are:"
msgstr "Några viktiga konsekvenser av den långsiktiga betydelsen av 2,7 är:"

msgid ""
"As noted above, the 2.7 release has a much longer period of maintenance when "
"compared to earlier 2.x versions. Python 2.7 is currently expected to remain "
"supported by the core development team (receiving security updates and other "
"bug fixes) until at least 2020 (10 years after its initial release, compared "
"to the more typical support period of 18--24 months)."
msgstr ""
"Som nämnts ovan har 2.7-utgåvan en mycket längre period av underhåll jämfört "
"med tidigare 2.x-versioner. Python 2.7 förväntas för närvarande fortsätta "
"att stödjas av kärnutvecklingsteamet (få säkerhetsuppdateringar och andra "
"buggfixar) fram till åtminstone 2020 (10 år efter den första utgåvan, "
"jämfört med den mer typiska supportperioden på 18-24 månader)."

msgid ""
"As the Python 2.7 standard library ages, making effective use of the Python "
"Package Index (either directly or via a redistributor) becomes more "
"important for Python 2 users. In addition to a wide variety of third party "
"packages for various tasks, the available packages include backports of new "
"modules and features from the Python 3 standard library that are compatible "
"with Python 2, as well as various tools and libraries that can make it "
"easier to migrate to Python 3. The `Python Packaging User Guide <https://"
"packaging.python.org>`__ provides guidance on downloading and installing "
"software from the Python Package Index."
msgstr ""
"I takt med att standardbiblioteket Python 2.7 åldras blir det allt viktigare "
"för Python 2-användare att effektivt använda Python Package Index (antingen "
"direkt eller via en redistributör). Förutom ett brett utbud av "
"tredjepartspaket för olika uppgifter innehåller de tillgängliga paketen "
"backports av nya moduler och funktioner från Python 3 standardbibliotek som "
"är kompatibla med Python 2, samt olika verktyg och bibliotek som kan göra "
"det lättare att migrera till Python 3. I \"Python Packaging User Guide "
"<https://packaging.python.org>`__\" finns vägledning om hur du hämtar och "
"installerar programvara från Python Package Index."

msgid ""
"While the preferred approach to enhancing Python 2 is now the publication of "
"new packages on the Python Package Index, this approach doesn't necessarily "
"work in all cases, especially those related to network security. In "
"exceptional cases that cannot be handled adequately by publishing new or "
"updated packages on PyPI, the Python Enhancement Proposal process may be "
"used to make the case for adding new features directly to the Python 2 "
"standard library. Any such additions, and the maintenance releases where "
"they were added, will be noted in the :ref:`py27-maintenance-enhancements` "
"section below."
msgstr ""
"Även om det föredragna tillvägagångssättet för att förbättra Python 2 nu är "
"publicering av nya paket på Python Package Index, fungerar detta "
"tillvägagångssätt inte nödvändigtvis i alla fall, särskilt de som är "
"relaterade till nätverkssäkerhet. I undantagsfall som inte kan hanteras på "
"lämpligt sätt genom att publicera nya eller uppdaterade paket på PyPI, kan "
"Python Enhancement Proposal-processen användas för att argumentera för att "
"lägga till nya funktioner direkt till Python 2 standardbibliotek. Alla "
"sådana tillägg, och de underhållsutgåvor där de lades till, kommer att "
"noteras i :ref:`py27-maintenance-enhancements` avsnittet nedan."

msgid ""
"For projects wishing to migrate from Python 2 to Python 3, or for library "
"and framework developers wishing to support users on both Python 2 and "
"Python 3, there are a variety of tools and guides available to help decide "
"on a suitable approach and manage some of the technical details involved. "
"The recommended starting point is the :ref:`pyporting-howto` HOWTO guide."
msgstr ""
"För projekt som vill migrera från Python 2 till Python 3, eller för "
"biblioteks- och ramverksutvecklare som vill stödja användare av både Python "
"2 och Python 3, finns det en mängd olika verktyg och guider tillgängliga för "
"att hjälpa till att bestämma ett lämpligt tillvägagångssätt och hantera "
"några av de tekniska detaljer som är inblandade. Den rekommenderade "
"startpunkten är :ref:`pyporting-howto` HOWTO-guiden."

msgid "Changes to the Handling of Deprecation Warnings"
msgstr "Ändringar i hanteringen av deprecation-varningar"

msgid ""
"For Python 2.7, a policy decision was made to silence warnings only of "
"interest to developers by default.  :exc:`DeprecationWarning` and its "
"descendants are now ignored unless otherwise requested, preventing users "
"from seeing warnings triggered by an application.  This change was also made "
"in the branch that became Python 3.2. (Discussed on stdlib-sig and carried "
"out in :issue:`7319`.)"
msgstr ""
"För Python 2.7 togs ett policybeslut att tysta varningar som bara är av "
"intresse för utvecklare som standard. :exc:`DeprecationWarning` och dess "
"ättlingar ignoreras nu om inte annat begärs, vilket förhindrar användare "
"från att se varningar som utlöses av en applikation.  Den här ändringen "
"gjordes också i den gren som blev Python 3.2. (Diskuterades på stdlib-sig "
"och genomfördes i :issue:`7319`.)"

msgid ""
"In previous releases, :exc:`DeprecationWarning` messages were enabled by "
"default, providing Python developers with a clear indication of where their "
"code may break in a future major version of Python."
msgstr ""
"I tidigare utgåvor var :exc:`DeprecationWarning`-meddelanden aktiverade som "
"standard, vilket gav Python-utvecklare en tydlig indikation på var deras kod "
"kan brytas i en framtida större version av Python."

msgid ""
"However, there are increasingly many users of Python-based applications who "
"are not directly involved in the development of those applications.  :exc:"
"`DeprecationWarning` messages are irrelevant to such users, making them "
"worry about an application that's actually working correctly and burdening "
"application developers with responding to these concerns."
msgstr ""
"Det finns dock allt fler användare av Python-baserade applikationer som inte "
"är direkt involverade i utvecklingen av dessa applikationer. :exc:"
"`DeprecationWarning`-meddelanden är irrelevanta för sådana användare, vilket "
"gör att de oroar sig för en applikation som faktiskt fungerar korrekt och "
"belastar applikationsutvecklare med att svara på dessa problem."

msgid ""
"You can re-enable display of :exc:`DeprecationWarning` messages by running "
"Python with the :option:`-Wdefault <-W>` (short form: :option:`-Wd <-W>`) "
"switch, or by setting the :envvar:`PYTHONWARNINGS` environment variable to "
"``\"default\"`` (or ``\"d\"``) before running Python.  Python code can also "
"re-enable them by calling ``warnings.simplefilter('default')``."
msgstr ""
"Du kan återaktivera visning av :exc:`DeprecationWarning`-meddelanden genom "
"att köra Python med :option:`-Wdefault <-W>` (kortform: :option:`-Wd <-W>`), "
"eller genom att ställa in miljövariabeln :envvar:`PYTHONWARNINGS` till "
"``\"default\"`` (eller ``\"d\"``) innan du kör Python.  Python-kod kan också "
"återaktivera dem genom att anropa ``warnings.simplefilter('default')``."

msgid ""
"The ``unittest`` module also automatically reenables deprecation warnings "
"when running tests."
msgstr ""
"Modulen ``unittest`` återaktiverar också automatiskt deprecationsvarningar "
"när tester körs."

msgid "Python 3.1 Features"
msgstr "Python 3.1 Funktioner"

msgid ""
"Much as Python 2.6 incorporated features from Python 3.0, version 2.7 "
"incorporates some of the new features in Python 3.1.  The 2.x series "
"continues to provide tools for migrating to the 3.x series."
msgstr ""
"Precis som Python 2.6 innehöll funktioner från Python 3.0, innehåller "
"version 2.7 några av de nya funktionerna i Python 3.1.  2.x-serien "
"fortsätter att tillhandahålla verktyg för migrering till 3.x-serien."

msgid "A partial list of 3.1 features that were backported to 2.7:"
msgstr "En partiell lista över funktioner i 3.1 som backporterades till 2.7:"

msgid "The syntax for set literals (``{1,2,3}`` is a mutable set)."
msgstr "Syntaxen för mängdlitteraler (``{1,2,3}`` är en föränderlig mängd)."

msgid "Dictionary and set comprehensions (``{i: i*2 for i in range(3)}``)."
msgstr "Dictionary och set comprehensions (``{i: i*2 for i in range(3)}``)."

msgid "Multiple context managers in a single :keyword:`with` statement."
msgstr "Flera kontexthanterare i en enda :keyword:`with`-sats."

msgid "A new version of the :mod:`io` library, rewritten in C for performance."
msgstr ""
"En ny version av biblioteket :mod:`io`, omskriven i C för bättre prestanda."

msgid "The ordered-dictionary type described in :ref:`pep-0372`."
msgstr "Typen ordered-dictionary som beskrivs i :ref:`pep-0372`."

msgid "The new ``\",\"`` format specifier described in :ref:`pep-0378`."
msgstr "Den nya formatangivaren ``\",\"`` som beskrivs i :ref:`pep-0378`."

msgid "The :class:`memoryview` object."
msgstr "Objektet :class:`memoryview`."

msgid ""
"A small subset of the :mod:`importlib` module, `described below <#importlib-"
"section>`__."
msgstr ""
"En liten delmängd av modulen :mod:`importlib`, `beskrivs nedan <#importlib-"
"sektionen>`__."

msgid ""
"The :func:`repr` of a float ``x`` is shorter in many cases: it's now based "
"on the shortest decimal string that's guaranteed to round back to ``x``.  As "
"in previous versions of Python, it's guaranteed that ``float(repr(x))`` "
"recovers ``x``."
msgstr ""
":func:`repr` av en float ``x`` är kortare i många fall: den är nu baserad på "
"den kortaste decimalsträngen som garanterat avrundar tillbaka till ``x``.  "
"Precis som i tidigare versioner av Python är det garanterat att "
"``float(repr(x))`` återställer ``x``."

msgid ""
"Float-to-string and string-to-float conversions are correctly rounded. The :"
"func:`round` function is also now correctly rounded."
msgstr ""
"Konverteringar av float-till-sträng och sträng-till-float avrundas korrekt. "
"Funktionen :func:`round` är nu också korrekt avrundad."

msgid ""
"The :c:type:`PyCapsule` type, used to provide a C API for extension modules."
msgstr ""
"Typen :c:type:`PyCapsule`, används för att tillhandahålla ett C API för "
"tilläggsmoduler."

msgid "The :c:func:`PyLong_AsLongAndOverflow` C API function."
msgstr "C API-funktionen :c:func:`PyLong_AsLongAndOverflow`."

msgid "Other new Python3-mode warnings include:"
msgstr "Andra nya varningar i Python3-läge inkluderar:"

msgid ""
":func:`!operator.isCallable` and :func:`!operator.sequenceIncludes`, which "
"are not supported in 3.x, now trigger warnings."
msgstr ""
":func:`!operator.isCallable` och :func:`!operator.sequenceIncludes`, som "
"inte stöds i 3.x, utlöser nu varningar."

msgid ""
"The :option:`!-3` switch now automatically enables the :option:`!-Qwarn` "
"switch that causes warnings about using classic division with integers and "
"long integers."
msgstr ""
"Omkopplaren :option:`!-3` aktiverar nu automatiskt omkopplaren :option:`!-"
"Qwarn` som varnar för att använda klassisk division med heltal och långa "
"heltal."

msgid "PEP 372: Adding an Ordered Dictionary to collections"
msgstr "PEP 372: Lägga till en ordnad ordbok i samlingar"

msgid ""
"Regular Python dictionaries iterate over key/value pairs in arbitrary order. "
"Over the years, a number of authors have written alternative implementations "
"that remember the order that the keys were originally inserted.  Based on "
"the experiences from those implementations, 2.7 introduces a new :class:"
"`~collections.OrderedDict` class in the :mod:`collections` module."
msgstr ""
"Vanliga Python-ordböcker itererar över nyckel/värde-par i godtycklig "
"ordning. Under årens lopp har ett antal författare skrivit alternativa "
"implementationer som kommer ihåg den ordning som nycklarna ursprungligen "
"infogades.  Baserat på erfarenheterna från dessa implementationer "
"introducerar 2.7 en ny :class:`~collections.OrderedDict`-klass i :mod:"
"`collections`-modulen."

msgid ""
"The :class:`~collections.OrderedDict` API provides the same interface as "
"regular dictionaries but iterates over keys and values in a guaranteed order "
"depending on when a key was first inserted::"
msgstr ""
"API:et :class:`~collections.OrderedDict` har samma gränssnitt som vanliga "
"ordböcker men itererar över nycklar och värden i en garanterad ordning "
"beroende på när en nyckel först infogades::"

msgid ""
">>> from collections import OrderedDict\n"
">>> d = OrderedDict([('first', 1),\n"
"...                  ('second', 2),\n"
"...                  ('third', 3)])\n"
">>> d.items()\n"
"[('first', 1), ('second', 2), ('third', 3)]"
msgstr ""
">>> from collections import OrderedDict\n"
">>> d = OrderedDict([('first', 1),\n"
"... ('andra', 2),\n"
"... ('third', 3)])\n"
">>> d.items()\n"
"[('första', 1), ('andra', 2), ('tredje', 3)]"

msgid ""
"If a new entry overwrites an existing entry, the original insertion position "
"is left unchanged::"
msgstr ""
"Om en ny post skriver över en befintlig post, lämnas den ursprungliga "
"inmatningspositionen oförändrad::"

msgid ""
">>> d['second'] = 4\n"
">>> d.items()\n"
"[('first', 1), ('second', 4), ('third', 3)]"
msgstr ""
">>> d['andra'] = 4\n"
">>> d.objekt()\n"
"[('första', 1), ('andra', 4), ('tredje', 3)]"

msgid "Deleting an entry and reinserting it will move it to the end::"
msgstr ""
"Om du tar bort en post och lägger in den igen flyttas den till slutet::"

msgid ""
">>> del d['second']\n"
">>> d['second'] = 5\n"
">>> d.items()\n"
"[('first', 1), ('third', 3), ('second', 5)]"
msgstr ""
">>> del d['andra']\n"
">>> d['andra'] = 5\n"
">>> d.objekt()\n"
"[('första', 1), ('tredje', 3), ('andra', 5)]"

msgid ""
"The :meth:`~collections.OrderedDict.popitem` method has an optional *last* "
"argument that defaults to ``True``.  If *last* is true, the most recently "
"added key is returned and removed; if it's false, the oldest key is "
"selected::"
msgstr ""
"Metoden :meth:`~collections.OrderedDict.popitem` har ett valfritt *last*-"
"argument som har ``True`` som standard.  Om *last* är true returneras och "
"tas bort den senast tillagda nyckeln; om det är false väljs den äldsta "
"nyckeln::"

msgid ""
">>> od = OrderedDict([(x,0) for x in range(20)])\n"
">>> od.popitem()\n"
"(19, 0)\n"
">>> od.popitem()\n"
"(18, 0)\n"
">>> od.popitem(last=False)\n"
"(0, 0)\n"
">>> od.popitem(last=False)\n"
"(1, 0)"
msgstr ""
">>> od = OrderedDict([(x,0) for x in range(20)])\n"
">>> od.popitem()\n"
"(19, 0)\n"
">>> od.popitem()\n"
"(18, 0)\n"
">>> od.popitem(sista=False)\n"
"(0, 0)\n"
">>> od.popitem(sista=False)\n"
"(1, 0)"

msgid ""
"Comparing two ordered dictionaries checks both the keys and values, and "
"requires that the insertion order was the same::"
msgstr ""
"Jämförelse av två ordnade ordböcker kontrollerar både nycklar och värden och "
"kräver att inmatningsordningen var densamma::"

msgid ""
">>> od1 = OrderedDict([('first', 1),\n"
"...                    ('second', 2),\n"
"...                    ('third', 3)])\n"
">>> od2 = OrderedDict([('third', 3),\n"
"...                    ('first', 1),\n"
"...                    ('second', 2)])\n"
">>> od1 == od2\n"
"False\n"
">>> # Move 'third' key to the end\n"
">>> del od2['third']; od2['third'] = 3\n"
">>> od1 == od2\n"
"True"
msgstr ""
">>> od1 = OrderedDict([('first', 1),\n"
"... ('andra', 2),\n"
"... ('tredje', 3)])\n"
">>> od2 = OrderedDict([('third', 3),\n"
"... ('första', 1),\n"
"... ('andra', 2)])\n"
">>> od1 == od2\n"
"Falsk\n"
">>> # Flytta nyckeln 'tredje' till slutet\n"
">>> del od2['third']; od2['third'] = 3\n"
">>> od1 == od2\n"
"Sant"

msgid ""
"Comparing an :class:`~collections.OrderedDict` with a regular dictionary "
"ignores the insertion order and just compares the keys and values."
msgstr ""
"Jämförelse av en :class:`~collections.OrderedDict` med en vanlig ordbok "
"ignorerar insättningsordningen och jämför bara nycklarna och värdena."

msgid ""
"How does the :class:`~collections.OrderedDict` work?  It maintains a doubly "
"linked list of keys, appending new keys to the list as they're inserted. A "
"secondary dictionary maps keys to their corresponding list node, so deletion "
"doesn't have to traverse the entire linked list and therefore remains *O*\\ "
"(1)."
msgstr ""
"Hur fungerar :class:`~collections.OrderedDict`?  Den upprätthåller en "
"dubbelt länkad lista med nycklar och lägger till nya nycklar i listan när de "
"infogas. En sekundär ordbok mappar nycklar till deras motsvarande listnod, "
"så radering behöver inte gå igenom hela den länkade listan och förblir "
"därför *O*\\ (1)."

msgid ""
"The standard library now supports use of ordered dictionaries in several "
"modules."
msgstr ""
"Standardbiblioteket stöder nu användning av ordnade lexikon i flera moduler."

msgid ""
"The :mod:`ConfigParser <configparser>` module uses them by default, meaning "
"that configuration files can now be read, modified, and then written back in "
"their original order."
msgstr ""
"Modulen :mod:`ConfigParser <configparser>` använder dem som standard, vilket "
"innebär att konfigurationsfiler nu kan läsas, ändras och sedan skrivas "
"tillbaka i sin ursprungliga ordning."

msgid ""
"The :meth:`~collections.somenamedtuple._asdict` method for :func:"
"`collections.namedtuple` now returns an ordered dictionary with the values "
"appearing in the same order as the underlying tuple indices."
msgstr ""
"Metoden :meth:`~collections.somenamedtuple._asdict` för :func:`collections."
"namedtuple` returnerar nu en ordnad ordbok där värdena visas i samma ordning "
"som de underliggande tuple-indexen."

msgid ""
"The :mod:`json` module's :class:`~json.JSONDecoder` class constructor was "
"extended with an *object_pairs_hook* parameter to allow :class:`OrderedDict` "
"instances to be built by the decoder. Support was also added for third-party "
"tools like `PyYAML <https://pyyaml.org/>`_."
msgstr ""
":mod:`json`-modulens :class:`~json.JSONDecoder`-klassens konstruktor "
"utökades med en *object_pairs_hook*-parameter för att tillåta att :class:"
"`OrderedDict`-instanser byggs av avkodaren. Stöd har även lagts till för "
"tredjepartsverktyg som `PyYAML <https://pyyaml.org/>`_."

msgid ":pep:`372` - Adding an ordered dictionary to collections"
msgstr ":pep:`372` - Lägga till en ordnad ordbok i samlingar"

msgid ""
"PEP written by Armin Ronacher and Raymond Hettinger; implemented by Raymond "
"Hettinger."
msgstr ""
"PEP skriven av Armin Ronacher och Raymond Hettinger; implementerad av "
"Raymond Hettinger."

msgid "PEP 378: Format Specifier for Thousands Separator"
msgstr "PEP 378: Formatspecifikator för tusentalsavgränsare"

msgid ""
"To make program output more readable, it can be useful to add separators to "
"large numbers, rendering them as 18,446,744,073,709,551,616 instead of "
"18446744073709551616."
msgstr ""
"För att göra programutmatningen mer läsbar kan det vara bra att lägga till "
"separatorer till stora tal, vilket gör att de visas som "
"18,446,744,073,709,551,616 istället för 18446744073709551616."

msgid ""
"The fully general solution for doing this is the :mod:`locale` module, which "
"can use different separators (\",\" in North America, \".\" in Europe) and "
"different grouping sizes, but :mod:`locale` is complicated to use and "
"unsuitable for multi-threaded applications where different threads are "
"producing output for different locales."
msgstr ""
"Den helt generella lösningen för att göra detta är modulen :mod:`locale`, "
"som kan använda olika separatorer (\",\" i Nordamerika, \".\" i Europa) och "
"olika gruppstorlekar, men :mod:`locale` är komplicerad att använda och "
"olämplig för flertrådade program där olika trådar producerar utdata för "
"olika lokaler."

msgid ""
"Therefore, a simple comma-grouping mechanism has been added to the mini-"
"language used by the :meth:`str.format` method.  When formatting a floating-"
"point number, simply include a comma between the width and the precision::"
msgstr ""
"Därför har en enkel kommagrupperingsmekanism lagts till i det minispråk som "
"används av metoden :meth:`str.format`.  När du formaterar ett flyttal kan du "
"helt enkelt sätta ett kommatecken mellan bredden och precisionen::"

msgid ""
">>> '{:20,.2f}'.format(18446744073709551616.0)\n"
"'18,446,744,073,709,551,616.00'"
msgstr ""
">>> '{:20,.2f}'.format(18446744073709551616.0)\n"
"'18,446,744,073,709,551,616.00'"

msgid "When formatting an integer, include the comma after the width:"
msgstr ""
"När du formaterar ett heltal ska du inkludera kommatecknet efter bredden:"

msgid ""
"This mechanism is not adaptable at all; commas are always used as the "
"separator and the grouping is always into three-digit groups.  The comma-"
"formatting mechanism isn't as general as the :mod:`locale` module, but it's "
"easier to use."
msgstr ""
"Denna mekanism är inte anpassningsbar alls; kommatecken används alltid som "
"avgränsare och grupperingen sker alltid i tresiffriga grupper.  Komma-"
"formateringsmekanismen är inte lika generell som :mod:`locale`-modulen, men "
"den är enklare att använda."

msgid ":pep:`378` - Format Specifier for Thousands Separator"
msgstr ":pep:`378` - Formatspecifikator för tusentalsavgränsare"

msgid "PEP written by Raymond Hettinger; implemented by Eric Smith."
msgstr "PEP skriven av Raymond Hettinger; implementerad av Eric Smith."

msgid "PEP 389: The argparse Module for Parsing Command Lines"
msgstr "PEP 389: Modulen argparse för parsning av kommandorader"

msgid ""
"The :mod:`argparse` module for parsing command-line arguments was added as a "
"more powerful replacement for the :mod:`optparse` module."
msgstr ""
"Modulen :mod:`argparse` för parsning av kommandoradsargument har lagts till "
"som en kraftfullare ersättning för modulen :mod:`optparse`."

msgid ""
"This means Python now supports three different modules for parsing command-"
"line arguments: :mod:`getopt`, :mod:`optparse`, and :mod:`argparse`.  The :"
"mod:`getopt` module closely resembles the C library's :c:func:`!getopt` "
"function, so it remains useful if you're writing a Python prototype that "
"will eventually be rewritten in C. :mod:`optparse` becomes redundant, but "
"there are no plans to remove it because there are many scripts still using "
"it, and there's no automated way to update these scripts.  (Making the :mod:"
"`argparse` API consistent with :mod:`optparse`'s interface was discussed but "
"rejected as too messy and difficult.)"
msgstr ""
"Detta innebär att Python nu stöder tre olika moduler för parsning av "
"kommandoradsargument: :mod:`getopt`, :mod:`optparse` och :mod:`argparse`.  "
"Modulen :mod:`getopt` liknar C-bibliotekets funktion :c:func:`!getopt`, så "
"den är fortfarande användbar om du skriver en Python-prototyp som så "
"småningom kommer att skrivas om i C. :mod:`optparse` blir överflödig, men "
"det finns inga planer på att ta bort den eftersom det finns många skript som "
"fortfarande använder den, och det finns inget automatiserat sätt att "
"uppdatera dessa skript.  (Att göra :mod:`argparse` API konsekvent med :mod:"
"`optparse`s gränssnitt diskuterades men förkastades som alltför rörigt och "
"svårt)"

msgid ""
"In short, if you're writing a new script and don't need to worry about "
"compatibility with earlier versions of Python, use :mod:`argparse` instead "
"of :mod:`optparse`."
msgstr ""
"Kort sagt, om du skriver ett nytt skript och inte behöver oroa dig för "
"kompatibilitet med tidigare versioner av Python, använd :mod:`argparse` "
"istället för :mod:`optparse`."

msgid "Here's an example::"
msgstr "Här är ett exempel::"

msgid ""
"import argparse\n"
"\n"
"parser = argparse.ArgumentParser(description='Command-line example.')\n"
"\n"
"# Add optional switches\n"
"parser.add_argument('-v', action='store_true', dest='is_verbose',\n"
"                    help='produce verbose output')\n"
"parser.add_argument('-o', action='store', dest='output',\n"
"                    metavar='FILE',\n"
"                    help='direct output to FILE instead of stdout')\n"
"parser.add_argument('-C', action='store', type=int, dest='context',\n"
"                    metavar='NUM', default=0,\n"
"                    help='display NUM lines of added context')\n"
"\n"
"# Allow any number of additional arguments.\n"
"parser.add_argument(nargs='*', action='store', dest='inputs',\n"
"                    help='input filenames (default is stdin)')\n"
"\n"
"args = parser.parse_args()\n"
"print args.__dict__"
msgstr ""
"import argparse\n"
"\n"
"parser = argparse.ArgumentParser(description='Command-line example.')\n"
"\n"
"# Add optional switches\n"
"parser.add_argument('-v', action='store_true', dest='is_verbose',\n"
"                    help='produce verbose output')\n"
"parser.add_argument('-o', action='store', dest='output',\n"
"                    metavar='FILE',\n"
"                    help='direct output to FILE instead of stdout')\n"
"parser.add_argument('-C', action='store', type=int, dest='context',\n"
"                    metavar='NUM', default=0,\n"
"                    help='display NUM lines of added context')\n"
"\n"
"# Allow any number of additional arguments.\n"
"parser.add_argument(nargs='*', action='store', dest='inputs',\n"
"                    help='input filenames (default is stdin)')\n"
"\n"
"args = parser.parse_args()\n"
"print args.__dict__"

msgid ""
"Unless you override it, :option:`!-h` and :option:`!--help` switches are "
"automatically added, and produce neatly formatted output::"
msgstr ""
"Om du inte åsidosätter det, läggs :option:`!-h` och :option:`!--help` "
"automatiskt till och ger snyggt formaterad utdata::"

msgid ""
"-> ./python.exe argparse-example.py --help\n"
"usage: argparse-example.py [-h] [-v] [-o FILE] [-C NUM] [inputs "
"[inputs ...]]\n"
"\n"
"Command-line example.\n"
"\n"
"positional arguments:\n"
"  inputs      input filenames (default is stdin)\n"
"\n"
"optional arguments:\n"
"  -h, --help  show this help message and exit\n"
"  -v          produce verbose output\n"
"  -o FILE     direct output to FILE instead of stdout\n"
"  -C NUM      display NUM lines of added context"
msgstr ""
"-> ./python.exe argparse-example.py --help\n"
"användning: argparse-example.py [-h] [-v] [-o FILE] [-C NUM] [inputs "
"[inputs ...]]\n"
"\n"
"Exempel på kommandorad.\n"
"\n"
"positionella argument:\n"
"  inputs inmatningsfilnamn (standard är stdin)\n"
"\n"
"valfria argument:\n"
"  -h, --help visa detta hjälpmeddelande och avsluta\n"
"  -v producerar verbal utdata\n"
"  -o FILE direkt utmatning till FILE istället för stdout\n"
"  -C NUM visa NUM rader med extra kontext"

msgid ""
"As with :mod:`optparse`, the command-line switches and arguments are "
"returned as an object with attributes named by the *dest* parameters::"
msgstr ""
"Precis som med :mod:`optparse` returneras kommandoradsväxlarna och "
"argumenten som ett objekt med attribut som namnges av *dest*-parametrarna::"

msgid ""
"-> ./python.exe argparse-example.py -v\n"
"{'output': None,\n"
" 'is_verbose': True,\n"
" 'context': 0,\n"
" 'inputs': []}\n"
"\n"
"-> ./python.exe argparse-example.py -v -o /tmp/output -C 4 file1 file2\n"
"{'output': '/tmp/output',\n"
" 'is_verbose': True,\n"
" 'context': 4,\n"
" 'inputs': ['file1', 'file2']}"
msgstr ""
"-> ./python.exe argparse-exempel.py -v\n"
"{\"utdata\": Ingen,\n"
" 'is_verbose': True,\n"
" 'context': 0,\n"
" 'inputs': []}\n"
"\n"
"-> ./python.exe argparse-example.py -v -o /tmp/output -C 4 fil1 fil2\n"
"{'output': '/tmp/output',\n"
" 'is_verbose': True,\n"
" 'context': 4,\n"
" 'inputs': ['file1', 'file2']}"

msgid ""
":mod:`argparse` has much fancier validation than :mod:`optparse`; you can "
"specify an exact number of arguments as an integer, 0 or more arguments by "
"passing ``'*'``, 1 or more by passing ``'+'``, or an optional argument with "
"``'?'``.  A top-level parser can contain sub-parsers to define subcommands "
"that have different sets of switches, as in ``svn commit``, ``svn "
"checkout``, etc.  You can specify an argument's type as :class:`~argparse."
"FileType`, which will automatically open files for you and understands that "
"``'-'`` means standard input or output."
msgstr ""
":mod:`argparse` har mycket finare validering än :mod:`optparse`; du kan ange "
"ett exakt antal argument som ett heltal, 0 eller fler argument genom att "
"skicka ``'*'``, 1 eller fler genom att skicka ``'+'``, eller ett valfritt "
"argument med ``'?'``.  En parser på högsta nivån kan innehålla underparsers "
"för att definiera underkommandon som har olika uppsättningar av switchar, "
"som i ```svn commit``, ``vn checkout``, etc.  Du kan ange ett arguments typ "
"som :class:`~argparse.FileType`, vilket automatiskt öppnar filer åt dig och "
"förstår att ``'-'`` betyder standardinmatning eller -utmatning."

msgid ":mod:`argparse` documentation"
msgstr ":mod:`argparse` dokumentation"

msgid "The documentation page of the argparse module."
msgstr "Dokumentationssidan för modulen argparse."

msgid ":ref:`upgrading-optparse-code`"
msgstr ":ref:`uppgradering-optparse-kod`"

msgid ""
"Part of the Python documentation, describing how to convert code that uses :"
"mod:`optparse`."
msgstr ""
"En del av Python-dokumentationen som beskriver hur man konverterar kod som "
"använder :mod:`optparse`."

msgid ":pep:`389` - argparse - New Command Line Parsing Module"
msgstr ":pep:`389` - argparse - Ny modul för parsning av kommandorader"

msgid "PEP written and implemented by Steven Bethard."
msgstr "PEP skrivet och implementerat av Steven Bethard."

msgid "PEP 391: Dictionary-Based Configuration For Logging"
msgstr "PEP 391: Ordboksbaserad konfiguration för loggning"

msgid ""
"The :mod:`logging` module is very flexible; applications can define a tree "
"of logging subsystems, and each logger in this tree can filter out certain "
"messages, format them differently, and direct messages to a varying number "
"of handlers."
msgstr ""
"Modulen :mod:`logging` är mycket flexibel; program kan definiera ett träd av "
"loggningssubsystem, och varje logger i detta träd kan filtrera bort vissa "
"meddelanden, formatera dem på olika sätt och skicka meddelanden till ett "
"varierande antal hanterare."

msgid ""
"All this flexibility can require a lot of configuration.  You can write "
"Python statements to create objects and set their properties, but a complex "
"set-up requires verbose but boring code. :mod:`logging` also supports a :"
"func:`~logging.config.fileConfig` function that parses a file, but the file "
"format doesn't support configuring filters, and it's messier to generate "
"programmatically."
msgstr ""
"All denna flexibilitet kan kräva en hel del konfiguration.  Du kan skriva "
"Python-satser för att skapa objekt och ställa in deras egenskaper, men en "
"komplex konfiguration kräver utförlig men tråkig kod. :mod:`logging` stöder "
"också en :func:`~logging.config.fileConfig`-funktion som analyserar en fil, "
"men filformatet stöder inte konfiguration av filter och det är rörigare att "
"generera programmatiskt."

msgid ""
"Python 2.7 adds a :func:`~logging.config.dictConfig` function that uses a "
"dictionary to configure logging.  There are many ways to produce a "
"dictionary from different sources: construct one with code; parse a file "
"containing JSON; or use a YAML parsing library if one is installed.  For "
"more information see :ref:`logging-config-api`."
msgstr ""
"Python 2.7 lägger till en :func:`~logging.config.dictConfig`-funktion som "
"använder en ordbok för att konfigurera loggning.  Det finns många sätt att "
"producera en ordbok från olika källor: konstruera en med kod; parsa en fil "
"som innehåller JSON; eller använd ett YAML-parsingbibliotek om ett sådant är "
"installerat.  För mer information se :ref:`logging-config-api`."

msgid ""
"The following example configures two loggers, the root logger and a logger "
"named \"network\".  Messages sent to the root logger will be sent to the "
"system log using the syslog protocol, and messages to the \"network\" logger "
"will be written to a :file:`network.log` file that will be rotated once the "
"log reaches 1MB."
msgstr ""
"I följande exempel konfigureras två loggar, rotloggaren och en logger med "
"namnet \"network\".  Meddelanden som skickas till rotloggaren skickas till "
"systemloggen med syslog-protokollet, och meddelanden till \"network\"-"
"loggaren skrivs till en :file:`network.log`-fil som roteras när loggen når 1 "
"MB."

msgid ""
"import logging\n"
"import logging.config\n"
"\n"
"configdict = {\n"
" 'version': 1,    # Configuration schema in use; must be 1 for now\n"
" 'formatters': {\n"
"     'standard': {\n"
"         'format': ('%(asctime)s %(name)-15s '\n"
"                    '%(levelname)-8s %(message)s')}},\n"
"\n"
" 'handlers': {'netlog': {'backupCount': 10,\n"
"                     'class': 'logging.handlers.RotatingFileHandler',\n"
"                     'filename': '/logs/network.log',\n"
"                     'formatter': 'standard',\n"
"                     'level': 'INFO',\n"
"                     'maxBytes': 1000000},\n"
"              'syslog': {'class': 'logging.handlers.SysLogHandler',\n"
"                         'formatter': 'standard',\n"
"                         'level': 'ERROR'}},\n"
"\n"
" # Specify all the subordinate loggers\n"
" 'loggers': {\n"
"             'network': {\n"
"                         'handlers': ['netlog']\n"
"             }\n"
" },\n"
" # Specify properties of the root logger\n"
" 'root': {\n"
"          'handlers': ['syslog']\n"
" },\n"
"}\n"
"\n"
"# Set up configuration\n"
"logging.config.dictConfig(configdict)\n"
"\n"
"# As an example, log two error messages\n"
"logger = logging.getLogger('/')\n"
"logger.error('Database not found')\n"
"\n"
"netlogger = logging.getLogger('network')\n"
"netlogger.error('Connection failed')"
msgstr ""
"import logging\n"
"import logging.config\n"
"\n"
"configdict = {\n"
" 'version': 1,    # Configuration schema in use; must be 1 for now\n"
" 'formatters': {\n"
"     'standard': {\n"
"         'format': ('%(asctime)s %(name)-15s '\n"
"                    '%(levelname)-8s %(message)s')}},\n"
"\n"
" 'handlers': {'netlog': {'backupCount': 10,\n"
"                     'class': 'logging.handlers.RotatingFileHandler',\n"
"                     'filename': '/logs/network.log',\n"
"                     'formatter': 'standard',\n"
"                     'level': 'INFO',\n"
"                     'maxBytes': 1000000},\n"
"              'syslog': {'class': 'logging.handlers.SysLogHandler',\n"
"                         'formatter': 'standard',\n"
"                         'level': 'ERROR'}},\n"
"\n"
" # Specify all the subordinate loggers\n"
" 'loggers': {\n"
"             'network': {\n"
"                         'handlers': ['netlog']\n"
"             }\n"
" },\n"
" # Specify properties of the root logger\n"
" 'root': {\n"
"          'handlers': ['syslog']\n"
" },\n"
"}\n"
"\n"
"# Set up configuration\n"
"logging.config.dictConfig(configdict)\n"
"\n"
"# As an example, log two error messages\n"
"logger = logging.getLogger('/')\n"
"logger.error('Database not found')\n"
"\n"
"netlogger = logging.getLogger('network')\n"
"netlogger.error('Connection failed')"

msgid ""
"Three smaller enhancements to the :mod:`logging` module, all implemented by "
"Vinay Sajip, are:"
msgstr ""
"Tre mindre förbättringar av modulen :mod:`logging`, alla implementerade av "
"Vinay Sajip, är:"

msgid ""
"The :class:`~logging.handlers.SysLogHandler` class now supports syslogging "
"over TCP.  The constructor has a *socktype* parameter giving the type of "
"socket to use, either :const:`socket.SOCK_DGRAM` for UDP or :const:`socket."
"SOCK_STREAM` for TCP.  The default protocol remains UDP."
msgstr ""
"Klassen :class:`~logging.handlers.SysLogHandler` har nu stöd för syslogging "
"över TCP.  Konstruktorn har en *socktype* parameter som anger vilken typ av "
"socket som ska användas, antingen :const:`socket.SOCK_DGRAM` för UDP eller :"
"const:`socket.SOCK_STREAM` för TCP.  Standardprotokollet är fortfarande UDP."

msgid ""
":class:`~logging.Logger` instances gained a :meth:`~logging.Logger.getChild` "
"method that retrieves a descendant logger using a relative path. For "
"example, once you retrieve a logger by doing ``log = getLogger('app')``, "
"calling ``log.getChild('network.listen')`` is equivalent to ``getLogger('app."
"network.listen')``."
msgstr ""
":class:`~logging.Logger`-instanser har fått en :meth:`~logging.Logger."
"getChild`-metod som hämtar en nedåtgående logger med hjälp av en relativ "
"sökväg. När du till exempel hämtar en logger genom att göra ``log = "
"getLogger('app')``, är anropet av ``log.getChild('network.listen')`` "
"likvärdigt med ``getLogger('app.network.listen')``."

msgid ""
"The :class:`~logging.LoggerAdapter` class gained an :meth:`~logging.Logger."
"isEnabledFor` method that takes a *level* and returns whether the underlying "
"logger would process a message of that level of importance."
msgstr ""
"Klassen :class:`~logging.LoggerAdapter` har fått en :meth:`~logging.Logger."
"isEnabledFor`-metod som tar en *nivå* och returnerar om den underliggande "
"loggern skulle behandla ett meddelande med denna nivå av betydelse."

msgid ":pep:`391` - Dictionary-Based Configuration For Logging"
msgstr ":pep:`391` - Ordboksbaserad konfiguration för loggning"

msgid "PEP written and implemented by Vinay Sajip."
msgstr "PEP skrivet och implementerat av Vinay Sajip."

msgid "PEP 3106: Dictionary Views"
msgstr "PEP 3106: Vyer i ordboken"

msgid ""
"The dictionary methods :meth:`~dict.keys`, :meth:`~dict.values`, and :meth:"
"`~dict.items` are different in Python 3.x.  They return an object called a :"
"dfn:`view` instead of a fully materialized list."
msgstr ""
"Dictionary-metoderna :meth:`~dict.keys`, :meth:`~dict.values` och :meth:"
"`~dict.items` är annorlunda i Python 3.x. De returnerar ett objekt som "
"kallas :dfn:`view` istället för en helt materialiserad lista."

msgid ""
"It's not possible to change the return values of :meth:`~dict.keys`, :meth:"
"`~dict.values`, and :meth:`~dict.items` in Python 2.7 because too much code "
"would break.  Instead the 3.x versions were added under the new names :meth:"
"`!viewkeys`, :meth:`!viewvalues`, and :meth:`!viewitems`."
msgstr ""
"Det är inte möjligt att ändra returvärdena för :meth:`~dict.keys`, :meth:"
"`~dict.values` och :meth:`~dict.items` i Python 2.7 eftersom för mycket kod "
"skulle brytas.  Istället lades 3.x versionerna till under de nya namnen :"
"meth:`!viewkeys`, :meth:`!viewvalues`, och :meth:`!viewitems`."

msgid ""
">>> d = dict((i*10, chr(65+i)) for i in range(26))\n"
">>> d\n"
"{0: 'A', 130: 'N', 10: 'B', 140: 'O', 20: ..., 250: 'Z'}\n"
">>> d.viewkeys()\n"
"dict_keys([0, 130, 10, 140, 20, 150, 30, ..., 250])"
msgstr ""
">>> d = dict((i*10, chr(65+i)) för i i intervall(26))\n"
">>> d\n"
"{0: 'A', 130: 'N', 10: 'B', 140: 'O', 20: ..., 250: 'Z'}\n"
">>> d.viewkeys()\n"
"dict_keys([0, 130, 10, 140, 20, 150, 30, ..., 250])"

msgid ""
"Views can be iterated over, but the key and item views also behave like "
"sets.  The ``&`` operator performs intersection, and ``|`` performs a union::"
msgstr ""
"Vyer kan itereras över, men nyckel- och objektvyerna fungerar också som "
"uppsättningar.  Operatorn ``&`` utför intersektion och ``|`` utför en union::"

msgid ""
">>> d1 = dict((i*10, chr(65+i)) for i in range(26))\n"
">>> d2 = dict((i**.5, i) for i in range(1000))\n"
">>> d1.viewkeys() & d2.viewkeys()\n"
"set([0.0, 10.0, 20.0, 30.0])\n"
">>> d1.viewkeys() | range(0, 30)\n"
"set([0, 1, 130, 3, 4, 5, 6, ..., 120, 250])"
msgstr ""
">>> d1 = dict((i*10, chr(65+i)) för i i intervallet(26))\n"
">>> d2 = dict((i**.5, i) for i in range(1000))\n"
">>> d1.viewkeys() & d2.viewkeys()\n"
"set([0,0, 10,0, 20,0, 30,0])\n"
">>> d1.viewkeys() | intervall(0, 30)\n"
"set([0, 1, 130, 3, 4, 5, 6, ..., 120, 250])"

msgid ""
"The view keeps track of the dictionary and its contents change as the "
"dictionary is modified::"
msgstr ""
"Vyn håller reda på ordlistan och dess innehåll ändras när ordlistan ändras::"

msgid ""
">>> vk = d.viewkeys()\n"
">>> vk\n"
"dict_keys([0, 130, 10, ..., 250])\n"
">>> d[260] = '&'\n"
">>> vk\n"
"dict_keys([0, 130, 260, 10, ..., 250])"
msgstr ""
">>> vk = d.viewkeys()\n"
">>> vk\n"
"dict_keys([0, 130, 10, ..., 250])\n"
">>> d[260] = '&'\n"
">>> vk\n"
"dict_keys([0, 130, 260, 10, ..., 250])"

msgid ""
"However, note that you can't add or remove keys while you're iterating over "
"the view::"
msgstr ""
"Observera dock att du inte kan lägga till eller ta bort nycklar medan du "
"itererar över view::"

msgid ""
">>> for k in vk:\n"
"...     d[k*2] = k\n"
"...\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"RuntimeError: dictionary changed size during iteration"
msgstr ""
"&gt;&gt;&gt; för k i vk:\n"
"... d[k*2] = k\n"
"...\n"
"Traceback (senaste anropet senast):\n"
"  Fil \"<stdin>\", rad 1, i <module>\n"
"RuntimeError: Ordboken ändrade storlek under iterationen"

msgid ""
"You can use the view methods in Python 2.x code, and the 2to3 converter will "
"change them to the standard :meth:`~dict.keys`, :meth:`~dict.values`, and :"
"meth:`~dict.items` methods."
msgstr ""
"Du kan använda view-metoderna i Python 2.x-kod, och 2to3-omvandlaren ändrar "
"dem till standardmetoderna :meth:`~dict.keys`, :meth:`~dict.values` och :"
"meth:`~dict.items`."

msgid ":pep:`3106` - Revamping dict.keys(), .values() and .items()"
msgstr ":pep:`3106` - Omarbetning av dict.keys(), .values() och .items()"

msgid ""
"PEP written by Guido van Rossum. Backported to 2.7 by Alexandre Vassalotti; :"
"issue:`1967`."
msgstr ""
"PEP skriven av Guido van Rossum. Baktransporterad till 2.7 av Alexandre "
"Vassalotti; :issue:`1967`."

msgid "PEP 3137: The memoryview Object"
msgstr "PEP 3137: Objektet minnesvy"

msgid ""
"The :class:`memoryview` object provides a view of another object's memory "
"content that matches the :class:`bytes` type's interface."
msgstr ""
"Objektet :class:`memoryview` ger en vy över ett annat objekts minnesinnehåll "
"som matchar gränssnittet för typen :class:`bytes`."

msgid ""
">>> import string\n"
">>> m = memoryview(string.letters)\n"
">>> m\n"
"<memory at 0x37f850>\n"
">>> len(m)           # Returns length of underlying object\n"
"52\n"
">>> m[0], m[25], m[26]   # Indexing returns one byte\n"
"('a', 'z', 'A')\n"
">>> m2 = m[0:26]         # Slicing returns another memoryview\n"
">>> m2\n"
"<memory at 0x37f080>"
msgstr ""
"&gt;&gt;&gt; import sträng\n"
"&gt;&gt;&gt; m = minnesvy(sträng.bokstäver)\n"
"&gt;&gt;&gt; m\n"
"<memory at 0x37f850>\n"
"&gt;&gt;&gt; len(m) # Returnerar längden på underliggande objekt\n"
"52\n"
"&gt;&gt;&gt; m[0], m[25], m[26] # Indexering returnerar en byte\n"
"('a', 'z', 'A')\n"
"&gt;&gt;&gt; m2 = m[0:26] # Slicing returnerar en annan minnesvy\n"
"&gt;&gt;&gt; m2\n"
"<memory at 0x37f080>"

msgid ""
"The content of the view can be converted to a string of bytes or a list of "
"integers:"
msgstr ""
"Innehållet i vyn kan konverteras till en sträng av bytes eller en lista av "
"heltal:"

msgid ""
">>> m2.tobytes()\n"
"'abcdefghijklmnopqrstuvwxyz'\n"
">>> m2.tolist()\n"
"[97, 98, 99, 100, 101, 102, 103, ... 121, 122]\n"
">>>"
msgstr ""
">>> m2.tobytes()\n"
"'abcdefghijklmnopqrstuvwxyz'\n"
">>> m2.tolist()\n"
"[97, 98, 99, 100, 101, 102, 103, ... 121, 122]\n"
">>>"

msgid ""
":class:`memoryview` objects allow modifying the underlying object if it's a "
"mutable object."
msgstr ""
":class:`memoryview`-objekt tillåter modifiering av det underliggande "
"objektet om det är ett föränderligt objekt."

msgid ""
">>> m2[0] = 75\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: cannot modify read-only memory\n"
">>> b = bytearray(string.letters)  # Creating a mutable object\n"
">>> b\n"
"bytearray(b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n"
">>> mb = memoryview(b)\n"
">>> mb[0] = '*'         # Assign to view, changing the bytearray.\n"
">>> b[0:5]              # The bytearray has been changed.\n"
"bytearray(b'*bcde')\n"
">>>"
msgstr ""
"&gt;&gt;&gt; m2[0] = 75\n"
"Traceback (senaste anropet senast):\n"
"  Fil \"<stdin>\", rad 1, i <module>\n"
"TypeError: kan inte modifiera skrivskyddat minne\n"
"&gt;&gt;&gt; b = bytearray(sträng.bokstäver) # Skapa ett muterbart objekt\n"
"&gt;&gt;&gt; b\n"
"bytearray(b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n"
"&gt;&gt;&gt; mb = minnesvy(b)\n"
"&gt;&gt;&gt; mb[0] = '*' # Tilldela till vy, ändra bytearray.\n"
"&gt;&gt;&gt; b[0:5] # Bytearrayen har ändrats.\n"
"bytearray(b'*bcde')\n"
"&gt;&gt;&gt"

msgid ":pep:`3137` - Immutable Bytes and Mutable Buffer"
msgstr ":pep:`3137` - Oföränderliga byte och föränderlig buffert"

msgid ""
"PEP written by Guido van Rossum. Implemented by Travis Oliphant, Antoine "
"Pitrou and others. Backported to 2.7 by Antoine Pitrou; :issue:`2396`."
msgstr ""
"PEP skriven av Guido van Rossum. Implementerad av Travis Oliphant, Antoine "
"Pitrou och andra. Backporterad till 2.7 av Antoine Pitrou; :issue:`2396`."

msgid "Other Language Changes"
msgstr "Andra språkliga förändringar"

msgid "Some smaller changes made to the core Python language are:"
msgstr "Några mindre ändringar som gjorts i Python-språkets kärna är:"

msgid ""
"The syntax for set literals has been backported from Python 3.x. Curly "
"brackets are used to surround the contents of the resulting mutable set; set "
"literals are distinguished from dictionaries by not containing colons and "
"values. ``{}`` continues to represent an empty dictionary; use ``set()`` for "
"an empty set."
msgstr ""
"Syntaxen för set-litteraler har backporterats från Python 3.x. Curly "
"brackets används för att omge innehållet i den resulterande mutabla "
"uppsättningen; set-litteraler skiljer sig från ordböcker genom att inte "
"innehålla kolon och värden. ``{}`` fortsätter att representera en tom "
"ordbok; använd ``set()`` för en tom uppsättning."

msgid ""
">>> {1, 2, 3, 4, 5}\n"
"set([1, 2, 3, 4, 5])\n"
">>> set() # empty set\n"
"set([])\n"
">>> {}    # empty dict\n"
"{}"
msgstr ""
">>> {1, 2, 3, 4, 5}\n"
"set([1, 2, 3, 4, 5])\n"
">>> set() # tom uppsättning\n"
"set([])\n"
">>> {} # tom dikt\n"
"{}"

msgid "Backported by Alexandre Vassalotti; :issue:`2335`."
msgstr "Återinförd av Alexandre Vassalotti; :issue:`2335`."

msgid ""
"Dictionary and set comprehensions are another feature backported from 3.x, "
"generalizing list/generator comprehensions to use the literal syntax for "
"sets and dictionaries."
msgstr ""
"Dictionary and set comprehensions är en annan funktion som är bakåtporterad "
"från 3.x och generaliserar list/generator comprehensions till att använda "
"den bokstavliga syntaxen för sets och dictionaries."

msgid ""
">>> {x: x*x for x in range(6)}\n"
"{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25}\n"
">>> {('a'*x) for x in range(6)}\n"
"set(['', 'a', 'aa', 'aaa', 'aaaa', 'aaaaa'])"
msgstr ""
">>> {x: x*x för x i intervall(6)}\n"
"{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25}\n"
">>> {('a'*x) för x i intervall(6)}\n"
"set(['', 'a', 'aa', 'aaa', 'aaaa', 'aaaaa'])"

msgid "Backported by Alexandre Vassalotti; :issue:`2333`."
msgstr "Återinförd av Alexandre Vassalotti; :issue:`2333`."

msgid ""
"The :keyword:`with` statement can now use multiple context managers in one "
"statement.  Context managers are processed from left to right and each one "
"is treated as beginning a new :keyword:`!with` statement. This means that::"
msgstr ""
"Satsen :keyword:`with` kan nu använda flera kontexthanterare i en och samma "
"sats.  Kontexthanterare bearbetas från vänster till höger och var och en "
"behandlas som början på en ny :keyword:`!with`-sats. Detta innebär att::"

msgid ""
"with A() as a, B() as b:\n"
"    ... suite of statements ..."
msgstr ""
"med A() som a, B() som b:\n"
"    ... svit av uttalanden ..."

msgid "is equivalent to::"
msgstr "är likvärdig med::"

msgid ""
"with A() as a:\n"
"    with B() as b:\n"
"        ... suite of statements ..."
msgstr ""
"med A() som a:\n"
"    med B() som b:\n"
"        ... svit av uttalanden ..."

msgid ""
"The :func:`!contextlib.nested` function provides a very similar function, so "
"it's no longer necessary and has been deprecated."
msgstr ""
"Funktionen :func:`!contextlib.nested` ger en mycket liknande funktion, så "
"den är inte längre nödvändig och har utgått."

msgid ""
"(Proposed in https://codereview.appspot.com/53094; implemented by Georg "
"Brandl.)"
msgstr ""
"(Föreslaget i https://codereview.appspot.com/53094; implementerat av Georg "
"Brandl.)"

msgid ""
"Conversions between floating-point numbers and strings are now correctly "
"rounded on most platforms.  These conversions occur in many different "
"places: :func:`str` on floats and complex numbers; the :class:`float` and :"
"class:`complex` constructors; numeric formatting; serializing and "
"deserializing floats and complex numbers using the :mod:`marshal`, :mod:"
"`pickle` and :mod:`json` modules; parsing of float and imaginary literals in "
"Python code; and :class:`~decimal.Decimal`-to-float conversion."
msgstr ""
"Konverteringar mellan flyttal och strängar avrundas nu korrekt på de flesta "
"plattformar.  Dessa konverteringar sker på många olika ställen: :func:`str` "
"på flyttal och komplexa tal; konstruktörerna :class:`float` och :class:"
"`complex`; numerisk formatering; serialisering och deserialisering av "
"flyttal och komplexa tal med hjälp av modulerna :mod:`marshal`, :mod:"
"`pickle` och :mod:`json`; parsning av flyttals- och imaginärlitteraler i "
"Python-kod; och :class:`~decimal.Decimal`-till-float-konvertering."

msgid ""
"Related to this, the :func:`repr` of a floating-point number *x* now returns "
"a result based on the shortest decimal string that's guaranteed to round "
"back to *x* under correct rounding (with round-half-to-even rounding mode).  "
"Previously it gave a string based on rounding x to 17 decimal digits."
msgstr ""
"Relaterat till detta returnerar :func:`repr` av ett flyttal *x* nu ett "
"resultat baserat på den kortaste decimalsträngen som garanterat avrundas "
"tillbaka till *x* med korrekt avrundning (med avrundningsläge halv till "
"jämn).  Tidigare gav den en sträng baserad på avrundning av x till 17 "
"decimaler."

msgid ""
"The rounding library responsible for this improvement works on Windows and "
"on Unix platforms using the gcc, icc, or suncc compilers.  There may be a "
"small number of platforms where correct operation of this code cannot be "
"guaranteed, so the code is not used on such systems.  You can find out which "
"code is being used by checking :data:`sys.float_repr_style`,  which will be "
"``short`` if the new code is in use and ``legacy`` if it isn't."
msgstr ""
"Avrundningsbiblioteket som är ansvarigt för denna förbättring fungerar på "
"Windows- och Unix-plattformar som använder kompilatorerna gcc, icc eller "
"suncc.  Det kan finnas ett litet antal plattformar där korrekt funktion av "
"denna kod inte kan garanteras, så koden används inte på sådana system.  Du "
"kan ta reda på vilken kod som används genom att kontrollera :data:`sys."
"float_repr_style`, som kommer att vara ``short`` om den nya koden används "
"och ``legacy`` om den inte gör det."

msgid ""
"Implemented by Eric Smith and Mark Dickinson, using David Gay's :file:`dtoa."
"c` library; :issue:`7117`."
msgstr ""
"Implementerad av Eric Smith och Mark Dickinson, med hjälp av David Gays :"
"file:`dtoa.c`-bibliotek; :issue:`7117`."

msgid ""
"Conversions from long integers and regular integers to floating point now "
"round differently, returning the floating-point number closest to the "
"number.  This doesn't matter for small integers that can be converted "
"exactly, but for large numbers that will unavoidably lose precision, Python "
"2.7 now approximates more closely.  For example, Python 2.6 computed the "
"following::"
msgstr ""
"Konverteringar från långa heltal och vanliga heltal till flyttal avrundas nu "
"annorlunda och returnerar det flyttalstal som ligger närmast talet.  Detta "
"spelar ingen roll för små heltal som kan konverteras exakt, men för stora "
"tal som oundvikligen kommer att förlora precision, approximerar Python 2.7 "
"nu närmare.  Till exempel beräknade Python 2.6 följande::"

msgid ""
">>> n = 295147905179352891391\n"
">>> float(n)\n"
"2.9514790517935283e+20\n"
">>> n - long(float(n))\n"
"65535L"
msgstr ""
">>> n = 295147905179352891391\n"
">>> float(n)\n"
"2.9514790517935283e+20\n"
">>> n - long(float(n))\n"
"65535L"

msgid ""
"Python 2.7's floating-point result is larger, but much closer to the true "
"value::"
msgstr ""
"Python 2.7:s flyttalsresultat är större, men mycket närmare det sanna "
"värdet::"

msgid ""
">>> n = 295147905179352891391\n"
">>> float(n)\n"
"2.9514790517935289e+20\n"
">>> n - long(float(n))\n"
"-1L"
msgstr ""
">>> n = 295147905179352891391\n"
">>> float(n)\n"
"2.9514790517935289e+20\n"
">>> n - long(float(n))\n"
"-1L"

msgid "(Implemented by Mark Dickinson; :issue:`3166`.)"
msgstr "(Implementerad av Mark Dickinson; :issue:`3166`.)"

msgid ""
"Integer division is also more accurate in its rounding behaviours.  (Also "
"implemented by Mark Dickinson; :issue:`1811`.)"
msgstr ""
"Integer division är också mer exakt i sina avrundningsbeteenden.  (Även "
"implementerat av Mark Dickinson; :issue:`1811`.)"

msgid ""
"Implicit coercion for complex numbers has been removed; the interpreter will "
"no longer ever attempt to call a :meth:`!__coerce__` method on complex "
"objects.  (Removed by Meador Inge and Mark Dickinson; :issue:`5211`.)"
msgstr ""
"Implicit coercion för komplexa tal har tagits bort; tolken kommer inte "
"längre att försöka anropa en :meth:`!__coerce__`-metod på komplexa objekt.  "
"(Borttagen av Meador Inge och Mark Dickinson; :issue:`5211`.)"

msgid ""
"The :meth:`str.format` method now supports automatic numbering of the "
"replacement fields.  This makes using :meth:`str.format` more closely "
"resemble using ``%s`` formatting::"
msgstr ""
"Metoden :meth:`str.format` har nu stöd för automatisk numrering av "
"ersättningsfälten.  Detta gör att användning av :meth:`str.format` mer "
"liknar användning av ``%s`` formatering::"

msgid ""
">>> '{}:{}:{}'.format(2009, 04, 'Sunday')\n"
"'2009:4:Sunday'\n"
">>> '{}:{}:{day}'.format(2009, 4, day='Sunday')\n"
"'2009:4:Sunday'"
msgstr ""
">>> '{}:{}:{}'.format(2009, 04, 'Söndag')\n"
"'2009:4:Söndag'\n"
">>> '{}:{}:{day}'.format(2009, 4, day='Sunday')\n"
"'2009:4:Söndag'"

msgid ""
"The auto-numbering takes the fields from left to right, so the first ``{...}"
"`` specifier will use the first argument to :meth:`str.format`, the next "
"specifier will use the next argument, and so on.  You can't mix auto-"
"numbering and explicit numbering -- either number all of your specifier "
"fields or none of them -- but you can mix auto-numbering and named fields, "
"as in the second example above.  (Contributed by Eric Smith; :issue:`5237`.)"
msgstr ""
"Den automatiska numreringen tar fälten från vänster till höger, så den "
"första ``{...}``-angivaren kommer att använda det första argumentet till :"
"meth:`str.format`, nästa angivare kommer att använda nästa argument, och så "
"vidare.  Du kan inte blanda automatisk numrering och explicit numrering -- "
"antingen numrerar du alla dina specificeringsfält eller inga alls -- men du "
"kan blanda automatisk numrering och namngivna fält, som i det andra exemplet "
"ovan.  (Bidrag från Eric Smith; :issue:`5237`.)"

msgid ""
"Complex numbers now correctly support usage with :func:`format`, and default "
"to being right-aligned. Specifying a precision or comma-separation applies "
"to both the real and imaginary parts of the number, but a specified field "
"width and alignment is applied to the whole of the resulting ``1.5+3j`` "
"output.  (Contributed by Eric Smith; :issue:`1588` and :issue:`7988`.)"
msgstr ""
"Komplexa tal stöder nu korrekt användning med :func:`format` och är som "
"standard högerjusterade. Att ange en precision eller kommaseparering gäller "
"både den reella och imaginära delen av talet, men en angiven fältbredd och "
"justering tillämpas på hela den resulterande ``1,5+3j``-utmatningen.  "
"(Bidrag från Eric Smith; :issue:`1588` och :issue:`7988`.)"

msgid ""
"The 'F' format code now always formats its output using uppercase "
"characters, so it will now produce 'INF' and 'NAN'. (Contributed by Eric "
"Smith; :issue:`3382`.)"
msgstr ""
"Formatkoden 'F' formaterar nu alltid sin utdata med versaler, så den kommer "
"nu att producera 'INF' och 'NAN'. (Bidrag från Eric Smith; :issue:`3382`.)"

msgid ""
"A low-level change: the :meth:`object.__format__` method now triggers a :exc:"
"`PendingDeprecationWarning` if it's passed a format string, because the :"
"meth:`!__format__` method for :class:`object` converts the object to a "
"string representation and formats that.  Previously the method silently "
"applied the format string to the string representation, but that could hide "
"mistakes in Python code.  If you're supplying formatting information such as "
"an alignment or precision, presumably you're expecting the formatting to be "
"applied in some object-specific way.  (Fixed by Eric Smith; :issue:`7994`.)"
msgstr ""
"En förändring på låg nivå: metoden :meth:`object.__format__` utlöser nu en :"
"exc:`PendingDeprecationWarning` om den får en formatsträng, eftersom "
"metoden :meth:`!__format__` för :class:`object` konverterar objektet till en "
"strängrepresentation och formaterar den.  Tidigare tillämpade metoden "
"formatsträngen tyst på strängrepresentationen, men det kunde dölja misstag i "
"Python-koden.  Om du tillhandahåller formateringsinformation som en "
"inriktning eller precision, förväntar du dig förmodligen att formateringen "
"ska tillämpas på något objektspecifikt sätt.  (Rättad av Eric Smith; :issue:"
"`7994`.)"

msgid ""
"The :func:`int` and :func:`!long` types gained a ``bit_length`` method that "
"returns the number of bits necessary to represent its argument in binary::"
msgstr ""
"Typerna :func:`int` och :func:`!long` har fått en metod ``bit_length`` som "
"returnerar det antal bitar som krävs för att representera argumentet i "
"binärformat:"

msgid ""
">>> n = 37\n"
">>> bin(n)\n"
"'0b100101'\n"
">>> n.bit_length()\n"
"6\n"
">>> n = 2**123-1\n"
">>> n.bit_length()\n"
"123\n"
">>> (n+1).bit_length()\n"
"124"
msgstr ""
">>> n = 37\n"
">>> bin(n)\n"
"'0b100101'\n"
">>> n.bit_längd()\n"
"6\n"
">>> n = 2**123-1\n"
">>> n.bit_längd()\n"
"123\n"
">>> (n+1).bit_längd()\n"
"124"

msgid "(Contributed by Fredrik Johansson and Victor Stinner; :issue:`3439`.)"
msgstr "(Bidrag från Fredrik Johansson och Victor Stinner; :issue:`3439`.)"

msgid ""
"The :keyword:`import` statement will no longer try an absolute import if a "
"relative import (e.g. ``from .os import sep``) fails.  This fixes a bug, but "
"could possibly break certain :keyword:`!import` statements that were only "
"working by accident.  (Fixed by Meador Inge; :issue:`7902`.)"
msgstr ""
"Satsen :keyword:`import` kommer inte längre att försöka med en absolut "
"import om en relativ import (t.ex. ``from .os import sep``) misslyckas.  "
"Detta åtgärdar en bugg, men kan eventuellt bryta vissa :keyword:`!import`-"
"satser som bara fungerade av misstag.  (Åtgärdat av Meador Inge; :issue:"
"`7902`.)"

msgid ""
"It's now possible for a subclass of the built-in :class:`!unicode` type to "
"override the :meth:`!__unicode__` method.  (Implemented by Victor Stinner; :"
"issue:`1583863`.)"
msgstr ""
"Det är nu möjligt för en underklass av den inbyggda typen :class:`!unicode` "
"att åsidosätta metoden :meth:`!__unicode__`.  (Implementerat av Victor "
"Stinner; :issue:`1583863`.)"

msgid ""
"The :class:`bytearray` type's :meth:`~bytearray.translate` method now "
"accepts ``None`` as its first argument.  (Fixed by Georg Brandl; :issue:"
"`4759`.)"
msgstr ""
"Metoden :meth:`~bytearray.translate` av typen :class:`bytearray` accepterar "
"nu ``None`` som sitt första argument.  (Rättad av Georg Brandl; :issue:"
"`4759`.)"

msgid ""
"When using :class:`@classmethod <classmethod>` and :class:`@staticmethod "
"<staticmethod>` to wrap methods as class or static methods, the wrapper "
"object now exposes the wrapped function as their :attr:`~method.__func__` "
"attribute. (Contributed by Amaury Forgeot d'Arc, after a suggestion by "
"George Sakkis; :issue:`5982`.)"
msgstr ""
"När man använder :class:`@classmethod <classmethod>` och :class:"
"`@staticmethod <staticmethod>` för att omsluta metoder som klass- eller "
"statiska metoder, visar omslutningsobjektet nu den omslutna funktionen som "
"sitt :attr:`~method.__func__`-attribut. (Bidrag från Amaury Forgeot d'Arc, "
"efter ett förslag från George Sakkis; :issue:`5982`.)"

msgid ""
"When a restricted set of attributes were set using ``__slots__``, deleting "
"an unset attribute would not raise :exc:`AttributeError` as you would "
"expect.  Fixed by Benjamin Peterson; :issue:`7604`.)"
msgstr ""
"När en begränsad uppsättning attribut ställdes in med hjälp av "
"``__slots__``, skulle borttagning av ett icke-inställt attribut inte ge "
"upphov till :exc:`AttributeError` som förväntat.  Fixad av Benjamin "
"Peterson; :issue:`7604`.)"

msgid ""
"Two new encodings are now supported: \"cp720\", used primarily for Arabic "
"text; and \"cp858\", a variant of CP 850 that adds the euro symbol.  (CP720 "
"contributed by Alexander Belchenko and Amaury Forgeot d'Arc in :issue:"
"`1616979`; CP858 contributed by Tim Hatch in :issue:`8016`.)"
msgstr ""
"Två nya kodningar stöds nu: \"cp720\", som främst används för arabisk text; "
"och \"cp858\", en variant av CP 850 som lägger till eurosymbolen.  (CP720 "
"med bidrag från Alexander Belchenko och Amaury Forgeot d'Arc i :issue:"
"`1616979`; CP858 med bidrag från Tim Hatch i :issue:`8016`.)"

msgid ""
"The :class:`!file` object will now set the :attr:`!filename` attribute on "
"the :exc:`IOError` exception when trying to open a directory on POSIX "
"platforms (noted by Jan Kaliszewski; :issue:`4764`), and now explicitly "
"checks for and forbids writing to read-only file objects instead of trusting "
"the C library to catch and report the error (fixed by Stefan Krah; :issue:"
"`5677`)."
msgstr ""
"Objektet :class:`!file` kommer nu att sätta attributet :attr:`!filename` på "
"undantaget :exc:`IOError` när man försöker öppna en katalog på POSIX-"
"plattformar (noterat av Jan Kaliszewski; :issue:`4764`), och kontrollerar nu "
"explicit för och förbjuder skrivning till skrivskyddade filobjekt istället "
"för att lita på att C-biblioteket fångar upp och rapporterar felet (åtgärdat "
"av Stefan Krah; :issue:`5677`)."

msgid ""
"The Python tokenizer now translates line endings itself, so the :func:"
"`compile` built-in function now accepts code using any line-ending "
"convention.  Additionally, it no longer requires that the code end in a "
"newline."
msgstr ""
"Pythons tokenizer översätter nu radavslut själv, så den inbyggda funktionen :"
"func:`compile` accepterar nu kod som använder vilken radavslutskonvention "
"som helst.  Dessutom kräver den inte längre att koden slutar med en ny rad."

msgid ""
"Extra parentheses in function definitions are illegal in Python 3.x, meaning "
"that you get a syntax error from ``def f((x)): pass``.  In Python3-warning "
"mode, Python 2.7 will now warn about this odd usage. (Noted by James "
"Lingard; :issue:`7362`.)"
msgstr ""
"Extra parenteser i funktionsdefinitioner är olagliga i Python 3.x, vilket "
"innebär att du får ett syntaxfel från ``def f((x)): pass``.  I Python3-"
"varningsläge kommer Python 2.7 nu att varna för denna udda användning. "
"(Noterat av James Lingard; :issue:`7362`.)"

msgid ""
"It's now possible to create weak references to old-style class objects.  New-"
"style classes were always weak-referenceable.  (Fixed by Antoine Pitrou; :"
"issue:`8268`.)"
msgstr ""
"Det är nu möjligt att skapa svaga referenser till gamla klassobjekt.  "
"Klasser i ny stil var alltid svaga referenser.  (Rättad av Antoine Pitrou; :"
"issue:`8268`.)"

msgid ""
"When a module object is garbage-collected, the module's dictionary is now "
"only cleared if no one else is holding a reference to the dictionary (:issue:"
"`7140`)."
msgstr ""
"När ett modulobjekt samlas in i skräp rensas modulens ordbok nu bara om "
"ingen annan har en referens till ordboken (:issue:`7140`)."

msgid "Interpreter Changes"
msgstr "Förändringar av tolk"

msgid ""
"A new environment variable, :envvar:`PYTHONWARNINGS`, allows controlling "
"warnings.  It should be set to a string containing warning settings, "
"equivalent to those used with the :option:`-W` switch, separated by commas. "
"(Contributed by Brian Curtin; :issue:`7301`.)"
msgstr ""
"En ny miljövariabel, :envvar:`PYTHONWARNINGS`, gör det möjligt att "
"kontrollera varningar.  Den bör sättas till en sträng som innehåller "
"varningsinställningar, motsvarande de som används med :option:`-W`, åtskilda "
"med kommatecken. (Bidrag från Brian Curtin; :issue:`7301`.)"

msgid ""
"For example, the following setting will print warnings every time they "
"occur, but turn warnings from the :mod:`Cookie <http.cookies>` module into "
"an error.  (The exact syntax for setting an environment variable varies "
"across operating systems and shells.)"
msgstr ""
"Exempelvis kommer följande inställning att skriva ut varningar varje gång de "
"inträffar, men omvandla varningar från modulen :mod:`Cookie <http.cookies>` "
"till ett fel.  (Den exakta syntaxen för att ställa in en miljövariabel "
"varierar mellan olika operativsystem och skal)"

msgid "export PYTHONWARNINGS=all,error:::Cookie:0"
msgstr "export PYTHONWARNINGS=all,error:::Cookie:0"

msgid "Optimizations"
msgstr "Optimeringar"

msgid "Several performance enhancements have been added:"
msgstr "Flera prestandaförbättringar har lagts till:"

msgid ""
"A new opcode was added to perform the initial setup for :keyword:`with` "
"statements, looking up the :meth:`~object.__enter__` and :meth:`~object."
"__exit__` methods.  (Contributed by Benjamin Peterson.)"
msgstr ""
"En ny opcode lades till för att utföra den inledande konfigurationen för :"
"keyword:`with`-satser, genom att leta upp metoderna :meth:`~object."
"__enter__` och :meth:`~object.__exit__`.  (Bidrag från Benjamin Peterson.)"

msgid ""
"The garbage collector now performs better for one common usage pattern: when "
"many objects are being allocated without deallocating any of them.  This "
"would previously take quadratic time for garbage collection, but now the "
"number of full garbage collections is reduced as the number of objects on "
"the heap grows. The new logic only performs a full garbage collection pass "
"when the middle generation has been collected 10 times and when the number "
"of survivor objects from the middle generation exceeds 10% of the number of "
"objects in the oldest generation.  (Suggested by Martin von Löwis and "
"implemented by Antoine Pitrou; :issue:`4074`.)"
msgstr ""
"Skräpinsamlaren fungerar nu bättre för ett vanligt användningsmönster: när "
"många objekt allokeras utan att något av dem avallokeras.  Detta skulle "
"tidigare ta kvadratisk tid för skräpinsamlingen, men nu minskar antalet "
"fullständiga skräpinsamlingar i takt med att antalet objekt på heapen växer. "
"Den nya logiken utför endast en fullständig skräpinsamling när den mellersta "
"generationen har samlats in 10 gånger och när antalet överlevande objekt "
"från den mellersta generationen överstiger 10% of antalet objekt i den "
"äldsta generationen.  (Föreslagen av Martin von Löwis och implementerad av "
"Antoine Pitrou; :issue:`4074`.)"

msgid ""
"The garbage collector tries to avoid tracking simple containers which can't "
"be part of a cycle. In Python 2.7, this is now true for tuples and dicts "
"containing atomic types (such as ints, strings, etc.). Transitively, a dict "
"containing tuples of atomic types won't be tracked either. This helps reduce "
"the cost of each garbage collection by decreasing the number of objects to "
"be considered and traversed by the collector. (Contributed by Antoine "
"Pitrou; :issue:`4688`.)"
msgstr ""
"Garbage collector försöker undvika att spåra enkla behållare som inte kan "
"vara en del av en cykel. I Python 2.7 är detta nu sant för tuples och dicts "
"som innehåller atomära typer (som ints, strängar etc.). Övergångsvis kommer "
"en dikt som innehåller tupler av atomära typer inte heller att spåras. Detta "
"bidrar till att minska kostnaden för varje skräpplockning genom att minska "
"antalet objekt som ska beaktas och genomkorsas av skräpplockaren. (Bidrag "
"från Antoine Pitrou; :issue:`4688`.)"

msgid ""
"Long integers are now stored internally either in base ``2**15`` or in base "
"``2**30``, the base being determined at build time.  Previously, they were "
"always stored in base ``2**15``.  Using base ``2**30`` gives significant "
"performance improvements on 64-bit machines, but benchmark results on 32-bit "
"machines have been mixed.  Therefore, the default is to use base ``2**30`` "
"on 64-bit machines and base ``2**15`` on 32-bit machines; on Unix, there's a "
"new configure option :option:`!--enable-big-digits` that can be used to "
"override this default."
msgstr ""
"Långa heltal lagras nu internt antingen i basen ``2**15`` eller i basen "
"``2**30``, basen bestäms vid byggtiden.  Tidigare lagrades de alltid i bas "
"``2**15``.  Att använda bas ``2**30`` ger betydande prestandaförbättringar "
"på 64-bitars maskiner, men benchmarkresultaten på 32-bitars maskiner har "
"varit blandade.  Därför är standardinställningen att använda bas ``2**30`` "
"på 64-bitars maskiner och bas ``2**15`` på 32-bitars maskiner; på Unix finns "
"det ett nytt konfigurationsalternativ :option:`!--enable-big-digits` som kan "
"användas för att åsidosätta denna standardinställning."

msgid ""
"Apart from the performance improvements this change should be invisible to "
"end users, with one exception: for testing and debugging purposes there's a "
"new structseq :data:`!sys.long_info` that provides information about the "
"internal format, giving the number of bits per digit and the size in bytes "
"of the C type used to store each digit::"
msgstr ""
"Bortsett från prestandaförbättringarna bör denna förändring vara osynlig för "
"slutanvändarna, med ett undantag: för test- och felsökningsändamål finns det "
"en ny structseq :data:`!sys.long_info` som ger information om det interna "
"formatet, med antalet bitar per siffra och storleken i byte på den C-typ som "
"används för att lagra varje siffra::"

msgid ""
">>> import sys\n"
">>> sys.long_info\n"
"sys.long_info(bits_per_digit=30, sizeof_digit=4)"
msgstr ""
">>> import sys\n"
">>> sys.long_info\n"
"sys.long_info(bits_per_digit=30, sizeof_digit=4)"

msgid "(Contributed by Mark Dickinson; :issue:`4258`.)"
msgstr "(Bidrag från Mark Dickinson; :issue:`4258`.)"

msgid ""
"Another set of changes made long objects a few bytes smaller: 2 bytes "
"smaller on 32-bit systems and 6 bytes on 64-bit. (Contributed by Mark "
"Dickinson; :issue:`5260`.)"
msgstr ""
"En annan uppsättning ändringar gjorde långa objekt några byte mindre: 2 byte "
"mindre på 32-bitars system och 6 byte på 64-bitars. (Bidrag från Mark "
"Dickinson; :issue:`5260`.)"

msgid ""
"The division algorithm for long integers has been made faster by tightening "
"the inner loop, doing shifts instead of multiplications, and fixing an "
"unnecessary extra iteration. Various benchmarks show speedups of between 50% "
"and 150% for long integer divisions and modulo operations. (Contributed by "
"Mark Dickinson; :issue:`5512`.) Bitwise operations are also significantly "
"faster (initial patch by Gregory Smith; :issue:`1087418`)."
msgstr ""
"Divisionsalgoritmen för långa heltal har gjorts snabbare genom att strama åt "
"den inre slingan, göra skiftningar istället för multiplikationer och fixa en "
"onödig extra iteration. Olika riktmärken visar hastighetsökningar på mellan "
"50% a och 150% f eller divisioner av långa heltal och modulooperationer. "
"(Bidrag från Mark Dickinson; :issue:`5512`.) Bitvisa operationer är också "
"betydligt snabbare (initial patch av Gregory Smith; :issue:`1087418`)."

msgid ""
"The implementation of ``%`` checks for the left-side operand being a Python "
"string and special-cases it; this results in a 1--3% performance increase "
"for applications that frequently use ``%`` with strings, such as templating "
"libraries. (Implemented by Collin Winter; :issue:`5176`.)"
msgstr ""
"Implementationen av ``%`` kontrollerar att vänsteroperanden är en Python-"
"sträng och specialanpassar den; detta resulterar i en 1--3% "
"perprestandaökning för program som ofta använder ``%`` med strängar, till "
"exempel mallbibliotek. (Implementerat av Collin Winter; :issue:`5176`.)"

msgid ""
"List comprehensions with an ``if`` condition are compiled into faster "
"bytecode.  (Patch by Antoine Pitrou, back-ported to 2.7 by Jeffrey Yasskin; :"
"issue:`4715`.)"
msgstr ""
"Listförståelser med ett ``if`` villkor kompileras till snabbare bytekod.  "
"(Patch av Antoine Pitrou, back-porterad till 2.7 av Jeffrey Yasskin; :issue:"
"`4715`.)"

msgid ""
"Converting an integer or long integer to a decimal string was made faster by "
"special-casing base 10 instead of using a generalized conversion function "
"that supports arbitrary bases. (Patch by Gawain Bolton; :issue:`6713`.)"
msgstr ""
"Konvertering av ett heltal eller långt heltal till en decimalsträng gjordes "
"snabbare genom att specialisera bas 10 istället för att använda en "
"generaliserad konverteringsfunktion som stöder godtyckliga baser. (Patch av "
"Gawain Bolton; :issue:`6713`.)"

msgid ""
"The :meth:`!split`, :meth:`!replace`, :meth:`!rindex`, :meth:`!rpartition`, "
"and :meth:`!rsplit` methods of string-like types (strings, Unicode strings, "
"and :class:`bytearray` objects) now use a fast reverse-search algorithm "
"instead of a character-by-character scan.  This is sometimes faster by a "
"factor of 10.  (Added by Florent Xicluna; :issue:`7462` and :issue:`7622`.)"
msgstr ""
"Metoderna :meth:`!split`, :meth:`!replace`, :meth:`!rindex`, :meth:`!"
"rpartition` och :meth:`!rsplit` för strängliknande typer (strängar, Unicode-"
"strängar och :class:`bytearray`-objekt) använder nu en snabb omvänd "
"sökalgoritm istället för en tecken-för-tecken-sökning.  Detta är ibland "
"snabbare med en faktor 10.  (Tillagd av Florent Xicluna; :issue:`7462` och :"
"issue:`7622`.)"

msgid ""
"The :mod:`pickle` and :mod:`!cPickle` modules now automatically intern the "
"strings used for attribute names, reducing memory usage of the objects "
"resulting from unpickling.  (Contributed by Jake McGuire; :issue:`5084`.)"
msgstr ""
"Modulerna :mod:`pickle` och :mod:`!cPickle` internaliserar nu automatiskt "
"strängarna som används för attributnamn, vilket minskar minnesanvändningen "
"för objekten till följd av unpickling.  (Bidrag från Jake McGuire; :issue:"
"`5084`.)"

msgid ""
"The :mod:`!cPickle` module now special-cases dictionaries, nearly halving "
"the time required to pickle them. (Contributed by Collin Winter; :issue:"
"`5670`.)"
msgstr ""
"Modulen :mod:`!cPickle` har nu specialfall för ordböcker, vilket nästan "
"halverar tiden som krävs för att plocka dem. (Bidrag från Collin Winter; :"
"issue:`5670`.)"

msgid "New and Improved Modules"
msgstr "Nya och förbättrade moduler"

msgid ""
"As in every release, Python's standard library received a number of "
"enhancements and bug fixes.  Here's a partial list of the most notable "
"changes, sorted alphabetically by module name. Consult the :file:`Misc/NEWS` "
"file in the source tree for a more complete list of changes, or look through "
"the Subversion logs for all the details."
msgstr ""
"Som i varje release fick Pythons standardbibliotek ett antal förbättringar "
"och buggfixar.  Här är en partiell lista över de mest anmärkningsvärda "
"ändringarna, sorterade alfabetiskt efter modulnamn. Se filen :file:`Misc/"
"NEWS` i källträdet för en mer komplett lista över ändringar, eller titta "
"igenom Subversion-loggarna för alla detaljer."

msgid ""
"The :mod:`bdb` module's base debugging class :class:`~bdb.Bdb` gained a "
"feature for skipping modules.  The constructor now takes an iterable "
"containing glob-style patterns such as ``django.*``; the debugger will not "
"step into stack frames from a module that matches one of these patterns. "
"(Contributed by Maru Newby after a suggestion by Senthil Kumaran; :issue:"
"`5142`.)"
msgstr ""
"Modulen :mod:`bdb` basklass för felsökning :class:`~bdb.Bdb` har fått en "
"funktion för att hoppa över moduler.  Konstruktören tar nu en iterabel som "
"innehåller glob-stil mönster som ``django.*``; felsökaren kommer inte att gå "
"in i stack frames från en modul som matchar ett av dessa mönster. (Bidrag "
"från Maru Newby efter ett förslag från Senthil Kumaran; :issue:`5142`.)"

msgid ""
"The :mod:`binascii` module now supports the buffer API, so it can be used "
"with :class:`memoryview` instances and other similar buffer objects. "
"(Backported from 3.x by Florent Xicluna; :issue:`7703`.)"
msgstr ""
"Modulen :mod:`binascii` har nu stöd för buffert-API:t, så den kan användas "
"med :class:`memoryview`-instanser och andra liknande buffertobjekt. "
"(Baktransporterad från 3.x av Florent Xicluna; :issue:`7703`.)"

msgid ""
"Updated module: the :mod:`!bsddb` module has been updated from 4.7.2devel9 "
"to version 4.8.4 of `the pybsddb package <https://www.jcea.es/programacion/"
"pybsddb.htm>`__. The new version features better Python 3.x compatibility, "
"various bug fixes, and adds several new BerkeleyDB flags and methods. "
"(Updated by Jesús Cea Avión; :issue:`8156`.  The pybsddb changelog can be "
"read at https://hg.jcea.es/pybsddb/file/tip/ChangeLog.)"
msgstr ""
"Uppdaterad modul: Modulen :mod:`!bsddb` har uppdaterats från 4.7.2devel9 "
"till version 4.8.4 av `the pybsddb package <https://www.jcea.es/programacion/"
"pybsddb.htm>`__. Den nya versionen har bättre Python 3.x-kompatibilitet, "
"olika buggfixar och lägger till flera nya BerkeleyDB-flaggor och -metoder. "
"(Uppdaterad av Jesús Cea Avión; :issue:`8156`.  Ändringsloggen för pybsddb "
"kan läsas på https://hg.jcea.es/pybsddb/file/tip/ChangeLog.)"

msgid ""
"The :mod:`bz2` module's :class:`~bz2.BZ2File` now supports the context "
"management protocol, so you can write ``with bz2.BZ2File(...) as f:``. "
"(Contributed by Hagen Fürstenau; :issue:`3860`.)"
msgstr ""
"Modulen :mod:`bz2`:s :class:`~bz2.BZ2File` stöder nu "
"kontexthanteringsprotokollet, så att du kan skriva ``med bz2.BZ2File(...) "
"som f:``. (Bidrag från Hagen Fürstenau; :issue:`3860`.)"

msgid ""
"New class: the :class:`~collections.Counter` class in the :mod:`collections` "
"module is useful for tallying data.  :class:`~collections.Counter` instances "
"behave mostly like dictionaries but return zero for missing keys instead of "
"raising a :exc:`KeyError`:"
msgstr ""
"Ny klass: Klassen :class:`~collections.Counter` i modulen :mod:`collections` "
"är användbar för att räkna data. Instanser av :class:`~collections.Counter` "
"beter sig mestadels som ordböcker men returnerar noll om nycklar saknas "
"istället för att ge upphov till :exc:`KeyError`:"

msgid ""
">>> from collections import Counter\n"
">>> c = Counter()\n"
">>> for letter in 'here is a sample of english text':\n"
"...   c[letter] += 1\n"
"...\n"
">>> c\n"
"Counter({' ': 6, 'e': 5, 's': 3, 'a': 2, 'i': 2, 'h': 2,\n"
"'l': 2, 't': 2, 'g': 1, 'f': 1, 'm': 1, 'o': 1, 'n': 1,\n"
"'p': 1, 'r': 1, 'x': 1})\n"
">>> c['e']\n"
"5\n"
">>> c['z']\n"
"0"
msgstr ""
">>> from collections import Räknare\n"
">>> c = Räknare()\n"
">>> for letter in 'här är ett exempel på engelsk text':\n"
"... c[bokstav] += 1\n"
"...\n"
">>> c\n"
"Counter({' ': 6, 'e': 5, 's': 3, 'a': 2, 'i': 2, 'h': 2,\n"
"'l': 2, 't': 2, 'g': 1, 'f': 1, \"m\": 1, \"o\": 1, \"n\": 1,\n"
"'p': 1, 'r': 1, 'x': 1})\n"
">>> c['e']\n"
"5\n"
">>> c['z']\n"
"0"

msgid ""
"There are three additional :class:`~collections.Counter` methods. :meth:"
"`~collections.Counter.most_common` returns the N most common elements and "
"their counts.  :meth:`~collections.Counter.elements` returns an iterator "
"over the contained elements, repeating each element as many times as its "
"count. :meth:`~collections.Counter.subtract` takes an iterable and subtracts "
"one for each element instead of adding; if the argument is a dictionary or "
"another :class:`Counter`, the counts are subtracted. ::"
msgstr ""
"Det finns ytterligare tre :class:`~collections.Counter`-metoder. :meth:"
"`~collections.Counter.most_common` returnerar de N vanligaste elementen och "
"deras antal. :meth:`~collections.Counter.elements` returnerar en iterator "
"över de ingående elementen och upprepar varje element lika många gånger som "
"dess antal. :meth:`~collections.Counter.subtract` tar en iterabel och "
"subtraherar ett för varje element istället för att addera; om argumentet är "
"en ordbok eller en annan :class:`Counter` subtraheras antalet. ::"

msgid ""
">>> c.most_common(5)\n"
"[(' ', 6), ('e', 5), ('s', 3), ('a', 2), ('i', 2)]\n"
">>> c.elements() ->\n"
"   'a', 'a', ' ', ' ', ' ', ' ', ' ', ' ',\n"
"   'e', 'e', 'e', 'e', 'e', 'g', 'f', 'i', 'i',\n"
"   'h', 'h', 'm', 'l', 'l', 'o', 'n', 'p', 's',\n"
"   's', 's', 'r', 't', 't', 'x'\n"
">>> c['e']\n"
"5\n"
">>> c.subtract('very heavy on the letter e')\n"
">>> c['e']    # Count is now lower\n"
"-1"
msgstr ""
">>> c.mest_vanliga(5)\n"
"[(' ', 6), ('e', 5), ('s', 3), ('a', 2), ('i', 2)]\n"
">>> c.element() ->\n"
"   'a', 'a', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',\n"
"   'e', 'e', 'e', 'e', 'e', 'g', 'f', 'i', 'i',\n"
"   \"h\", \"h\", \"m\", \"l\", \"l\", \"o\", \"n\", \"p\", \"s\",\n"
"   's', 's', 'r', 't', 't', 'x'\n"
">>> c['e']\n"
"5\n"
">>> c.subtract('mycket tung på bokstaven e')\n"
">>> c['e'] # Antalet är nu lägre\n"
"-1"

msgid "Contributed by Raymond Hettinger; :issue:`1696199`."
msgstr "Bidrag från Raymond Hettinger; :issue:`1696199`."

msgid ""
"New class: :class:`~collections.OrderedDict` is described in the earlier "
"section :ref:`pep-0372`."
msgstr ""
"Ny klass: :class:`~collections.OrderedDict` beskrivs i det tidigare "
"avsnittet :ref:`pep-0372`."

msgid ""
"New method: The :class:`~collections.deque` data type now has a :meth:"
"`~collections.deque.count` method that returns the number of contained "
"elements equal to the supplied argument *x*, and a :meth:`~collections.deque."
"reverse` method that reverses the elements of the deque in-place.  :class:"
"`~collections.deque` also exposes its maximum length as the read-only :attr:"
"`~collections.deque.maxlen` attribute. (Both features added by Raymond "
"Hettinger.)"
msgstr ""
"Ny metod: Datatypen :class:`~collections.deque` har nu en :meth:"
"`~collections.deque.count`-metod som returnerar antalet ingående element som "
"är lika med det medföljande argumentet *x*, och en :meth:`~collections.deque."
"reverse`-metod som reverserar elementen i deque på plats. :class:"
"`~collections.deque` exponerar också sin maximala längd som det "
"skrivskyddade attributet :attr:`~collections.deque.maxlen`. (Båda "
"funktionerna har lagts till av Raymond Hettinger.)"

msgid ""
"The :class:`~collections.namedtuple` class now has an optional *rename* "
"parameter. If *rename* is true, field names that are invalid because they've "
"been repeated or aren't legal Python identifiers will be renamed to legal "
"names that are derived from the field's position within the list of fields:"
msgstr ""
"Klassen :class:`~collections.namedtuple` har nu en valfri parameter "
"*rename*. Om *rename* är true kommer fältnamn som är ogiltiga eftersom de "
"har upprepats eller inte är lagliga Python-identifierare att bytas ut mot "
"lagliga namn som härleds från fältets position i listan över fält:"

msgid "(Added by Raymond Hettinger; :issue:`1818`.)"
msgstr "(Tillagd av Raymond Hettinger; :issue:`1818`.)"

msgid ""
"Finally, the :class:`~collections.abc.Mapping` abstract base class now "
"returns :data:`NotImplemented` if a mapping is compared to another type that "
"isn't a :class:`Mapping`. (Fixed by Daniel Stutzbach; :issue:`8729`.)"
msgstr ""
"Slutligen returnerar den abstrakta basklassen :class:`~collections.abc."
"Mapping` nu :data:`NotImplemented` om en mappning jämförs med en annan typ "
"som inte är en :class:`Mapping`. (Rättad av Daniel Stutzbach; :issue:`8729`.)"

msgid ""
"Constructors for the parsing classes in the :mod:`ConfigParser "
"<configparser>` module now take an *allow_no_value* parameter, defaulting to "
"false; if true, options without values will be allowed.  For example::"
msgstr ""
"Konstruktörer för parsing-klasserna i modulen :mod:`ConfigParser "
"<configparser>` tar nu en *allow_no_value*-parameter, med false som "
"standard; om true tillåts alternativ utan värden.  Till exempel::"

msgid ""
">>> import ConfigParser, StringIO\n"
">>> sample_config = \"\"\"\n"
"... [mysqld]\n"
"... user = mysql\n"
"... pid-file = /var/run/mysqld/mysqld.pid\n"
"... skip-bdb\n"
"... \"\"\"\n"
">>> config = ConfigParser.RawConfigParser(allow_no_value=True)\n"
">>> config.readfp(StringIO.StringIO(sample_config))\n"
">>> config.get('mysqld', 'user')\n"
"'mysql'\n"
">>> print config.get('mysqld', 'skip-bdb')\n"
"None\n"
">>> print config.get('mysqld', 'unknown')\n"
"Traceback (most recent call last):\n"
"  ...\n"
"NoOptionError: No option 'unknown' in section: 'mysqld'"
msgstr ""
">>> import ConfigParser, StringIO\n"
">>> exempel_konfig = \"\"\"\n"
"... [mysqld]\n"
"... användare = mysql\n"
"... pid-fil = /var/run/mysqld/mysqld.pid\n"
"... skip-bdb\n"
"... \"\"\"\n"
">>> config = ConfigParser.RawConfigParser(allow_no_value=True)\n"
">>> config.readfp(StringIO.StringIO(sample_config))\n"
">>> config.get('mysqld', 'user')\n"
"'mysql'\n"
">>> print config.get('mysqld', 'skip-bdb')\n"
"Ingen\n"
">>> print config.get('mysqld', 'unknown')\n"
"Traceback (senaste anropet senast):\n"
"  ...\n"
"NoOptionError: Inget alternativ 'unknown' i avsnitt: 'mysqld'"

msgid "(Contributed by Mats Kindahl; :issue:`7005`.)"
msgstr "(Bidrag från Mats Kindahl; :issue:`7005`.)"

msgid ""
"Deprecated function: :func:`!contextlib.nested`, which allows handling more "
"than one context manager with a single :keyword:`with` statement, has been "
"deprecated, because the :keyword:`!with` statement now supports multiple "
"context managers."
msgstr ""
"Föråldrad funktion: :func:`!contextlib.nested`, som gör det möjligt att "
"hantera mer än en kontexthanterare med ett enda :keyword:`with`-svar, har "
"utgått eftersom :keyword:`!with`-svaret nu stöder flera kontexthanterare."

msgid ""
"The :mod:`cookielib <http.cookiejar>` module now ignores cookies that have "
"an invalid version field, one that doesn't contain an integer value.  (Fixed "
"by John J. Lee; :issue:`3924`.)"
msgstr ""
"Modulen :mod:`cookielib <http.cookiejar>` ignorerar nu cookies som har ett "
"ogiltigt versionsfält, ett som inte innehåller ett heltalsvärde.  (Åtgärdat "
"av John J. Lee; :issue:`3924`.)"

msgid ""
"The :mod:`copy` module's :func:`~copy.deepcopy` function will now correctly "
"copy bound instance methods.  (Implemented by Robert Collins; :issue:`1515`.)"
msgstr ""
"Modulen :mod:`copy`:s :func:`~copy.deepcopy`-funktion kopierar nu bundna "
"instansmetoder korrekt.  (Implementerat av Robert Collins; :issue:`1515`.)"

msgid ""
"The :mod:`ctypes` module now always converts ``None`` to a C ``NULL`` "
"pointer for arguments declared as pointers.  (Changed by Thomas Heller; :"
"issue:`4606`.)  The underlying `libffi library <https://sourceware.org/"
"libffi/>`__ has been updated to version 3.0.9, containing various fixes for "
"different platforms.  (Updated by Matthias Klose; :issue:`8142`.)"
msgstr ""
"Modulen :mod:`ctypes` konverterar nu alltid ``None`` till en C ``NULL``-"
"pekare för argument som deklarerats som pekare.  (Ändrad av Thomas Heller; :"
"issue:`4606`.) Det underliggande `libffi-biblioteket <https://sourceware.org/"
"libffi/>`__ har uppdaterats till version 3.0.9, som innehåller diverse "
"korrigeringar för olika plattformar.  (Uppdaterad av Matthias Klose; :issue:"
"`8142`.)"

msgid ""
"New method: the :mod:`datetime` module's :class:`~datetime.timedelta` class "
"gained a :meth:`~datetime.timedelta.total_seconds` method that returns the "
"number of seconds in the duration.  (Contributed by Brian Quinlan; :issue:"
"`5788`.)"
msgstr ""
"Ny metod: :mod:`datetime`-modulens :class:`~datetime.timedelta`-klass har "
"fått en :meth:`~datetime.timedelta.total_seconds`-metod som returnerar "
"antalet sekunder i varaktigheten.  (Bidrag från Brian Quinlan; :issue:"
"`5788`.)"

msgid ""
"New method: the :class:`~decimal.Decimal` class gained a :meth:`~decimal."
"Decimal.from_float` class method that performs an exact conversion of a "
"floating-point number to a :class:`!Decimal`. This exact conversion strives "
"for the closest decimal approximation to the floating-point representation's "
"value; the resulting decimal value will therefore still include the "
"inaccuracy, if any. For example, ``Decimal.from_float(0.1)`` returns "
"``Decimal('0.1000000000000000055511151231257827021181583404541015625')``. "
"(Implemented by Raymond Hettinger; :issue:`4796`.)"
msgstr ""
"Ny metod: Klassen :class:`~decimal.Decimal` har fått en klassmetod :meth:"
"`~decimal.Decimal.from_float` som utför en exakt konvertering av ett flyttal "
"till en :class:`!Decimal`. Denna exakta konvertering strävar efter den "
"närmaste decimala approximationen av värdet i flyttalsrepresentationen; det "
"resulterande decimalvärdet kommer därför fortfarande att inkludera "
"felaktigheten, om någon. For example, ``Decimal.from_float(0.1)`` returns "
"``Decimal('0.1000000000000000055511151231257827021181583404541015625')``. "
"(Implementerad av Raymond Hettinger; :issue:`4796`.)"

msgid ""
"Comparing instances of :class:`~decimal.Decimal` with floating-point numbers "
"now produces sensible results based on the numeric values of the operands.  "
"Previously such comparisons would fall back to Python's default rules for "
"comparing objects, which produced arbitrary results based on their type.  "
"Note that you still cannot combine :class:`!Decimal` and floating point in "
"other operations such as addition, since you should be explicitly choosing "
"how to convert between float and :class:`!Decimal`.  (Fixed by Mark "
"Dickinson; :issue:`2531`.)"
msgstr ""
"Jämförelse av instanser av :class:`~decimal.Decimal` med flyttal ger nu "
"förnuftiga resultat baserat på operandernas numeriska värden.  Tidigare "
"skulle sådana jämförelser falla tillbaka på Pythons standardregler för att "
"jämföra objekt, vilket gav godtyckliga resultat baserat på deras typ.  "
"Observera att du fortfarande inte kan kombinera :class:`!Decimal` och "
"flyttal i andra operationer som t.ex. addition, eftersom du uttryckligen bör "
"välja hur du konverterar mellan flyttal och :class:`!Decimal`.  (Rättad av "
"Mark Dickinson; :issue:`2531`.)"

msgid ""
"The constructor for :class:`~decimal.Decimal` now accepts floating-point "
"numbers (added by Raymond Hettinger; :issue:`8257`) and non-European Unicode "
"characters such as Arabic-Indic digits (contributed by Mark Dickinson; :"
"issue:`6595`)."
msgstr ""
"Konstruktören för :class:`~decimal.Decimal` accepterar nu flyttal (tillagt "
"av Raymond Hettinger; :issue:`8257`) och icke-europeiska Unicode-tecken som "
"arabiska och indiska siffror (bidrag från Mark Dickinson; :issue:`6595`)."

msgid ""
"Most of the methods of the :class:`~decimal.Context` class now accept "
"integers as well as :class:`~decimal.Decimal` instances; the only exceptions "
"are the :meth:`~decimal.Context.canonical` and :meth:`~decimal.Context."
"is_canonical` methods.  (Patch by Juan José Conti; :issue:`7633`.)"
msgstr ""
"De flesta av metoderna i klassen :class:`~decimal.Context` accepterar nu "
"heltal såväl som :class:`~decimal.Decimal` instanser; de enda undantagen är "
"metoderna :meth:`~decimal.Context.canonical` och :meth:`~decimal.Context."
"is_canonical`.  (Patch av Juan José Conti; :issue:`7633`.)"

msgid ""
"When using :class:`~decimal.Decimal` instances with a string's :meth:`~str."
"format` method, the default alignment was previously left-alignment.  This "
"has been changed to right-alignment, which is more sensible for numeric "
"types.  (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"När man använder :class:`~decimal.Decimal`-instanser med en strängs :meth:"
"`~str.format`-metod var standardjusteringen tidigare vänsterjustering.  "
"Detta har ändrats till högerjustering, vilket är mer förnuftigt för "
"numeriska typer.  (Ändrad av Mark Dickinson; :issue:`6857`.)"

msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal :const:"
"`~decimal.InvalidOperation` instead of silently returning a true or false "
"value depending on the comparison operator.  Quiet NaN values (or ``NaN``) "
"are now hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""
"Jämförelser som involverar ett signalerande NaN-värde (eller ``NAN``) "
"signalerar nu :const:`~decimal.InvalidOperation` istället för att i tysthet "
"returnera ett sant eller falskt värde beroende på jämförelseoperatorn.  "
"Tysta NaN-värden (eller ``NaN``) är nu hashbara.  (Rättad av Mark "
"Dickinson; :issue:`7279`.)"

msgid ""
"The :mod:`difflib` module now produces output that is more compatible with "
"modern :command:`diff`/:command:`patch` tools through one small change, "
"using a tab character instead of spaces as a separator in the header giving "
"the filename.  (Fixed by Anatoly Techtonik; :issue:`7585`.)"
msgstr ""
"Modulen :mod:`difflib` producerar nu utdata som är mer kompatibla med "
"moderna :command:`diff`/:command:`patch`-verktyg genom en liten ändring, "
"nämligen att använda ett tabbtecken istället för mellanslag som separator i "
"rubriken som anger filnamnet.  (Fixad av Anatoly Techtonik; :issue:`7585`.)"

msgid ""
"The Distutils ``sdist`` command now always regenerates the :file:`MANIFEST` "
"file, since even if the :file:`MANIFEST.in` or :file:`setup.py` files "
"haven't been modified, the user might have created some new files that "
"should be included. (Fixed by Tarek Ziadé; :issue:`8688`.)"
msgstr ""
"Distutils ``sdist``-kommando regenererar nu alltid filen :file:`MANIFEST`, "
"eftersom även om filerna :file:`MANIFEST.in` eller :file:`setup.py` inte har "
"ändrats, kan användaren ha skapat några nya filer som bör inkluderas. "
"(Rättad av Tarek Ziadé; :issue:`8688`.)"

msgid ""
"The :mod:`doctest` module's :const:`~doctest.IGNORE_EXCEPTION_DETAIL` flag "
"will now ignore the name of the module containing the exception being "
"tested.  (Patch by Lennart Regebro; :issue:`7490`.)"
msgstr ""
":mod:`doctest`-modulens :const:`~doctest.IGNORE_EXCEPTION_DETAIL`-flagga "
"ignorerar nu namnet på den modul som innehåller det undantag som testas.  "
"(Patch av Lennart Regebro; :issue:`7490`.)"

msgid ""
"The :mod:`email` module's :class:`~email.message.Message` class will now "
"accept a Unicode-valued payload, automatically converting the payload to the "
"encoding specified by :attr:`!output_charset`. (Added by R. David Murray; :"
"issue:`1368247`.)"
msgstr ""
"Modulen :mod:`email`:s klass :class:`~email.message.Message` accepterar nu "
"en Unicode-värderad nyttolast och konverterar automatiskt nyttolasten till "
"den kodning som anges av :attr:`!output_charset`. (Tillagd av R. David "
"Murray; :issue:`1368247`.)"

msgid ""
"The :class:`~fractions.Fraction` class now accepts a single float or :class:"
"`~decimal.Decimal` instance, or two rational numbers, as arguments to its "
"constructor.  (Implemented by Mark Dickinson; rationals added in :issue:"
"`5812`, and float/decimal in :issue:`8294`.)"
msgstr ""
"Klassen :class:`~fractions.Fraction` accepterar nu en enda float- eller :"
"class:`~decimal.Decimal`-instans, eller två rationella tal, som argument "
"till sin konstruktor.  (Implementerad av Mark Dickinson; rationella tal "
"tillkom i :issue:`5812`, och float/decimal i :issue:`8294`.)"

msgid ""
"Ordering comparisons (``<``, ``<=``, ``>``, ``>=``) between fractions and "
"complex numbers now raise a :exc:`TypeError`. This fixes an oversight, "
"making the :class:`~fractions.Fraction` match the other numeric types."
msgstr ""
"Jämförelser av ordningsföljd (``<``, ``<=``, ``>``, ``>=``) mellan bråk och "
"komplexa tal ger nu upphov till ett :exc:`TypeError`. Detta åtgärdar ett "
"förbiseende, vilket gör att :class:`~fractions.Fraction` matchar de andra "
"numeriska typerna."

msgid ""
"New class: :class:`~ftplib.FTP_TLS` in the :mod:`ftplib` module provides "
"secure FTP connections using TLS encapsulation of authentication as well as "
"subsequent control and data transfers. (Contributed by Giampaolo Rodola; :"
"issue:`2054`.)"
msgstr ""
"Ny klass: :class:`~ftplib.FTP_TLS` i modulen :mod:`ftplib` ger säkra FTP-"
"anslutningar med TLS-inkapsling av autentisering samt efterföljande "
"kontroll- och dataöverföringar. (Bidrag från Giampaolo Rodola; :issue:"
"`2054`.)"

msgid ""
"The :meth:`~ftplib.FTP.storbinary` method for binary uploads can now restart "
"uploads thanks to an added *rest* parameter (patch by Pablo Mouzo; :issue:"
"`6845`.)"
msgstr ""
"Metoden :meth:`~ftplib.FTP.storbinary` för binära uppladdningar kan nu "
"starta om uppladdningar tack vare en tillagd *rest*-parameter (patch av "
"Pablo Mouzo; :issue:`6845`.)"

msgid ""
"New class decorator: :func:`~functools.total_ordering` in the :mod:"
"`functools` module takes a class that defines an :meth:`~object.__eq__` "
"method and one of :meth:`~object.__lt__`, :meth:`~object.__le__`, :meth:"
"`~object.__gt__`, or :meth:`~object.__ge__`, and generates the missing "
"comparison methods.  Since the :meth:`!__cmp__` method is being deprecated "
"in Python 3.x, this decorator makes it easier to define ordered classes. "
"(Added by Raymond Hettinger; :issue:`5479`.)"
msgstr ""
"Ny klassdekorator: :func:`~functools.total_ordering` i modulen :mod:"
"`functools` tar en klass som definierar en :meth:`~object.__eq__`-metod och "
"en av :meth:`~object.__lt__`, :meth:`~object.__le__`, :meth:`~object.__gt__` "
"eller :meth:`~object.__ge__` och genererar de jämförelsemetoder som saknas.  "
"Eftersom metoden :meth:`!__cmp__` försvinner i Python 3.x gör den här "
"dekoratorn det enklare att definiera ordnade klasser. (Tillagd av Raymond "
"Hettinger; :issue:`5479`.)"

msgid ""
"New function: :func:`~functools.cmp_to_key` will take an old-style "
"comparison function that expects two arguments and return a new callable "
"that can be used as the *key* parameter to functions such as :func:"
"`sorted`, :func:`min` and :func:`max`, etc.  The primary intended use is to "
"help with making code compatible with Python 3.x. (Added by Raymond "
"Hettinger.)"
msgstr ""
"Ny funktion: :func:`~functools.cmp_to_key` tar en gammaldags "
"jämförelsefunktion som förväntar sig två argument och returnerar en ny "
"anropbar funktion som kan användas som *key*-parameter till funktioner som :"
"func:`sorted`, :func:`min` och :func:`max`, etc.  Den primära avsedda "
"användningen är att hjälpa till med att göra kod kompatibel med Python 3.x. "
"(Tillagd av Raymond Hettinger.)"

msgid ""
"New function: the :mod:`gc` module's :func:`~gc.is_tracked` returns true if "
"a given instance is tracked by the garbage collector, false otherwise. "
"(Contributed by Antoine Pitrou; :issue:`4688`.)"
msgstr ""
"Ny funktion: :mod:`gc`-modulens :func:`~gc.is_tracked` returnerar true om en "
"given instans spåras av skräpsamlaren, false annars. (Bidrag från Antoine "
"Pitrou; :issue:`4688`.)"

msgid ""
"The :mod:`gzip` module's :class:`~gzip.GzipFile` now supports the context "
"management protocol, so you can write ``with gzip.GzipFile(...) as f:`` "
"(contributed by Hagen Fürstenau; :issue:`3860`), and it now implements the :"
"class:`io.BufferedIOBase` ABC, so you can wrap it with :class:`io."
"BufferedReader` for faster processing (contributed by Nir Aides; :issue:"
"`7471`). It's also now possible to override the modification time recorded "
"in a gzipped file by providing an optional timestamp to the constructor.  "
"(Contributed by Jacques Frechet; :issue:`4272`.)"
msgstr ""
"Modulen :mod:`gzip` :class:`~gzip.GzipFile` har nu stöd för "
"kontexthanteringsprotokollet, så att du kan skriva ``with gzip.GzipFile(...) "
"as f:`` (bidrag från Hagen Fürstenau; :issue:`3860`), och den implementerar "
"nu :class:`io.BufferedIOBase` ABC, så att du kan linda in den med :class:`io."
"BufferedReader` för snabbare bearbetning (bidrag från Nir Aides; :issue:"
"`7471`). Det är nu också möjligt att åsidosätta den modifieringstid som "
"registreras i en gzippad fil genom att tillhandahålla en valfri tidsstämpel "
"till konstruktören.  (Bidrag från Jacques Frechet; :issue:`4272`.)"

msgid ""
"Files in gzip format can be padded with trailing zero bytes; the :mod:`gzip` "
"module will now consume these trailing bytes.  (Fixed by Tadek Pietraszek "
"and Brian Curtin; :issue:`2846`.)"
msgstr ""
"Filer i gzip-format kan fyllas på med nollbyte i slutet; modulen :mod:`gzip` "
"kommer nu att använda dessa nollbyte i slutet.  (Rättad av Tadek Pietraszek "
"och Brian Curtin; :issue:`2846`.)"

msgid ""
"New attribute: the :mod:`hashlib` module now has an :attr:`!algorithms` "
"attribute containing a tuple naming the supported algorithms. In Python 2.7, "
"``hashlib.algorithms`` contains ``('md5', 'sha1', 'sha224', 'sha256', "
"'sha384', 'sha512')``. (Contributed by Carl Chenet; :issue:`7418`.)"
msgstr ""
"Nytt attribut: Modulen :mod:`hashlib` har nu ett attribut :attr:`!"
"algorithms` som innehåller en tupel som namnger de algoritmer som stöds. I "
"Python 2.7 innehåller ``hashlib.algorithms`` ``('md5', 'sha1', 'sha224', "
"'sha256', 'sha384', 'sha512')``. (Bidrag från Carl Chenet; :issue:`7418`.)"

msgid ""
"The default :class:`~http.client.HTTPResponse` class used by the :mod:"
"`httplib <http>` module now supports buffering, resulting in much faster "
"reading of HTTP responses. (Contributed by Kristján Valur Jónsson; :issue:"
"`4879`.)"
msgstr ""
"Standardklassen :class:`~http.client.HTTPResponse` som används av modulen :"
"mod:`httplib <http>` har nu stöd för buffring, vilket resulterar i mycket "
"snabbare läsning av HTTP-svar. (Bidrag från Kristján Valur Jónsson; :issue:"
"`4879`.)"

msgid ""
"The :class:`~http.client.HTTPConnection` and :class:`~http.client."
"HTTPSConnection` classes now support a *source_address* parameter, a "
"``(host, port)`` 2-tuple giving the source address that will be used for the "
"connection. (Contributed by Eldon Ziegler; :issue:`3972`.)"
msgstr ""
"Klasserna :class:`~http.client.HTTPConnection` och :class:`~http.client."
"HTTPSConnection` har nu stöd för en *source_address*-parameter, en ``(host, "
"port)`` 2-tupel som anger den källadress som ska användas för anslutningen. "
"(Bidrag från Eldon Ziegler; :issue:`3972`.)"

msgid ""
"The :mod:`!ihooks` module now supports relative imports.  Note that :mod:`!"
"ihooks` is an older module for customizing imports, superseded by the :mod:`!"
"imputil` module added in Python 2.0. (Relative import support added by Neil "
"Schemenauer.)"
msgstr ""
"Modulen :mod:`!ihooks` stöder nu relativ import.  Observera att :mod:`!"
"ihooks` är en äldre modul för att anpassa import, ersatt av modulen :mod:`!"
"imputil` som tillkom i Python 2.0. (Stöd för relativ import tillagt av Neil "
"Schemenauer.)"

msgid ""
"The :mod:`imaplib` module now supports IPv6 addresses. (Contributed by Derek "
"Morr; :issue:`1655`.)"
msgstr ""
"Modulen :mod:`imaplib` har nu stöd för IPv6-adresser. (Bidrag från Derek "
"Morr; :issue:`1655`.)"

msgid ""
"New function: the :mod:`inspect` module's :func:`~inspect.getcallargs` takes "
"a callable and its positional and keyword arguments, and figures out which "
"of the callable's parameters will receive each argument, returning a "
"dictionary mapping argument names to their values.  For example::"
msgstr ""
"Ny funktion: :mod:`inspect`-modulens :func:`~inspect.getcallargs` tar en "
"anropbar parameter och dess positions- och nyckelordsargument och räknar ut "
"vilken av den anropbara parametern som ska ta emot varje argument, och "
"returnerar en ordbok som mappar argumentnamn till deras värden.  Till "
"exempel::"

msgid ""
">>> from inspect import getcallargs\n"
">>> def f(a, b=1, *pos, **named):\n"
"...     pass\n"
"...\n"
">>> getcallargs(f, 1, 2, 3)\n"
"{'a': 1, 'b': 2, 'pos': (3,), 'named': {}}\n"
">>> getcallargs(f, a=2, x=4)\n"
"{'a': 2, 'b': 1, 'pos': (), 'named': {'x': 4}}\n"
">>> getcallargs(f)\n"
"Traceback (most recent call last):\n"
"...\n"
"TypeError: f() takes at least 1 argument (0 given)"
msgstr ""
">>> från inspect import getcallargs\n"
">>> def f(a, b=1, *pos, **named):\n"
"... pass\n"
"...\n"
">>> getcallargs(f, 1, 2, 3)\n"
"{'a': 1, 'b': 2, 'pos': (3,), 'named': {}}\n"
">>> getcallargs(f, a=2, x=4)\n"
"{'a': 2, 'b': 1, 'pos': (), 'named': {'x': 4}}\n"
">>> getcallargs(f)\n"
"Traceback (senaste anropet senast):\n"
"...\n"
"TypeError: f() tar minst 1 argument (0 givna)"

msgid "Contributed by George Sakkis; :issue:`3135`."
msgstr "Bidrag från George Sakkis; :issue:`3135`."

msgid ""
"Updated module: The :mod:`io` library has been upgraded to the version "
"shipped with Python 3.1.  For 3.1, the I/O library was entirely rewritten in "
"C and is 2 to 20 times faster depending on the task being performed.  The "
"original Python version was renamed to the :mod:`!_pyio` module."
msgstr ""
"Uppdaterad modul: Biblioteket :mod:`io` har uppgraderats till den version "
"som levereras med Python 3.1.  För 3.1 skrevs I/O-biblioteket om helt i C "
"och är 2 till 20 gånger snabbare beroende på vilken uppgift som utförs.  Den "
"ursprungliga Python-versionen döptes om till modulen :mod:`!_pyio`."

msgid ""
"One minor resulting change: the :class:`io.TextIOBase` class now has an :"
"attr:`~io.TextIOBase.errors` attribute giving the error setting used for "
"encoding and decoding errors (one of ``'strict'``, ``'replace'``, "
"``'ignore'``)."
msgstr ""
"En mindre förändring: klassen :class:`io.TextIOBase` har nu ett attribut :"
"attr:`~io.TextIOBase.errors` som anger den felinställning som används för "
"kodnings- och avkodningsfel (en av ``'strict'``, ``'replace'``, "
"``'ignore'``)."

msgid ""
"The :class:`io.FileIO` class now raises an :exc:`OSError` when passed an "
"invalid file descriptor.  (Implemented by Benjamin Peterson; :issue:"
"`4991`.)  The :meth:`~io.IOBase.truncate` method now preserves the file "
"position; previously it would change the file position to the end of the new "
"file.  (Fixed by Pascal Chambon; :issue:`6939`.)"
msgstr ""
"Klassen :class:`io.FileIO` ger nu upphov till ett :exc:`OSError` när en "
"ogiltig filbeskrivare skickas.  (Implementerat av Benjamin Peterson; :issue:"
"`4991`.) Metoden :meth:`~io.IOBase.truncate` bevarar nu filpositionen; "
"tidigare ändrade den filpositionen till slutet av den nya filen.  (Åtgärdat "
"av Pascal Chambon; :issue:`6939`.)"

msgid ""
"New function: ``itertools.compress(data, selectors)`` takes two iterators.  "
"Elements of *data* are returned if the corresponding value in *selectors* is "
"true::"
msgstr ""
"Ny funktion: ``itertools.compress(data, selectors)`` tar två iteratorer.  "
"Element i *data* returneras om motsvarande värde i *selectors* är true::"

msgid ""
"itertools.compress('ABCDEF', [1,0,1,0,1,1]) =>\n"
"  A, C, E, F"
msgstr ""
"itertools.compress('ABCDEF', [1,0,1,0,1,1]) =>\n"
"  A, C, E, F"

msgid ""
"New function: ``itertools.combinations_with_replacement(iter, r)`` returns "
"all the possible *r*-length combinations of elements from the iterable "
"*iter*.  Unlike :func:`~itertools.combinations`, individual elements can be "
"repeated in the generated combinations::"
msgstr ""
"Ny funktion: ``itertools.combinations_with_replacement(iter, r)`` returnerar "
"alla möjliga *r*-längdkombinationer av element från iterabeln *iter*.  Till "
"skillnad från :func:`~itertools.combinations` kan enskilda element upprepas "
"i de genererade kombinationerna::"

msgid ""
"itertools.combinations_with_replacement('abc', 2) =>\n"
"  ('a', 'a'), ('a', 'b'), ('a', 'c'),\n"
"  ('b', 'b'), ('b', 'c'), ('c', 'c')"
msgstr ""
"itertools.kombinationer_med_ersättning('abc', 2) =>\n"
"  ('a', 'a'), ('a', 'b'), ('a', 'c'),\n"
"  ('b', 'b'), ('b', 'c'), ('c', 'c')"

msgid ""
"Note that elements are treated as unique depending on their position in the "
"input, not their actual values."
msgstr ""
"Observera att element behandlas som unika beroende på deras position i "
"inmatningen, inte deras faktiska värden."

msgid ""
"The :func:`itertools.count` function now has a *step* argument that allows "
"incrementing by values other than 1.  :func:`~itertools.count` also now "
"allows keyword arguments, and using non-integer values such as floats or :"
"class:`~decimal.Decimal` instances.  (Implemented by Raymond Hettinger; :"
"issue:`5032`.)"
msgstr ""
"Funktionen :func:`itertools.count` har nu ett *step*-argument som tillåter "
"inkrementering med andra värden än 1. :func:`~itertools.count` tillåter nu "
"också nyckelordsargument och användning av värden som inte är heltal, t.ex. "
"flyttal eller :class:`~decimal.Decimal`-instanser.  (Implementerat av "
"Raymond Hettinger; :issue:`5032`.)"

msgid ""
":func:`itertools.combinations` and :func:`itertools.product` previously "
"raised :exc:`ValueError` for values of *r* larger than the input iterable.  "
"This was deemed a specification error, so they now return an empty "
"iterator.  (Fixed by Raymond Hettinger; :issue:`4816`.)"
msgstr ""
":func:`itertools.combinations` och :func:`itertools.product` gav tidigare "
"upphov till :exc:`ValueError` för värden på *r* som var större än den "
"ingående iterabeln.  Detta ansågs vara ett specifikationsfel, så de "
"returnerar nu en tom iterator.  (Åtgärdat av Raymond Hettinger; :issue:"
"`4816`.)"

msgid ""
"Updated module: The :mod:`json` module was upgraded to version 2.0.9 of the "
"simplejson package, which includes a C extension that makes encoding and "
"decoding faster. (Contributed by Bob Ippolito; :issue:`4136`.)"
msgstr ""
"Uppdaterad modul: Modulen :mod:`json` uppgraderades till version 2.0.9 av "
"paketet simplejson, som innehåller ett C-tillägg som gör kodning och "
"avkodning snabbare. (Bidrag från Bob Ippolito; :issue:`4136`.)"

msgid ""
"To support the new :class:`collections.OrderedDict` type, :func:`json.load` "
"now has an optional *object_pairs_hook* parameter that will be called with "
"any object literal that decodes to a list of pairs. (Contributed by Raymond "
"Hettinger; :issue:`5381`.)"
msgstr ""
"För att stödja den nya :class:`collections.OrderedDict`-typen har :func:"
"`json.load` nu en valfri *object_pairs_hook*-parameter som kommer att "
"anropas med alla objektlitteraler som avkodas till en lista med par. (Bidrag "
"från Raymond Hettinger; :issue:`5381`.)"

msgid ""
"The :mod:`mailbox` module's :class:`~mailbox.Maildir` class now records the "
"timestamp on the directories it reads, and only re-reads them if the "
"modification time has subsequently changed.  This improves performance by "
"avoiding unneeded directory scans.  (Fixed by A.M. Kuchling and Antoine "
"Pitrou; :issue:`1607951`, :issue:`6896`.)"
msgstr ""
"Klassen :class:`~mailbox.Maildir` i modulen :mod:`mailbox` registrerar nu "
"tidsstämpeln för de kataloger som läses och läser bara om dem igen om "
"modifieringstiden har ändrats i efterhand.  Detta förbättrar prestandan "
"genom att onödiga kataloggenomsökningar undviks.  (Rättad av A.M. Kuchling "
"och Antoine Pitrou; :issue:`1607951`, :issue:`6896`.)"

msgid ""
"New functions: the :mod:`math` module gained :func:`~math.erf` and :func:"
"`~math.erfc` for the error function and the complementary error function, :"
"func:`~math.expm1` which computes ``e**x - 1`` with more precision than "
"using :func:`~math.exp` and subtracting 1, :func:`~math.gamma` for the Gamma "
"function, and :func:`~math.lgamma` for the natural log of the Gamma "
"function. (Contributed by Mark Dickinson and nirinA raseliarison; :issue:"
"`3366`.)"
msgstr ""
"Nya funktioner: Modulen :mod:`math` har fått :func:`~math.erf` och :func:"
"`~math.erfc` för felfunktionen och den komplementära felfunktionen, :func:"
"`~math.expm1` som beräknar ``e**x - 1`` med mer precision än att använda :"
"func:`~math.exp` och subtrahera 1, :func:`~math.gamma` för Gamma-funktionen "
"och :func:`~math.lgamma` för den naturliga logaritmen av Gamma-funktionen. "
"(Bidrag från Mark Dickinson och nirinA raseliarison; :issue:`3366`.)"

msgid ""
"The :mod:`multiprocessing` module's :class:`!Manager*` classes can now be "
"passed a callable that will be called whenever a subprocess is started, "
"along with a set of arguments that will be passed to the callable. "
"(Contributed by lekma; :issue:`5585`.)"
msgstr ""
":mod:`multiprocessing`-modulens :class:`!Manager*`-klasser kan nu skickas "
"till en anropbar som anropas när en underprocess startas, tillsammans med en "
"uppsättning argument som skickas till den anropbara. (Bidrag från lekma; :"
"issue:`5585`.)"

msgid ""
"The :class:`~multiprocessing.pool.Pool` class, which controls a pool of "
"worker processes, now has an optional *maxtasksperchild* parameter.  Worker "
"processes will perform the specified number of tasks and then exit, causing "
"the :class:`!Pool` to start a new worker.  This is useful if tasks may leak "
"memory or other resources, or if some tasks will cause the worker to become "
"very large. (Contributed by Charles Cazabon; :issue:`6963`.)"
msgstr ""
"Klassen :class:`~multiprocessing.pool.Pool`, som styr en pool av "
"arbetsprocesser, har nu en valfri parameter *maxtasksperchild*.  "
"Arbetsprocesserna kommer att utföra det angivna antalet uppgifter och sedan "
"avsluta, vilket gör att :class:`!Pool` startar en ny arbetsprocess.  Detta "
"är användbart om uppgifter kan läcka minne eller andra resurser, eller om "
"vissa uppgifter gör att arbetsprocessen blir mycket stor. (Bidrag från "
"Charles Cazabon; :issue:`6963`.)"

msgid ""
"The :mod:`!nntplib` module now supports IPv6 addresses. (Contributed by "
"Derek Morr; :issue:`1664`.)"
msgstr ""
"Modulen :mod:`!nntplib` har nu stöd för IPv6-adresser. (Bidrag från Derek "
"Morr; :issue:`1664`.)"

msgid ""
"New functions: the :mod:`os` module wraps the following POSIX system calls: :"
"func:`~os.getresgid` and :func:`~os.getresuid`, which return the real, "
"effective, and saved GIDs and UIDs; :func:`~os.setresgid` and :func:`~os."
"setresuid`, which set real, effective, and saved GIDs and UIDs to new "
"values; :func:`~os.initgroups`, which initialize the group access list for "
"the current process.  (GID/UID functions contributed by Travis H.; :issue:"
"`6508`.  Support for initgroups added by Jean-Paul Calderone; :issue:`7333`.)"
msgstr ""
"Nya funktioner: Modulen :mod:`os` omsluter följande POSIX-anrop: :func:`~os."
"getresgid` och :func:`~os.getresuid`, som returnerar verkliga, effektiva och "
"sparade GID och UID; :func:`~os.setresgid` och :func:`~os.setresuid`, som "
"sätter verkliga, effektiva och sparade GID och UID till nya värden; :func:"
"`~os.initgroups`, som initierar gruppåtkomstlistan för den aktuella "
"processen.  (GID/UID-funktioner bidragit med av Travis H.; :issue:`6508`.  "
"Stöd för initgroups tillagt av Jean-Paul Calderone; :issue:`7333`.)"

msgid ""
"The :func:`os.fork` function now re-initializes the import lock in the child "
"process; this fixes problems on Solaris when :func:`~os.fork` is called from "
"a thread.  (Fixed by Zsolt Cserna; :issue:`7242`.)"
msgstr ""
"Funktionen :func:`os.fork` återinitierar nu importlåset i barnprocessen; "
"detta åtgärdar problem på Solaris när :func:`~os.fork` anropas från en "
"tråd.  (Åtgärdat av Zsolt Cserna; :issue:`7242`.)"

msgid ""
"In the :mod:`os.path` module, the :func:`~os.path.normpath` and :func:`~os."
"path.abspath` functions now preserve Unicode; if their input path is a "
"Unicode string, the return value is also a Unicode string. (:meth:`~os.path."
"normpath` fixed by Matt Giuca in :issue:`5827`; :meth:`~os.path.abspath` "
"fixed by Ezio Melotti in :issue:`3426`.)"
msgstr ""
"I modulen :mod:`os.path` bevarar nu funktionerna :func:`~os.path.normpath` "
"och :func:`~os.path.abspath` Unicode; om deras indatasökväg är en Unicode-"
"sträng är returvärdet också en Unicode-sträng. (:meth:`~os.path.normpath` "
"åtgärdad av Matt Giuca i :issue:`5827`; :meth:`~os.path.abspath` åtgärdad av "
"Ezio Melotti i :issue:`3426`.)"

msgid ""
"The :mod:`pydoc` module now has help for the various symbols that Python "
"uses.  You can now do ``help('<<')`` or ``help('@')``, for example. "
"(Contributed by David Laban; :issue:`4739`.)"
msgstr ""
"Modulen :mod:`pydoc` har nu hjälp för de olika symbolerna som Python "
"använder.  Du kan nu göra ``help('<<')`` eller ``help('@')``, till exempel. "
"(Bidrag från David Laban; :issue:`4739`.)"

msgid ""
"The :mod:`re` module's :func:`~re.split`, :func:`~re.sub`, and :func:`~re."
"subn` now accept an optional *flags* argument, for consistency with the "
"other functions in the module.  (Added by Gregory P. Smith.)"
msgstr ""
":mod:`re`-modulens :func:`~re.split`, :func:`~re.sub` och :func:`~re.subn` "
"accepterar nu ett valfritt *flags*-argument, för konsekvens med de andra "
"funktionerna i modulen.  (Tillagd av Gregory P. Smith.)"

msgid ""
"New function: :func:`~runpy.run_path` in the :mod:`runpy` module will "
"execute the code at a provided *path* argument.  *path* can be the path of a "
"Python source file (:file:`example.py`), a compiled bytecode file (:file:"
"`example.pyc`), a directory (:file:`./package/`), or a zip archive (:file:"
"`example.zip`).  If a directory or zip path is provided, it will be added to "
"the front of ``sys.path`` and the module :mod:`__main__` will be imported.  "
"It's expected that the directory or zip contains a :file:`__main__.py`; if "
"it doesn't, some other :file:`__main__.py` might be imported from a location "
"later in ``sys.path``.  This makes more of the machinery of :mod:`runpy` "
"available to scripts that want to mimic the way Python's command line "
"processes an explicit path name. (Added by Nick Coghlan; :issue:`6816`.)"
msgstr ""
"Ny funktion: :func:`~runpy.run_path` i modulen :mod:`runpy` kommer att "
"exekvera koden på ett angivet *path*-argument.  *path* kan vara sökvägen "
"till en Python-källfil (:file:`example.py`), en kompilerad bytecode-fil (:"
"file:`example.pyc`), en katalog (:file:`./package/`) eller ett zip-arkiv (:"
"file:`example.zip`).  Om en katalog eller zip-sökväg anges kommer den att "
"läggas till i början av ``sys.path`` och modulen :mod:`__main__`` kommer att "
"importeras.  Det förväntas att katalogen eller zip-filen innehåller en :file:"
"`__main__.py`; om den inte gör det kan någon annan :file:`__main__.py` "
"importeras från en plats längre fram i ``sys.path``.  Detta gör mer av "
"maskineriet i :mod:`runpy` tillgängligt för skript som vill efterlikna hur "
"Pythons kommandorad behandlar ett explicit sökvägsnamn. (Tillagd av Nick "
"Coghlan; :issue:`6816`.)"

msgid ""
"New function: in the :mod:`shutil` module, :func:`~shutil.make_archive` "
"takes a filename, archive type (zip or tar-format), and a directory path, "
"and creates an archive containing the directory's contents. (Added by Tarek "
"Ziadé.)"
msgstr ""
"Ny funktion: I modulen :mod:`shutil` tar :func:`~shutil.make_archive` ett "
"filnamn, en arkivtyp (zip- eller tar-format) och en sökväg till en katalog "
"och skapar ett arkiv med katalogens innehåll. (Tillagd av Tarek Ziadé.)"

msgid ""
":mod:`shutil`'s :func:`~shutil.copyfile` and :func:`~shutil.copytree` "
"functions now raise a :exc:`~shutil.SpecialFileError` exception when asked "
"to copy a named pipe.  Previously the code would treat named pipes like a "
"regular file by opening them for reading, and this would block "
"indefinitely.  (Fixed by Antoine Pitrou; :issue:`3002`.)"
msgstr ""
":mod:`shutil`:s funktioner :func:`~shutil.copyfile` och :func:`~shutil."
"copytree` ger nu upphov till ett :exc:`~shutil.SpecialFileError`-undantag "
"när de ombeds kopiera en namngiven pipe.  Tidigare skulle koden behandla "
"namngivna pipes som en vanlig fil genom att öppna dem för läsning, och detta "
"skulle blockera i all oändlighet.  (Åtgärdat av Antoine Pitrou; :issue:"
"`3002`.)"

msgid ""
"The :mod:`signal` module no longer re-installs the signal handler unless "
"this is truly necessary, which fixes a bug that could make it impossible to "
"catch the EINTR signal robustly.  (Fixed by Charles-Francois Natali; :issue:"
"`8354`.)"
msgstr ""
"Modulen :mod:`signal` installerar inte längre om signalhanteraren om det "
"inte verkligen är nödvändigt, vilket åtgärdar en bugg som kunde göra det "
"omöjligt att fånga EINTR-signalen på ett robust sätt.  (Rättad av Charles-"
"Francois Natali; :issue:`8354`.)"

msgid ""
"New functions: in the :mod:`site` module, three new functions return various "
"site- and user-specific paths. :func:`~site.getsitepackages` returns a list "
"containing all global site-packages directories, :func:`~site."
"getusersitepackages` returns the path of the user's site-packages directory, "
"and :func:`~site.getuserbase` returns the value of the :data:`~site."
"USER_BASE` environment variable, giving the path to a directory that can be "
"used to store data. (Contributed by Tarek Ziadé; :issue:`6693`.)"
msgstr ""
"Nya funktioner: I :mod:`site`-modulen returnerar tre nya funktioner olika "
"plats- och användarspecifika sökvägar. :func:`~site.getsitepackages` "
"returnerar en lista med alla globala plats-paketkataloger, :func:`~site."
"getusersitepackages` returnerar sökvägen till användarens katalog med "
"webbplats-paket och :func:`~site.getuserbase` returnerar värdet på "
"miljövariabeln :data:`~site.USER_BASE`, vilket ger sökvägen till en katalog "
"som kan användas för att lagra data. (Bidrag från Tarek Ziadé; :issue:"
"`6693`.)"

msgid ""
"The :mod:`site` module now reports exceptions occurring when the :mod:"
"`sitecustomize` module is imported, and will no longer catch and swallow "
"the :exc:`KeyboardInterrupt` exception.  (Fixed by Victor Stinner; :issue:"
"`3137`.)"
msgstr ""
"Modulen :mod:`site` rapporterar nu undantag som inträffar när modulen :mod:"
"`sitecustomize` importeras, och kommer inte längre att fånga och svälja "
"undantaget :exc:`KeyboardInterrupt`.  (Åtgärdat av Victor Stinner; :issue:"
"`3137`.)"

msgid ""
"The :func:`~socket.create_connection` function gained a *source_address* "
"parameter, a ``(host, port)`` 2-tuple giving the source address that will be "
"used for the connection. (Contributed by Eldon Ziegler; :issue:`3972`.)"
msgstr ""
"Funktionen :func:`~socket.create_connection` fick en *source_address* "
"parameter, en ``(host, port)`` 2-tupel som ger källadressen som kommer att "
"användas för anslutningen. (Bidrag från Eldon Ziegler; :issue:`3972`.)"

msgid ""
"The :meth:`~socket.socket.recv_into` and :meth:`~socket.socket."
"recvfrom_into` methods will now write into objects that support the buffer "
"API, most usefully the :class:`bytearray` and :class:`memoryview` objects.  "
"(Implemented by Antoine Pitrou; :issue:`8104`.)"
msgstr ""
"Metoderna :meth:`~socket.socket.recv_into` och :meth:`~socket.socket."
"recvfrom_into` kommer nu att skriva till objekt som stöder buffert-API:t, "
"mest användbart är objekten :class:`bytearray` och :class:`memoryview`.  "
"(Implementerat av Antoine Pitrou; :issue:`8104`.)"

msgid ""
"The :mod:`SocketServer <socketserver>` module's :class:`~socketserver."
"TCPServer` class now supports socket timeouts and disabling the Nagle "
"algorithm. The :attr:`!disable_nagle_algorithm` class attribute defaults to "
"``False``; if overridden to be true, new request connections will have the "
"TCP_NODELAY option set to prevent buffering many small sends into a single "
"TCP packet. The :attr:`~socketserver.BaseServer.timeout` class attribute can "
"hold a timeout in seconds that will be applied to the request socket; if no "
"request is received within that time, :meth:`~socketserver.BaseServer."
"handle_timeout` will be called and :meth:`~socketserver.BaseServer."
"handle_request` will return. (Contributed by Kristján Valur Jónsson; :issue:"
"`6192` and :issue:`6267`.)"
msgstr ""
"Klassen :class:`~socketserver.TCPServer` i modulen :mod:`SocketServer "
"<socketserver>` har nu stöd för timeouts för socket och inaktivering av "
"Nagle-algoritmen. Klassattributet :attr:`!disable_nagle_algorithm` är som "
"standard ``False``; om det åsidosätts till true kommer nya request-"
"anslutningar att ha TCP_NODELAY-alternativet inställt för att förhindra "
"buffring av många små sändningar i ett enda TCP-paket. Klassattributet :attr:"
"`~socketserver.BaseServer.timeout` kan innehålla en timeout i sekunder som "
"kommer att tillämpas på request socket; om ingen request tas emot inom den "
"tiden kommer :meth:`~socketserver.BaseServer.handle_timeout` att anropas "
"och :meth:`~socketserver.BaseServer.handle_request` kommer att returneras. "
"(Bidrag från Kristján Valur Jónsson; :issue:`6192` och :issue:`6267`.)"

msgid ""
"Updated module: the :mod:`sqlite3` module has been updated to version 2.6.0 "
"of the `pysqlite package <https://github.com/ghaering/pysqlite>`__. Version "
"2.6.0 includes a number of bugfixes, and adds the ability to load SQLite "
"extensions from shared libraries. Call the ``enable_load_extension(True)`` "
"method to enable extensions, and then call :meth:`~sqlite3.Connection."
"load_extension` to load a particular shared library. (Updated by Gerhard "
"Häring.)"
msgstr ""
"Uppdaterad modul: Modulen :mod:`sqlite3` har uppdaterats till version 2.6.0 "
"av `pysqlite-paketet <https://github.com/ghaering/pysqlite>`__. Version "
"2.6.0 innehåller ett antal buggfixar och ger möjlighet att ladda SQLite-"
"tillägg från delade bibliotek. Anropa metoden "
"``enable_load_extension(True)`` för att aktivera tillägg, och anropa sedan :"
"meth:`~sqlite3.Connection.load_extension` för att ladda ett visst delat "
"bibliotek. (Uppdaterad av Gerhard Häring.)"

msgid ""
"The :mod:`ssl` module's :class:`~ssl.SSLSocket` objects now support the "
"buffer API, which fixed a test suite failure (fix by Antoine Pitrou; :issue:"
"`7133`) and automatically set OpenSSL's :c:macro:`!SSL_MODE_AUTO_RETRY`, "
"which will prevent an error code being returned from :meth:`recv` operations "
"that trigger an SSL renegotiation (fix by Antoine Pitrou; :issue:`8222`)."
msgstr ""
":mod:`ssl`-modulens :class:`~ssl.SSLSocket`-objekt stöder nu buffer-API:t, "
"vilket åtgärdade ett fel i en testsvit (fixad av Antoine Pitrou; :issue:"
"`7133`) och automatiskt ställer in OpenSSL:s :c:macro:`!"
"SSL_MODE_AUTO_RETRY`, vilket förhindrar att en felkod returneras från :meth:"
"`recv`-operationer som utlöser en SSL-omförhandling (fixad av Antoine "
"Pitrou; :issue:`8222`)."

msgid ""
"The :func:`~ssl.SSLContext.wrap_socket` constructor function now takes a "
"*ciphers* argument that's a string listing the encryption algorithms to be "
"allowed; the format of the string is described `in the OpenSSL documentation "
"<https://docs.openssl.org/1.0.2/man1/ciphers/>`__. (Added by Antoine "
"Pitrou; :issue:`8322`.)"
msgstr ""
"Konstruktorfunktionen :func:`~ssl.SSLContext.wrap_socket` tar nu ett "
"*ciphers*-argument som är en sträng som listar de krypteringsalgoritmer som "
"ska tillåtas; strängens format beskrivs `i OpenSSL-dokumentationen <https://"
"docs.openssl.org/1.0.2/man1/ciphers/>`__. (Tillagd av Antoine Pitrou; :issue:"
"`8322`.)"

msgid ""
"Another change makes the extension load all of OpenSSL's ciphers and digest "
"algorithms so that they're all available.  Some SSL certificates couldn't be "
"verified, reporting an \"unknown algorithm\" error.  (Reported by Beda "
"Kosata, and fixed by Antoine Pitrou; :issue:`8484`.)"
msgstr ""
"En annan ändring gör att tillägget laddar alla OpenSSL:s chiffer och digest-"
"algoritmer så att de alla är tillgängliga.  Vissa SSL-certifikat kunde inte "
"verifieras och rapporterade ett \"okänd algoritm\"-fel.  (Rapporterat av "
"Beda Kosata, och åtgärdat av Antoine Pitrou; :issue:`8484`.)"

msgid ""
"The version of OpenSSL being used is now available as the module attributes :"
"const:`ssl.OPENSSL_VERSION` (a string), :const:`ssl.OPENSSL_VERSION_INFO` (a "
"5-tuple), and :const:`ssl.OPENSSL_VERSION_NUMBER` (an integer).  (Added by "
"Antoine Pitrou; :issue:`8321`.)"
msgstr ""
"Den version av OpenSSL som används är nu tillgänglig som modulattributen :"
"const:`ssl.OPENSSL_VERSION` (en sträng), :const:`ssl.OPENSSL_VERSION_INFO` "
"(en 5-tupel) och :const:`ssl.OPENSSL_VERSION_NUMBER` (ett heltal).  (Tillagd "
"av Antoine Pitrou; :issue:`8321`.)"

msgid ""
"The :mod:`struct` module will no longer silently ignore overflow errors when "
"a value is too large for a particular integer format code (one of "
"``bBhHiIlLqQ``); it now always raises a :exc:`struct.error` exception.  "
"(Changed by Mark Dickinson; :issue:`1523`.)  The :func:`~struct.pack` "
"function will also attempt to use :meth:`~object.__index__` to convert and "
"pack non-integers before trying the :meth:`~object.__int__` method or "
"reporting an error. (Changed by Mark Dickinson; :issue:`8300`.)"
msgstr ""
"Modulen :mod:`struct` ignorerar inte längre överfyllnadsfel när ett värde är "
"för stort för en viss heltalsformatkod (en av ``bBhHiIlLqQ``); den ger nu "
"alltid upphov till ett :exc:`struct.error`-undantag.  (Ändrad av Mark "
"Dickinson; :issue:`1523`.) Funktionen :func:`~struct.pack` kommer också att "
"försöka använda :meth:`~object.__index__` för att konvertera och packa icke-"
"integraler innan den försöker med metoden :meth:`~object.__int__` eller "
"rapporterar ett fel. (Ändrad av Mark Dickinson; :issue:`8300`.)"

msgid ""
"New function: the :mod:`subprocess` module's :func:`~subprocess."
"check_output` runs a command with a specified set of arguments and returns "
"the command's output as a string when the command runs without error, or "
"raises a :exc:`~subprocess.CalledProcessError` exception otherwise."
msgstr ""
"Ny funktion: :mod:`subprocess`-modulens :func:`~subprocess.check_output` kör "
"ett kommando med en angiven uppsättning argument och returnerar kommandots "
"utdata som en sträng när kommandot körs utan fel, eller ger upphov till ett :"
"exc:`~subprocess.CalledProcessError`-undantag i annat fall."

msgid ""
">>> subprocess.check_output(['df', '-h', '.'])\n"
"'Filesystem     Size   Used  Avail Capacity  Mounted on\\n\n"
"/dev/disk0s2    52G    49G   3.0G    94%    /\\n'\n"
"\n"
">>> subprocess.check_output(['df', '-h', '/bogus'])\n"
"  ...\n"
"subprocess.CalledProcessError: Command '['df', '-h', '/bogus']' returned non-"
"zero exit status 1"
msgstr ""
">>> subprocess.check_output(['df', '-h', '.'])\n"
"'Filsystem Storlek Använd Avail Kapacitet Monterad på\\n\n"
"/dev/disk0s2 52G 49G 3.0G 94% /\\n'\n"
"\n"
">>> subprocess.check_output(['df', '-h', '/bogus'])\n"
"  ...\n"
"subprocess.CalledProcessError: Kommandot '['df', '-h', '/bogus']' "
"returnerade utgångsstatus 1 som inte var noll"

msgid "(Contributed by Gregory P. Smith.)"
msgstr "(Bidrag från Gregory P. Smith.)"

msgid ""
"The :mod:`subprocess` module will now retry its internal system calls on "
"receiving an :const:`~errno.EINTR` signal.  (Reported by several people; "
"final patch by Gregory P. Smith in :issue:`1068268`.)"
msgstr ""
"Modulen :mod:`subprocess` kommer nu att försöka igen med sina interna "
"systemanrop när den får en :const:`~errno.EINTR`-signal.  (Rapporterades av "
"flera personer; slutlig patch av Gregory P. Smith i :issue:`1068268`.)"

msgid ""
"New function: :func:`~symtable.Symbol.is_declared_global` in the :mod:"
"`symtable` module returns true for variables that are explicitly declared to "
"be global, false for ones that are implicitly global. (Contributed by Jeremy "
"Hylton.)"
msgstr ""
"Ny funktion: :func:`~symtable.Symbol.is_declared_global` i modulen :mod:"
"`symtable` returnerar true för variabler som uttryckligen deklarerats vara "
"globala, false för sådana som är implicit globala. (Bidrag från Jeremy "
"Hylton.)"

msgid ""
"The :mod:`syslog` module will now use the value of ``sys.argv[0]`` as the "
"identifier instead of the previous default value of ``'python'``. (Changed "
"by Sean Reifschneider; :issue:`8451`.)"
msgstr ""
"Modulen :mod:`syslog` kommer nu att använda värdet av ``sys.argv[0]`` som "
"identifierare istället för det tidigare standardvärdet ``'python'``. (Ändrad "
"av Sean Reifschneider; :issue:`8451`.)"

msgid ""
"The :data:`sys.version_info` value is now a named tuple, with attributes "
"named :attr:`!major`, :attr:`!minor`, :attr:`!micro`, :attr:`!releaselevel`, "
"and :attr:`!serial`.  (Contributed by Ross Light; :issue:`4285`.)"
msgstr ""
"Värdet :data:`sys.version_info` är nu en namngiven tupel, med attributen :"
"attr:`!major`, :attr:`!minor`, :attr:`!micro`, :attr:`!releaselevel` och :"
"attr:`!serial`.  (Bidrag från Ross Light; :issue:`4285`.)"

msgid ""
":func:`sys.getwindowsversion` also returns a named tuple, with attributes "
"named :attr:`!major`, :attr:`!minor`, :attr:`!build`, :attr:`!platform`, :"
"attr:`!service_pack`, :attr:`!service_pack_major`, :attr:`!"
"service_pack_minor`, :attr:`!suite_mask`, and :attr:`!product_type`.  "
"(Contributed by Brian Curtin; :issue:`7766`.)"
msgstr ""
":func:`sys.getwindowsversion` returnerar också en namngiven tupel, med "
"attributen :attr:`!major`, :attr:`!minor`, :attr:`!build`, :attr:`!"
"platform`, :attr:`!service_pack`, :attr:`!service_pack_major`, :attr:`!"
"service_pack_minor`, :attr:`!suite_mask` och :attr:`!product_type`.  (Bidrag "
"från Brian Curtin; :issue:`7766`.)"

msgid ""
"The :mod:`tarfile` module's default error handling has changed, to no longer "
"suppress fatal errors.  The default error level was previously 0, which "
"meant that errors would only result in a message being written to the debug "
"log, but because the debug log is not activated by default, these errors go "
"unnoticed.  The default error level is now 1, which raises an exception if "
"there's an error. (Changed by Lars Gustäbel; :issue:`7357`.)"
msgstr ""
"Standardfelhanteringen i modulen :mod:`tarfile` har ändrats så att fatala "
"fel inte längre undertrycks.  Den förinställda felnivån var tidigare 0, "
"vilket innebar att fel bara resulterade i att ett meddelande skrevs till "
"debugloggen, men eftersom debugloggen inte är aktiverad som standard går "
"dessa fel obemärkta förbi.  Standardnivån för fel är nu 1, vilket innebär "
"att ett undantag uppstår om ett fel inträffar. (Ändrad av Lars Gustäbel; :"
"issue:`7357`.)"

msgid ""
":mod:`tarfile` now supports filtering the :class:`~tarfile.TarInfo` objects "
"being added to a tar file.  When you call :meth:`~tarfile.TarFile.add`, you "
"may supply an optional *filter* argument that's a callable.  The *filter* "
"callable will be passed the :class:`~tarfile.TarInfo` for every file being "
"added, and can modify and return it. If the callable returns ``None``, the "
"file will be excluded from the resulting archive.  This is more powerful "
"than the existing *exclude* argument, which has therefore been deprecated. "
"(Added by Lars Gustäbel; :issue:`6856`.) The :class:`~tarfile.TarFile` class "
"also now supports the context management protocol. (Added by Lars Gustäbel; :"
"issue:`7232`.)"
msgstr ""
":mod:`tarfile` stöder nu filtrering av :class:`~tarfile.TarInfo`-objekt som "
"läggs till i en tar-fil.  När du anropar :meth:`~tarfile.TarFile.add` kan du "
"ange ett valfritt *filter*-argument som är en anropsbarhet.  Anropsbarheten "
"*filter* kommer att få :class:`~tarfile.TarInfo` för varje fil som läggs "
"till, och kan modifiera och returnera den. Om den anropsbara filen "
"returnerar ``None`` kommer filen att uteslutas från det resulterande "
"arkivet.  Detta är mer kraftfullt än det befintliga *exclude*-argumentet, "
"som därför har utgått. (Tillagd av Lars Gustäbel; :issue:`6856`.) Klassen :"
"class:`~tarfile.TarFile` har nu också stöd för kontexthanteringsprotokollet. "
"(Tillagd av Lars Gustäbel; :issue:`7232`.)"

msgid ""
"The :meth:`~threading.Event.wait` method of the :class:`threading.Event` "
"class now returns the internal flag on exit.  This means the method will "
"usually return true because :meth:`~threading.Event.wait` is supposed to "
"block until the internal flag becomes true.  The return value will only be "
"false if a timeout was provided and the operation timed out. (Contributed by "
"Tim Lesher; :issue:`1674032`.)"
msgstr ""
"Metoden :meth:`~threading.Event.wait` i klassen :class:`threading.Event` "
"returnerar nu den interna flaggan vid avslut.  Detta innebär att metoden "
"vanligtvis returnerar true eftersom :meth:`~threading.Event.wait` är tänkt "
"att blockera tills den interna flaggan blir true.  Returvärdet kommer bara "
"att vara falskt om en timeout angavs och operationen timade ut. (Bidrag från "
"Tim Lesher; :issue:`1674032`.)"

msgid ""
"The Unicode database provided by the :mod:`unicodedata` module is now used "
"internally to determine which characters are numeric, whitespace, or "
"represent line breaks.  The database also includes information from the :"
"file:`Unihan.txt` data file (patch by Anders Chrigström and Amaury Forgeot "
"d'Arc; :issue:`1571184`) and has been updated to version 5.2.0 (updated by "
"Florent Xicluna; :issue:`8024`)."
msgstr ""
"Unicode-databasen som tillhandahålls av modulen :mod:`unicodedata` används "
"nu internt för att avgöra vilka tecken som är numeriska, blanksteg eller "
"representerar radbrytningar.  Databasen innehåller även information från "
"datafilen :file:`Unihan.txt` (patch av Anders Chrigström och Amaury Forgeot "
"d'Arc; :issue:`1571184`) och har uppdaterats till version 5.2.0 (uppdaterad "
"av Florent Xicluna; :issue:`8024`)."

msgid ""
"The :mod:`urlparse <urllib.parse>` module's :func:`~urllib.parse.urlsplit` "
"now handles unknown URL schemes in a fashion compliant with :rfc:`3986`: if "
"the URL is of the form ``\"<something>://...\"``, the text before the ``://"
"`` is treated as the scheme, even if it's a made-up scheme that the module "
"doesn't know about.  This change may break code that worked around the old "
"behaviour.  For example, Python 2.6.4 or 2.5 will return the following:"
msgstr ""
":mod:`urlparse <urllib.parse>`-modulens :func:`~urllib.parse.urlsplit` "
"hanterar nu okända URL-scheman på ett sätt som överensstämmer med :rfc:"
"`3986`: om URL:en är av formen ``\"<something>://...\"``, behandlas texten "
"före ``://`` som schemat, även om det är ett påhittat schema som modulen "
"inte känner till.  Denna förändring kan bryta kod som fungerade runt det "
"gamla beteendet.  Till exempel kommer Python 2.6.4 eller 2.5 att returnera "
"följande:"

msgid ""
">>> import urlparse\n"
">>> urlparse.urlsplit('invented://host/filename?query')\n"
"('invented', '', '//host/filename?query', '', '')"
msgstr ""
">>> import urlparse\n"
">>> urlparse.urlsplit('invented://host/filename?query')\n"
"('invented', '', '//host/filename?query', '', '')"

msgid "Python 2.7 (and Python 2.6.5) will return:"
msgstr "Python 2.7 (och Python 2.6.5) kommer att returnera:"

msgid ""
">>> import urlparse\n"
">>> urlparse.urlsplit('invented://host/filename?query')\n"
"('invented', 'host', '/filename?query', '', '')"
msgstr ""
">>> import urlparse\n"
">>> urlparse.urlsplit('invented://host/filename?query')\n"
"('invented', 'host', '/filename?query', '', '')"

msgid ""
"(Python 2.7 actually produces slightly different output, since it returns a "
"named tuple instead of a standard tuple.)"
msgstr ""
"(Python 2.7 ger faktiskt något annorlunda resultat, eftersom den returnerar "
"en namngiven tupel i stället för en standardtupel)"

msgid ""
"The :mod:`urlparse <urllib.parse>` module also supports IPv6 literal "
"addresses as defined by :rfc:`2732` (contributed by Senthil Kumaran; :issue:"
"`2987`)."
msgstr ""
"Modulen :mod:`urlparse <urllib.parse>` har även stöd för IPv6-litterära "
"adresser enligt definitionen i :rfc:`2732` (bidrag från Senthil Kumaran; :"
"issue:`2987`)."

msgid ""
">>> urlparse.urlparse('http://[1080::8:800:200C:417A]/foo')\n"
"ParseResult(scheme='http', netloc='[1080::8:800:200C:417A]',\n"
"            path='/foo', params='', query='', fragment='')"
msgstr ""
">>> urlparse.urlparse('http://[1080::8:800:200C:417A]/foo')\n"
"ParseResult(scheme='http', netloc='[1080::8:800:200C:417A]',\n"
"            path='/foo', params='', query='', fragment='')"

msgid ""
"New class: the :class:`~weakref.WeakSet` class in the :mod:`weakref` module "
"is a set that only holds weak references to its elements; elements will be "
"removed once there are no references pointing to them. (Originally "
"implemented in Python 3.x by Raymond Hettinger, and backported to 2.7 by "
"Michael Foord.)"
msgstr ""
"Ny klass: Klassen :class:`~weakref.WeakSet` i modulen :mod:`weakref` är en "
"uppsättning som endast innehåller svaga referenser till dess element; "
"elementen kommer att tas bort när det inte finns några referenser som pekar "
"på dem. (Ursprungligen implementerad i Python 3.x av Raymond Hettinger, och "
"backporterad till 2.7 av Michael Foord.)"

msgid ""
"The :mod:`xml.etree.ElementTree` library, no longer escapes ampersands and "
"angle brackets when outputting an XML processing instruction (which looks "
"like ``<?xml-stylesheet href=\"#style1\"?>``) or comment (which looks like "
"``<!-- comment -->``). (Patch by Neil Muller; :issue:`2746`.)"
msgstr ""
"Biblioteket :mod:`xml.etree.ElementTree` escapar inte längre ampersand och "
"vinkelparenteser vid utmatning av en XML-bearbetningsinstruktion (som ser ut "
"som ``<?xml-stylesheet href=\"#style1\"?>``) eller kommentar (som ser ut som "
"``<!-- comment -->``). (Patch av Neil Muller; :issue:`2746`.)"

msgid ""
"The XML-RPC client and server, provided by the :mod:`xmlrpclib <xmlrpc."
"client>` and :mod:`SimpleXMLRPCServer <xmlrpc.server>` modules, have "
"improved performance by supporting HTTP/1.1 keep-alive and by optionally "
"using gzip encoding to compress the XML being exchanged.  The gzip "
"compression is controlled by the :attr:`!encode_threshold` attribute of :"
"class:`~xmlrpc.server.SimpleXMLRPCRequestHandler`, which contains a size in "
"bytes; responses larger than this will be compressed. (Contributed by "
"Kristján Valur Jónsson; :issue:`6267`.)"
msgstr ""
"XML-RPC-klienten och -servern, som tillhandahålls av modulerna :mod:"
"`xmlrpclib <xmlrpc.client>` och :mod:`SimpleXMLRPCServer <xmlrpc.server>`, "
"har förbättrad prestanda genom att stödja HTTP/1.1 keep-alive och genom att "
"valfritt använda gzip-kodning för att komprimera XML som utväxlas.  Gzip-"
"komprimeringen styrs av attributet :attr:`!encode_threshold` i :class:"
"`~xmlrpc.server.SimpleXMLRPCRequestHandler`, som innehåller en storlek i "
"byte; svar som är större än detta kommer att komprimeras. (Bidrag från "
"Kristján Valur Jónsson; :issue:`6267`.)"

msgid ""
"The :mod:`zipfile` module's :class:`~zipfile.ZipFile` now supports the "
"context management protocol, so you can write ``with zipfile.ZipFile(...) as "
"f:``. (Contributed by Brian Curtin; :issue:`5511`.)"
msgstr ""
"Modulen :mod:`zipfile` :class:`~zipfile.ZipFile` har nu stöd för "
"kontexthanteringsprotokollet, så att du kan skriva ``med zipfile."
"ZipFile(...) som f:``. (Bidrag från Brian Curtin; :issue:`5511`.)"

msgid ""
":mod:`zipfile` now also supports archiving empty directories and extracts "
"them correctly.  (Fixed by Kuba Wieczorek; :issue:`4710`.) Reading files out "
"of an archive is faster, and interleaving :meth:`read() <io.BufferedIOBase."
"read>` and :meth:`readline() <io.IOBase.readline>` now works correctly. "
"(Contributed by Nir Aides; :issue:`7610`.)"
msgstr ""
":mod:`zipfile` stöder nu även arkivering av tomma kataloger och extraherar "
"dem korrekt.  (Åtgärdat av Kuba Wieczorek; :issue:`4710`.) Det går snabbare "
"att läsa filer ur ett arkiv, och sammankopplingen av :meth:`read() <io."
"BufferedIOBase.read>` och :meth:`readline() <io.IOBase.readline>` fungerar "
"nu korrekt. (Bidrag från Nir Aides; :issue:`7610`.)"

msgid ""
"The :func:`~zipfile.is_zipfile` function now accepts a file object, in "
"addition to the path names accepted in earlier versions.  (Contributed by "
"Gabriel Genellina; :issue:`4756`.)"
msgstr ""
"Funktionen :func:`~zipfile.is_zipfile` accepterar nu ett filobjekt, utöver "
"de sökvägsnamn som accepterades i tidigare versioner.  (Bidrag från Gabriel "
"Genellina; :issue:`4756`.)"

msgid ""
"The :meth:`~zipfile.ZipFile.writestr` method now has an optional "
"*compress_type* parameter that lets you override the default compression "
"method specified in the :class:`~zipfile.ZipFile` constructor.  (Contributed "
"by Ronald Oussoren; :issue:`6003`.)"
msgstr ""
"Metoden :meth:`~zipfile.ZipFile.writestr` har nu en valfri parameter "
"*compress_type* som låter dig åsidosätta den standardkomprimeringsmetod som "
"anges i konstruktören :class:`~zipfile.ZipFile`.  (Bidrag från Ronald "
"Oussoren; :issue:`6003`.)"

msgid "New module: importlib"
msgstr "Ny modul: importlib"

msgid ""
"Python 3.1 includes the :mod:`importlib` package, a re-implementation of the "
"logic underlying Python's :keyword:`import` statement. :mod:`importlib` is "
"useful for implementers of Python interpreters and to users who wish to "
"write new importers that can participate in the import process.  Python 2.7 "
"doesn't contain the complete :mod:`importlib` package, but instead has a "
"tiny subset that contains a single function, :func:`~importlib."
"import_module`."
msgstr ""
"Python 3.1 innehåller paketet :mod:`importlib`, en omimplementering av den "
"logik som ligger bakom Pythons :keyword:`import`. :mod:`importlib` är "
"användbart för implementatörer av Python-tolkar och för användare som vill "
"skriva nya importörer som kan delta i importprocessen.  Python 2.7 "
"innehåller inte hela :mod:`importlib`-paketet, utan istället en liten "
"delmängd som innehåller en enda funktion, :func:`~importlib.import_module`."

msgid ""
"``import_module(name, package=None)`` imports a module.  *name* is a string "
"containing the module or package's name.  It's possible to do relative "
"imports by providing a string that begins with a ``.`` character, such as "
"``..utils.errors``.  For relative imports, the *package* argument must be "
"provided and is the name of the package that will be used as the anchor for "
"the relative import.  :func:`~importlib.import_module` both inserts the "
"imported module into ``sys.modules`` and returns the module object."
msgstr ""
"``import_module(name, package=None)`` importerar en modul.  *name* är en "
"sträng som innehåller modulens eller paketets namn.  Det är möjligt att göra "
"relativ import genom att ange en sträng som börjar med tecknet ``.``, t.ex. "
"``..utils.errors``.  För relativ import måste argumentet *package* anges och "
"är namnet på det paket som kommer att användas som ankare för den relativa "
"importen. :func:`~importlib.import_module` både infogar den importerade "
"modulen i ``sys.modules`` och returnerar modulobjektet."

msgid "Here are some examples::"
msgstr "Här är några exempel::"

msgid ""
">>> from importlib import import_module\n"
">>> anydbm = import_module('anydbm')  # Standard absolute import\n"
">>> anydbm\n"
"<module 'anydbm' from '/p/python/Lib/anydbm.py'>\n"
">>> # Relative import\n"
">>> file_util = import_module('..file_util', 'distutils.command')\n"
">>> file_util\n"
"<module 'distutils.file_util' from '/python/Lib/distutils/file_util.pyc'>"
msgstr ""
">>> från importlib import import_modul\n"
">>> anydbm = import_module('anydbm') # Standard absolut import\n"
">>> anydbm\n"
"<Modul 'anydbm' från '/p/python/Lib/anydbm.py'> >>> # Relativ import\n"
">>> # Relativ import\n"
">>> file_util = import_module('..file_util', 'distutils.command')\n"
">>> file_util\n"
"<modul 'distutils.file_util' från '/python/Lib/distutils/file_util.pyc'>"

msgid ""
":mod:`importlib` was implemented by Brett Cannon and introduced in Python "
"3.1."
msgstr ""
":mod:`importlib` implementerades av Brett Cannon och infördes i Python 3.1."

msgid "New module: sysconfig"
msgstr "Ny modul: sysconfig"

msgid ""
"The :mod:`sysconfig` module has been pulled out of the Distutils package, "
"becoming a new top-level module in its own right. :mod:`sysconfig` provides "
"functions for getting information about Python's build process: compiler "
"switches, installation paths, the platform name, and whether Python is "
"running from its source directory."
msgstr ""
"Modulen :mod:`sysconfig` har dragits ut ur Distutils-paketet och blivit en "
"ny toppnivåmodul i sin egen rätt. :mod:`sysconfig` innehåller funktioner för "
"att få information om Pythons byggprocess: kompilatorbyten, "
"installationssökvägar, plattformsnamn och om Python körs från källkatalogen."

msgid "Some of the functions in the module are:"
msgstr "Några av funktionerna i modulen är:"

msgid ""
":func:`~sysconfig.get_config_var` returns variables from Python's Makefile "
"and the :file:`pyconfig.h` file."
msgstr ""
":func:`~sysconfig.get_config_var` returnerar variabler från Pythons Makefile "
"och filen :file:`pyconfig.h`."

msgid ""
":func:`~sysconfig.get_config_vars` returns a dictionary containing all of "
"the configuration variables."
msgstr ""
":func:`~sysconfig.get_config_vars` returnerar en ordbok som innehåller alla "
"konfigurationsvariabler."

msgid ""
":func:`~sysconfig.get_path` returns the configured path for a particular "
"type of module: the standard library, site-specific modules, platform-"
"specific modules, etc."
msgstr ""
":func:`~sysconfig.get_path` returnerar den konfigurerade sökvägen för en "
"viss typ av modul: standardbiblioteket, platsspecifika moduler, "
"plattformsspecifika moduler etc."

msgid ""
":func:`~sysconfig.is_python_build` returns true if you're running a binary "
"from a Python source tree, and false otherwise."
msgstr ""
":func:`~sysconfig.is_python_build` returnerar true om du kör en binärfil "
"från ett Python-källträd, och false annars."

msgid ""
"Consult the :mod:`sysconfig` documentation for more details and for a "
"complete list of functions."
msgstr ""
"Mer information och en fullständig lista över funktioner finns i :mod:"
"`sysconfig`-dokumentationen."

msgid ""
"The Distutils package and :mod:`sysconfig` are now maintained by Tarek "
"Ziadé, who has also started a Distutils2 package (source repository at "
"https://hg.python.org/distutils2/) for developing a next-generation version "
"of Distutils."
msgstr ""
"Distutils-paketet och :mod:`sysconfig` underhålls nu av Tarek Ziadé, som "
"också har startat ett Distutils2-paket (källförvar på https://hg.python.org/"
"distutils2/) för att utveckla en nästa generations version av Distutils."

msgid "ttk: Themed Widgets for Tk"
msgstr "ttk: Tematiserade widgets för Tk"

msgid ""
"Tcl/Tk 8.5 includes a set of themed widgets that re-implement basic Tk "
"widgets but have a more customizable appearance and can therefore more "
"closely resemble the native platform's widgets.  This widget set was "
"originally called Tile, but was renamed to Ttk (for \"themed Tk\") on being "
"added to Tcl/Tck release 8.5."
msgstr ""
"Tcl/Tk 8.5 innehåller en uppsättning tematiska widgetar som "
"återimplementerar grundläggande Tk-widgetar men har ett mer anpassningsbart "
"utseende och därför kan likna den inbyggda plattformens widgetar mer.  Denna "
"widgetuppsättning kallades ursprungligen Tile, men döptes om till Ttk (för "
"\"themed Tk\") när den lades till i Tcl/Tck version 8.5."

msgid ""
"To learn more, read the :mod:`~tkinter.ttk` module documentation.  You may "
"also wish to read the Tcl/Tk manual page describing the Ttk theme engine, "
"available at https://www.tcl.tk/man/tcl8.5/TkCmd/ttk_intro.html. Some "
"screenshots of the Python/Ttk code in use are at https://code.google.com/"
"archive/p/python-ttk/wikis/Screenshots.wiki."
msgstr ""
"Om du vill veta mer kan du läsa dokumentationen för modulen :mod:`~tkinter."
"ttk`.  Du kanske också vill läsa Tcl/Tk-manualsidan som beskriver Ttk-"
"temamotorn, som finns på https://www.tcl.tk/man/tcl8.5/TkCmd/ttk_intro.html. "
"Några skärmdumpar av Python/Ttk-koden som används finns på https://code."
"google.com/archive/p/python-ttk/wikis/Screenshots.wiki."

msgid ""
"The :mod:`tkinter.ttk` module was written by Guilherme Polo and added in :"
"issue:`2983`.  An alternate version called ``Tile.py``, written by Martin "
"Franklin and maintained by Kevin Walzer, was proposed for inclusion in :"
"issue:`2618`, but the authors argued that Guilherme Polo's work was more "
"comprehensive."
msgstr ""
"Modulen :mod:`tkinter.ttk` skrevs av Guilherme Polo och lades till i :issue:"
"`2983`.  En alternativ version kallad ``Tile.py``, skriven av Martin "
"Franklin och underhållen av Kevin Walzer, föreslogs för inkludering i :issue:"
"`2618`, men författarna hävdade att Guilherme Polos arbete var mer "
"omfattande."

msgid "Updated module: unittest"
msgstr "Uppdaterad modul: unittest"

msgid ""
"The :mod:`unittest` module was greatly enhanced; many new features were "
"added.  Most of these features were implemented by Michael Foord, unless "
"otherwise noted.  The enhanced version of the module is downloadable "
"separately for use with Python versions 2.4 to 2.6, packaged as the :mod:`!"
"unittest2` package, from :pypi:`unittest2`."
msgstr ""
"Modulen :mod:`unittest` har förbättrats avsevärt och många nya funktioner "
"har lagts till.  De flesta av dessa funktioner har implementerats av Michael "
"Foord, om inte annat anges.  Den förbättrade versionen av modulen kan laddas "
"ner separat för användning med Python-versionerna 2.4 till 2.6, paketerad "
"som paketet :mod:`!unittest2`, från :pypi:`unittest2`."

msgid ""
"When used from the command line, the module can automatically discover "
"tests.  It's not as fancy as `py.test <https://pytest.org>`__ or `nose "
"<https://nose.readthedocs.io/>`__, but provides a simple way to run tests "
"kept within a set of package directories.  For example, the following "
"command will search the :file:`test/` subdirectory for any importable test "
"files named ``test*.py``::"
msgstr ""
"När modulen används från kommandoraden kan den automatiskt upptäcka tester.  "
"Det är inte lika snyggt som `py.test <https://pytest.org>`__ eller `nose "
"<https://nose.readthedocs.io/>`__, men ger ett enkelt sätt att köra tester "
"som finns i en uppsättning paketkataloger.  Till exempel kommer följande "
"kommando att söka i underkatalogen :file:`test/` efter alla importerbara "
"testfiler med namnet ``test*.py``::"

msgid "python -m unittest discover -s test"
msgstr "python -m unittest discover -s test"

msgid ""
"Consult the :mod:`unittest` module documentation for more details. "
"(Developed in :issue:`6001`.)"
msgstr ""
"Se dokumentationen för modulen :mod:`unittest` för mer information. "
"(Utvecklad i :issue:`6001`.)"

msgid "The :func:`~unittest.main` function supports some other new options:"
msgstr ""
"Funktionen :func:`~unittest.main` har stöd för några andra nya alternativ:"

msgid ""
":option:`-b <unittest -b>` or :option:`!--buffer` will buffer the standard "
"output and standard error streams during each test.  If the test passes, any "
"resulting output will be discarded; on failure, the buffered output will be "
"displayed."
msgstr ""
":option:`-b <unittest -b>` eller :option:`!--buffer` buffrar standardutdata- "
"och standardfelströmmarna under varje test.  Om testet godkänns kommer all "
"resulterande utdata att kasseras; om testet misslyckas kommer den buffrade "
"utdata att visas."

msgid ""
":option:`-c <unittest -c>` or :option:`!--catch` will cause the control-C "
"interrupt to be handled more gracefully.  Instead of interrupting the test "
"process immediately, the currently running test will be completed and then "
"the partial results up to the interruption will be reported. If you're "
"impatient, a second press of control-C will cause an immediate interruption."
msgstr ""
":option:`-c <unittest -c>` eller :option:`!--catch` gör att avbrottet i "
"kontroll-C hanteras på ett mer elegant sätt.  Istället för att avbryta "
"testprocessen omedelbart, kommer det pågående testet att slutföras och sedan "
"kommer delresultaten fram till avbrottet att rapporteras. Om du är otålig "
"kan du trycka på control-C en gång till för att orsaka ett omedelbart "
"avbrott."

msgid ""
"This control-C handler tries to avoid causing problems when the code being "
"tested or the tests being run have defined a signal handler of their own, by "
"noticing that a signal handler was already set and calling it.  If this "
"doesn't work for you, there's a :func:`~unittest.removeHandler` decorator "
"that can be used to mark tests that should have the control-C handling "
"disabled."
msgstr ""
"Denna kontroll-C-hanterare försöker undvika att orsaka problem när koden som "
"testas eller testerna som körs har definierat en egen signalhanterare, genom "
"att märka att en signalhanterare redan var inställd och anropa den.  Om det "
"här inte fungerar för dig finns det en :func:`~unittest.removeHandler`-"
"dekorator som kan användas för att markera tester som bör ha kontroll-C-"
"hanteringen inaktiverad."

msgid ""
":option:`-f <unittest -f>` or :option:`!--failfast` makes test execution "
"stop immediately when a test fails instead of continuing to execute further "
"tests.  (Suggested by Cliff Dyer and implemented by Michael Foord; :issue:"
"`8074`.)"
msgstr ""
":option:`-f <unittest -f>` eller :option:`!--failfast` gör att testkörningen "
"stoppas omedelbart när ett test misslyckas istället för att fortsätta att "
"köra ytterligare tester.  (Föreslaget av Cliff Dyer och implementerat av "
"Michael Foord; :issue:`8074`.)"

msgid ""
"The progress messages now show 'x' for expected failures and 'u' for "
"unexpected successes when run in verbose mode. (Contributed by Benjamin "
"Peterson.)"
msgstr ""
"Förloppsmeddelandena visar nu \"x\" för förväntade misslyckanden och \"u\" "
"för oväntade framgångar när de körs i verbose-läge. (Bidrag från Benjamin "
"Peterson.)"

msgid ""
"Test cases can raise the :exc:`~unittest.SkipTest` exception to skip a test "
"(:issue:`1034053`)."
msgstr ""
"Testfall kan ge upphov till :exc:`~unittest.SkipTest`-undantaget för att "
"hoppa över ett test (:issue:`1034053`)."

msgid ""
"The error messages for :meth:`~unittest.TestCase.assertEqual`, :meth:"
"`~unittest.TestCase.assertTrue`, and :meth:`~unittest.TestCase.assertFalse` "
"failures now provide more information.  If you set the :attr:`~unittest."
"TestCase.longMessage` attribute of your :class:`~unittest.TestCase` classes "
"to true, both the standard error message and any additional message you "
"provide will be printed for failures.  (Added by Michael Foord; :issue:"
"`5663`.)"
msgstr ""
"Felmeddelandena för :meth:`~unittest.TestCase.assertEqual`, :meth:`~unittest."
"TestCase.assertTrue` och :meth:`~unittest.TestCase.assertFalse` ger nu mer "
"information.  Om du sätter attributet :attr:`~unittest.TestCase.longMessage` "
"i dina :class:`~unittest.TestCase`-klasser till true, kommer både "
"standardfelmeddelandet och eventuella ytterligare meddelanden som du anger "
"att skrivas ut för misslyckanden.  (Tillagd av Michael Foord; :issue:`5663`.)"

msgid ""
"The :meth:`~unittest.TestCase.assertRaises` method now returns a context "
"handler when called without providing a callable object to run.  For "
"example, you can write this::"
msgstr ""
"Metoden :meth:`~unittest.TestCase.assertRaises` returnerar nu en "
"kontexthanterare när den anropas utan att tillhandahålla ett anropbart "
"objekt att köra.  Du kan till exempel skriva så här::"

msgid ""
"with self.assertRaises(KeyError):\n"
"    {}['foo']"
msgstr ""
"med self.assertRaises(KeyError):\n"
"    {}['foo']"

msgid "(Implemented by Antoine Pitrou; :issue:`4444`.)"
msgstr "(Implementerad av Antoine Pitrou; :issue:`4444`.)"

msgid ""
"Module- and class-level setup and teardown fixtures are now supported. "
"Modules can contain :func:`~unittest.setUpModule` and :func:`~unittest."
"tearDownModule` functions.  Classes can have :meth:`~unittest.TestCase."
"setUpClass` and :meth:`~unittest.TestCase.tearDownClass` methods that must "
"be defined as class methods (using ``@classmethod`` or equivalent).  These "
"functions and methods are invoked when the test runner switches to a test "
"case in a different module or class."
msgstr ""
"Fixturer för uppsättning och nedtagning på modul- och klassnivå stöds nu. "
"Moduler kan innehålla funktionerna :func:`~unittest.setUpModule` och :func:"
"`~unittest.tearDownModule`.  Klasser kan ha metoderna :meth:`~unittest."
"TestCase.setUpClass` och :meth:`~unittest.TestCase.tearDownClass` som måste "
"definieras som klassmetoder (med ``@classmethod`` eller motsvarande).  Dessa "
"funktioner och metoder anropas när testlöparen växlar till ett testfall i en "
"annan modul eller klass."

msgid ""
"The methods :meth:`~unittest.TestCase.addCleanup` and :meth:`~unittest."
"TestCase.doCleanups` were added. :meth:`~unittest.TestCase.addCleanup` lets "
"you add cleanup functions that will be called unconditionally (after :meth:"
"`~unittest.TestCase.setUp` if :meth:`~unittest.TestCase.setUp` fails, "
"otherwise after :meth:`~unittest.TestCase.tearDown`). This allows for much "
"simpler resource allocation and deallocation during tests (:issue:`5679`)."
msgstr ""
"Metoderna :meth:`~unittest.TestCase.addCleanup` och :meth:`~unittest."
"TestCase.doCleanups` har lagts till. med :meth:`~unittest.TestCase."
"addCleanup` kan du lägga till rensningsfunktioner som anropas villkorslöst "
"(efter :meth:`~unittest.TestCase.setUp` om :meth:`~unittest.TestCase.setUp` "
"misslyckas, annars efter :meth:`~unittest.TestCase.tearDown`). Detta "
"möjliggör mycket enklare resursallokering och -deallokering under tester (:"
"issue:`5679`)."

msgid ""
"A number of new methods were added that provide more specialized tests.  "
"Many of these methods were written by Google engineers for use in their test "
"suites; Gregory P. Smith, Michael Foord, and GvR worked on merging them into "
"Python's version of :mod:`unittest`."
msgstr ""
"Ett antal nya metoder har lagts till som ger mer specialiserade tester.  "
"Många av dessa metoder skrevs av Google-ingenjörer för användning i deras "
"testsviter; Gregory P. Smith, Michael Foord och GvR arbetade med att slå "
"samman dem i Pythons version av :mod:`unittest`."

msgid ""
":meth:`~unittest.TestCase.assertIsNone` and :meth:`~unittest.TestCase."
"assertIsNotNone` take one expression and verify that the result is or is not "
"``None``."
msgstr ""
":meth:`~unittest.TestCase.assertIsNone` och :meth:`~unittest.TestCase."
"assertIsNotNone` tar ett uttryck och verifierar att resultatet är eller inte "
"är ``None``."

msgid ""
":meth:`~unittest.TestCase.assertIs` and :meth:`~unittest.TestCase."
"assertIsNot` take two values and check whether the two values evaluate to "
"the same object or not. (Added by Michael Foord; :issue:`2578`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIs` och :meth:`~unittest.TestCase."
"assertIsNot` tar två värden och kontrollerar om de två värdena utvärderas "
"till samma objekt eller inte. (Tillagd av Michael Foord; :issue:`2578`.)"

msgid ""
":meth:`~unittest.TestCase.assertIsInstance` and :meth:`~unittest.TestCase."
"assertNotIsInstance` check whether the resulting object is an instance of a "
"particular class, or of one of a tuple of classes.  (Added by Georg Brandl; :"
"issue:`7031`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIsInstance` och :meth:`~unittest.TestCase."
"assertNotIsInstance` kontrollerar om det resulterande objektet är en instans "
"av en viss klass, eller av en av flera klasser.  (Tillagd av Georg Brandl; :"
"issue:`7031`.)"

msgid ""
":meth:`~unittest.TestCase.assertGreater`, :meth:`~unittest.TestCase."
"assertGreaterEqual`, :meth:`~unittest.TestCase.assertLess`, and :meth:"
"`~unittest.TestCase.assertLessEqual` compare two quantities."
msgstr ""
":meth:`~unittest.TestCase.assertGreater`, :meth:`~unittest.TestCase."
"assertGreaterEqual`, :meth:`~unittest.TestCase.assertLess` och :meth:"
"`~unittest.TestCase.assertLessEqual` jämför två storheter."

msgid ""
":meth:`~unittest.TestCase.assertMultiLineEqual` compares two strings, and if "
"they're not equal, displays a helpful comparison that highlights the "
"differences in the two strings.  This comparison is now used by default when "
"Unicode strings are compared with :meth:`~unittest.TestCase.assertEqual`."
msgstr ""
":meth:`~unittest.TestCase.assertMultiLineEqual` jämför två strängar och om "
"de inte är lika visas en användbar jämförelse som belyser skillnaderna "
"mellan de två strängarna.  Denna jämförelse används nu som standard när "
"Unicode-strängar jämförs med :meth:`~unittest.TestCase.assertEqual`."

msgid ""
":meth:`assertRegexpMatches() <unittest.TestCase.assertRegex>` and :meth:"
"`assertNotRegexpMatches() <unittest.TestCase.assertNotRegex>` checks whether "
"the first argument is a string matching or not matching the regular "
"expression provided as the second argument (:issue:`8038`)."
msgstr ""
":meth:`assertRegexpMatches() <unittest.TestCase.assertRegex>` och :meth:"
"`assertNotRegexpMatches() <unittest.TestCase.assertNotRegex>` kontrollerar "
"om det första argumentet är en sträng som matchar eller inte matchar det "
"reguljära uttryck som anges som det andra argumentet (:issue:`8038`)."

msgid ""
":meth:`assertRaisesRegexp() <unittest.TestCase.assertRaisesRegex>` checks "
"whether a particular exception is raised, and then also checks that the "
"string representation of the exception matches the provided regular "
"expression."
msgstr ""
":meth:`assertRaisesRegexp() <unittest.TestCase.assertRaisesRegex>` "
"kontrollerar om ett visst undantag har uppstått, och kontrollerar sedan "
"också att strängrepresentationen av undantaget matchar det angivna reguljära "
"uttrycket."

msgid ""
":meth:`~unittest.TestCase.assertIn` and :meth:`~unittest.TestCase."
"assertNotIn` tests whether *first* is or is not in  *second*."
msgstr ""
":meth:`~unittest.TestCase.assertIn` och :meth:`~unittest.TestCase."
"assertNotIn` testar om *first* är eller inte är i *second*."

msgid ""
":meth:`assertItemsEqual() <unittest.TestCase.assertCountEqual>` tests "
"whether two provided sequences contain the same elements."
msgstr ""
":meth:`assertItemsEqual() <unittest.TestCase.assertCountEqual>` testar om "
"två angivna sekvenser innehåller samma element."

msgid ""
":meth:`~unittest.TestCase.assertSetEqual` compares whether two sets are "
"equal, and only reports the differences between the sets in case of error."
msgstr ""
":meth:`~unittest.TestCase.assertSetEqual` jämför om två uppsättningar är "
"lika, och rapporterar endast skillnaderna mellan uppsättningarna i händelse "
"av fel."

msgid ""
"Similarly, :meth:`~unittest.TestCase.assertListEqual` and :meth:`~unittest."
"TestCase.assertTupleEqual` compare the specified types and explain any "
"differences without necessarily printing their full values; these methods "
"are now used by default when comparing lists and tuples using :meth:"
"`~unittest.TestCase.assertEqual`. More generally, :meth:`~unittest.TestCase."
"assertSequenceEqual` compares two sequences and can optionally check whether "
"both sequences are of a particular type."
msgstr ""
"På samma sätt jämför :meth:`~unittest.TestCase.assertListEqual` och :meth:"
"`~unittest.TestCase.assertTupleEqual` de angivna typerna och förklarar "
"eventuella skillnader utan att nödvändigtvis skriva ut deras fullständiga "
"värden; dessa metoder används nu som standard när listor och tuplar jämförs "
"med :meth:`~unittest.TestCase.assertEqual`. Mer allmänt jämför :meth:"
"`~unittest.TestCase.assertSequenceEqual` två sekvenser och kan eventuellt "
"kontrollera om båda sekvenserna är av en viss typ."

msgid ""
":meth:`~unittest.TestCase.assertDictEqual` compares two dictionaries and "
"reports the differences; it's now used by default when you compare two "
"dictionaries using :meth:`~unittest.TestCase.assertEqual`.  :meth:`!"
"assertDictContainsSubset` checks whether all of the key/value pairs in "
"*first* are found in *second*."
msgstr ""
":meth:`~unittest.TestCase.assertDictEqual` jämför två ordböcker och "
"rapporterar skillnaderna; den används nu som standard när du jämför två "
"ordböcker med :meth:`~unittest.TestCase.assertEqual`. :meth:`!"
"assertDictContainsSubset` kontrollerar om alla nyckel/värde-par i *första* "
"finns i *andra*."

msgid ""
":meth:`~unittest.TestCase.assertAlmostEqual` and :meth:`~unittest.TestCase."
"assertNotAlmostEqual` test whether *first* and *second* are approximately "
"equal.  This method can either round their difference to an optionally "
"specified number of *places* (the default is 7) and compare it to zero, or "
"require the difference to be smaller than a supplied *delta* value."
msgstr ""
":meth:`~unittest.TestCase.assertAlmostEqual` och :meth:`~unittest.TestCase."
"assertNotAlmostEqual` testar om *first* och *second* är ungefär lika stora.  "
"Denna metod kan antingen avrunda skillnaden till ett valfritt angivet antal "
"*platser* (standard är 7) och jämföra den med noll, eller kräva att "
"skillnaden är mindre än ett angivet *delta*-värde."

msgid ""
":meth:`~unittest.TestLoader.loadTestsFromName` properly honors the :attr:"
"`~unittest.TestLoader.suiteClass` attribute of the :class:`~unittest."
"TestLoader`. (Fixed by Mark Roddy; :issue:`6866`.)"
msgstr ""
":meth:`~unittest.TestLoader.loadTestsFromName` tar korrekt hänsyn till "
"attributet :attr:`~unittest.TestLoader.suiteClass` i :class:`~unittest."
"TestLoader`. (Åtgärdat av Mark Roddy; :issue:`6866`.)"

msgid ""
"A new hook lets you extend the :meth:`~unittest.TestCase.assertEqual` method "
"to handle new data types.  The :meth:`~unittest.TestCase."
"addTypeEqualityFunc` method takes a type object and a function. The function "
"will be used when both of the objects being compared are of the specified "
"type.  This function should compare the two objects and raise an exception "
"if they don't match; it's a good idea for the function to provide additional "
"information about why the two objects aren't matching, much as the new "
"sequence comparison methods do."
msgstr ""
"En ny krok låter dig utöka metoden :meth:`~unittest.TestCase.assertEqual` "
"för att hantera nya datatyper.  Metoden :meth:`~unittest.TestCase."
"addTypeEqualityFunc` tar ett typobjekt och en funktion. Funktionen kommer "
"att användas när båda objekten som jämförs är av den angivna typen.  Denna "
"funktion bör jämföra de två objekten och ge upphov till ett undantag om de "
"inte matchar varandra; det är en bra idé att funktionen ger ytterligare "
"information om varför de två objekten inte matchar varandra, ungefär som de "
"nya metoderna för sekvensjämförelse gör."

msgid ""
":func:`unittest.main` now takes an optional ``exit`` argument.  If false, :"
"func:`~unittest.main` doesn't call :func:`sys.exit`, allowing :func:"
"`~unittest.main` to be used from the interactive interpreter. (Contributed "
"by J. Pablo Fernández; :issue:`3379`.)"
msgstr ""
":func:`unittest.main` tar nu ett valfritt ``exit`` argument.  Om false, "
"anropar :func:`~unittest.main` inte :func:`sys.exit`, vilket gör att :func:"
"`~unittest.main` kan användas från den interaktiva tolken. (Bidrag från J. "
"Pablo Fernández; :issue:`3379`.)"

msgid ""
":class:`~unittest.TestResult` has new :meth:`~unittest.TestResult."
"startTestRun` and :meth:`~unittest.TestResult.stopTestRun` methods that are "
"called immediately before and after a test run.  (Contributed by Robert "
"Collins; :issue:`5728`.)"
msgstr ""
":class:`~unittest.TestResult` har nya :meth:`~unittest.TestResult."
"startTestRun` och :meth:`~unittest.TestResult.stopTestRun` metoder som "
"anropas omedelbart före och efter en testkörning.  (Bidrag från Robert "
"Collins; :issue:`5728`.)"

msgid ""
"With all these changes, the :file:`unittest.py` was becoming awkwardly "
"large, so the module was turned into a package and the code split into "
"several files (by Benjamin Peterson).  This doesn't affect how the module is "
"imported or used."
msgstr ""
"Med alla dessa ändringar började :filen:`unittest.py` bli besvärande stor, "
"så modulen gjordes om till ett paket och koden delades upp i flera filer (av "
"Benjamin Peterson).  Detta påverkar inte hur modulen importeras eller "
"används."

msgid ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/"
"python/articles/unittest2.shtml"
msgstr ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/"
"python/articles/unittest2.shtml"

msgid ""
"Describes the new features, how to use them, and the rationale for various "
"design decisions.  (By Michael Foord.)"
msgstr ""
"Beskriver de nya funktionerna, hur man använder dem och motiven för olika "
"designbeslut.  (Av Michael Foord.)"

msgid "Updated module: ElementTree 1.3"
msgstr "Uppdaterad modul: ElementTree 1.3"

msgid ""
"The version of the ElementTree library included with Python was updated to "
"version 1.3.  Some of the new features are:"
msgstr ""
"Den version av ElementTree-biblioteket som ingår i Python har uppdaterats "
"till version 1.3.  Några av de nya funktionerna är:"

msgid ""
"The various parsing functions now take a *parser* keyword argument giving "
"an :class:`~xml.etree.ElementTree.XMLParser` instance that will be used.  "
"This makes it possible to override the file's internal encoding::"
msgstr ""
"De olika parsingfunktionerna tar nu ett *parser* nyckelordsargument som ger "
"en :class:`~xml.etree.ElementTree.XMLParser`-instans som ska användas.  "
"Detta gör det möjligt att åsidosätta filens interna kodning::"

msgid ""
"p = ET.XMLParser(encoding='utf-8')\n"
"t = ET.XML(\"\"\"<root/>\"\"\", parser=p)"
msgstr ""
"p = ET.XMLParser(kodning='utf-8')\n"
"t = ET.XML(\"\"\"<root/>\"\"\", parser=p)"

msgid ""
"Errors in parsing XML now raise a :exc:`~xml.etree.ElementTree.ParseError` "
"exception, whose instances have a :attr:`!position` attribute containing a "
"(*line*, *column*) tuple giving the location of the problem."
msgstr ""
"Fel vid XML-parsning ger nu upphov till ett :exc:`~xml.etree.ElementTree."
"ParseError`-undantag, vars instanser har ett :attr:`!position`-attribut som "
"innehåller en (*rad*, *kolumn*)-tupel som anger var problemet finns."

msgid ""
"ElementTree's code for converting trees to a string has been significantly "
"reworked, making it roughly twice as fast in many cases.  The :meth:"
"`ElementTree.write() <xml.etree.ElementTree.ElementTree.write>` and :meth:"
"`Element.write` methods now have a *method* parameter that can be "
"\"xml\" (the default), \"html\", or \"text\".  HTML mode will output empty "
"elements as ``<empty></empty>`` instead of ``<empty/>``, and text mode will "
"skip over elements and only output the text chunks.  If you set the :attr:"
"`~xml.etree.ElementTree.Element.tag` attribute of an element to ``None`` but "
"leave its children in place, the element will be omitted when the tree is "
"written out, so you don't need to do more extensive rearrangement to remove "
"a single element."
msgstr ""
"ElementTrees kod för att konvertera träd till en sträng har omarbetats "
"avsevärt, vilket gör den ungefär dubbelt så snabb i många fall.  Metoderna :"
"meth:`ElementTree.write() <xml.etree.ElementTree.ElementTree.write>` och :"
"meth:`Element.write` har nu en *method*-parameter som kan vara "
"\"xml\" (standard), \"html\" eller \"text\".  HTML-läget skriver ut tomma "
"element som ``<empty></empty>`` istället för ``<empty/>``, och textläget "
"hoppar över element och skriver bara ut textstyckena.  Om du sätter "
"attributet :attr:`~xml.etree.ElementTree.Element.tag` för ett element till "
"``None`` men låter dess barn vara kvar, kommer elementet att utelämnas när "
"trädet skrivs ut, så att du inte behöver göra mer omfattande omarrangemang "
"för att ta bort ett enda element."

msgid ""
"Namespace handling has also been improved.  All ``xmlns:<whatever>`` "
"declarations are now output on the root element, not scattered throughout "
"the resulting XML.  You can set the default namespace for a tree by setting "
"the :attr:`default_namespace` attribute and can register new prefixes with :"
"meth:`~xml.etree.ElementTree.register_namespace`.  In XML mode, you can use "
"the true/false *xml_declaration* parameter to suppress the XML declaration."
msgstr ""
"Hanteringen av namnrymder har också förbättrats.  Alla ``xmlns:<whatever>``-"
"deklarationer visas nu i rotelementet och inte utspridda i den resulterande "
"XML-filen.  Du kan ange standardnamnrymden för ett träd genom att ange "
"attributet :attr:`default_namespace` och du kan registrera nya prefix med :"
"meth:`~xml.etree.ElementTree.register_namespace`.  I XML-läge kan du använda "
"true/false-parametern *xml_declaration* för att undertrycka XML-"
"deklarationen."

msgid ""
"New :class:`~xml.etree.ElementTree.Element` method: :meth:`~xml.etree."
"ElementTree.Element.extend` appends the items from a sequence to the "
"element's children.  Elements themselves behave like sequences, so it's easy "
"to move children from one element to another::"
msgstr ""
"Ny :class:`~xml.etree.ElementTree.Element` metod: :meth:`~xml.etree."
"ElementTree.Element.extend` lägger till objekten från en sekvens till "
"elementets barn.  Elementen själva beter sig som sekvenser, så det är lätt "
"att flytta barn från ett element till ett annat::"

msgid ""
"from xml.etree import ElementTree as ET\n"
"\n"
"t = ET.XML(\"\"\"<list>\n"
"  <item>1</item> <item>2</item>  <item>3</item>\n"
"</list>\"\"\")\n"
"new = ET.XML('<root/>')\n"
"new.extend(t)\n"
"\n"
"# Outputs <root><item>1</item>...</root>\n"
"print ET.tostring(new)"
msgstr ""
"from xml.etree import ElementTree as ET\n"
"\n"
"t = ET.XML(\"\"\"<list>\n"
"  <item>1</item> <item>2</item>  <item>3</item>\n"
"</list>\"\"\")\n"
"new = ET.XML('<root/>')\n"
"new.extend(t)\n"
"\n"
"# Utmatning <root><item>1.</item>..</root>\n"
"print ET.tostring(ny)"

msgid ""
"New :class:`~xml.etree.ElementTree.Element` method: :meth:`~xml.etree."
"ElementTree.Element.iter` yields the children of the element as a "
"generator.  It's also possible to write ``for child in elem:`` to loop over "
"an element's children.  The existing method :meth:`!getiterator` is now "
"deprecated, as is :meth:`!getchildren` which constructs and returns a list "
"of children."
msgstr ""
"Ny :class:`~xml.etree.ElementTree.Element`-metod: :meth:`~xml.etree."
"ElementTree.Element.iter` ger elementets barn som en generator.  Det är "
"också möjligt att skriva ``for child in elem:`` för att loopa över ett "
"elements barn.  Den befintliga metoden :meth:`!getiterator` är nu avförd, "
"liksom :meth:`!getchildren` som konstruerar och returnerar en lista med barn."

msgid ""
"New :class:`~xml.etree.ElementTree.Element` method: :meth:`~xml.etree."
"ElementTree.Element.itertext` yields all chunks of text that are descendants "
"of the element.  For example::"
msgstr ""
"Ny :class:`~xml.etree.ElementTree.Element` metod: :meth:`~xml.etree."
"ElementTree.Element.itertext` ger alla textstycken som är ättlingar till "
"elementet.  Till exempel::"

msgid ""
"t = ET.XML(\"\"\"<list>\n"
"  <item>1</item> <item>2</item>  <item>3</item>\n"
"</list>\"\"\")\n"
"\n"
"# Outputs ['\\n  ', '1', ' ', '2', '  ', '3', '\\n']\n"
"print list(t.itertext())"
msgstr ""
"t = ET.XML(\"\"\")<list>\n"
"  <item>1</item> <item>2</item>  <item>3</item>\n"
"</list>\"\"\")\n"
"\n"
"# Utgångar ['\\n ', '1', ' ', '2', ' ', '3', '\\n']\n"
"print list(t.itertext())"

msgid ""
"Deprecated: using an element as a Boolean (i.e., ``if elem:``) would return "
"true if the element had any children, or false if there were no children.  "
"This behaviour is confusing -- ``None`` is false, but so is a childless "
"element? -- so it will now trigger a :exc:`FutureWarning`.  In your code, "
"you should be explicit: write ``len(elem) != 0`` if you're interested in the "
"number of children, or ``elem is not None``."
msgstr ""
"Föråldrad: Om ett element användes som en booleansk formel (t.ex. ``if elem:"
"``) skulle resultatet bli sant om elementet hade några barn, eller falskt om "
"det inte hade några barn.  Detta beteende är förvirrande -- ``None`` är "
"falskt, men det är ett barnlöst element också? -- så det kommer nu att "
"utlösa en :exc:`FutureWarning`.  I din kod bör du vara explicit: skriv "
"``len(elem) != 0`` om du är intresserad av antalet barn, eller ``elem är "
"inte None``."

msgid ""
"Fredrik Lundh develops ElementTree and produced the 1.3 version; you can "
"read his article describing 1.3 at https://web.archive.org/"
"web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm. Florent "
"Xicluna updated the version included with Python, after discussions on "
"python-dev and in :issue:`6472`.)"
msgstr ""
"Fredrik Lundh utvecklar ElementTree och har tagit fram version 1.3; du kan "
"läsa hans artikel som beskriver 1.3 på https://web.archive.org/"
"web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm. Florent "
"Xicluna uppdaterade den version som ingår i Python, efter diskussioner på "
"python-dev och i :issue:`6472`)"

msgid "Build and C API Changes"
msgstr "Ändringar i Build och C API"

msgid "Changes to Python's build process and to the C API include:"
msgstr "Ändringar i Pythons byggprocess och i C API inkluderar:"

msgid ""
"The latest release of the GNU Debugger, GDB 7, can be `scripted using Python "
"<https://web.archive.org/web/20110715084810/http://sourceware.org/gdb/"
"current/onlinedocs/gdb/Python.html>`__. When you begin debugging an "
"executable program P, GDB will look for a file named ``P-gdb.py`` and "
"automatically read it.  Dave Malcolm contributed a :file:`python-gdb.py` "
"that adds a number of commands useful when debugging Python itself.  For "
"example, ``py-up`` and ``py-down`` go up or down one Python stack frame, "
"which usually corresponds to several C stack frames.  ``py-print`` prints "
"the value of a Python variable, and ``py-bt`` prints the Python stack "
"trace.  (Added as a result of :issue:`8032`.)"
msgstr ""
"Den senaste versionen av GNU Debugger, GDB 7, kan skrivas med hjälp av "
"Python <https://web.archive.org/web/20110715084810/http://sourceware.org/gdb/"
"current/onlinedocs/gdb/Python.html>`__. När du börjar felsöka ett körbart "
"program P kommer GDB att leta efter en fil med namnet ``P-gdb.py`` och "
"automatiskt läsa den.  Dave Malcolm bidrog med en :fil:`python-gdb.py` som "
"lägger till ett antal kommandon som är användbara vid debuggning av Python "
"självt.  Till exempel går ``py-up`` och ``py-down`` upp eller ner en Python-"
"stackram, vilket vanligtvis motsvarar flera C-stackramar.  ``py-print`` "
"skriver ut värdet på en Python-variabel och ``py-bt`` skriver ut Pythons "
"stackspårning.  (Tillagd som ett resultat av :issue:`8032`.)"

msgid ""
"If you use the :file:`.gdbinit` file provided with Python, the \"pyo\" macro "
"in the 2.7 version now works correctly when the thread being debugged "
"doesn't hold the GIL; the macro now acquires it before printing. "
"(Contributed by Victor Stinner; :issue:`3632`.)"
msgstr ""
"Om du använder filen :file:`.gdbinit` som medföljer Python, fungerar nu "
"makrot \"pyo\" i 2.7-versionen korrekt när tråden som felsöks inte har GIL; "
"makrot hämtar nu GIL innan det skrivs ut. (Bidrag från Victor Stinner; :"
"issue:`3632`.)"

msgid ""
":c:func:`Py_AddPendingCall` is now thread-safe, letting any worker thread "
"submit notifications to the main Python thread.  This is particularly useful "
"for asynchronous IO operations. (Contributed by Kristján Valur Jónsson; :"
"issue:`4293`.)"
msgstr ""
":c:func:`Py_AddPendingCall` är nu trådsäker, vilket gör att alla "
"arbetstrådar kan skicka meddelanden till Pythons huvudtråd.  Detta är "
"särskilt användbart för asynkrona IO-operationer. (Bidrag från Kristján "
"Valur Jónsson; :issue:`4293`.)"

msgid ""
"New function: :c:func:`PyCode_NewEmpty` creates an empty code object; only "
"the filename, function name, and first line number are required. This is "
"useful for extension modules that are attempting to construct a more useful "
"traceback stack.  Previously such extensions needed to call :c:func:`!"
"PyCode_New`, which had many more arguments.  (Added by Jeffrey Yasskin.)"
msgstr ""
"Ny funktion: :c:func:`PyCode_NewEmpty` skapar ett tomt kodobjekt; endast "
"filnamnet, funktionsnamnet och första radnumret krävs. Detta är användbart "
"för tilläggsmoduler som försöker konstruera en mer användbar traceback-"
"stack.  Tidigare behövde sådana tillägg anropa :c:func:`!PyCode_New`, som "
"hade många fler argument.  (Tillagd av Jeffrey Yasskin.)"

msgid ""
"New function: :c:func:`PyErr_NewExceptionWithDoc` creates a new exception "
"class, just as the existing :c:func:`PyErr_NewException` does, but takes an "
"extra ``char *`` argument containing the docstring for the new exception "
"class.  (Added by 'lekma' on the Python bug tracker; :issue:`7033`.)"
msgstr ""
"Ny funktion: :c:func:`PyErr_NewExceptionWithDoc` skapar en ny "
"undantagsklass, precis som den befintliga :c:func:`PyErr_NewException` gör, "
"men tar ett extra ``char *`` argument som innehåller dokumentsträngen för "
"den nya undantagsklassen.  (Tillagd av 'lekma' på Pythons buggtracker; :"
"issue:`7033`.)"

msgid ""
"New function: :c:func:`PyFrame_GetLineNumber` takes a frame object and "
"returns the line number that the frame is currently executing. Previously "
"code would need to get the index of the bytecode instruction currently "
"executing, and then look up the line number corresponding to that address.  "
"(Added by Jeffrey Yasskin.)"
msgstr ""
"Ny funktion: :c:func:`PyFrame_GetLineNumber` tar ett ramobjekt och "
"returnerar det radnummer som ramen för närvarande exekverar. Tidigare skulle "
"koden behöva hämta indexet för den bytecode-instruktion som för närvarande "
"körs och sedan leta upp radnumret som motsvarar den adressen.  (Tillagd av "
"Jeffrey Yasskin.)"

msgid ""
"New functions: :c:func:`PyLong_AsLongAndOverflow` and :c:func:"
"`PyLong_AsLongLongAndOverflow`  approximates a Python long integer as a C :c:"
"expr:`long` or :c:expr:`long long`. If the number is too large to fit into "
"the output type, an *overflow* flag is set and returned to the caller. "
"(Contributed by Case Van Horsen; :issue:`7528` and :issue:`7767`.)"
msgstr ""
"Nya funktioner: :c:func:`PyLong_AsLongAndOverflow` och :c:func:"
"`PyLong_AsLongLongAndOverflow` approximerar ett Python long integer som ett "
"C :c:expr:`long` eller :c:expr:`long long`. Om talet är för stort för att "
"passa in i utdatatypen sätts en *overflow*-flagga och returneras till den "
"som anropar. (Bidrag från Case Van Horsen; :issue:`7528` och :issue:`7767`.)"

msgid ""
"New function: stemming from the rewrite of string-to-float conversion, a "
"new :c:func:`PyOS_string_to_double` function was added.  The old :c:func:`!"
"PyOS_ascii_strtod` and :c:func:`!PyOS_ascii_atof` functions are now "
"deprecated."
msgstr ""
"Ny funktion: På grund av omskrivningen av sträng-till-float-konvertering har "
"en ny :c:func:`PyOS_string_to_double`-funktion lagts till.  De gamla "
"funktionerna :c:func:`!PyOS_ascii_strtod` och :c:func:`!PyOS_ascii_atof` är "
"nu föråldrade."

msgid ""
"New function: :c:func:`!PySys_SetArgvEx` sets the value of ``sys.argv`` and "
"can optionally update ``sys.path`` to include the directory containing the "
"script named by ``sys.argv[0]`` depending on the value of an *updatepath* "
"parameter."
msgstr ""
"Ny funktion: :c:func:`!PySys_SetArgvEx` sätter värdet på ``sys.argv`` och "
"kan eventuellt uppdatera ``sys.path`` till att inkludera katalogen som "
"innehåller skriptet som heter ``sys.argv[0]`` beroende på värdet av en "
"*updatepath*-parameter."

msgid ""
"This function was added to close a security hole for applications that embed "
"Python.  The old function, :c:func:`!PySys_SetArgv`, would always update "
"``sys.path``, and sometimes it would add the current directory.  This meant "
"that, if you ran an application embedding Python in a directory controlled "
"by someone else, attackers could put a Trojan-horse module in the directory "
"(say, a file named :file:`os.py`) that your application would then import "
"and run."
msgstr ""
"Denna funktion lades till för att täppa till ett säkerhetshål för program "
"som bäddar in Python.  Den gamla funktionen, :c:func:`!PySys_SetArgv`, "
"uppdaterade alltid ``sys.path``, och ibland lade den till den aktuella "
"katalogen.  Detta innebar att om du körde ett program som bäddade in Python "
"i en katalog som kontrollerades av någon annan, kunde angripare lägga in en "
"trojansk modul i katalogen (till exempel en fil med namnet :file:`os.py`) "
"som ditt program sedan importerade och körde."

msgid ""
"If you maintain a C/C++ application that embeds Python, check whether you're "
"calling :c:func:`!PySys_SetArgv` and carefully consider whether the "
"application should be using :c:func:`!PySys_SetArgvEx` with *updatepath* set "
"to false."
msgstr ""
"Om du underhåller ett C/C++-program som innehåller Python, kontrollera om du "
"anropar :c:func:`!PySys_SetArgv` och överväg noga om programmet ska använda :"
"c:func:`!PySys_SetArgvEx` med *updatepath* satt till false."

msgid ""
"Security issue reported as :cve:`2008-5983`; discussed in :issue:`5753`, and "
"fixed by Antoine Pitrou."
msgstr ""
"Säkerhetsproblem rapporterat som :cve:`2008-5983`; diskuterat i :issue:"
"`5753`, och åtgärdat av Antoine Pitrou."

msgid ""
"New macros: the Python header files now define the following macros: :c:"
"macro:`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, :c:macro:"
"`Py_ISLOWER`, :c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, :c:macro:"
"`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER`, and :c:macro:`Py_TOUPPER`. All of "
"these functions are analogous to the C standard macros for classifying "
"characters, but ignore the current locale setting, because in several places "
"Python needs to analyze characters in a locale-independent way.  (Added by "
"Eric Smith; :issue:`5793`.)"
msgstr ""
"Nya makron: Pythons rubrikfiler definierar nu följande makron: :c:macro:"
"`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, :c:macro:"
"`Py_ISLOWER`, :c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, :c:macro:"
"`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER`, och :c:macro:`Py_TOUPPER`. Alla dessa "
"funktioner är analoga med C-standardmakron för att klassificera tecken, men "
"ignorerar den aktuella locale-inställningen, eftersom Python på flera "
"ställen behöver analysera tecken på ett locale-oberoende sätt.  (Tillagd av "
"Eric Smith; :issue:`5793`.)"

msgid ""
"Removed function: :c:func:`!PyEval_CallObject` is now only available as a "
"macro.  A function version was being kept around to preserve ABI linking "
"compatibility, but that was in 1997; it can certainly be deleted by now.  "
"(Removed by Antoine Pitrou; :issue:`8276`.)"
msgstr ""
"Borttagen funktion: :c:func:`!PyEval_CallObject` är nu endast tillgänglig "
"som makro.  En funktionsversion behölls för att bevara ABI-"
"länkkompatibilitet, men det var 1997; den kan säkert ha tagits bort nu.  "
"(Borttagen av Antoine Pitrou; :issue:`8276`.)"

msgid ""
"New format codes: the :c:func:`!PyString_FromFormat`, :c:func:`!"
"PyString_FromFormatV`, and :c:func:`PyErr_Format` functions now accept "
"``%lld`` and ``%llu`` format codes for displaying C's :c:expr:`long long` "
"types. (Contributed by Mark Dickinson; :issue:`7228`.)"
msgstr ""
"Nya formatkoder: Funktionerna :c:func:`!PyString_FromFormat`, :c:func:`!"
"PyString_FromFormatV` och :c:func:`PyErr_Format` accepterar nu formatkoderna "
"``%lld`` och ``%llu`` för visning av C:s typer :c:expr:`long long`. (Bidrag "
"från Mark Dickinson; :issue:`7228`.)"

msgid ""
"The complicated interaction between threads and process forking has been "
"changed.  Previously, the child process created by :func:`os.fork` might "
"fail because the child is created with only a single thread running, the "
"thread performing the :func:`os.fork`. If other threads were holding a lock, "
"such as Python's import lock, when the fork was performed, the lock would "
"still be marked as \"held\" in the new process.  But in the child process "
"nothing would ever release the lock, since the other threads weren't "
"replicated, and the child process would no longer be able to perform imports."
msgstr ""
"Den komplicerade interaktionen mellan trådar och processforking har "
"ändrats.  Tidigare kunde barnprocessen som skapades av :func:`os.fork` "
"misslyckas eftersom barnet skapades med bara en enda tråd igång, den tråd "
"som utförde :func:`os.fork`. Om andra trådar höll ett lås, till exempel "
"Pythons importlås, när förgreningen utfördes, skulle låset fortfarande "
"markeras som \"hållet\" i den nya processen.  Men i barnprocessen skulle "
"ingenting någonsin släppa låset, eftersom de andra trådarna inte "
"replikerades, och barnprocessen skulle inte längre kunna utföra import."

msgid ""
"Python 2.7 acquires the import lock before performing an :func:`os.fork`, "
"and will also clean up any locks created using the :mod:`threading` module.  "
"C extension modules that have internal locks, or that call :c:func:`fork()` "
"themselves, will not benefit from this clean-up."
msgstr ""
"Python 2.7 förvärvar importlåset innan en :func:`os.fork` utförs, och kommer "
"också att rensa upp alla lås som skapats med :mod:`threading`-modulen.  C-"
"tilläggsmoduler som har interna lås, eller som själva anropar :c:func:"
"`fork()`, kommer inte att dra nytta av denna rensning."

msgid "(Fixed by Thomas Wouters; :issue:`1590864`.)"
msgstr "(Åtgärdat av Thomas Wouters; :issue:`1590864`.)"

msgid ""
"The :c:func:`Py_Finalize` function now calls the internal :func:`!threading."
"_shutdown` function; this prevents some exceptions from being raised when an "
"interpreter shuts down. (Patch by Adam Olsen; :issue:`1722344`.)"
msgstr ""
"Funktionen :c:func:`Py_Finalize` anropar nu den interna funktionen :func:`!"
"threading._shutdown`; detta förhindrar att vissa undantag uppstår när en "
"tolk stängs ner. (Patch av Adam Olsen; :issue:`1722344`.)"

msgid ""
"When using the :c:type:`PyMemberDef` structure to define attributes of a "
"type, Python will no longer let you try to delete or set a :c:macro:"
"`T_STRING_INPLACE` attribute."
msgstr ""
"När du använder :c:type:`PyMemberDef`-strukturen för att definiera attribut "
"för en typ, kommer Python inte längre att låta dig försöka ta bort eller "
"ställa in ett :c:macro:`T_STRING_INPLACE`-attribut."

msgid ""
"Global symbols defined by the :mod:`ctypes` module are now prefixed with "
"``Py``, or with ``_ctypes``.  (Implemented by Thomas Heller; :issue:`3102`.)"
msgstr ""
"Globala symboler som definieras av modulen :mod:`ctypes` prefixeras nu med "
"``Py``, eller med ``_ctypes``.  (Implementerat av Thomas Heller; :issue:"
"`3102`.)"

msgid ""
"New configure option: the :option:`!--with-system-expat` switch allows "
"building the :mod:`pyexpat <xml.parsers.expat>` module to use the system "
"Expat library. (Contributed by Arfrever Frehtes Taifersar Arahesis; :issue:"
"`7609`.)"
msgstr ""
"Nytt konfigureringsalternativ: Med :option:`!--with-system-expat` kan "
"modulen :mod:`pyexpat <xml.parsers.expat>` byggas så att den använder "
"systembiblioteket Expat. (Bidrag från Arfrever Frehtes Taifersar Arahesis; :"
"issue:`7609`.)"

msgid ""
"New configure option: the :option:`!--with-valgrind` option will now disable "
"the pymalloc allocator, which is difficult for the Valgrind memory-error "
"detector to analyze correctly. Valgrind will therefore be better at "
"detecting memory leaks and overruns. (Contributed by James Henstridge; :"
"issue:`2422`.)"
msgstr ""
"Nytt konfigureringsalternativ: alternativet :option:`!--with-valgrind` "
"inaktiverar nu allokeringsverktyget pymalloc, som är svårt för Valgrinds "
"minnesfelsdetektor att analysera korrekt. Valgrind kommer därför att bli "
"bättre på att upptäcka minnesläckor och överskridanden. (Bidrag från James "
"Henstridge; :issue:`2422`.)"

msgid ""
"New configure option: you can now supply an empty string to :option:`!--with-"
"dbmliborder=` in order to disable all of the various DBM modules.  (Added by "
"Arfrever Frehtes Taifersar Arahesis; :issue:`6491`.)"
msgstr ""
"Nytt konfigureringsalternativ: Du kan nu ange en tom sträng till :option:`!--"
"with-dbmliborder=` för att inaktivera alla olika DBM-moduler.  (Tillagd av "
"Arfrever Frehtes Taifersar Arahesis; :issue:`6491`.)"

msgid ""
"The :program:`configure` script now checks for floating-point rounding bugs "
"on certain 32-bit Intel chips and defines a :c:macro:`X87_DOUBLE_ROUNDING` "
"preprocessor definition.  No code currently uses this definition, but it's "
"available if anyone wishes to use it. (Added by Mark Dickinson; :issue:"
"`2937`.)"
msgstr ""
"Skriptet :program:`configure` kontrollerar nu för avrundningsbuggar för "
"flyttal på vissa 32-bitars Intel-chip och definierar en :c:macro:"
"`X87_DOUBLE_ROUNDING` preprocessordefinition.  Ingen kod använder för "
"närvarande denna definition, men den är tillgänglig om någon vill använda "
"den. (Tillagd av Mark Dickinson; :issue:`2937`.)"

msgid ""
":program:`configure` also now sets a :envvar:`LDCXXSHARED` Makefile variable "
"for supporting C++ linking.  (Contributed by Arfrever Frehtes Taifersar "
"Arahesis; :issue:`1222585`.)"
msgstr ""
":program:`configure` ställer nu också in en :envvar:`LDCXXSHARED` Makefile-"
"variabel för att stödja C++-länkning.  (Bidrag från Arfrever Frehtes "
"Taifersar Arahesis; :issue:`1222585`.)"

msgid ""
"The build process now creates the necessary files for pkg-config support.  "
"(Contributed by Clinton Roy; :issue:`3585`.)"
msgstr ""
"Byggprocessen skapar nu de nödvändiga filerna för stöd för pkg-config.  "
"(Bidrag från Clinton Roy; :issue:`3585`.)"

msgid ""
"The build process now supports Subversion 1.7.  (Contributed by Arfrever "
"Frehtes Taifersar Arahesis; :issue:`6094`.)"
msgstr ""
"Byggprocessen stöder nu Subversion 1.7. (Bidrag från Arfrever Frehtes "
"Taifersar Arahesis; :issue:`6094`.)"

msgid "Capsules"
msgstr "Kapslar"

msgid ""
"Python 3.1 adds a new C datatype, :c:type:`PyCapsule`, for providing a C API "
"to an extension module.  A capsule is essentially the holder of a C ``void "
"*`` pointer, and is made available as a module attribute; for example, the :"
"mod:`socket` module's API is exposed as ``socket.CAPI``, and :mod:"
"`unicodedata` exposes ``ucnhash_CAPI``.  Other extensions can import the "
"module, access its dictionary to get the capsule object, and then get the "
"``void *`` pointer, which will usually point to an array of pointers to the "
"module's various API functions."
msgstr ""
"Python 3.1 lägger till en ny C-datatyp, :c:type:`PyCapsule`, för att "
"tillhandahålla ett C API till en tilläggsmodul.  En kapsel är i huvudsak "
"innehavaren av en C ``void *`` pekare, och görs tillgänglig som ett "
"modulattribut; till exempel exponeras :mod:`socket`-modulens API som "
"``socket.CAPI``, och :mod:`unicodedata` exponerar ``ucnhash_CAPI``.  Andra "
"tillägg kan importera modulen, få tillgång till dess ordbok för att hämta "
"kapselobjektet och sedan hämta pekaren ``void *``, som vanligtvis pekar på "
"en array av pekare till modulens olika API-funktioner."

msgid ""
"There is an existing data type already used for this, :c:type:`!PyCObject`, "
"but it doesn't provide type safety.  Evil code written in pure Python could "
"cause a segmentation fault by taking a :c:type:`!PyCObject` from module A "
"and somehow substituting it for the :c:type:`!PyCObject` in module B.   "
"Capsules know their own name, and getting the pointer requires providing the "
"name:"
msgstr ""
"Det finns en befintlig datatyp som redan används för detta, :c:type:`!"
"PyCObject`, men den ger ingen typsäkerhet.  Ond kod skriven i ren Python "
"skulle kunna orsaka ett segmenteringsfel genom att ta en :c:type:`!"
"PyCObject` från modul A och på något sätt ersätta den med :c:type:`!"
"PyCObject` i modul B. Kapslar känner till sitt eget namn, och för att få "
"pekaren krävs att namnet anges:"

msgid ""
"void *vtable;\n"
"\n"
"if (!PyCapsule_IsValid(capsule, \"mymodule.CAPI\") {\n"
"        PyErr_SetString(PyExc_ValueError, \"argument type invalid\");\n"
"        return NULL;\n"
"}\n"
"\n"
"vtable = PyCapsule_GetPointer(capsule, \"mymodule.CAPI\");"
msgstr ""
"void *vtable;\n"
"\n"
"if (!PyCapsule_IsValid(capsule, \"mymodule.CAPI\") {\n"
"        PyErr_SetString(PyExc_ValueError, \"argumenttyp ogiltig\");\n"
"        returnera NULL;\n"
"}\n"
"\n"
"vtable = PyCapsule_GetPointer(capsule, \"mymodule.CAPI\");"

msgid ""
"You are assured that ``vtable`` points to whatever you're expecting. If a "
"different capsule was passed in, :c:func:`PyCapsule_IsValid` would detect "
"the mismatched name and return false.  Refer to :ref:`using-capsules` for "
"more information on using these objects."
msgstr ""
"Du kan vara säker på att ``vtable`` pekar på det du förväntar dig. Om en "
"annan kapsel skickades in, skulle :c:func:`PyCapsule_IsValid` upptäcka det "
"felaktiga namnet och returnera false.  Se :ref:`using-capsules` för mer "
"information om hur du använder dessa objekt."

msgid ""
"Python 2.7 now uses capsules internally to provide various extension-module "
"APIs, but the :c:func:`!PyCObject_AsVoidPtr` was modified to handle "
"capsules, preserving compile-time compatibility with the :c:type:`!"
"PyCObject` interface.  Use of :c:func:`!PyCObject_AsVoidPtr` will signal a :"
"exc:`PendingDeprecationWarning`, which is silent by default."
msgstr ""
"Python 2.7 använder nu kapslar internt för att tillhandahålla olika API:er "
"för tilläggsmoduler, men :c:func:`!PyCObject_AsVoidPtr` modifierades för att "
"hantera kapslar, vilket bevarar kompileringstidskompatibilitet med :c:type:`!"
"PyCObject`-gränssnittet.  Användning av :c:func:`!PyCObject_AsVoidPtr` "
"kommer att signalera en :exc:`PendingDeprecationWarning`, som är tyst som "
"standard."

msgid ""
"Implemented in Python 3.1 and backported to 2.7 by Larry Hastings; discussed "
"in :issue:`5630`."
msgstr ""
"Implementerad i Python 3.1 och bakåtporterad till 2.7 av Larry Hastings; "
"diskuterad i :issue:`5630`."

msgid "Port-Specific Changes: Windows"
msgstr "Portspecifika ändringar: Fönster"

msgid ""
"The :mod:`msvcrt` module now contains some constants from the :file:"
"`crtassem.h` header file: :data:`~msvcrt.CRT_ASSEMBLY_VERSION`, :data:"
"`~msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN`, and :data:`~msvcrt."
"LIBRARIES_ASSEMBLY_NAME_PREFIX`. (Contributed by David Cournapeau; :issue:"
"`4365`.)"
msgstr ""
"Modulen :mod:`msvcrt` innehåller nu några konstanter från huvudfilen :file:"
"`crtassem.h`: :data:`~msvcrt.CRT_ASSEMBLY_VERSION`, :data:`~msvcrt."
"VC_ASSEMBLY_PUBLICKEYTOKEN`, och :data:`~msvcrt."
"LIBRARIES_ASSEMBLY_NAME_PREFIX`. (Bidrag från David Cournapeau; :issue:"
"`4365`.)"

msgid ""
"The :mod:`_winreg <winreg>` module for accessing the registry now implements "
"the :func:`~winreg.CreateKeyEx` and :func:`~winreg.DeleteKeyEx` functions, "
"extended versions of previously supported functions that take several extra "
"arguments.  The :func:`~winreg.DisableReflectionKey`, :func:`~winreg."
"EnableReflectionKey`, and :func:`~winreg.QueryReflectionKey` were also "
"tested and documented. (Implemented by Brian Curtin: :issue:`7347`.)"
msgstr ""
"Modulen :mod:`_winreg <winreg>` för åtkomst till registret implementerar nu "
"funktionerna :func:`~winreg.CreateKeyEx` och :func:`~winreg.DeleteKeyEx`, "
"utökade versioner av tidigare stödda funktioner som tar flera extra "
"argument.  Funktionerna :func:`~winreg.DisableReflectionKey`, :func:`~winreg."
"EnableReflectionKey` och :func:`~winreg.QueryReflectionKey` har också "
"testats och dokumenterats. (Implementerat av Brian Curtin: :issue:`7347`.)"

msgid ""
"The new :c:func:`!_beginthreadex` API is used to start threads, and the "
"native thread-local storage functions are now used. (Contributed by Kristján "
"Valur Jónsson; :issue:`3582`.)"
msgstr ""
"Det nya API:et :c:func:`!_beginthreadex` används för att starta trådar, och "
"de inbyggda trådlokala lagringsfunktionerna används nu. (Bidrag från "
"Kristján Valur Jónsson; :issue:`3582`.)"

msgid ""
"The :func:`os.kill` function now works on Windows.  The signal value can be "
"the constants :const:`~signal.CTRL_C_EVENT`, :const:`~signal."
"CTRL_BREAK_EVENT`, or any integer.  The first two constants will send :kbd:"
"`Control-C` and :kbd:`Control-Break` keystroke events to subprocesses; any "
"other value will use the :c:func:`!TerminateProcess` API.  (Contributed by "
"Miki Tebeka; :issue:`1220212`.)"
msgstr ""
"Funktionen :func:`os.kill` fungerar nu i Windows.  Signalvärdet kan vara "
"konstanterna :const:`~signal.CTRL_C_EVENT`, :const:`~signal."
"CTRL_BREAK_EVENT` eller ett heltal.  De två första konstanterna kommer att "
"skicka :kbd:`Control-C` och :kbd:`Control-Break` tangenttryckningshändelser "
"till underprocesser; alla andra värden kommer att använda :c:func:`!"
"TerminateProcess` API.  (Bidrag från Miki Tebeka; :issue:`1220212`.)"

msgid ""
"The :func:`os.listdir` function now correctly fails for an empty path.  "
"(Fixed by Hirokazu Yamamoto; :issue:`5913`.)"
msgstr ""
"Funktionen :func:`os.listdir` misslyckas nu korrekt för en tom sökväg.  "
"(Åtgärdat av Hirokazu Yamamoto; :issue:`5913`.)"

msgid ""
"The :mod:`mimetypes` module will now read the MIME database from the Windows "
"registry when initializing. (Patch by Gabriel Genellina; :issue:`4969`.)"
msgstr ""
"Modulen :mod:`mimetypes` kommer nu att läsa MIME-databasen från Windows-"
"registret när den initieras (Patch by Gabriel Genellina; :issue:`4969`.)"

msgid "Port-Specific Changes: Mac OS X"
msgstr "Hamnspecifika ändringar: Mac OS X"

msgid ""
"The path ``/Library/Python/2.7/site-packages`` is now appended to ``sys."
"path``, in order to share added packages between the system installation and "
"a user-installed copy of the same version. (Changed by Ronald Oussoren; :"
"issue:`4865`.)"
msgstr ""
"Sökvägen ``/Library/Python/2.7/site-packages`` är nu tillagd till ``sys."
"path``, för att dela med sig av tillagda paket mellan systeminstallationen "
"och en användarinstallerad kopia av samma version. (Ändrad av Ronald "
"Oussoren; :issue:`4865`.)"

msgid ""
"As of 2.7.13, this change was removed. ``/Library/Python/2.7/site-"
"packages``, the site-packages directory used by the Apple-supplied system "
"Python 2.7 is no longer appended to ``sys.path`` for user-installed Pythons "
"such as from the python.org installers.  As of macOS 10.12, Apple changed "
"how the system site-packages directory is configured, which could cause "
"installation of pip components, like setuptools, to fail.  Packages "
"installed for the system Python will no longer be shared with user-installed "
"Pythons. (:issue:`28440`)"
msgstr ""
"Från och med 2.7.13 har denna ändring tagits bort. ``/Library/Python/2.7/"
"site-packages``, site-packages-katalogen som används av det Apple-levererade "
"systemet Python 2.7 läggs inte längre till ``sys.path`` för "
"användarinstallerade Pythons, till exempel från python.org-installatörerna.  "
"Från och med macOS 10.12 ändrade Apple hur systemkatalogen site-packages "
"konfigureras, vilket kan leda till att installationen av pip-komponenter, "
"som setuptools, misslyckas.  Paket som installeras för systemets Python "
"kommer inte längre att delas med Pythons som installerats av användare. (:"
"issue:`28440`)"

msgid "Port-Specific Changes: FreeBSD"
msgstr "Portspecifika ändringar: FreeBSD"

msgid ""
"FreeBSD 7.1's :const:`!SO_SETFIB` constant, used with the :func:`~socket."
"socket` methods :func:`~socket.socket.getsockopt`/:func:`~socket.socket."
"setsockopt` to select an alternate routing table, is now available in the :"
"mod:`socket` module.  (Added by Kyle VanderBeek; :issue:`8235`.)"
msgstr ""
"FreeBSD 7.1:s :const:`!SO_SETFIB`-konstant, som används med :func:`~socket."
"socket`-metoderna :func:`~socket.socket.getsockopt`/:func:`~socket.socket."
"setsockopt` för att välja en alternativ routningstabell, är nu tillgänglig i "
"modulen :mod:`socket`.  (Tillagd av Kyle VanderBeek; :issue:`8235`.)"

msgid "Other Changes and Fixes"
msgstr "Övriga ändringar och korrigeringar"

msgid ""
"Two benchmark scripts, :file:`iobench` and :file:`ccbench`, were added to "
"the :file:`Tools` directory.  :file:`iobench` measures the speed of the "
"built-in file I/O objects returned by :func:`open` while performing various "
"operations, and :file:`ccbench` is a concurrency benchmark that tries to "
"measure computing throughput, thread switching latency, and IO processing "
"bandwidth when performing several tasks using a varying number of threads."
msgstr ""
"Två benchmark-skript, :file:`iobench` och :file:`ccbench`, har lagts till i "
"katalogen :file:`Tools`. :file:`iobench` mäter hastigheten på de inbyggda "
"fil-I/O-objekt som returneras av :func:`open` när olika operationer utförs, "
"och :file:`ccbench` är ett concurrency-benchmark som försöker mäta "
"beräkningsgenomströmning, latens för trådbyte och bandbredd för IO-"
"bearbetning när flera uppgifter utförs med ett varierande antal trådar."

msgid ""
"The :file:`Tools/i18n/msgfmt.py` script now understands plural forms in :"
"file:`.po` files.  (Fixed by Martin von Löwis; :issue:`5464`.)"
msgstr ""
"Skriptet :file:`Tools/i18n/msgfmt.py` förstår nu pluralformer i :file:`.po`-"
"filer.  (Åtgärdat av Martin von Löwis; :issue:`5464`.)"

msgid ""
"When importing a module from a :file:`.pyc` or :file:`.pyo` file with an "
"existing :file:`.py` counterpart, the :attr:`~codeobject.co_filename` "
"attributes of the resulting code objects are overwritten when the original "
"filename is obsolete.  This can happen if the file has been renamed, moved, "
"or is accessed through different paths.  (Patch by Ziga Seilnacht and Jean-"
"Paul Calderone; :issue:`1180193`.)"
msgstr ""
"Vid import av en modul från en :file:`.pyc`- eller :file:`.pyo`-fil med en "
"befintlig :file:`.py`-motsvarighet skrivs attributen :attr:`~codeobject."
"co_filename` för de resulterande kodobjekten över när det ursprungliga "
"filnamnet är föråldrat.  Detta kan hända om filen har bytt namn, flyttats "
"eller nås via olika sökvägar.  (Patch av Ziga Seilnacht och Jean-Paul "
"Calderone; :issue:`1180193`.)"

msgid ""
"The :file:`regrtest.py` script now takes a :option:`!--randseed=` switch "
"that takes an integer that will be used as the random seed for the :option:"
"`!-r` option that executes tests in random order. The :option:`!-r` option "
"also reports the seed that was used (Added by Collin Winter.)"
msgstr ""
"Skriptet :file:`regrtest.py` tar nu emot :option:`!--randseed=` som tar emot "
"ett heltal som kommer att användas som slumpmässigt frö för :option:`!-r` "
"som exekverar tester i slumpmässig ordning. Alternativet :option:`!-r` "
"rapporterar också det frö som användes (Tillagd av Collin Winter.)"

msgid ""
"Another :file:`regrtest.py` switch is :option:`!-j`, which takes an integer "
"specifying how many tests run in parallel. This allows reducing the total "
"runtime on multi-core machines. This option is compatible with several other "
"options, including the :option:`!-R` switch which is known to produce long "
"runtimes. (Added by Antoine Pitrou, :issue:`6152`.)  This can also be used "
"with a new :option:`!-F` switch that runs selected tests in a loop until "
"they fail.  (Added by Antoine Pitrou; :issue:`7312`.)"
msgstr ""
"En annan switch i :file:`regrtest.py` är :option:`!-j`, som tar ett heltal "
"som anger hur många tester som körs parallellt. Detta gör det möjligt att "
"minska den totala körtiden på flerkärniga maskiner. Detta alternativ är "
"kompatibelt med flera andra alternativ, inklusive :option:`!-R` som är känt "
"för att ge långa körtider. (Tillagd av Antoine Pitrou, :issue:`6152`.) Detta "
"kan också användas med en ny :option:`!-F` switch som kör utvalda tester i "
"en loop tills de misslyckas.  (Tillagd av Antoine Pitrou; :issue:`7312`.)"

msgid ""
"When executed as a script, the :file:`py_compile.py` module now accepts "
"``'-'`` as an argument, which will read standard input for the list of "
"filenames to be compiled.  (Contributed by Piotr Ożarowski; :issue:`8233`.)"
msgstr ""
"När modulen :file:`py_compile.py` körs som ett skript accepterar den nu "
"``'-'`` som ett argument, vilket läser standardinmatningen för listan med "
"filnamn som ska kompileras.  (Bidrag från Piotr Ożarowski; :issue:`8233`.)"

msgid "Porting to Python 2.7"
msgstr "Portning till Python 2.7"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr ""
"I det här avsnittet listas tidigare beskrivna ändringar och andra buggfixar "
"som kan kräva ändringar i din kod:"

msgid ""
"The :func:`range` function processes its arguments more consistently; it "
"will now call :meth:`~object.__int__` on non-float, non-integer arguments "
"that are supplied to it.  (Fixed by Alexander Belopolsky; :issue:`1533`.)"
msgstr ""
"Funktionen :func:`range` behandlar sina argument på ett mer konsekvent sätt; "
"den kommer nu att anropa :meth:`~object.__int__` för argument som inte är "
"float eller heltal.  (Rättad av Alexander Belopolsky; :issue:`1533`.)"

msgid ""
"The string :meth:`format` method changed the default precision used for "
"floating-point and complex numbers from 6 decimal places to 12, which "
"matches the precision used by :func:`str`. (Changed by Eric Smith; :issue:"
"`5920`.)"
msgstr ""
"Metoden string :meth:`format` ändrade standardprecisionen för flyttal och "
"komplexa tal från 6 decimaler till 12, vilket matchar precisionen som "
"används av :func:`str`. (Ändrad av Eric Smith; :issue:`5920`.)"

msgid ""
"Because of an optimization for the :keyword:`with` statement, the special "
"methods :meth:`~object.__enter__` and :meth:`~object.__exit__` must belong "
"to the object's type, and cannot be directly attached to the object's "
"instance.  This affects new-style classes (derived from :class:`object`) and "
"C extension types.  (:issue:`6101`.)"
msgstr ""
"På grund av en optimering för :keyword:`with`-satsen måste specialmetoderna :"
"meth:`~object.__enter__` och :meth:`~object.__exit__` tillhöra objektets typ "
"och kan inte kopplas direkt till objektets instans.  Detta påverkar klasser "
"i ny stil (härledda från :class:`object`) och C-tilläggstyper.  (:issue:"
"`6101`.)"

msgid ""
"Due to a bug in Python 2.6, the *exc_value* parameter to :meth:`~object."
"__exit__` methods was often the string representation of the exception, not "
"an instance.  This was fixed in 2.7, so *exc_value* will be an instance as "
"expected.  (Fixed by Florent Xicluna; :issue:`7853`.)"
msgstr ""
"På grund av en bugg i Python 2.6 var parametern *exc_value* till :meth:"
"`~object.__exit__`-metoder ofta strängrepresentationen av undantaget, inte "
"en instans.  Detta åtgärdades i 2.7, så *exc_value* kommer att vara en "
"instans som förväntat.  (Åtgärdat av Florent Xicluna; :issue:`7853`.)"

msgid "In the standard library:"
msgstr "I standardbiblioteket:"

msgid ""
"Operations with :class:`~datetime.datetime` instances that resulted in a "
"year falling outside the supported range didn't always raise :exc:"
"`OverflowError`.  Such errors are now checked more carefully and will now "
"raise the exception. (Reported by Mark Leander, patch by Anand B. Pillai and "
"Alexander Belopolsky; :issue:`7150`.)"
msgstr ""
"Operationer med :class:`~datetime.datetime`-instanser som resulterade i ett "
"år som föll utanför det stödda intervallet gav inte alltid upphov till :exc:"
"`OverflowError`.  Sådana fel kontrolleras nu mer noggrant och kommer nu att "
"ge upphov till undantaget. (Rapporterat av Mark Leander, patchad av Anand B. "
"Pillai och Alexander Belopolsky; :issue:`7150`.)"

msgid ""
"When using :class:`~decimal.Decimal` instances with a string's :meth:"
"`format` method, the default alignment was previously left-alignment.  This "
"has been changed to right-alignment, which might change the output of your "
"programs. (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"När man använder :class:`~decimal.Decimal`-instanser med en strängs :meth:"
"`format`-metod var standardjusteringen tidigare vänsterjustering.  Detta har "
"ändrats till högerjustering, vilket kan förändra utdata från dina program. "
"(Ändrat av Mark Dickinson; :issue:`6857`.)"

msgid ""
"The :mod:`xml.etree.ElementTree` library no longer escapes ampersands and "
"angle brackets when outputting an XML processing instruction (which looks "
"like ``<?xml-stylesheet href=\"#style1\"?>``) or comment (which looks like "
"``<!-- comment -->``). (Patch by Neil Muller; :issue:`2746`.)"
msgstr ""
"Biblioteket :mod:`xml.etree.ElementTree` escapar inte längre ampersand och "
"vinkelparenteser vid utmatning av en XML-bearbetningsinstruktion (som ser ut "
"som ``<?xml-stylesheet href=\"#style1\"?>``) eller kommentar (som ser ut som "
"``<!-- comment -->``). (Patch av Neil Muller; :issue:`2746`.)"

msgid ""
"The :meth:`!readline` method of :class:`~io.StringIO` objects now does "
"nothing when a negative length is requested, as other file-like objects do.  "
"(:issue:`7348`)."
msgstr ""
"Metoden :meth:`!readline` för :class:`~io.StringIO`-objekt gör nu ingenting "
"när en negativ längd begärs, som andra filliknande objekt gör.  (:issue:"
"`7348`)."

msgid "For C extensions:"
msgstr "För C-tillägg:"

msgid ""
"C extensions that use integer format codes with the ``PyArg_Parse*`` family "
"of functions will now raise a :exc:`TypeError` exception instead of "
"triggering a :exc:`DeprecationWarning` (:issue:`5080`)."
msgstr ""
"C-tillägg som använder heltalsformatkoder med ``PyArg_Parse*``-familjen av "
"funktioner kommer nu att ge upphov till ett :exc:`TypeError`-undantag "
"istället för att utlösa en :exc:`DeprecationWarning` (:issue:`5080`)."

msgid ""
"Use the new :c:func:`PyOS_string_to_double` function instead of the old :c:"
"func:`!PyOS_ascii_strtod` and :c:func:`!PyOS_ascii_atof` functions, which "
"are now deprecated."
msgstr ""
"Använd den nya funktionen :c:func:`PyOS_string_to_double` istället för de "
"gamla funktionerna :c:func:`!PyOS_ascii_strtod` och :c:func:`!"
"PyOS_ascii_atof`, som nu är föråldrade."

msgid "For applications that embed Python:"
msgstr "För applikationer som bygger in Python:"

msgid ""
"The :c:func:`!PySys_SetArgvEx` function was added, letting applications "
"close a security hole when the existing :c:func:`!PySys_SetArgv` function "
"was used.  Check whether you're calling :c:func:`!PySys_SetArgv` and "
"carefully consider whether the application should be using :c:func:`!"
"PySys_SetArgvEx` with *updatepath* set to false."
msgstr ""
"Funktionen :c:func:`!PySys_SetArgvEx` har lagts till, så att program kan "
"täppa till ett säkerhetshål när den befintliga funktionen :c:func:`!"
"PySys_SetArgv` används.  Kontrollera om du anropar :c:func:`!PySys_SetArgv` "
"och överväg noga om programmet bör använda :c:func:`!PySys_SetArgvEx` med "
"*updatepath* satt till false."

msgid "New Features Added to Python 2.7 Maintenance Releases"
msgstr "Nya funktioner i underhållsversionerna av Python 2.7"

msgid ""
"New features may be added to Python 2.7 maintenance releases when the "
"situation genuinely calls for it. Any such additions must go through the "
"Python Enhancement Proposal process, and make a compelling case for why they "
"can't be adequately addressed by either adding the new feature solely to "
"Python 3, or else by publishing it on the Python Package Index."
msgstr ""
"Nya funktioner kan läggas till i Python 2.7 underhållsversioner när "
"situationen verkligen kräver det. Alla sådana tillägg måste gå igenom Python "
"Enhancement Proposal-processen och göra ett övertygande fall för varför de "
"inte kan hanteras på ett adekvat sätt genom att antingen lägga till den nya "
"funktionen enbart till Python 3, eller annars genom att publicera den på "
"Python Package Index."

msgid ""
"In addition to the specific proposals listed below, there is a general "
"exemption allowing new ``-3`` warnings to be added in any Python 2.7 "
"maintenance release."
msgstr ""
"Utöver de specifika förslag som listas nedan finns det ett generellt "
"undantag som tillåter att nya ``-3``-varningar läggs till i alla "
"underhållsversioner av Python 2.7."

msgid "Two new environment variables for debug mode"
msgstr "Två nya miljövariabler för felsökningsläget"

msgid ""
"In debug mode, the ``[xxx refs]`` statistic is not written by default, the :"
"envvar:`!PYTHONSHOWREFCOUNT` environment variable now must also be set. "
"(Contributed by Victor Stinner; :issue:`31733`.)"
msgstr ""
"I felsökningsläge skrivs inte ``[xxx refs]``-statistiken som standard, "
"miljövariabeln :envvar:`!PYTHONSHOWREFCOUNT` måste nu också anges. (Bidrag "
"från Victor Stinner; :issue:`31733`.)"

msgid ""
"When Python is compiled with ``COUNT_ALLOC`` defined, allocation counts are "
"no longer dumped by default anymore: the :envvar:`!PYTHONSHOWALLOCCOUNT` "
"environment variable must now also be set. Moreover, allocation counts are "
"now dumped into stderr, rather than stdout. (Contributed by Victor Stinner; :"
"issue:`31692`.)"
msgstr ""
"När Python kompileras med ``COUNT_ALLOC`` definierat, dumpas inte längre "
"allokeringsräkningar som standard: miljövariabeln :envvar:`!"
"PYTHONSHOWALLOCCOUNT` måste nu också ställas in. Dessutom dumpas "
"allokeringsräkningar nu i stderr, snarare än i stdout. (Bidrag från Victor "
"Stinner; :issue:`31692`.)"

msgid "PEP 434: IDLE Enhancement Exception for All Branches"
msgstr "PEP 434: Undantag för IDLE Enhancement för alla filialer"

msgid ""
":pep:`434` describes a general exemption for changes made to the IDLE "
"development environment shipped along with Python. This exemption makes it "
"possible for the IDLE developers to provide a more consistent user "
"experience across all supported versions of Python 2 and 3."
msgstr ""
":pep:`434` beskriver ett generellt undantag för ändringar som görs i "
"utvecklingsmiljön IDLE som levereras tillsammans med Python. Detta undantag "
"gör det möjligt för IDLE-utvecklarna att tillhandahålla en mer konsekvent "
"användarupplevelse i alla versioner av Python 2 och 3 som stöds."

msgid ""
"For details of any IDLE changes, refer to the NEWS file for the specific "
"release."
msgstr ""
"För detaljer om eventuella IDLE-ändringar, se NEWS-filen för den specifika "
"utgåvan."

msgid "PEP 466: Network Security Enhancements for Python 2.7"
msgstr "PEP 466: Förbättringar av nätverkssäkerhet för Python 2.7"

msgid ""
":pep:`466` describes a number of network security enhancement proposals that "
"have been approved for inclusion in Python 2.7 maintenance releases, with "
"the first of those changes appearing in the Python 2.7.7 release."
msgstr ""
":pep:`466` beskriver ett antal förslag till förbättringar av "
"nätverkssäkerheten som har godkänts för att ingå i Python 2.7 "
"underhållsversioner, med den första av dessa ändringar som visas i Python "
"2.7.7 release."

msgid ":pep:`466` related features added in Python 2.7.7:"
msgstr ":pep:`466` relaterade funktioner tillagda i Python 2.7.7:"

msgid ""
":func:`hmac.compare_digest` was backported from Python 3 to make a timing "
"attack resistant comparison operation available to Python 2 applications. "
"(Contributed by Alex Gaynor; :issue:`21306`.)"
msgstr ""
":func:`hmac.compare_digest` backporterades från Python 3 för att göra en "
"jämförelseoperation som är resistent mot tidsattacker tillgänglig för Python "
"2-applikationer. (Bidrag från Alex Gaynor; :issue:`21306`.)"

msgid ""
"OpenSSL 1.0.1g was upgraded in the official Windows installers published on "
"python.org. (Contributed by Zachary Ware; :issue:`21462`.)"
msgstr ""
"OpenSSL 1.0.1g uppgraderades i de officiella Windows-installationsprogrammen "
"som publicerades på python.org. (Bidrag från Zachary Ware; :issue:`21462`.)"

msgid ":pep:`466` related features added in Python 2.7.8:"
msgstr ":pep:`466` relaterade funktioner tillagda i Python 2.7.8:"

msgid ""
":func:`hashlib.pbkdf2_hmac` was backported from Python 3 to make a hashing "
"algorithm suitable for secure password storage broadly available to Python 2 "
"applications. (Contributed by Alex Gaynor; :issue:`21304`.)"
msgstr ""
":func:`hashlib.pbkdf2_hmac` backporterades från Python 3 för att göra en "
"hash-algoritm lämplig för säker lösenordslagring allmänt tillgänglig för "
"Python 2-applikationer. (Bidrag från Alex Gaynor; :issue:`21304`.)"

msgid ""
"OpenSSL 1.0.1h was upgraded for the official Windows installers published on "
"python.org. (Contributed by Zachary Ware in :issue:`21671` for :cve:"
"`2014-0224`.)"
msgstr ""
"OpenSSL 1.0.1h uppgraderades för de officiella Windows-installatörerna som "
"publicerades på python.org. (Bidrag från Zachary Ware i :issue:`21671` för :"
"cve:`2014-0224`.)"

msgid ":pep:`466` related features added in Python 2.7.9:"
msgstr ":pep:`466` relaterade funktioner tillagda i Python 2.7.9:"

msgid ""
"Most of Python 3.4's :mod:`ssl` module was backported. This means :mod:`ssl` "
"now supports Server Name Indication, TLS1.x settings, access to the platform "
"certificate store, the :class:`~ssl.SSLContext` class, and other features. "
"(Contributed by Alex Gaynor and David Reid; :issue:`21308`.)"
msgstr ""
"Det mesta av Python 3.4:s :mod:`ssl`-modul har bakåtporterats. Detta innebär "
"att :mod:`ssl` nu stöder Server Name Indication, TLS1.x-inställningar, "
"åtkomst till plattformens certifikatarkiv, klassen :class:`~ssl.SSLContext` "
"och andra funktioner. (Bidrag från Alex Gaynor och David Reid; :issue:"
"`21308`.)"

msgid ""
"Refer to the \"Version added: 2.7.9\" notes in the module documentation for "
"specific details."
msgstr ""
"Se anteckningarna \"Version added: 2.7.9\" i modulens dokumentation för mer "
"information."

msgid ""
":func:`os.urandom` was changed to cache a file descriptor to ``/dev/"
"urandom`` instead of reopening ``/dev/urandom`` on every call. (Contributed "
"by Alex Gaynor; :issue:`21305`.)"
msgstr ""
":func:`os.urandom` ändrades till att cacha en filbeskrivare till ``/dev/"
"urandom`` istället för att öppna ``/dev/urandom`` igen vid varje anrop. "
"(Bidrag från Alex Gaynor; :issue:`21305`.)"

msgid ""
":data:`hashlib.algorithms_guaranteed` and :data:`hashlib."
"algorithms_available` were backported from Python 3 to make it easier for "
"Python 2 applications to select the strongest available hash algorithm. "
"(Contributed by Alex Gaynor in :issue:`21307`)"
msgstr ""
":data:`hashlib.algorithms_guaranteed` och :data:`hashlib."
"algorithms_available` backporterades från Python 3 för att göra det enklare "
"för Python 2-applikationer att välja den starkaste tillgängliga "
"hashalgoritmen. (Bidrag från Alex Gaynor i :issue:`21307`)"

msgid "PEP 477: Backport ensurepip (PEP 453) to Python 2.7"
msgstr "PEP 477: Backportera ensurepip (PEP 453) till Python 2.7"

msgid ""
":pep:`477` approves the inclusion of the :pep:`453` ensurepip module and the "
"improved documentation that was enabled by it in the Python 2.7 maintenance "
"releases, appearing first in the Python 2.7.9 release."
msgstr ""
":pep:`477` godkänner införandet av modulen :pep:`453` ensurepip och den "
"förbättrade dokumentationen som möjliggjordes av den i underhållsversionerna "
"av Python 2.7, som först visas i Python 2.7.9."

msgid "Bootstrapping pip By Default"
msgstr "Bootstrapping pip som standard"

msgid ""
"The new :mod:`ensurepip` module (defined in :pep:`453`) provides a standard "
"cross-platform mechanism to bootstrap the pip installer into Python "
"installations. The version of ``pip`` included with Python 2.7.9 is ``pip`` "
"1.5.6, and future 2.7.x maintenance releases will update the bundled version "
"to the latest version of ``pip`` that is available at the time of creating "
"the release candidate."
msgstr ""
"Den nya modulen :mod:`ensurepip` (definierad i :pep:`453`) tillhandahåller "
"en plattformsoberoende standardmekanism för att starta upp pip-"
"installationsprogrammet i Python-installationer. Den version av ``pip`` som "
"ingår i Python 2.7.9 är ``pip`` 1.5.6, och framtida underhållsutgåvor av 2.7."
"x kommer att uppdatera den medföljande versionen till den senaste versionen "
"av ``pip`` som är tillgänglig vid tidpunkten för skapandet av "
"utgivningskandidaten."

msgid ""
"By default, the commands ``pip``, ``pipX`` and ``pipX.Y`` will be installed "
"on all platforms (where X.Y stands for the version of the Python "
"installation), along with the ``pip`` Python package and its dependencies."
msgstr ""
"Som standard kommer kommandona ``pip``, ``pipX`` och ``pipX.Y`` att "
"installeras på alla plattformar (där X.Y står för versionen av Python-"
"installationen), tillsammans med Python-paketet ``pip`` och dess beroenden."

msgid ""
"For CPython :ref:`source builds on POSIX systems <building-python-on-unix>`, "
"the ``make install`` and ``make altinstall`` commands do not bootstrap "
"``pip`` by default.  This behaviour can be controlled through configure "
"options, and overridden through Makefile options."
msgstr ""
"För CPython :ref:`source builds on POSIX systems <building-python-on-unix>`, "
"bootstrappar inte kommandona ``make install`` och ``make altinstall`` "
"``pip`` som standard.  Detta beteende kan kontrolleras genom configure-"
"alternativ och åsidosättas genom Makefile-alternativ."

msgid ""
"On Windows and Mac OS X, the CPython installers now default to installing "
"``pip`` along with CPython itself (users may opt out of installing it during "
"the installation process). Window users will need to opt in to the automatic "
"``PATH`` modifications to have ``pip`` available from the command line by "
"default, otherwise it can still be accessed through the Python launcher for "
"Windows as ``py -m pip``."
msgstr ""
"På Windows och Mac OS X installerar CPython-installatörerna nu som standard "
"``pip`` tillsammans med CPython själv (användare kan välja bort att "
"installera det under installationsprocessen). Windows-användare måste välja "
"de automatiska ``PATH``-ändringarna för att ``pip`` ska vara tillgängligt "
"från kommandoraden som standard, annars kan det fortfarande nås via Python-"
"startprogrammet för Windows som ``py -m pip``."

msgid ""
"As :pep:`discussed in the PEP <0477#disabling-ensurepip-by-downstream-"
"distributors>`, platform packagers may choose not to install these commands "
"by default, as long as, when invoked, they provide clear and simple "
"directions on how to install them on that platform (usually using the system "
"package manager)."
msgstr ""
"Som :pep:`diskuteras i PEP <0477#disabling-ensurepip-by-downstream-"
"distributors>`, kan plattformspaketörer välja att inte installera dessa "
"kommandon som standard, så länge som de, när de anropas, ger tydliga och "
"enkla anvisningar om hur de installeras på den plattformen (vanligtvis med "
"hjälp av systempakethanteraren)."

msgid "Documentation Changes"
msgstr "Förändringar i dokumentation"

msgid ""
"As part of this change, the :ref:`installing-index` and :ref:`distributing-"
"index` sections of the documentation have been completely redesigned as "
"short getting started and FAQ documents. Most packaging documentation has "
"now been moved out to the Python Packaging Authority maintained `Python "
"Packaging User Guide <https://packaging.python.org>`__ and the documentation "
"of the individual projects."
msgstr ""
"Som en del av denna förändring har avsnitten :ref:`installing-index` och :"
"ref:`distributing-index` i dokumentationen helt omarbetats till korta "
"dokument om att komma igång och vanliga frågor. Den mesta "
"förpackningsdokumentationen har nu flyttats ut till Python Packaging "
"Authoritys underhållna `Python Packaging User Guide <https://packaging."
"python.org>`__ och dokumentationen för de enskilda projekten."

msgid ""
"However, as this migration is currently still incomplete, the legacy "
"versions of those guides remaining available as :ref:`install-index` and :"
"ref:`setuptools-index`."
msgstr ""
"Men eftersom den här migreringen för närvarande fortfarande är ofullständig, "
"finns de äldre versionerna av dessa guider fortfarande tillgängliga som :ref:"
"`install-index` och :ref:`setuptools-index`."

msgid ":pep:`453` -- Explicit bootstrapping of pip in Python installations"
msgstr ":pep:`453` -- Explicit bootstrapping av pip i Python-installationer"

msgid ""
"PEP written by Donald Stufft and Nick Coghlan, implemented by Donald Stufft, "
"Nick Coghlan, Martin von Löwis and Ned Deily."
msgstr ""
"PEP skriven av Donald Stufft och Nick Coghlan, implementerad av Donald "
"Stufft, Nick Coghlan, Martin von Löwis och Ned Deily."

msgid ""
"PEP 476: Enabling certificate verification by default for stdlib http clients"
msgstr ""
"PEP 476: Aktivera certifikatverifiering som standard för stdlib http-klienter"

msgid ""
":pep:`476` updated :mod:`httplib <http>` and modules which use it, such as :"
"mod:`urllib2 <urllib.request>` and :mod:`xmlrpclib <xmlrpc.client>`, to now "
"verify that the server presents a certificate which is signed by a "
"Certificate Authority in the platform trust store and whose hostname matches "
"the hostname being requested by default, significantly improving security "
"for many applications. This change was made in the Python 2.7.9 release."
msgstr ""
":pep:`476` uppdaterade :mod:`httplib <http>` och moduler som använder det, "
"såsom :mod:`urllib2 <urllib.request>` och :mod:`xmlrpclib <xmlrpc.client>`, "
"för att nu verifiera att servern presenterar ett certifikat som är signerat "
"av en certifikatutfärdare i plattformens trust store och vars värdnamn "
"matchar värdnamnet som begärs som standard, vilket avsevärt förbättrar "
"säkerheten för många applikationer. Den här ändringen gjordes i Python 2.7.9."

msgid ""
"For applications which require the old previous behavior, they can pass an "
"alternate context::"
msgstr ""
"För applikationer som kräver det gamla tidigare beteendet kan de skicka en "
"alternativ context::"

msgid ""
"import urllib2\n"
"import ssl\n"
"\n"
"# This disables all verification\n"
"context = ssl._create_unverified_context()\n"
"\n"
"# This allows using a specific certificate for the host, which doesn't need\n"
"# to be in the trust store\n"
"context = ssl.create_default_context(cafile=\"/path/to/file.crt\")\n"
"\n"
"urllib2.urlopen(\"https://invalid-cert\", context=context)"
msgstr ""
"import urllib2\n"
"import ssl\n"
"\n"
"# This disables all verification\n"
"context = ssl._create_unverified_context()\n"
"\n"
"# This allows using a specific certificate for the host, which doesn't need\n"
"# to be in the trust store\n"
"context = ssl.create_default_context(cafile=\"/path/to/file.crt\")\n"
"\n"
"urllib2.urlopen(\"https://invalid-cert\", context=context)"

msgid "PEP 493: HTTPS verification migration tools for Python 2.7"
msgstr "PEP 493: Verktyg för migrering av HTTPS-verifiering för Python 2.7"

msgid ""
":pep:`493` provides additional migration tools to support a more incremental "
"infrastructure upgrade process for environments containing applications and "
"services relying on the historically permissive processing of server "
"certificates when establishing client HTTPS connections.  These additions "
"were made in the Python 2.7.12 release."
msgstr ""
":pep:`493` tillhandahåller ytterligare migreringsverktyg för att stödja en "
"mer stegvis uppgradering av infrastrukturen för miljöer som innehåller "
"applikationer och tjänster som förlitar sig på den historiskt tillåtande "
"behandlingen av servercertifikat vid upprättandet av HTTPS-anslutningar för "
"klienter.  Dessa tillägg gjordes i Python 2.7.12-versionen."

msgid ""
"These tools are intended for use in cases where affected applications and "
"services can't be modified to explicitly pass a more permissive SSL context "
"when establishing the connection."
msgstr ""
"Dessa verktyg är avsedda att användas i fall där berörda applikationer och "
"tjänster inte kan modifieras för att uttryckligen skicka en mer tillåtande "
"SSL-kontext när anslutningen upprättas."

msgid ""
"For applications and services which can't be modified at all, the new "
"``PYTHONHTTPSVERIFY`` environment variable may be set to ``0`` to revert an "
"entire Python process back to the default permissive behaviour of Python "
"2.7.8 and earlier."
msgstr ""
"För applikationer och tjänster som inte kan ändras alls kan den nya "
"miljövariabeln ``PYTHONHTTPSVERIFY`` sättas till ``0`` för att återställa en "
"hel Python-process tillbaka till det tillåtna standardbeteendet i Python "
"2.7.8 och tidigare."

msgid ""
"For cases where the connection establishment code can't be modified, but the "
"overall application can be, the new :func:`!ssl._https_verify_certificates` "
"function can be used to adjust the default behaviour at runtime."
msgstr ""
"I de fall där koden för att upprätta anslutningen inte kan ändras, men den "
"övergripande applikationen kan ändras, kan den nya funktionen :func:`!ssl."
"_https_verify_certificates` användas för att justera standardbeteendet under "
"körning."

msgid "New ``make regen-all`` build target"
msgstr "Nytt byggmål för ``make regen-all``"

msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"För att förenkla korskompilering och säkerställa att CPython kan kompileras "
"på ett tillförlitligt sätt utan att det krävs att en befintlig version av "
"Python redan finns tillgänglig, försöker det autotools-baserade byggsystemet "
"inte längre att implicit kompilera om genererade filer baserat på "
"filändringstider."

msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"Istället har ett nytt ``make regen-all``-kommando lagts till för att tvinga "
"fram regenerering av dessa filer när så önskas (t.ex. efter att en första "
"version av Python redan har byggts baserat på de förgenererade versionerna)."

msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr ""
"Mer selektiva regenereringsmål definieras också - se :source:`Makefile.pre."
"in` för detaljer."

msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "(Bidrag från Victor Stinner i :issue:`23404`.)"

msgid "Removal of ``make touch`` build target"
msgstr "Borttagning av byggmålet ``make touch``"

msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr ""
"Byggmålet ``make touch`` som tidigare användes för att begära implicit "
"regenerering av genererade filer genom att uppdatera deras modifieringstider "
"har tagits bort."

msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "Det har ersatts av det nya målet ``make regen-all``."

msgid "Acknowledgements"
msgstr "Tack till"

msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article: "
"Nick Coghlan, Philip Jenvey, Ryan Lovett, R. David Murray, Hugh Secker-"
"Walker."
msgstr ""
"Författaren vill tacka följande personer för förslag, korrigeringar och "
"hjälp med olika utkast till denna artikel: Nick Coghlan, Philip Jenvey, Ryan "
"Lovett, R. David Murray, Hugh Secker-Walker."
