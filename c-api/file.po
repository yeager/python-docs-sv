# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "File Objects"
msgstr "Filobjekt"

msgid ""
"These APIs are a minimal emulation of the Python 2 C API for built-in file "
"objects, which used to rely on the buffered I/O (:c:expr:`FILE*`) support "
"from the C standard library.  In Python 3, files and streams use the new :"
"mod:`io` module, which defines several layers over the low-level unbuffered "
"I/O of the operating system.  The functions described below are convenience "
"C wrappers over these new APIs, and meant mostly for internal error "
"reporting in the interpreter; third-party code is advised to access the :mod:"
"`io` APIs instead."
msgstr ""
"Dessa API:er är en minimal emulering av Python 2 C API för inbyggda "
"filobjekt, som tidigare förlitade sig på buffrad I/O (:c:expr:`FILE*`) från "
"C-standardbiblioteket.  I Python 3 använder filer och strömmar den nya "
"modulen :mod:`io`, som definierar flera lager över operativsystemets "
"obuffrade I/O på låg nivå.  Funktionerna som beskrivs nedan är praktiska C-"
"omslag över dessa nya API:er och är främst avsedda för intern "
"felrapportering i tolken; tredjepartskod rekommenderas att komma åt :mod:"
"`io` API:erna istället."

msgid ""
"Create a Python file object from the file descriptor of an already opened "
"file *fd*.  The arguments *name*, *encoding*, *errors* and *newline* can be "
"``NULL`` to use the defaults; *buffering* can be *-1* to use the default. "
"*name* is ignored and kept for backward compatibility. Return ``NULL`` on "
"failure. For a more comprehensive description of the arguments, please refer "
"to the :func:`io.open` function documentation."
msgstr ""
"Skapar ett Python-filobjekt från filbeskrivningen för en redan öppnad fil "
"*fd*.  Argumenten *name*, *encoding*, *errors* och *newline* kan vara "
"``NULL`` för att använda standardvärdena; *buffering* kan vara *-1* för att "
"använda standardvärdet. *name* ignoreras och behålls för "
"bakåtkompatibilitet. Returnerar ``NULL`` vid misslyckande. För en mer "
"omfattande beskrivning av argumenten, se dokumentationen för funktionen :"
"func:`io.open`."

msgid ""
"Since Python streams have their own buffering layer, mixing them with OS-"
"level file descriptors can produce various issues (such as unexpected "
"ordering of data)."
msgstr ""
"Eftersom Python-strömmar har sitt eget buffertlager kan det uppstå olika "
"problem (t.ex. oväntad ordning på data) om de blandas med filbeskrivare på "
"OS-nivå."

msgid "Ignore *name* attribute."
msgstr "Ignorera attributet *name*."

msgid ""
"Return the file descriptor associated with *p* as an :c:expr:`int`.  If the "
"object is an integer, its value is returned.  If not, the object's :meth:"
"`~io.IOBase.fileno` method is called if it exists; the method must return an "
"integer, which is returned as the file descriptor value.  Sets an exception "
"and returns ``-1`` on failure."
msgstr ""
"Returnerar filbeskrivaren som är associerad med *p* som ett :c:expr:`int`.  "
"Om objektet är ett heltal returneras dess värde.  Om inte, anropas "
"objektets :meth:`~io.IOBase.fileno`-metod om den finns; metoden måste "
"returnera ett heltal, vilket returneras som filbeskrivarens värde.  Ställer "
"in ett undantag och returnerar ``-1`` om det misslyckas."

msgid ""
"Equivalent to ``p.readline([n])``, this function reads one line from the "
"object *p*.  *p* may be a file object or any object with a :meth:`~io.IOBase."
"readline` method.  If *n* is ``0``, exactly one line is read, regardless of "
"the length of the line.  If *n* is greater than ``0``, no more than *n* "
"bytes will be read from the file; a partial line can be returned.  In both "
"cases, an empty string is returned if the end of the file is reached "
"immediately.  If *n* is less than ``0``, however, one line is read "
"regardless of length, but :exc:`EOFError` is raised if the end of the file "
"is reached immediately."
msgstr ""
"Denna funktion motsvarar ``p.readline([n])`` och läser en rad från objektet "
"*p*.  *p* kan vara ett filobjekt eller ett objekt med en :meth:`~io.IOBase."
"readline`-metod.  Om *n* är ``0`` läses exakt en rad, oavsett hur lång raden "
"är.  Om *n* är större än ``0`` kommer inte mer än *n* byte att läsas från "
"filen; en partiell rad kan returneras.  I båda fallen returneras en tom "
"sträng om slutet på filen nås omedelbart.  Om *n* är mindre än ``0`` läses "
"dock en rad oavsett längd, men :exc:`EOFError` returneras om slutet på filen "
"nås omedelbart."

msgid ""
"Overrides the normal behavior of :func:`io.open_code` to pass its parameter "
"through the provided handler."
msgstr ""
"Åsidosätter det normala beteendet hos :func:`io.open_code` att skicka sin "
"parameter genom den tillhandahållna hanteraren."

msgid "The *handler* is a function of type:"
msgstr "*Hanteraren* är en funktion av typ:"

msgid ""
"Equivalent of :c:expr:`PyObject *(\\*)(PyObject *path, void *userData)`, "
"where *path* is guaranteed to be :c:type:`PyUnicodeObject`."
msgstr ""
"Motsvarar :c:expr:`PyObject *(\\*)(PyObject *path, void *userData)`, där "
"*path* garanterat är :c:type:`PyUnicodeObject`."

msgid ""
"The *userData* pointer is passed into the hook function. Since hook "
"functions may be called from different runtimes, this pointer should not "
"refer directly to Python state."
msgstr ""
"Pekaren *userData* skickas till hook-funktionen. Eftersom hook-funktioner "
"kan anropas från olika runtimes bör denna pekare inte referera direkt till "
"Python-tillstånd."

msgid ""
"As this hook is intentionally used during import, avoid importing new "
"modules during its execution unless they are known to be frozen or available "
"in ``sys.modules``."
msgstr ""
"Eftersom den här kroken avsiktligt används under import bör du undvika att "
"importera nya moduler under dess exekvering om du inte vet att de är frysta "
"eller finns tillgängliga i ``sys.modules``."

msgid ""
"Once a hook has been set, it cannot be removed or replaced, and later calls "
"to :c:func:`PyFile_SetOpenCodeHook` will fail. On failure, the function "
"returns -1 and sets an exception if the interpreter has been initialized."
msgstr ""
"När en hook har ställts in kan den inte tas bort eller ersättas, och senare "
"anrop till :c:func:`PyFile_SetOpenCodeHook` kommer att misslyckas. Om "
"funktionen misslyckas returnerar den -1 och anger ett undantag om tolken har "
"initialiserats."

msgid "This function is safe to call before :c:func:`Py_Initialize`."
msgstr "Den här funktionen är säker att anropa före :c:func:`Py_Initialize`."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``setopencodehook`` with no "
"arguments."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``setopencodehook`` utan "
"argument."

msgid ""
"Write object *obj* to file object *p*.  The only supported flag for *flags* "
"is :c:macro:`Py_PRINT_RAW`; if given, the :func:`str` of the object is "
"written instead of the :func:`repr`.  Return ``0`` on success or ``-1`` on "
"failure; the appropriate exception will be set."
msgstr ""
"Skriv objekt *obj* till filobjekt *p*.  Den enda flaggan som stöds för "
"*flags* är :c:macro:`Py_PRINT_RAW`; om den anges skrivs objektets :func:"
"`str` istället för :func:`repr`.  Returnerar ``0`` vid framgång eller ``-1`` "
"vid misslyckande; lämpligt undantag kommer att ställas in."

msgid ""
"Write string *s* to file object *p*.  Return ``0`` on success or ``-1`` on "
"failure; the appropriate exception will be set."
msgstr ""
"Skriv sträng *s* till filobjekt *p*.  Returnerar ``0`` vid framgång eller "
"``-1`` vid misslyckande; lämpligt undantag kommer att ställas in."

msgid "object"
msgstr "objekt"

msgid "file"
msgstr "fil"

msgid "EOFError (built-in exception)"
msgstr "EOFError (inbyggt undantag)"

msgid "Py_PRINT_RAW (C macro)"
msgstr "Py_PRINT_RAW (C-makro)"
