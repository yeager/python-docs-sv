# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Python Initialization Configuration"
msgstr "Konfiguration av Python-initialisering"

msgid "PyInitConfig C API"
msgstr "PyInitConfig C API"

msgid "Python can be initialized with :c:func:`Py_InitializeFromInitConfig`."
msgstr "Python kan initialiseras med :c:func:`Py_InitializeFromInitConfig`."

msgid ""
"The :c:func:`Py_RunMain` function can be used to write a customized Python "
"program."
msgstr ""
"Funktionen :c:func:`Py_RunMain` kan användas för att skriva ett anpassat "
"Python-program."

msgid ""
"See also :ref:`Initialization, Finalization, and Threads <initialization>`."
msgstr ""
"Se även :ref:`Initialization, Finalization, and Threads <initialization>`."

msgid ":pep:`741` \"Python Configuration C API\"."
msgstr ":pep:`741` \"Python Configuration C API\"."

msgid "Example"
msgstr "Exempel"

msgid ""
"Example of customized Python always running with the :ref:`Python "
"Development Mode <devmode>` enabled; return ``-1`` on error:"
msgstr ""
"Exempel på anpassat Python som alltid körs med :ref:`Python Development Mode "
"<devmode>` aktiverat; returnerar ``-1`` vid fel:"

msgid ""
"int init_python(void)\n"
"{\n"
"    PyInitConfig *config = PyInitConfig_Create();\n"
"    if (config == NULL) {\n"
"        printf(\"PYTHON INIT ERROR: memory allocation failed\\n\");\n"
"        return -1;\n"
"    }\n"
"\n"
"    // Enable the Python Development Mode\n"
"    if (PyInitConfig_SetInt(config, \"dev_mode\", 1) < 0) {\n"
"        goto error;\n"
"    }\n"
"\n"
"    // Initialize Python with the configuration\n"
"    if (Py_InitializeFromInitConfig(config) < 0) {\n"
"        goto error;\n"
"    }\n"
"    PyInitConfig_Free(config);\n"
"    return 0;\n"
"\n"
"error:\n"
"    {\n"
"        // Display the error message.\n"
"        //\n"
"        // This uncommon braces style is used, because you cannot make\n"
"        // goto targets point to variable declarations.\n"
"        const char *err_msg;\n"
"        (void)PyInitConfig_GetError(config, &err_msg);\n"
"        printf(\"PYTHON INIT ERROR: %s\\n\", err_msg);\n"
"        PyInitConfig_Free(config);\n"
"        return -1;\n"
"    }\n"
"}"
msgstr ""
"int init_python(void)\n"
"{\n"
"    PyInitConfig *config = PyInitConfig_Create();\n"
"    if (config == NULL) {\n"
"        printf(\"PYTHON INIT ERROR: minnesallokering misslyckades\\n\");\n"
"        return -1;\n"
"    }\n"
"\n"
"    // Aktivera Pythons utvecklingsläge\n"
"    if (PyInitConfig_SetInt(config, \"dev_mode\", 1) < 0) {\n"
"        gå till fel;\n"
"    }\n"
"\n"
"    // Initiera Python med konfigurationen\n"
"    if (Py_InitializeFromInitConfig(config) < 0) {\n"
"        goto fel;\n"
"    }\n"
"    PyInitConfig_Free(config);\n"
"    return 0;\n"
"\n"
"fel:\n"
"    {\n"
"        // Visa felmeddelandet.\n"
"        //\n"
"        // Denna ovanliga stil med hakparenteser används eftersom man inte "
"kan få\n"
"        // goto-mål pekar på variabeldeklarationer.\n"
"        const char *err_msg;\n"
"        (void)PyInitConfig_GetError(config, &err_msg);\n"
"        printf(\"PYTHON INIT ERROR: %s\\n\", err_msg);\n"
"        PyInitConfig_Free(config);\n"
"        return -1;\n"
"    }\n"
"}"

msgid "Create Config"
msgstr "Skapa konfiguration"

msgid "Opaque structure to configure the Python initialization."
msgstr "Ogenomskinlig struktur för att konfigurera Python-initialiseringen."

msgid ""
"Create a new initialization configuration using :ref:`Isolated Configuration "
"<init-isolated-conf>` default values."
msgstr ""
"Skapa en ny initieringskonfiguration med hjälp av :ref:``Isolated "
"Configuration <init-isolated-conf>`` standardvärden."

msgid "It must be freed by :c:func:`PyInitConfig_Free`."
msgstr "Den måste frigöras genom :c:func:`PyInitConfig_Free`."

msgid "Return ``NULL`` on memory allocation failure."
msgstr "Returnerar ``NULL`` om minnesallokeringen misslyckas."

msgid "Free memory of the initialization configuration *config*."
msgstr "Frigör minne för initialiseringskonfigurationen *config*."

msgid "If *config* is ``NULL``, no operation is performed."
msgstr "Om *config* är ``NULL`` utförs ingen åtgärd."

msgid "Error Handling"
msgstr "Felhantering"

msgid "Get the *config* error message."
msgstr "Få felmeddelandet *config*."

msgid "Set *\\*err_msg* and return ``1`` if an error is set."
msgstr "Ställ in *\\*err_msg* och returnera ``1`` om ett fel har ställts in."

msgid "Set *\\*err_msg* to ``NULL`` and return ``0`` otherwise."
msgstr "Sätt *\\*err_msg* till ``NULL`` och returnera annars ``0``."

msgid "An error message is an UTF-8 encoded string."
msgstr "Ett felmeddelande är en UTF-8-kodad sträng."

msgid "If *config* has an exit code, format the exit code as an error message."
msgstr ""
"Om *config* har en utgångskod, formatera utgångskoden som ett felmeddelande."

msgid ""
"The error message remains valid until another ``PyInitConfig`` function is "
"called with *config*. The caller doesn't have to free the error message."
msgstr ""
"Felmeddelandet förblir giltigt tills en annan ``PyInitConfig``-funktion "
"anropas med *config*. Den som anropar behöver inte återställa felmeddelandet."

msgid "Get the *config* exit code."
msgstr "Hämta utgångskoden för *config*."

msgid "Set *\\*exitcode* and return ``1`` if *config* has an exit code set."
msgstr ""
"Ställ in *\\*exitcode* och returnera ``1`` om *config* har en exitkod "
"inställd."

msgid "Return ``0`` if *config* has no exit code set."
msgstr "Returnerar ``0`` om *config* inte har någon exitkod inställd."

msgid ""
"Only the ``Py_InitializeFromInitConfig()`` function can set an exit code if "
"the ``parse_argv`` option is non-zero."
msgstr ""
"Endast funktionen ``Py_InitializeFromInitConfig()`` kan ange en utgångskod "
"om alternativet ``parse_argv`` inte är noll."

msgid ""
"An exit code can be set when parsing the command line failed (exit code "
"``2``) or when a command line option asks to display the command line help "
"(exit code ``0``)."
msgstr ""
"En utgångskod kan anges när tolkningen av kommandoraden misslyckades "
"(utgångskod ``2``) eller när ett kommandoradsalternativ begär att "
"kommandoradshjälpen ska visas (utgångskod ``0``)."

msgid "Get Options"
msgstr "Få alternativ"

msgid ""
"The configuration option *name* parameter must be a non-NULL null-terminated "
"UTF-8 encoded string. See :ref:`Configuration Options <pyinitconfig-opts>`."
msgstr ""
"Parametern *name* för konfigurationsalternativet måste vara en UTF-8-kodad "
"sträng med nollavgränsning som inte är NULL. Se :ref:"
"`Konfigurationsalternativ <pyinitconfig-opts>`."

msgid "Test if the configuration has an option called *name*."
msgstr "Testa om konfigurationen har ett alternativ som heter *namn*."

msgid "Return ``1`` if the option exists, or return ``0`` otherwise."
msgstr "Returnerar ``1`` om alternativet finns, eller returnerar ``0`` annars."

msgid "Get an integer configuration option."
msgstr "Hämta ett konfigurationsalternativ för heltal."

msgid "Set *\\*value*, and return ``0`` on success."
msgstr "Ställ in *\\*värde* och returnera ``0`` vid framgång."

msgid "Set an error in *config* and return ``-1`` on error."
msgstr "Ange ett fel i *config* och returnera ``-1`` vid fel."

msgid ""
"Get a string configuration option as a null-terminated UTF-8 encoded string."
msgstr ""
"Hämta ett konfigurationsalternativ för en sträng som en nollavslutad UTF-8-"
"kodad sträng."

msgid ""
"*\\*value* can be set to ``NULL`` if the option is an optional string and "
"the option is unset."
msgstr ""
"*\\*värde* kan sättas till ``NULL`` om alternativet är en valfri sträng och "
"alternativet inte är inställt."

msgid ""
"On success, the string must be released with ``free(value)`` if it's not "
"``NULL``."
msgstr ""
"Vid framgång måste strängen släppas med ``free(value)`` om den inte är "
"``NULL``."

msgid ""
"Get a string list configuration option as an array of null-terminated UTF-8 "
"encoded strings."
msgstr ""
"Hämta ett konfigurationsalternativ i en stränglista som en array av "
"nollavslutade UTF-8-kodade strängar."

msgid "Set *\\*length* and *\\*value*, and return ``0`` on success."
msgstr "Ställ in *\\*length* och *\\*value*, och returnera ``0`` vid framgång."

msgid ""
"On success, the string list must be released with "
"``PyInitConfig_FreeStrList(length, items)``."
msgstr ""
"Vid framgång måste stränglistan släppas med "
"``PyInitConfig_FreeStrList(length, items)``."

msgid "Free memory of a string list created by ``PyInitConfig_GetStrList()``."
msgstr ""
"Frigör minne för en stränglista som skapats av ``PyInitConfig_GetStrList()``."

msgid "Set Options"
msgstr "Ställ in alternativ"

msgid ""
"Some configuration options have side effects on other options. This logic is "
"only implemented when ``Py_InitializeFromInitConfig()`` is called, not by "
"the \"Set\" functions below. For example, setting ``dev_mode`` to ``1`` does "
"not set ``faulthandler`` to ``1``."
msgstr ""
"Vissa konfigurationsalternativ har bieffekter på andra alternativ. Denna "
"logik implementeras endast när ``Py_InitializeFromInitConfig()`` anropas, "
"inte av \"Set\"-funktionerna nedan. Att till exempel sätta ``dev_mode`` till "
"``1`` sätter inte ``faulthandler`` till ``1``."

msgid "Set an integer configuration option."
msgstr "Ställ in ett konfigurationsalternativ för heltal."

msgid "Return ``0`` on success."
msgstr "Returnerar ``0`` vid framgång."

msgid ""
"Set a string configuration option from a null-terminated UTF-8 encoded "
"string. The string is copied."
msgstr ""
"Ställ in ett konfigurationsalternativ för en sträng från en nollavslutad "
"UTF-8-kodad sträng. Strängen kopieras."

msgid ""
"Set a string list configuration option from an array of null-terminated "
"UTF-8 encoded strings. The string list is copied."
msgstr ""
"Ange ett konfigurationsalternativ för en stränglista från en array med "
"nollavslutade UTF-8-kodade strängar. Stränglistan kopieras."

msgid "Module"
msgstr "Modul"

msgid "Add a built-in extension module to the table of built-in modules."
msgstr ""
"Lägg till en inbyggd förlängningsmodul i tabellen över inbyggda moduler."

msgid ""
"The new module can be imported by the name *name*, and uses the function "
"*initfunc* as the initialization function called on the first attempted "
"import."
msgstr ""
"Den nya modulen kan importeras med namnet *name* och använder funktionen "
"*initfunc* som initialiseringsfunktion som anropas vid första importförsöket."

msgid ""
"If Python is initialized multiple times, ``PyInitConfig_AddModule()`` must "
"be called at each Python initialization."
msgstr ""
"Om Python initialiseras flera gånger måste ``PyInitConfig_AddModule()`` "
"anropas vid varje Python-initialisering."

msgid "Similar to the :c:func:`PyImport_AppendInittab` function."
msgstr "Liknar funktionen :c:func:`PyImport_AppendInittab`."

msgid "Initialize Python"
msgstr "Initialisera Python"

msgid "Initialize Python from the initialization configuration."
msgstr "Initiera Python från initieringskonfigurationen."

msgid "Set an exit code in *config* and return ``-1`` if Python wants to exit."
msgstr ""
"Ange en utgångskod i *config* och returnera ``-1`` om Python vill avsluta."

msgid "See ``PyInitConfig_GetExitcode()`` for the exit code case."
msgstr "Se ``PyInitConfig_GetExitcode()`` för utgångskodsfallet."

msgid "Configuration Options"
msgstr "Alternativ för konfiguration"

msgid "Option"
msgstr "Alternativ"

msgid "PyConfig/PyPreConfig member"
msgstr "PyConfig/PyPreConfig-medlem"

msgid "Type"
msgstr "Typ"

msgid "Visibility"
msgstr "Synlighet"

msgid "``\"allocator\"``"
msgstr "``\"fördelare\"``"

msgid ":c:member:`allocator <PyPreConfig.allocator>`"
msgstr ":c:member:`allokator <PyPreConfig.allokator>`"

msgid "``int``"
msgstr "``int``"

msgid "Read-only"
msgstr "Endast läs"

msgid "``\"argv\"``"
msgstr "``\"argv\"``"

msgid ":c:member:`argv <PyConfig.argv>`"
msgstr ":c:member:`argv <PyConfig.argv>`"

msgid "``list[str]``"
msgstr "``list[str]```"

msgid "Public"
msgstr "Offentlig"

msgid "``\"base_exec_prefix\"``"
msgstr "``\"base_exec_prefix\"``"

msgid ":c:member:`base_exec_prefix <PyConfig.base_exec_prefix>`"
msgstr ":c:member:`base_exec_prefix <PyConfig.base_exec_prefix>`"

msgid "``str``"
msgstr "``str``"

msgid "``\"base_executable\"``"
msgstr "``\"base_executable\"``"

msgid ":c:member:`base_executable <PyConfig.base_executable>`"
msgstr ":c:member:`base_executable <PyConfig.base_executable>`"

msgid "``\"base_prefix\"``"
msgstr "``\"basprefix\"``"

msgid ":c:member:`base_prefix <PyConfig.base_prefix>`"
msgstr ":c:member:`base_prefix <PyConfig.base_prefix>`"

msgid "``\"buffered_stdio\"``"
msgstr "``\"buffrad_stdio\"``"

msgid ":c:member:`buffered_stdio <PyConfig.buffered_stdio>`"
msgstr ":c:member:`buffered_stdio <PyConfig.buffered_stdio>`"

msgid "``bool``"
msgstr "``bool``"

msgid "``\"bytes_warning\"``"
msgstr "``\"bytes_varning\"``"

msgid ":c:member:`bytes_warning <PyConfig.bytes_warning>`"
msgstr ":c:member:`bytes_warning <PyConfig.bytes_warning>`"

msgid "``\"check_hash_pycs_mode\"``"
msgstr "``\"check_hash_pycs_mode\"``"

msgid ":c:member:`check_hash_pycs_mode <PyConfig.check_hash_pycs_mode>`"
msgstr ":c:member:`check_hash_pycs_mode <PyConfig.check_hash_pycs_mode>`"

msgid "``\"code_debug_ranges\"``"
msgstr "``\"code_debug_ranges\"``"

msgid ":c:member:`code_debug_ranges <PyConfig.code_debug_ranges>`"
msgstr ":c:member:`code_debug_ranges <PyConfig.code_debug_ranges>`"

msgid "``\"coerce_c_locale\"``"
msgstr "``\"coerce_c_locale\"``"

msgid ":c:member:`coerce_c_locale <PyPreConfig.coerce_c_locale>`"
msgstr ":c:member:`coerce_c_locale <PyPreConfig.coerce_c_locale>`"

msgid "``\"coerce_c_locale_warn\"``"
msgstr "``\"tvinga_c_lokal_varning\"``"

msgid ":c:member:`coerce_c_locale_warn <PyPreConfig.coerce_c_locale_warn>`"
msgstr ":c:member:`coerce_c_locale_warn <PyPreConfig.coerce_c_locale_warn>``"

msgid "``\"configure_c_stdio\"``"
msgstr "``\"konfigurera_c_stdio\"``"

msgid ":c:member:`configure_c_stdio <PyConfig.configure_c_stdio>`"
msgstr ":c:member:`configure_c_stdio <PyConfig.configure_c_stdio>`"

msgid "``\"configure_locale\"``"
msgstr "``\"configure_locale\"``"

msgid ":c:member:`configure_locale <PyPreConfig.configure_locale>`"
msgstr ":c:member:`configure_locale <PyPreConfig.configure_locale>`"

msgid "``\"cpu_count\"``"
msgstr "``\"cpu_count\"``"

msgid ":c:member:`cpu_count <PyConfig.cpu_count>`"
msgstr ":c:member:`cpu_count <PyConfig.cpu_count>`"

msgid "``\"dev_mode\"``"
msgstr "``\"dev_mode\"``"

msgid ":c:member:`dev_mode <PyConfig.dev_mode>`"
msgstr ":c:member:`dev_mode <PyConfig.dev_mode>`"

msgid "``\"dump_refs\"``"
msgstr "``\"dump_refs\"``"

msgid ":c:member:`dump_refs <PyConfig.dump_refs>`"
msgstr ":c:member:`dump_refs <PyConfig.dump_refs>`"

msgid "``\"dump_refs_file\"``"
msgstr "``\"dump_refs_file\"``"

msgid ":c:member:`dump_refs_file <PyConfig.dump_refs_file>`"
msgstr ":c:member:`dump_refs_file <PyConfig.dump_refs_file>`"

msgid "``\"exec_prefix\"``"
msgstr "``\"exec_prefix\"``"

msgid ":c:member:`exec_prefix <PyConfig.exec_prefix>`"
msgstr ":c:member:`exec_prefix <PyConfig.exec_prefix>`"

msgid "``\"executable\"``"
msgstr "``\"körbar\"```"

msgid ":c:member:`executable <PyConfig.executable>`"
msgstr ":c:member:`exekverbar <PyConfig.exekverbar>`"

msgid "``\"faulthandler\"``"
msgstr "``\"faulthandler\"``"

msgid ":c:member:`faulthandler <PyConfig.faulthandler>`"
msgstr ":c:member:`faulthandler <PyConfig.faulthandler>`"

msgid "``\"filesystem_encoding\"``"
msgstr "``\"filesystem_encoding\"```"

msgid ":c:member:`filesystem_encoding <PyConfig.filesystem_encoding>`"
msgstr ":c:member:`filesystem_encoding <PyConfig.filesystem_encoding>`"

msgid "``\"filesystem_errors\"``"
msgstr "``\"filesystem_errors\"```"

msgid ":c:member:`filesystem_errors <PyConfig.filesystem_errors>`"
msgstr ":c:member:`filesystem_errors <PyConfig.filesystem_errors>`"

msgid "``\"hash_seed\"``"
msgstr "``\"hash_seed\"```"

msgid ":c:member:`hash_seed <PyConfig.hash_seed>`"
msgstr ":c:member:`hash_seed <PyConfig.hash_seed>`"

msgid "``\"home\"``"
msgstr "``\"hem\"``"

msgid ":c:member:`home <PyConfig.home>`"
msgstr ":c:member:`hem <PyConfig.hem>`"

msgid "``\"import_time\"``"
msgstr "``\"import_tid\"```"

msgid ":c:member:`import_time <PyConfig.import_time>`"
msgstr ":c:member:`import_time <PyConfig.import_time>`"

msgid "``\"inspect\"``"
msgstr "``\"inspektera\"```"

msgid ":c:member:`inspect <PyConfig.inspect>`"
msgstr ":c:member:`inspektera <PyConfig.inspektera>`"

msgid "``\"install_signal_handlers\"``"
msgstr "``\"installera_signal_handläggare\"``"

msgid ":c:member:`install_signal_handlers <PyConfig.install_signal_handlers>`"
msgstr ":c:member:`install_signal_handlers <PyConfig.install_signal_handlers>`"

msgid "``\"int_max_str_digits\"``"
msgstr "``\"int_max_str_digits\"``"

msgid ":c:member:`int_max_str_digits <PyConfig.int_max_str_digits>`"
msgstr ":c:member:`int_max_str_digits <PyConfig.int_max_str_digits>`"

msgid "``\"interactive\"``"
msgstr "``\"interaktiv\"``"

msgid ":c:member:`interactive <PyConfig.interactive>`"
msgstr ":c:member:`interaktiv <PyConfig.interaktiv>`"

msgid "``\"isolated\"``"
msgstr "\"isolerad\""

msgid ":c:member:`isolated <PyConfig.isolated>`"
msgstr ":c:member:`isolerad <PyConfig.isolerad>`"

msgid "``\"legacy_windows_fs_encoding\"``"
msgstr "``\"legacy_windows_fs_encoding\"``"

msgid ""
":c:member:`legacy_windows_fs_encoding <PyPreConfig."
"legacy_windows_fs_encoding>`"
msgstr ""
":c:member:`legacy_windows_fs_encoding <PyPreConfig."
"legacy_windows_fs_encoding>`"

msgid "``\"legacy_windows_stdio\"``"
msgstr "``\"legacy_windows_stdio\"``"

msgid ":c:member:`legacy_windows_stdio <PyConfig.legacy_windows_stdio>`"
msgstr ":c:member:`legacy_windows_stdio <PyConfig.legacy_windows_stdio>`"

msgid "``\"malloc_stats\"``"
msgstr "``\"malloc_stats\"```"

msgid ":c:member:`malloc_stats <PyConfig.malloc_stats>`"
msgstr ":c:member:`malloc_stats <PyConfig.malloc_stats>`"

msgid "``\"module_search_paths\"``"
msgstr "``\"modul_search_paths\"``"

msgid ":c:member:`module_search_paths <PyConfig.module_search_paths>`"
msgstr ":c:member:`modul_search_paths <PyConfig.module_search_paths>`"

msgid "``\"optimization_level\"``"
msgstr "``\"optimeringsnivå\"``"

msgid ":c:member:`optimization_level <PyConfig.optimization_level>`"
msgstr ":c:member:`optimering_nivå <PyConfig.optimering_nivå>`"

msgid "``\"orig_argv\"``"
msgstr "``\"orig_argv\"```"

msgid ":c:member:`orig_argv <PyConfig.orig_argv>`"
msgstr ":c:member:`orig_argv <PyConfig.orig_argv>`"

msgid "``\"parse_argv\"``"
msgstr "``\"parse_argv\"``"

msgid ":c:member:`parse_argv <PyConfig.parse_argv>`"
msgstr ":c:member:`parse_argv <PyConfig.parse_argv>`"

msgid "``\"parser_debug\"``"
msgstr "``\"parser_debug\"``"

msgid ":c:member:`parser_debug <PyConfig.parser_debug>`"
msgstr ":c:member:`parser_debug <PyConfig.parser_debug>`"

msgid "``\"pathconfig_warnings\"``"
msgstr "``\"pathconfig_warnings\"``"

msgid ":c:member:`pathconfig_warnings <PyConfig.pathconfig_warnings>`"
msgstr ":c:member:`pathconfig_warnings <PyConfig.pathconfig_warnings>`"

msgid "``\"perf_profiling\"``"
msgstr "``\"perf_profiling\"``"

msgid ":c:member:`perf_profiling <PyConfig.perf_profiling>`"
msgstr ":c:member:`perf_profiling <PyConfig.perf_profiling>`"

msgid "``\"platlibdir\"``"
msgstr "``\"platlibdir\"``"

msgid ":c:member:`platlibdir <PyConfig.platlibdir>`"
msgstr ":c:member:`platlibdir <PyConfig.platlibdir>`"

msgid "``\"prefix\"``"
msgstr "``\"prefix\"```"

msgid ":c:member:`prefix <PyConfig.prefix>`"
msgstr ":c:member:`prefix <PyConfig.prefix>`"

msgid "``\"program_name\"``"
msgstr "``\"program_namn\"``"

msgid ":c:member:`program_name <PyConfig.program_name>`"
msgstr ":c:member:`program_namn <PyConfig.program_namn>`"

msgid "``\"pycache_prefix\"``"
msgstr "``\"pycache_prefix\"``"

msgid ":c:member:`pycache_prefix <PyConfig.pycache_prefix>`"
msgstr ":c:member:`pycache_prefix <PyConfig.pycache_prefix>`"

msgid "``\"quiet\"``"
msgstr "\"tyst\""

msgid ":c:member:`quiet <PyConfig.quiet>`"
msgstr ":c:member:`quiet <PyConfig.quiet>`"

msgid "``\"run_command\"``"
msgstr "``\"run_command\"``"

msgid ":c:member:`run_command <PyConfig.run_command>`"
msgstr ":c:member:`run_command <PyConfig.run_command>`"

msgid "``\"run_filename\"``"
msgstr "``\"run_filnamn\"``"

msgid ":c:member:`run_filename <PyConfig.run_filename>`"
msgstr ":c:member:`run_filename <PyConfig.run_filename>`"

msgid "``\"run_module\"``"
msgstr "``\"run_module\"```"

msgid ":c:member:`run_module <PyConfig.run_module>`"
msgstr ":c:member:`run_module <PyConfig.run_module>`"

msgid "``\"run_presite\"``"
msgstr "``\"run_presite\"``"

msgid ":c:member:`run_presite <PyConfig.run_presite>`"
msgstr ":c:member:`run_presite <PyConfig.run_presite>`"

msgid "``\"safe_path\"``"
msgstr "``\"safe_path\"``"

msgid ":c:member:`safe_path <PyConfig.safe_path>`"
msgstr ":c:member:`safe_path <PyConfig.safe_path>`"

msgid "``\"show_ref_count\"``"
msgstr "``\"show_ref_count\"``"

msgid ":c:member:`show_ref_count <PyConfig.show_ref_count>`"
msgstr ":c:member:`show_ref_count <PyConfig.show_ref_count>``"

msgid "``\"site_import\"``"
msgstr "``\"site_import\"```"

msgid ":c:member:`site_import <PyConfig.site_import>`"
msgstr ":c:member:`site_import <PyConfig.site_import>`"

msgid "``\"skip_source_first_line\"``"
msgstr "``\"skip_source_first_line\"``"

msgid ":c:member:`skip_source_first_line <PyConfig.skip_source_first_line>`"
msgstr ":c:member:`skip_source_first_line <PyConfig.skip_source_first_line>`"

msgid "``\"stdio_encoding\"``"
msgstr "``\"stdio_encoding\"``"

msgid ":c:member:`stdio_encoding <PyConfig.stdio_encoding>`"
msgstr ":c:member:`stdio_encoding <PyConfig.stdio_encoding>`"

msgid "``\"stdio_errors\"``"
msgstr "``\"stdio_fel\"``"

msgid ":c:member:`stdio_errors <PyConfig.stdio_errors>`"
msgstr ":c:member:`stdio_errors <PyConfig.stdio_errors>`"

msgid "``\"stdlib_dir\"``"
msgstr "``\"stdlib_dir\"``"

msgid ":c:member:`stdlib_dir <PyConfig.stdlib_dir>`"
msgstr ":c:member:`stdlib_dir <PyConfig.stdlib_dir>`"

msgid "``\"tracemalloc\"``"
msgstr "``\"tracemalloc\"``"

msgid ":c:member:`tracemalloc <PyConfig.tracemalloc>`"
msgstr ":c:member:`tracemalloc <PyConfig.tracemalloc>`"

msgid "``\"use_environment\"``"
msgstr "``\"use_environment\"``"

msgid ":c:member:`use_environment <PyConfig.use_environment>`"
msgstr ":c:member:`use_environment <PyConfig.use_environment>`"

msgid "``\"use_frozen_modules\"``"
msgstr "``\"use_frozen_modules\"``"

msgid ":c:member:`use_frozen_modules <PyConfig.use_frozen_modules>`"
msgstr ":c:member:`använd_frozen_modules <PyConfig.use_frozen_modules>`"

msgid "``\"use_hash_seed\"``"
msgstr "``\"use_hash_seed\"```"

msgid ":c:member:`use_hash_seed <PyConfig.use_hash_seed>`"
msgstr ":c:member:`använd_hash_seed <PyConfig.use_hash_seed>`"

msgid "``\"use_system_logger\"``"
msgstr "``\"use_system_logger\"``"

msgid ":c:member:`use_system_logger <PyConfig.use_system_logger>`"
msgstr ":c:member:`use_system_logger <PyConfig.use_system_logger>`"

msgid "``\"user_site_directory\"``"
msgstr "``\"user_site_directory\"``"

msgid ":c:member:`user_site_directory <PyConfig.user_site_directory>`"
msgstr ":c:member:`användare_site_directory <PyConfig.user_site_directory>`"

msgid "``\"utf8_mode\"``"
msgstr "``\"utf8_mode\"``"

msgid ":c:member:`utf8_mode <PyPreConfig.utf8_mode>`"
msgstr ":c:member:`utf8_mode <PyPreConfig.utf8_mode>`"

msgid "``\"verbose\"``"
msgstr "``\"verbose\"``"

msgid ":c:member:`verbose <PyConfig.verbose>`"
msgstr ":c:member:`verbose <PyConfig.verbose>`"

msgid "``\"warn_default_encoding\"``"
msgstr "``\"warn_default_encoding\"``"

msgid ":c:member:`warn_default_encoding <PyConfig.warn_default_encoding>`"
msgstr ":c:member:`warn_default_encoding <PyConfig.warn_default_encoding>`"

msgid "``\"warnoptions\"``"
msgstr "``\"warnoptions\"``"

msgid ":c:member:`warnoptions <PyConfig.warnoptions>`"
msgstr ":c:member:`warnoptions <PyConfig.warnoptions>`"

msgid "``\"write_bytecode\"``"
msgstr "``\"write_bytecode\"``"

msgid ":c:member:`write_bytecode <PyConfig.write_bytecode>`"
msgstr ":c:member:`write_bytecode <PyConfig.write_bytecode>`"

msgid "``\"xoptions\"``"
msgstr "``\"xoptions\"```"

msgid ":c:member:`xoptions <PyConfig.xoptions>`"
msgstr ":c:member:`xoptions <PyConfig.xoptions>`"

msgid "``dict[str, str]``"
msgstr "``dict[str, str]``"

msgid "``\"_pystats\"``"
msgstr "``\"_pystats\"```"

msgid ":c:member:`_pystats <PyConfig._pystats>`"
msgstr ":c:member:`_pystats <PyConfig._pystats>`"

msgid "Visibility:"
msgstr "Synlighet:"

msgid ""
"Public: Can by get by :c:func:`PyConfig_Get` and set by :c:func:"
"`PyConfig_Set`."
msgstr ""
"Allmän: Kan hämtas med :c:func:`PyConfig_Get` och ställas in med :c:func:"
"`PyConfig_Set`."

msgid ""
"Read-only: Can by get by :c:func:`PyConfig_Get`, but cannot be set by :c:"
"func:`PyConfig_Set`."
msgstr ""
"Skrivskyddad: Kan hämtas med :c:func:`PyConfig_Get`, men kan inte ställas in "
"med :c:func:`PyConfig_Set`."

msgid "Runtime Python configuration API"
msgstr "Python-konfigurations-API för körtid"

msgid ""
"At runtime, it's possible to get and set configuration options using :c:func:"
"`PyConfig_Get` and  :c:func:`PyConfig_Set` functions."
msgstr ""
"Vid körning är det möjligt att hämta och ställa in konfigurationsalternativ "
"med hjälp av funktionerna :c:func:`PyConfig_Get` och :c:func:`PyConfig_Set`."

msgid ""
"Some options are read from the :mod:`sys` attributes. For example, the "
"option ``\"argv\"`` is read from :data:`sys.argv`."
msgstr ""
"Vissa alternativ läses från :mod:`sys`-attributen. Till exempel läses "
"alternativet ``\"argv\"`` från :data:`sys.argv`."

msgid ""
"Get the current runtime value of a configuration option as a Python object."
msgstr ""
"Hämta det aktuella runtime-värdet för ett konfigurationsalternativ som ett "
"Python-objekt."

msgid "Return a new reference on success."
msgstr "Returnerar en ny referens vid framgång."

msgid "Set an exception and return ``NULL`` on error."
msgstr "Ställ in ett undantag och returnera ``NULL`` vid fel."

msgid "The object type depends on the configuration option. It can be:"
msgstr "Objekttypen beror på konfigurationsalternativet. Den kan vara:"

msgid ""
"The caller must have an :term:`attached thread state`. The function cannot "
"be called before Python initialization nor after Python finalization."
msgstr ""
"Den som anropar måste ha en :term:`attached thread state`. Funktionen kan "
"inte anropas före Python-initialisering eller efter Python-finalisering."

msgid "Similar to :c:func:`PyConfig_Get`, but get the value as a C int."
msgstr "Liknar :c:func:`PyConfig_Get`, men får värdet som en C int."

msgid "Set an exception and return ``-1`` on error."
msgstr "Ställ in ett undantag och returnera ``-1`` vid fel."

msgid "Get all configuration option names as a ``frozenset``."
msgstr "Hämta alla namn på konfigurationsalternativ som ett ``frozenset``."

msgid "Set the current runtime value of a configuration option."
msgstr "Ställ in det aktuella runtime-värdet för ett konfigurationsalternativ."

msgid "Raise a :exc:`ValueError` if there is no option *name*."
msgstr ""
"Skapar ett :exc:`ValueError` om det inte finns något alternativ *namn*."

msgid "Raise a :exc:`ValueError` if *value* is an invalid value."
msgstr "Skapar ett :exc:`ValueError` om *värde* är ett ogiltigt värde."

msgid "Raise a :exc:`ValueError` if the option is read-only (cannot be set)."
msgstr ""
"Skapar ett :exc:`ValueError` om alternativet är skrivskyddat (kan inte "
"ställas in)."

msgid "Raise a :exc:`TypeError` if *value* has not the proper type."
msgstr "Skapar ett :exc:`TypeError` om *värde* inte har rätt typ."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.PyConfig_Set`` with "
"arguments ``name``, ``value``."
msgstr ""
"Utlöser en :ref:`auditing-händelse <auditing>` ``cpython.PyConfig_Set`` med "
"argumenten ``name``, ``value``."

msgid "PyConfig C API"
msgstr "PyConfig C API"

msgid ""
"Python can be initialized with :c:func:`Py_InitializeFromConfig` and the :c:"
"type:`PyConfig` structure. It can be preinitialized with :c:func:"
"`Py_PreInitialize` and the :c:type:`PyPreConfig` structure."
msgstr ""
"Python kan initialiseras med :c:func:`Py_InitializeFromConfig` och :c:type:"
"`PyConfig`-strukturen. Den kan förinitialiseras med :c:func:"
"`Py_PreInitialize` och strukturen :c:type:`PyPreConfig`."

msgid "There are two kinds of configuration:"
msgstr "Det finns två typer av konfigurering:"

msgid ""
"The :ref:`Python Configuration <init-python-config>` can be used to build a "
"customized Python which behaves as the regular Python. For example, "
"environment variables and command line arguments are used to configure "
"Python."
msgstr ""
":ref:`Python Configuration <init-python-config>` kan användas för att bygga "
"en anpassad Python som beter sig som den vanliga Python. Till exempel "
"används miljövariabler och kommandoradsargument för att konfigurera Python."

msgid ""
"The :ref:`Isolated Configuration <init-isolated-conf>` can be used to embed "
"Python into an application. It isolates Python from the system. For example, "
"environment variables are ignored, the LC_CTYPE locale is left unchanged and "
"no signal handler is registered."
msgstr ""
":ref:`Isolated Configuration <init-isolated-conf>` kan användas för att "
"bädda in Python i en applikation. Den isolerar Python från systemet. Till "
"exempel ignoreras miljövariabler, LC_CTYPE locale lämnas oförändrad och "
"ingen signalhanterare registreras."

msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"Python Initialization Configuration\"."

msgid "Example of customized Python always running in isolated mode::"
msgstr "Exempel på anpassad Python som alltid körs i isolerat läge::"

msgid ""
"int main(int argc, char **argv)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"    config.isolated = 1;\n"
"\n"
"    /* Decode command line arguments.\n"
"       Implicitly preinitialize Python (in isolated mode). */\n"
"    status = PyConfig_SetBytesArgv(&config, argc, argv);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"\n"
"    return Py_RunMain();\n"
"\n"
"exception:\n"
"    PyConfig_Clear(&config);\n"
"    if (PyStatus_IsExit(status)) {\n"
"        return status.exitcode;\n"
"    }\n"
"    /* Display the error message and exit the process with\n"
"       non-zero exit code */\n"
"    Py_ExitStatusException(status);\n"
"}"
msgstr ""
"int main(int argc, char **argv)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"    config.isolated = 1;\n"
"\n"
"    /* Avkoda kommandoradsargument.\n"
"       Förinitialisera Python implicit (i isolerat läge). */\n"
"    status = PyConfig_SetBytesArgv(&config, argc, argv);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto undantag;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        gå till undantaget;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"\n"
"    return Py_RunMain();\n"
"\n"
"undantag:\n"
"    PyConfig_Clear(&config);\n"
"    if (PyStatus_IsExit(status)) {\n"
"        return status.exitcode;\n"
"    }\n"
"    /* Visa felmeddelandet och avsluta processen med en\n"
"       med en utgångskod som inte är noll */\n"
"    Py_ExitStatusException(status);\n"
"}"

msgid "PyWideStringList"
msgstr "PyWideStringList"

msgid "List of ``wchar_t*`` strings."
msgstr "Lista över strängar av typen ``wchar_t*``."

msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings must "
"be non-``NULL``."
msgstr ""
"Om *length* inte är noll måste *items* vara något annat än ``NULL`` och alla "
"strängar måste vara något annat än ``NULL``."

msgid "Methods:"
msgstr "Metoder:"

msgid "Append *item* to *list*."
msgstr "Lägg till *item* till *list*."

msgid "Python must be preinitialized to call this function."
msgstr ""
"Python måste vara förinitialiserat för att denna funktion ska kunna anropas."

msgid "Insert *item* into *list* at *index*."
msgstr "Infoga *objekt* i *lista* vid *index*."

msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr ""
"Om *index* är större än eller lika med *list* längd, lägg till *item* till "
"*list*."

msgid "*index* must be greater than or equal to ``0``."
msgstr "*index* måste vara större än eller lika med ``0``."

msgid "Structure fields:"
msgstr "Strukturfält:"

msgid "List length."
msgstr "Listans längd."

msgid "List items."
msgstr "Lista objekt."

msgid "PyStatus"
msgstr "PyStatus"

msgid ""
"Structure to store an initialization function status: success, error or exit."
msgstr ""
"Struktur för att lagra en initialiseringsfunktions status: success, error "
"eller exit."

msgid "For an error, it can store the C function name which created the error."
msgstr "För ett fel kan det lagra namnet på den C-funktion som skapade felet."

msgid "Exit code. Argument passed to ``exit()``."
msgstr "Exit-kod. Argument som skickas till ``exit()``."

msgid "Error message."
msgstr "Felmeddelande."

msgid "Name of the function which created an error, can be ``NULL``."
msgstr "Namn på den funktion som skapade ett fel, kan vara ``NULL``."

msgid "Functions to create a status:"
msgstr "Funktioner för att skapa en status:"

msgid "Success."
msgstr "Lyckades."

msgid "Initialization error with a message."
msgstr "Initialiseringsfel med ett meddelande."

msgid "*err_msg* must not be ``NULL``."
msgstr "*err_msg* får inte vara ``NULL``."

msgid "Memory allocation failure (out of memory)."
msgstr "Fel i minnesallokeringen (minnet är slut)."

msgid "Exit Python with the specified exit code."
msgstr "Avsluta Python med den angivna exit-koden."

msgid "Functions to handle a status:"
msgstr "Funktioner för att hantera en status:"

msgid ""
"Is the status an error or an exit? If true, the exception must be handled; "
"by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"Är statusen ett fel eller en exit? Om true måste undantaget hanteras, t.ex. "
"genom att anropa :c:func:`Py_ExitStatusException`."

msgid "Is the result an error?"
msgstr "Är resultatet ett fel?"

msgid "Is the result an exit?"
msgstr "Är resultatet en exit?"

msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message and "
"exit with a non-zero exit code if *status* is an error.  Must only be called "
"if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"Anropa ``exit(exitcode)`` om *status* är en exit. Skriv ut felmeddelandet "
"och avsluta med en utgångskod som inte är noll om *status* är ett fel.  Får "
"endast anropas om ``PyStatus_Exception(status)`` inte är noll."

msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"Internt använder Python makron som sätter ``PyStatus.func``, medan "
"funktioner för att skapa en status sätter ``func`` till ``NULL``."

msgid "Example::"
msgstr "Exempel::"

msgid ""
"PyStatus alloc(void **ptr, size_t size)\n"
"{\n"
"    *ptr = PyMem_RawMalloc(size);\n"
"    if (*ptr == NULL) {\n"
"        return PyStatus_NoMemory();\n"
"    }\n"
"    return PyStatus_Ok();\n"
"}\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"    void *ptr;\n"
"    PyStatus status = alloc(&ptr, 16);\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"    PyMem_Free(ptr);\n"
"    return 0;\n"
"}"
msgstr ""
"PyStatus alloc(void **ptr, size_t size)\n"
"{\n"
"    *ptr = PyMem_RawMalloc(size);\n"
"    om (*ptr == NULL) {\n"
"        return PyStatus_NoMemory();\n"
"    }\n"
"    return PyStatus_Ok();\n"
"}\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"    void *ptr;\n"
"    PyStatus status = alloc(&ptr, 16);\n"
"    if (PyStatus_Exception(status)) {\n"
"        Py_ExitStatusException(status);\n"
"    }\n"
"    PyMem_Free(ptr);\n"
"    return 0;\n"
"}"

msgid "PyPreConfig"
msgstr "PyPreConfig"

msgid "Structure used to preinitialize Python."
msgstr "Struktur som används för att förinitialisera Python."

msgid "Function to initialize a preconfiguration:"
msgstr "Funktion för att initiera en förkonfiguration:"

msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Initiera förkonfigurationen med :ref:`Python Configuration <init-python-"
"config>`."

msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Initiera förkonfigurationen med :ref:`Isolated Configuration <init-isolated-"
"conf>`."

msgid "Name of the Python memory allocators:"
msgstr "Namn på Pythons minnesallokatorer:"

msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)."
msgstr ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): ändra inte minnesallokatorer (använd "
"standardvärden)."

msgid ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:`default memory allocators "
"<default-memory-allocators>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): :ref:``standard minnesallokatorer "
"<default-memory-allocators>`."

msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): :ref:`default memory allocators <default-"
"memory-allocators>` with :ref:`debug hooks <pymem-debug-hooks>`."

msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): use ``malloc()`` of the C library."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC`` (``3``): använd ``malloc()`` från C-biblioteket."

msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` with :"
"ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): tvinga fram användning av "
"``malloc()`` med :ref:`debug hooks <pymem-debug-hooks>`."

msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`."

msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` med :ref:`debug hooks <pymem-debug-hooks>`."

msgid ""
"``PYMEM_ALLOCATOR_MIMALLOC`` (``6``): use ``mimalloc``, a fast malloc "
"replacement."
msgstr ""
"``PYMEM_ALLOCATOR_MIMALLOC`` (``6``): Använd ``mimalloc``, en snabb malloc-"
"ersättning."

msgid ""
"``PYMEM_ALLOCATOR_MIMALLOC_DEBUG`` (``7``): use ``mimalloc``, a fast malloc "
"replacement with :ref:`debug hooks <pymem-debug-hooks>`."
msgstr ""
"``PYMEM_ALLOCATOR_MIMALLOC_DEBUG`` (``7``): Använd ``mimalloc``, en snabb "
"malloc-ersättning med :ref:`debug-krokar <pymem-debug-hooks>`."

msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are not "
"supported if Python is :option:`configured using --without-pymalloc <--"
"without-pymalloc>`."
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` och ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` stöds "
"inte om Python är :option:`konfigurerat med --without-pymalloc <--without-"
"pymalloc>`."

msgid ""
"``PYMEM_ALLOCATOR_MIMALLOC`` and ``PYMEM_ALLOCATOR_MIMALLOC_DEBUG`` are not "
"supported if Python is :option:`configured using --without-mimalloc <--"
"without-mimalloc>` or if the underlying atomic support isn't available."
msgstr ""
"``PYMEM_ALLOCATOR_MIMALLOC`` och ``PYMEM_ALLOCATOR_MIMALLOC_DEBUG`` stöds "
"inte om Python är :option:`konfigurerad med --without-mimalloc <--without-"
"mimalloc>` eller om det underliggande atomära stödet inte är tillgängligt."

msgid "See :ref:`Memory Management <memory>`."
msgstr "Se :ref:`Memory Management <memory>`."

msgid "Default: ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr "Standard: ``PYMEM_ALLOCATOR_NOT_SET``."

msgid "Set the LC_CTYPE locale to the user preferred locale."
msgstr "Ställ in LC_CTYPE locale till den locale som användaren föredrar."

msgid ""
"If equals to ``0``, set :c:member:`~PyPreConfig.coerce_c_locale` and :c:"
"member:`~PyPreConfig.coerce_c_locale_warn` members to ``0``."
msgstr ""
"Om lika med ``0``, sätt medlemmarna :c:member:`~PyPreConfig.coerce_c_locale` "
"och :c:member:`~PyPreConfig.coerce_c_locale_warn` till ``0``."

msgid "See the :term:`locale encoding`."
msgstr "Se :term:`locale encoding`."

msgid "Default: ``1`` in Python config, ``0`` in isolated config."
msgstr ""
"Standard: ``1`` i Python-konfiguration, ``0`` i isolerad konfiguration."

msgid "If equals to ``2``, coerce the C locale."
msgstr "Om lika med ``2``, tvinga fram C locale."

msgid ""
"If equals to ``1``, read the LC_CTYPE locale to decide if it should be "
"coerced."
msgstr ""
"Om lika med ``1``, läs LC_CTYPE locale för att avgöra om den ska tvingas."

msgid "Default: ``-1`` in Python config, ``0`` in isolated config."
msgstr ""
"Standard: ``-1`` i Python-konfiguration, ``0`` i isolerad konfiguration."

msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr "Om ej noll, avge en varning om C-landets språk är tvingat."

msgid ""
":ref:`Python Development Mode <devmode>`: see :c:member:`PyConfig.dev_mode`."
msgstr ""
":ref:`Python Development Mode <devmode>`: se :c:member:`PyConfig.dev_mode`."

msgid "Default: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr "Standard: ``-1`` i Python-läge, ``0`` i isolerat läge."

msgid "Isolated mode: see :c:member:`PyConfig.isolated`."
msgstr "Isolerat läge: se :c:member:`PyConfig.isolated`."

msgid "Default: ``0`` in Python mode, ``1`` in isolated mode."
msgstr "Standard: ``0`` i Python-läge, ``1`` i isolerat läge."

msgid "If non-zero:"
msgstr "Om ej noll:"

msgid "Set :c:member:`PyPreConfig.utf8_mode` to ``0``,"
msgstr "Sätt :c:member:`PyPreConfig.utf8_mode` till ``0``,"

msgid "Set :c:member:`PyConfig.filesystem_encoding` to ``\"mbcs\"``,"
msgstr "Sätt :c:member:`PyConfig.filesystem_encoding` till ``\"mbcs\"``,"

msgid "Set :c:member:`PyConfig.filesystem_errors` to ``\"replace\"``."
msgstr "Sätt :c:member:`PyConfig.filesystem_errors` till ``\"replace\"``."

msgid ""
"Initialized from the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` environment "
"variable value."
msgstr ""
"Initialiseras från miljövariabelns värde :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING`."

msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr ""
"Endast tillgängligt på Windows. makrot ``#ifdef MS_WINDOWS`` kan användas "
"för Windows-specifik kod."

msgid "Default: ``0``."
msgstr "Standard: ``0``."

msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and :c:func:"
"`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the same way "
"the regular Python parses command line arguments: see :ref:`Command Line "
"Arguments <using-on-cmdline>`."
msgstr ""
"Om icke-noll, analyserar :c:func:`Py_PreInitializeFromArgs` och :c:func:"
"`Py_PreInitializeFromBytesArgs` sina ``argv`` argument på samma sätt som "
"vanliga Python analyserar kommandoradsargument: se :ref:`Command Line "
"Arguments <using-on-cmdline>`."

msgid ""
"Use :ref:`environment variables <using-on-envvars>`? See :c:member:`PyConfig."
"use_environment`."
msgstr ""
"Använda :ref:``miljövariabler <using-on-envvars>`? Se :c:member:`PyConfig."
"use_environment`."

msgid "Default: ``1`` in Python config and ``0`` in isolated config."
msgstr ""
"Standard: ``1`` i Python-konfiguration och ``0`` i isolerad konfiguration."

msgid "If non-zero, enable the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Om värdet är annat än noll aktiveras :ref:`Python UTF-8 Mode <utf8-mode>`."

msgid ""
"Set to ``0`` or ``1`` by the :option:`-X utf8 <-X>` command line option and "
"the :envvar:`PYTHONUTF8` environment variable."
msgstr ""
"Sätts till ``0`` eller ``1`` med kommandoradsalternativet :option:`-X utf8 <-"
"X>` och miljövariabeln :envvar:`PYTHONUTF8`."

msgid "Also set to ``1`` if the ``LC_CTYPE`` locale is ``C`` or ``POSIX``."
msgstr ""
"Sätts också till ``1`` om ``LC_CTYPE`` locale är ``C`` eller ``POSIX``."

msgid "Default: ``-1`` in Python config and ``0`` in isolated config."
msgstr ""
"Standard: ``-1`` i Python-konfiguration och ``0`` i isolerad konfiguration."

msgid "Preinitialize Python with PyPreConfig"
msgstr "Förinitiera Python med PyPreConfig"

msgid "The preinitialization of Python:"
msgstr "Förinitialisering av Python:"

msgid "Set the Python memory allocators (:c:member:`PyPreConfig.allocator`)"
msgstr "Ange Pythons minnesallokatorer (:c:member:`PyPreConfig.allocator`)"

msgid "Configure the LC_CTYPE locale (:term:`locale encoding`)"
msgstr "Konfigurera LC_CTYPE-locale (:term:`locale encoding`)"

msgid ""
"Set the :ref:`Python UTF-8 Mode <utf8-mode>` (:c:member:`PyPreConfig."
"utf8_mode`)"
msgstr ""
"Ställ in :ref:`Python UTF-8 Mode <utf8-mode>` (:c:member:`PyPreConfig."
"utf8_mode`)"

msgid ""
"The current preconfiguration (``PyPreConfig`` type) is stored in "
"``_PyRuntime.preconfig``."
msgstr ""
"Den aktuella förkonfigurationen (av typen ``PyPreConfig``) lagras i "
"``_PyRuntime.preconfig``."

msgid "Functions to preinitialize Python:"
msgstr "Funktioner för att förinitialisera Python:"

msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "Förinitiera Python från *preconfig* preconfiguration."

msgid "*preconfig* must not be ``NULL``."
msgstr "*preconfig* får inte vara ``NULL``."

msgid ""
"Parse *argv* command line arguments (bytes strings) if :c:member:"
"`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analysera *argv* kommandoradsargument (bytessträngar) om :c:member:"
"`~PyPreConfig.parse_argv` i *preconfig* är ung."

msgid ""
"Parse *argv* command line arguments (wide strings) if :c:member:"
"`~PyPreConfig.parse_argv` of *preconfig* is non-zero."
msgstr ""
"Analysera *argv* kommandoradsargument (breda strängar) om :c:member:"
"`~PyPreConfig.parse_argv` i *preconfig* är ung."

msgid ""
"The caller is responsible to handle exceptions (error or exit) using :c:func:"
"`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"Anroparen ansvarar för att hantera undantag (error eller exit) med hjälp av :"
"c:func:`PyStatus_Exception` och :c:func:`Py_ExitStatusException`."

msgid ""
"For :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), if Python is initialized with command line "
"arguments, the command line arguments must also be passed to preinitialize "
"Python, since they have an effect on the pre-configuration like encodings. "
"For example, the :option:`-X utf8 <-X>` command line option enables the :ref:"
"`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"För :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), om Python initieras med "
"kommandoradsargument, måste kommandoradsargumenten också skickas för att "
"förinitialisera Python, eftersom de har en effekt på förkonfigurationen som "
"kodningar. Till exempel aktiverar :option:`-X utf8 <-X>` "
"kommandoradsalternativet :ref:`Python UTF-8 Mode <utf8-mode>`."

msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` and "
"before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if :c:member:"
"`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()`` kan anropas efter :c:func:`Py_PreInitialize` och "
"före :c:func:`Py_InitializeFromConfig` för att installera en anpassad "
"minnesallokator. Den kan anropas före :c:func:`Py_PreInitialize` om :c:"
"member:`PyPreConfig.allocator` är satt till ``PYMEM_ALLOCATOR_NOT_SET``."

msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must not "
"be used before the Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` must "
"not be called before the Python preinitialization."
msgstr ""
"Python-minnesallokeringsfunktioner som :c:func:`PyMem_RawMalloc` får inte "
"användas före Pythons förinitialisering, medan det alltid är säkert att "
"anropa ``malloc()`` och ``free()`` direkt. :c:func:`Py_DecodeLocale` får "
"inte anropas före Pythons förinitialisering."

msgid ""
"Example using the preinitialization to enable the :ref:`Python UTF-8 Mode "
"<utf8-mode>`::"
msgstr ""
"Exempel på användning av förinitialisering för att aktivera :ref:`Python "
"UTF-8 Mode <utf8-mode>`::"

msgid ""
"PyStatus status;\n"
"PyPreConfig preconfig;\n"
"PyPreConfig_InitPythonConfig(&preconfig);\n"
"\n"
"preconfig.utf8_mode = 1;\n"
"\n"
"status = Py_PreInitialize(&preconfig);\n"
"if (PyStatus_Exception(status)) {\n"
"    Py_ExitStatusException(status);\n"
"}\n"
"\n"
"/* at this point, Python speaks UTF-8 */\n"
"\n"
"Py_Initialize();\n"
"/* ... use Python API here ... */\n"
"Py_Finalize();"
msgstr ""
"PyStatus status;\n"
"PyPreConfig preconfig;\n"
"PyPreConfig_InitPythonConfig(&preconfig);\n"
"\n"
"preconfig.utf8_mode = 1;\n"
"\n"
"status = Py_PreInitialize(&preconfig);\n"
"if (PyStatus_Exception(status)) {\n"
"    Py_ExitStatusException(status);\n"
"}\n"
"\n"
"/* vid denna punkt talar Python UTF-8 */\n"
"\n"
"Py_Initialize();\n"
"/* ... använd Python API här ... */\n"
"Py_Finalize();"

msgid "PyConfig"
msgstr "PyConfig"

msgid "Structure containing most parameters to configure Python."
msgstr ""
"Struktur som innehåller de flesta parametrar för att konfigurera Python."

msgid ""
"When done, the :c:func:`PyConfig_Clear` function must be used to release the "
"configuration memory."
msgstr ""
"När detta är gjort måste funktionen :c:func:`PyConfig_Clear` användas för "
"att frigöra konfigurationsminnet."

msgid "Structure methods:"
msgstr "Strukturmetoder:"

msgid ""
"Initialize configuration with the :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Initiera konfigurationen med :ref:`Python Configuration <init-python-"
"config>`."

msgid ""
"Initialize configuration with the :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Initiera konfigurationen med :ref:`Isolated Configuration <init-isolated-"
"conf>`."

msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "Kopiera den breda teckensträngen *str* till ``*config_str``."

msgid ":ref:`Preinitialize Python <c-preinit>` if needed."
msgstr ":ref:`Preinitialize Python <c-preinit>` om det behövs."

msgid ""
"Decode *str* using :c:func:`Py_DecodeLocale` and set the result into "
"``*config_str``."
msgstr ""
"Avkoda *str* med :c:func:`Py_DecodeLocale` och lägg in resultatet i "
"``*config_str``."

msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of wide character strings."
msgstr ""
"Ange kommandoradsargument (:c:member:`~PyConfig.argv` member of *config*) "
"från listan *argv* med breda teckensträngar."

msgid ""
"Set command line arguments (:c:member:`~PyConfig.argv` member of *config*) "
"from the *argv* list of bytes strings. Decode bytes using :c:func:"
"`Py_DecodeLocale`."
msgstr ""
"Ange kommandoradsargument (:c:member:`~PyConfig.argv` member of *config*) "
"från listan *argv* med bytessträngar. Avkoda bytes med hjälp av :c:func:"
"`Py_DecodeLocale`."

msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr "Ställ in listan med breda strängar *list* till *length* och *items*."

msgid "Read all Python configuration."
msgstr "Läs alla Python-konfigurationer."

msgid "Fields which are already initialized are left unchanged."
msgstr "Fält som redan är initialiserade lämnas oförändrade."

msgid ""
"Fields for :ref:`path configuration <init-path-config>` are no longer "
"calculated or modified when calling this function, as of Python 3.11."
msgstr ""
"Fält för :ref:`path configuration <init-path-config>` beräknas eller ändras "
"inte längre vid anrop av denna funktion, från och med Python 3.11."

msgid ""
"The :c:func:`PyConfig_Read` function only parses :c:member:`PyConfig.argv` "
"arguments once: :c:member:`PyConfig.parse_argv` is set to ``2`` after "
"arguments are parsed. Since Python arguments are stripped from :c:member:"
"`PyConfig.argv`, parsing arguments twice would parse the application options "
"as Python options."
msgstr ""
"Funktionen :c:func:`PyConfig_Read` analyserar bara :c:member:`PyConfig.argv`-"
"argument en gång: :c:member:`PyConfig.parse_argv` sätts till ``2`` efter att "
"argumenten har analyserats. Eftersom Python-argument tas bort från :c:member:"
"`PyConfig.argv`, skulle analys av argument två gånger innebära att "
"programalternativen analyseras som Python-alternativ."

msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed once, :c:member:"
"`PyConfig.parse_argv` is set to ``2`` after arguments are parsed, and "
"arguments are only parsed if :c:member:`PyConfig.parse_argv` equals ``1``."
msgstr ""
"Argumenten :c:member:`PyConfig.argv` analyseras nu endast en gång, :c:member:"
"`PyConfig.parse_argv` sätts till ``2`` efter att argumenten har analyserats "
"och argumenten analyseras endast om :c:member:`PyConfig.parse_argv` är lika "
"med ``1``."

msgid ""
":c:func:`PyConfig_Read` no longer calculates all paths, and so fields listed "
"under :ref:`Python Path Configuration <init-path-config>` may no longer be "
"updated until :c:func:`Py_InitializeFromConfig` is called."
msgstr ""
":c:func:`PyConfig_Read` beräknar inte längre alla sökvägar, och därför kan "
"fält som listas under :ref:`Python Path Configuration <init-path-config>` "
"inte längre uppdateras förrän :c:func:`Py_InitializeFromConfig` anropas."

msgid "Release configuration memory."
msgstr "Frigör konfigurationsminnet."

msgid ""
"Most ``PyConfig`` methods :ref:`preinitialize Python <c-preinit>` if needed. "
"In that case, the Python preinitialization configuration (:c:type:"
"`PyPreConfig`) in based on the :c:type:`PyConfig`. If configuration fields "
"which are in common with :c:type:`PyPreConfig` are tuned, they must be set "
"before calling a :c:type:`PyConfig` method:"
msgstr ""
"De flesta ``PyConfig``-metoder :ref:`förinitiera Python <c-preinit>`` om det "
"behövs. I så fall baseras Pythons förinitialiseringskonfiguration (:c:type:"
"`PyPreConfig`) på :c:type:`PyConfig`. Om konfigurationsfält som är "
"gemensamma med :c:type:`PyPreConfig` är inställda, måste de ställas in innan "
"en :c:type:`PyConfig`-metod anropas:"

msgid ":c:member:`PyConfig.dev_mode`"
msgstr ":c:member:`PyConfig.dev_mode`"

msgid ":c:member:`PyConfig.isolated`"
msgstr ":c:member:`PyConfig.isolated`"

msgid ":c:member:`PyConfig.parse_argv`"
msgstr ":c:member:`PyConfig.parse_argv`"

msgid ":c:member:`PyConfig.use_environment`"
msgstr ":c:member:`PyConfig.use_environment`"

msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or :c:func:`PyConfig_SetBytesArgv` "
"is used, this method must be called before other methods, since the "
"preinitialization configuration depends on command line arguments (if :c:"
"member:`~PyConfig.parse_argv` is non-zero)."
msgstr ""
"Dessutom, om :c:func:`PyConfig_SetArgv` eller :c:func:"
"`PyConfig_SetBytesArgv` används, måste denna metod anropas före andra "
"metoder, eftersom konfigurationen före initieringen beror på "
"kommandoradsargument (om :c:member:`~PyConfig.parse_argv` inte är noll)."

msgid ""
"The caller of these methods is responsible to handle exceptions (error or "
"exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"Den som anropar dessa metoder är ansvarig för att hantera undantag (fel "
"eller exit) med hjälp av ``PyStatus_Exception()`` och "
"``Py_ExitStatusException()``."

msgid ""
"Set :data:`sys.argv` command line arguments based on :c:member:`~PyConfig."
"argv`.  These parameters are similar to those passed to the program's :c:"
"func:`main` function with the difference that the first entry should refer "
"to the script file to be executed rather than the executable hosting the "
"Python interpreter.  If there isn't a script that will be run, the first "
"entry in :c:member:`~PyConfig.argv` can be an empty string."
msgstr ""
"Ställ in :data:`sys.argv` kommandoradsargument baserat på :c:member:"
"`~PyConfig.argv`.  Dessa parametrar liknar de som skickas till programmets "
"funktion :c:func:`main` med skillnaden att den första posten ska referera "
"till skriptfilen som ska köras istället för den körbara filen som är värd "
"för Python-tolken.  Om det inte finns något skript som ska köras kan den "
"första posten i :c:member:`~PyConfig.argv` vara en tom sträng."

msgid ""
"Set :c:member:`~PyConfig.parse_argv` to ``1`` to parse :c:member:`~PyConfig."
"argv` the same way the regular Python parses Python command line arguments "
"and then to strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Sätt :c:member:`~PyConfig.parse_argv` till ``1`` för att analysera :c:member:"
"`~PyConfig.argv` på samma sätt som vanliga Python analyserar Python-"
"kommandoradsargument och sedan ta bort Python-argument från :c:member:"
"`~PyConfig.argv`."

msgid ""
"If :c:member:`~PyConfig.argv` is empty, an empty string is added to ensure "
"that :data:`sys.argv` always exists and is never empty."
msgstr ""
"Om :c:member:`~PyConfig.argv` är tom, läggs en tom sträng till för att "
"säkerställa att :data:`sys.argv` alltid existerar och aldrig är tom."

msgid "Default: ``NULL``."
msgstr "Standard: ``NULL``."

msgid "See also the :c:member:`~PyConfig.orig_argv` member."
msgstr "Se även :c:member:`~PyConfig.orig_argv`-medlemmen."

msgid ""
"If equals to zero, ``Py_RunMain()`` prepends a potentially unsafe path to :"
"data:`sys.path` at startup:"
msgstr ""
"Om den är lika med noll, lägger ``Py_RunMain()`` till en potentiellt osäker "
"sökväg till :data:`sys.path` vid uppstart:"

msgid ""
"If :c:member:`argv[0] <PyConfig.argv>` is equal to ``L\"-m\"`` (``python -m "
"module``), prepend the current working directory."
msgstr ""
"Om :c:member:`argv[0] <PyConfig.argv>` är lika med ``L\"-m\"`` (``python -m "
"module``), lägg till den aktuella arbetskatalogen."

msgid ""
"If running a script (``python script.py``), prepend the script's directory.  "
"If it's a symbolic link, resolve symbolic links."
msgstr ""
"Om du kör ett skript (``python script.py``), lägg till skriptets katalog.  "
"Om det är en symbolisk länk, lös symboliska länkar."

msgid ""
"Otherwise (``python -c code`` and ``python``), prepend an empty string, "
"which means the current working directory."
msgstr ""
"I annat fall (``python -c code`` och ``python``) läggs en tom sträng till, "
"vilket innebär den aktuella arbetskatalogen."

msgid ""
"Set to ``1`` by the :option:`-P` command line option and the :envvar:"
"`PYTHONSAFEPATH` environment variable."
msgstr ""
"Sätts till ``1`` med kommandoradsalternativet :option:`-P` och "
"miljövariabeln :envvar:`PYTHONSAFEPATH`."

msgid "Default: ``0`` in Python config, ``1`` in isolated config."
msgstr ""
"Standard: ``0`` i Python-konfiguration, ``1`` i isolerad konfiguration."

msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

msgid "Part of the :ref:`Python Path Configuration <init-path-config>` output."
msgstr "Del av :ref:`Python Path Configuration <init-path-config>` utdata."

msgid "See also :c:member:`PyConfig.exec_prefix`."
msgstr "Se även :c:member:`PyConfig.exec_prefix`."

msgid "Python base executable: :data:`sys._base_executable`."
msgstr "Körbar Python-bas: :data:`sys._base_executable`."

msgid "Set by the :envvar:`__PYVENV_LAUNCHER__` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`__PYVENV_LAUNCHER__`."

msgid "Set from :c:member:`PyConfig.executable` if ``NULL``."
msgstr "Set från :c:member:`PyConfig.executable` if ``NULL``."

msgid "See also :c:member:`PyConfig.executable`."
msgstr "Se även :c:member:`PyConfig.executable`."

msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

msgid "See also :c:member:`PyConfig.prefix`."
msgstr "Se även :c:member:`PyConfig.prefix`."

msgid ""
"If equals to ``0`` and :c:member:`~PyConfig.configure_c_stdio` is non-zero, "
"disable buffering on the C streams stdout and stderr."
msgstr ""
"Om lika med ``0`` och :c:member:`~PyConfig.configure_c_stdio` är icke-noll, "
"inaktivera buffring på C-strömmarna stdout och stderr."

msgid ""
"Set to ``0`` by the :option:`-u` command line option and the :envvar:"
"`PYTHONUNBUFFERED` environment variable."
msgstr ""
"Sätts till ``0`` med kommandoradsalternativet :option:`-u` och "
"miljövariabeln :envvar:`PYTHONUNBUFFERED`."

msgid "stdin is always opened in buffered mode."
msgstr "stdin öppnas alltid i buffrat läge."

msgid "Default: ``1``."
msgstr "Standard: ``1``."

msgid ""
"If equals to ``1``, issue a warning when comparing :class:`bytes` or :class:"
"`bytearray` with :class:`str`, or comparing :class:`bytes` with :class:`int`."
msgstr ""
"Om lika med ``1``, utfärda en varning när du jämför :class:`bytes` eller :"
"class:`bytearray` med :class:`str`, eller jämför :class:`bytes` med :class:"
"`int`."

msgid ""
"If equal or greater to ``2``, raise a :exc:`BytesWarning` exception in these "
"cases."
msgstr ""
"Om lika med eller större än ``2``, skapa ett :exc:`BytesWarning` undantag i "
"dessa fall."

msgid "Incremented by the :option:`-b` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-b`."

msgid ""
"If non-zero, emit a :exc:`EncodingWarning` warning when :class:`io."
"TextIOWrapper` uses its default encoding. See :ref:`io-encoding-warning` for "
"details."
msgstr ""
"Om ung, avge en :exc:`EncodingWarning`-varning när :class:`io.TextIOWrapper` "
"använder sin standardkodning. Se :ref:`io-encoding-warning` för detaljer."

msgid ""
"If equals to ``0``, disables the inclusion of the end line and column "
"mappings in code objects. Also disables traceback printing carets to "
"specific error locations."
msgstr ""
"Om lika med ``0``, inaktiveras inkludering av slutrad och kolumnmappningar i "
"kodobjekt. Inaktiverar också spårningsutskrift av carets till specifika "
"felplatser."

msgid ""
"Set to ``0`` by the :envvar:`PYTHONNODEBUGRANGES` environment variable and "
"by the :option:`-X no_debug_ranges <-X>` command line option."
msgstr ""
"Sätts till ``0`` av miljövariabeln :envvar:`PYTHONNODEBUGRANGES` och av "
"kommandoradsalternativet :option:`-X no_debug_ranges <-X>`."

msgid ""
"Control the validation behavior of hash-based ``.pyc`` files: value of the :"
"option:`--check-hash-based-pycs` command line option."
msgstr ""
"Kontrollera valideringsbeteendet för hash-baserade ``.pyc``-filer: värdet av "
"kommandoradsalternativet :option:`--check-hash-based-pycs`."

msgid "Valid values:"
msgstr "Giltiga värden:"

msgid ""
"``L\"always\"``: Hash the source file for invalidation regardless of value "
"of the 'check_source' flag."
msgstr ""
"``L\"alltid\"``: Hashar källfilen för ogiltigförklaring oavsett värdet på "
"flaggan \"check_source\"."

msgid "``L\"never\"``: Assume that hash-based pycs always are valid."
msgstr "``L\"aldrig\"``: Anta att hash-baserade pycs alltid är giltiga."

msgid ""
"``L\"default\"``: The 'check_source' flag in hash-based pycs determines "
"invalidation."
msgstr ""
"``L\"standard\"``: Flaggan \"check_source\" i hash-baserade pycs avgör "
"ogiltighet."

msgid "Default: ``L\"default\"``."
msgstr "Standard: ``L\"default\"``."

msgid "See also :pep:`552` \"Deterministic pycs\"."
msgstr "Se även :pep:`552` \"Deterministic pycs\"."

msgid "If non-zero, configure C standard streams:"
msgstr "Om ej noll, konfigurera C-standardströmmar:"

msgid ""
"On Windows, set the binary mode (``O_BINARY``) on stdin, stdout and stderr."
msgstr ""
"I Windows ställer du in binärt läge (``O_BINARY``) på stdin, stdout och "
"stderr."

msgid ""
"If :c:member:`~PyConfig.buffered_stdio` equals zero, disable buffering of "
"stdin, stdout and stderr streams."
msgstr ""
"Om :c:member:`~PyConfig.buffered_stdio` är lika med noll, inaktiveras "
"buffring av strömmarna stdin, stdout och stderr."

msgid ""
"If :c:member:`~PyConfig.interactive` is non-zero, enable stream buffering on "
"stdin and stdout (only stdout on Windows)."
msgstr ""
"Om :c:member:`~PyConfig.interactive` inte är noll, aktivera strömbuffring på "
"stdin och stdout (endast stdout på Windows)."

msgid "If non-zero, enable the :ref:`Python Development Mode <devmode>`."
msgstr ""
"Om värdet är annat än noll aktiveras :ref:`Python Development Mode "
"<devmode>`."

msgid ""
"Set to ``1`` by the :option:`-X dev <-X>` option and the :envvar:"
"`PYTHONDEVMODE` environment variable."
msgstr ""
"Sätts till ``1`` med alternativet :option:`-X dev <-X>` och miljövariabeln :"
"envvar:`PYTHONDEVMODE`."

msgid "Dump Python references?"
msgstr "Dumpa Python-referenser?"

msgid "If non-zero, dump all objects which are still alive at exit."
msgstr ""
"Om värdet inte är noll, dumpas alla objekt som fortfarande lever vid avslut."

msgid "Set to ``1`` by the :envvar:`PYTHONDUMPREFS` environment variable."
msgstr "Sätts till ``1`` av miljövariabeln :envvar:`PYTHONDUMPREFS`."

msgid ""
"Needs a special build of Python with the ``Py_TRACE_REFS`` macro defined: "
"see the :option:`configure --with-trace-refs option <--with-trace-refs>`."
msgstr ""
"Kräver en specialversion av Python med makrot ``Py_TRACE_REFS`` definierat: "
"se :option:`configure --with-trace-refs option <--with-trace-refs>`."

msgid "Filename where to dump Python references."
msgstr "Filnamn där Python-referenser ska dumpas."

msgid "Set by the :envvar:`PYTHONDUMPREFSFILE` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONDUMPREFSFILE`."

msgid ""
"The site-specific directory prefix where the platform-dependent Python files "
"are installed: :data:`sys.exec_prefix`."
msgstr ""
"Det platsspecifika katalogprefixet där de plattformsberoende Python-filerna "
"installeras: :data:`sys.exec_prefix`."

msgid "See also :c:member:`PyConfig.base_exec_prefix`."
msgstr "Se även :c:member:`PyConfig.base_exec_prefix`."

msgid ""
"The absolute path of the executable binary for the Python interpreter: :data:"
"`sys.executable`."
msgstr ""
"Den absoluta sökvägen till den körbara binärfilen för Python-tolken: :data:"
"`sys.executable`."

msgid "See also :c:member:`PyConfig.base_executable`."
msgstr "Se även :c:member:`PyConfig.base_executable`."

msgid "Enable faulthandler?"
msgstr "Aktivera Faulthandler?"

msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr "Om ej noll, anropa :func:`faulthandler.enable` vid uppstart."

msgid ""
"Set to ``1`` by :option:`-X faulthandler <-X>` and the :envvar:"
"`PYTHONFAULTHANDLER` environment variable."
msgstr ""
"Sätts till ``1`` av :option:`-X faulthandler <-X>` och miljövariabeln :"
"envvar:`PYTHONFAULTHANDLER`."

msgid ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: :func:"
"`sys.getfilesystemencoding`."
msgstr ""
":term:`Filesystem encoding <filesystem encoding and error handler>`: :func:"
"`sys.getfilesystemencoding`."

msgid "On macOS, Android and VxWorks: use ``\"utf-8\"`` by default."
msgstr "På macOS, Android och VxWorks: använd ``\"utf-8\"`` som standard."

msgid ""
"On Windows: use ``\"utf-8\"`` by default, or ``\"mbcs\"`` if :c:member:"
"`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig` is non-"
"zero."
msgstr ""
"På Windows: använd ``\"utf-8\"`` som standard, eller ``\"mbcs\"`` om :c:"
"member:`~PyPreConfig.legacy_windows_fs_encoding` av :c:type:`PyPreConfig` är "
"icke-noll."

msgid "Default encoding on other platforms:"
msgstr "Standardkodning på andra plattformar:"

msgid "``\"utf-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr "``\"utf-8\"`` om :c:member:`PyPreConfig.utf8_mode` inte är noll."

msgid ""
"``\"ascii\"`` if Python detects that ``nl_langinfo(CODESET)`` announces the "
"ASCII encoding, whereas the ``mbstowcs()`` function decodes from a different "
"encoding (usually Latin1)."
msgstr ""
"``\"ascii\"`` om Python upptäcker att ``nl_langinfo(CODESET)`` meddelar "
"ASCII-kodning, medan funktionen ``mbstowcs()`` avkodar från en annan kodning "
"(vanligtvis Latin1)."

msgid "``\"utf-8\"`` if ``nl_langinfo(CODESET)`` returns an empty string."
msgstr "``\"utf-8\"`` om ``nl_langinfo(CODESET)`` returnerar en tom sträng."

msgid ""
"Otherwise, use the :term:`locale encoding`: ``nl_langinfo(CODESET)`` result."
msgstr ""
"Annars används :term:`locale encoding`: ``nl_langinfo(CODESET)`` resultat."

msgid ""
"At Python startup, the encoding name is normalized to the Python codec name. "
"For example, ``\"ANSI_X3.4-1968\"`` is replaced with ``\"ascii\"``."
msgstr ""
"Vid Python-start normaliseras kodningsnamnet till Python-codec-namnet. Till "
"exempel ersätts ``\"ANSI_X3.4-1968\"`` med ``\"ascii\"``."

msgid "See also the :c:member:`~PyConfig.filesystem_errors` member."
msgstr "Se även :c:member:`~PyConfig.filesystem_errors` member."

msgid ""
":term:`Filesystem error handler <filesystem encoding and error handler>`: :"
"func:`sys.getfilesystemencodeerrors`."
msgstr ""
":term:`Filsystemfelhanterare <filesystem encoding and error handler>`: :func:"
"`sys.getfilesystemencodeerrors`."

msgid ""
"On Windows: use ``\"surrogatepass\"`` by default, or ``\"replace\"``  if :c:"
"member:`~PyPreConfig.legacy_windows_fs_encoding` of :c:type:`PyPreConfig` is "
"non-zero."
msgstr ""
"På Windows: använd ``\"surrogatepass\"`` som standard, eller ``\"replace\"`` "
"om :c:member:`~PyPreConfig.legacy_windows_fs_encoding` av :c:type:"
"`PyPreConfig` inte är noll."

msgid "On other platforms: use ``\"surrogateescape\"`` by default."
msgstr "På andra plattformar: använd ``\"surrogateescape\"`` som standard."

msgid "Supported error handlers:"
msgstr "Felhanterare som stöds:"

msgid "``\"strict\"``"
msgstr "``\"strikt\"``"

msgid "``\"surrogateescape\"``"
msgstr "``\"surrogatlandskap\"``"

msgid "``\"surrogatepass\"`` (only supported with the UTF-8 encoding)"
msgstr "``\"surrogatepass\"`` (stöds endast med UTF-8-kodning)"

msgid "See also the :c:member:`~PyConfig.filesystem_encoding` member."
msgstr "Se även medlemmen :c:member:`~PyConfig.filesystem_encoding`."

msgid "If non-zero, use frozen modules."
msgstr "Om värdet är annat än noll, använd frysta moduler."

msgid "Set by the :envvar:`PYTHON_FROZEN_MODULES` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHON_FROZEN_MODULES`."

msgid ""
"Default: ``1`` in a release build, or ``0`` in a :ref:`debug build <debug-"
"build>`."
msgstr ""
"Standard: ``1`` i en release-byggnad, eller ``0`` i en :ref:`debug-byggnad "
"<debug-build>`."

msgid "Randomized hash function seed."
msgstr "Slumpmässigt utsäde för hashfunktion."

msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly at "
"Python startup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
"Om :c:member:`~PyConfig.use_hash_seed` är noll, väljs ett frö slumpmässigt "
"vid Python-start och :c:member:`~PyConfig.hash_seed` ignoreras."

msgid "Set by the :envvar:`PYTHONHASHSEED` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONHASHSEED`."

msgid ""
"Default *use_hash_seed* value: ``-1`` in Python mode, ``0`` in isolated mode."
msgstr ""
"Standardvärde för *use_hash_seed*: ``-1`` i Python-läge, ``0`` i isolerat "
"läge."

msgid ""
"Set the default Python \"home\" directory, that is, the location of the "
"standard Python libraries (see :envvar:`PYTHONHOME`)."
msgstr ""
"Ange standardkatalogen för Python, det vill säga platsen där Pythons "
"standardbibliotek finns (se :envvar:`PYTHONHOME`)."

msgid "Set by the :envvar:`PYTHONHOME` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONHOME`."

msgid "Part of the :ref:`Python Path Configuration <init-path-config>` input."
msgstr "Del av :ref:`Python Path Configuration <init-path-config>` inmatning."

msgid ""
"If ``1``, profile import time. If ``2``, include additional output that "
"indicates when an imported module has already been loaded."
msgstr ""
"Om ``1``, profilera importtiden. Om ``2``, inkludera ytterligare utdata som "
"indikerar när en importerad modul redan har laddats."

msgid ""
"Set by the :option:`-X importtime <-X>` option and the :envvar:"
"`PYTHONPROFILEIMPORTTIME` environment variable."
msgstr ""
"Ställs in med alternativet :option:`-X importtime <-X>` och miljövariabeln :"
"envvar:`PYTHONPROFILEIMPORTTIME`."

msgid "Added support for ``import_time = 2``"
msgstr "Lagt till stöd för ``import_time = 2``"

msgid "Enter interactive mode after executing a script or a command."
msgstr ""
"Gå till interaktivt läge efter att du har kört ett skript eller ett kommando."

msgid ""
"If greater than ``0``, enable inspect: when a script is passed as first "
"argument or the -c option is used, enter interactive mode after executing "
"the script or the command, even when :data:`sys.stdin` does not appear to be "
"a terminal."
msgstr ""
"Om större än ``0``, aktivera inspect: när ett skript skickas som första "
"argument eller alternativet -c används, gå till interaktivt läge efter att "
"skriptet eller kommandot har exekverats, även om :data:`sys.stdin` inte "
"verkar vara en terminal."

msgid ""
"Incremented by the :option:`-i` command line option. Set to ``1`` if the :"
"envvar:`PYTHONINSPECT` environment variable is non-empty."
msgstr ""
"Ökas med kommandoradsalternativet :option:`-i`. Sätts till ``1`` om "
"miljövariabeln :envvar:`PYTHONINSPECT` inte är tom."

msgid "Install Python signal handlers?"
msgstr "Installera Python-signalhanterare?"

msgid "Default: ``1`` in Python mode, ``0`` in isolated mode."
msgstr "Standard: ``1`` i Python-läge, ``0`` i isolerat läge."

msgid "If greater than ``0``, enable the interactive mode (REPL)."
msgstr "Om större än ``0``, aktivera det interaktiva läget (REPL)."

msgid "Incremented by the :option:`-i` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-i`."

msgid ""
"Configures the :ref:`integer string conversion length limitation "
"<int_max_str_digits>`.  An initial value of ``-1`` means the value will be "
"taken from the command line or environment or otherwise default to 4300 (:"
"data:`sys.int_info.default_max_str_digits`).  A value of ``0`` disables the "
"limitation.  Values greater than zero but less than 640 (:data:`sys.int_info."
"str_digits_check_threshold`) are unsupported and will produce an error."
msgstr ""
"Konfigurerar :ref:`Längdsbegränsning för konvertering av heltalssträngar "
"<int_max_str_digits>`.  Ett initialt värde på ``-1`` innebär att värdet "
"hämtas från kommandoraden eller miljön eller annars är standardvärdet 4300 (:"
"data:`sys.int_info.default_max_str_digits`).  Ett värde på ``0`` inaktiverar "
"begränsningen.  Värden som är större än noll men mindre än 640 (:data:`sys."
"int_info.str_digits_check_threshold`) stöds inte och leder till ett fel."

msgid ""
"Configured by the :option:`-X int_max_str_digits <-X>` command line flag or "
"the :envvar:`PYTHONINTMAXSTRDIGITS` environment variable."
msgstr ""
"Konfigureras av kommandoradsflaggan :option:`-X int_max_str_digits <-X>` "
"eller miljövariabeln :envvar:`PYTHONINTMAXSTRDIGITS`."

msgid ""
"Default: ``-1`` in Python mode.  4300 (:data:`sys.int_info."
"default_max_str_digits`) in isolated mode."
msgstr ""
"Standard: ``-1`` i Python-läge.  4300 (:data:`sys.int_info."
"default_max_str_digits`) i isolerat läge."

msgid ""
"If the value of :c:member:`~PyConfig.cpu_count` is not ``-1`` then it will "
"override the return values of :func:`os.cpu_count`, :func:`os."
"process_cpu_count`, and :func:`multiprocessing.cpu_count`."
msgstr ""
"Om värdet för :c:member:`~PyConfig.cpu_count` inte är ``-1`` så kommer det "
"att åsidosätta returvärdena för :func:`os.cpu_count`, :func:`os."
"process_cpu_count`, och :func:`multiprocessing.cpu_count`."

msgid ""
"Configured by the :samp:`-X cpu_count={n|default}` command line flag or the :"
"envvar:`PYTHON_CPU_COUNT` environment variable."
msgstr ""
"Konfigureras av kommandoradsflaggan :samp:`-X cpu_count={n|default}` eller "
"miljövariabeln :envvar:`PYTHON_CPU_COUNT`."

msgid "Default: ``-1``."
msgstr "Standard: ``-1``."

msgid "If greater than ``0``, enable isolated mode:"
msgstr "Om större än ``0``, aktivera isolerat läge:"

msgid ""
"Set :c:member:`~PyConfig.safe_path` to ``1``: don't prepend a potentially "
"unsafe path to :data:`sys.path` at Python startup, such as the current "
"directory, the script's directory or an empty string."
msgstr ""
"Sätt :c:member:`~PyConfig.safe_path` till ``1``: lägg inte till en "
"potentiellt osäker sökväg till :data:`sys.path` vid Python-start, t.ex. den "
"aktuella katalogen, skriptets katalog eller en tom sträng."

msgid ""
"Set :c:member:`~PyConfig.use_environment` to ``0``: ignore ``PYTHON`` "
"environment variables."
msgstr ""
"Sätt :c:member:`~PyConfig.use_environment` till ``0``: ignorera ``PYTHON`` "
"miljövariabler."

msgid ""
"Set :c:member:`~PyConfig.user_site_directory` to ``0``: don't add the user "
"site directory to :data:`sys.path`."
msgstr ""
"Sätt :c:member:`~PyConfig.user_site_directory` till ``0``: lägg inte till "
"användarkatalogen i :data:`sys.path`."

msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"Python REPL importerar inte :mod:`readline` eller aktiverar "
"standardkonfiguration för readline på interaktiva prompter."

msgid "Set to ``1`` by the :option:`-I` command line option."
msgstr "Sätts till ``1`` med kommandoradsalternativet :option:`-I`."

msgid ""
"See also the :ref:`Isolated Configuration <init-isolated-conf>` and :c:"
"member:`PyPreConfig.isolated`."
msgstr ""
"Se även :ref:`Isolated Configuration <init-isolated-conf>` och :c:member:"
"`PyPreConfig.isolated`."

msgid ""
"If non-zero, use :class:`io.FileIO` instead of :class:`!io."
"_WindowsConsoleIO` for :data:`sys.stdin`, :data:`sys.stdout` and :data:`sys."
"stderr`."
msgstr ""
"Om den inte är noll, använd :class:`io.FileIO` istället för :class:`!io."
"_WindowsConsoleIO` för :data:`sys.stdin`, :data:`sys.stdout` och :data:`sys."
"stderr`."

msgid ""
"Set to ``1`` if the :envvar:`PYTHONLEGACYWINDOWSSTDIO` environment variable "
"is set to a non-empty string."
msgstr ""
"Sätts till ``1`` om miljövariabeln :envvar:`PYTHONLEGACYWINDOWSSTDIO` är "
"satt till en icke-tom sträng."

msgid "See also the :pep:`528` (Change Windows console encoding to UTF-8)."
msgstr "Se även :pep:`528` (Ändra Windows-konsolens kodning till UTF-8)."

msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr ""
"Om ej noll, dumpa statistik på :ref:`Python pymalloc memory allocator "
"<pymalloc>` vid avslut."

msgid "Set to ``1`` by the :envvar:`PYTHONMALLOCSTATS` environment variable."
msgstr "Sätts till ``1`` av miljövariabeln :envvar:`PYTHONMALLOCSTATS`."

msgid ""
"The option is ignored if Python is :option:`configured using the --without-"
"pymalloc option <--without-pymalloc>`."
msgstr ""
"Alternativet ignoreras om Python är :option:`konfigurerad med alternativet --"
"without-pymalloc <--without-pymalloc>`."

msgid "Platform library directory name: :data:`sys.platlibdir`."
msgstr "Katalognamn för plattformsbibliotek: :data:`sys.platlibdir`."

msgid "Set by the :envvar:`PYTHONPLATLIBDIR` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONPLATLIBDIR`."

msgid ""
"Default: value of the ``PLATLIBDIR`` macro which is set by the :option:"
"`configure --with-platlibdir option <--with-platlibdir>` (default: "
"``\"lib\"``, or ``\"DLLs\"`` on Windows)."
msgstr ""
"Standard: värdet på makrot ``PLATLIBDIR`` som anges av :option:`configure --"
"with-platlibdir option <--with-platlibdir>` (standard: ``\"lib\"``, eller "
"``\"DLLs\"`` på Windows)."

msgid ""
"This macro is now used on Windows to locate the standard library extension "
"modules, typically under ``DLLs``. However, for compatibility, note that "
"this value is ignored for any non-standard layouts, including in-tree builds "
"and virtual environments."
msgstr ""
"Detta makro används nu i Windows för att lokalisera standardbibliotekets "
"tilläggsmoduler, vanligtvis under ``DLLs``. Av kompatibilitetsskäl bör du "
"dock notera att detta värde ignoreras för alla icke-standardiserade "
"layouter, inklusive in-tree builds och virtuella miljöer."

msgid ""
"Module search paths (:data:`sys.path`) as a string separated by ``DELIM`` (:"
"data:`os.pathsep`)."
msgstr ""
"Sökvägar för modul (:data:`sys.path`) som en sträng separerad med ``DELIM`` "
"(:data:`os.pathsep`)."

msgid "Set by the :envvar:`PYTHONPATH` environment variable."
msgstr "Ställs in av miljövariabeln :envvar:`PYTHONPATH`."

msgid "Module search paths: :data:`sys.path`."
msgstr "Sökvägar för modul: :data:`sys.path`."

msgid ""
"If :c:member:`~PyConfig.module_search_paths_set` is equal to ``0``, :c:func:"
"`Py_InitializeFromConfig` will replace :c:member:`~PyConfig."
"module_search_paths` and sets :c:member:`~PyConfig.module_search_paths_set` "
"to ``1``."
msgstr ""
"Om :c:member:`~PyConfig.module_search_paths_set` är lika med ``0``, kommer :"
"c:func:`Py_InitializeFromConfig` att ersätta :c:member:`~PyConfig."
"module_search_paths` och sätter :c:member:`~PyConfig."
"module_search_paths_set` till ``1``."

msgid ""
"Default: empty list (``module_search_paths``) and ``0`` "
"(``module_search_paths_set``)."
msgstr ""
"Standard: tom lista (``module_search_paths``) och ``0`` "
"(``module_search_paths_set``)."

msgid "Compilation optimization level:"
msgstr "Nivå för kompileringsoptimering:"

msgid "``0``: Peephole optimizer, set ``__debug__`` to ``True``."
msgstr "``0``: Peephole optimizer, ställ in ``__debug__`` till ``True``."

msgid "``1``: Level 0, remove assertions, set ``__debug__`` to ``False``."
msgstr "``1``: Nivå 0, ta bort påståenden, sätt ``__debug__`` till ``False``."

msgid "``2``: Level 1, strip docstrings."
msgstr "``2``: Nivå 1, remsa docstrings."

msgid ""
"Incremented by the :option:`-O` command line option. Set to the :envvar:"
"`PYTHONOPTIMIZE` environment variable value."
msgstr ""
"Ökas med kommandoradsalternativet :option:`-O`. Sätts till värdet för "
"miljövariabeln :envvar:`PYTHONOPTIMIZE`."

msgid ""
"The list of the original command line arguments passed to the Python "
"executable: :data:`sys.orig_argv`."
msgstr ""
"Listan över de ursprungliga kommandoradsargumenten som skickades till Python-"
"körprogrammet: :data:`sys.orig_argv`."

msgid ""
"If :c:member:`~PyConfig.orig_argv` list is empty and :c:member:`~PyConfig."
"argv` is not a list only containing an empty string, :c:func:`PyConfig_Read` "
"copies :c:member:`~PyConfig.argv` into :c:member:`~PyConfig.orig_argv` "
"before modifying :c:member:`~PyConfig.argv` (if :c:member:`~PyConfig."
"parse_argv` is non-zero)."
msgstr ""
"Om listan :c:member:`~PyConfig.orig_argv` är tom och :c:member:`~PyConfig."
"argv` inte är en lista som bara innehåller en tom sträng, kopierar :c:func:"
"`PyConfig_Read` :c:member:`~PyConfig.argv` till :c:member:`~PyConfig."
"orig_argv` innan den modifierar :c:member:`~PyConfig.argv` (om :c:member:"
"`~PyConfig.parse_argv` inte är noll)."

msgid ""
"See also the :c:member:`~PyConfig.argv` member and the :c:func:"
"`Py_GetArgcArgv` function."
msgstr ""
"Se även medlemmen :c:member:`~PyConfig.argv` och funktionen :c:func:"
"`Py_GetArgcArgv`."

msgid "Default: empty list."
msgstr "Standard: tom lista."

msgid "Parse command line arguments?"
msgstr "Analysera kommandoradsargument?"

msgid ""
"If equals to ``1``, parse :c:member:`~PyConfig.argv` the same way the "
"regular Python parses :ref:`command line arguments <using-on-cmdline>`, and "
"strip Python arguments from :c:member:`~PyConfig.argv`."
msgstr ""
"Om lika med ``1``, analyseras :c:member:`~PyConfig.argv` på samma sätt som "
"vanliga Python analyserar :ref:`kommandoradsargument <using-on-cmdline>`, "
"och Python-argument tas bort från :c:member:`~PyConfig.argv`."

msgid ""
"The :c:member:`PyConfig.argv` arguments are now only parsed if :c:member:"
"`PyConfig.parse_argv` equals to ``1``."
msgstr ""
"Argumenten i :c:member:`PyConfig.argv` analyseras nu endast om :c:member:"
"`PyConfig.parse_argv` är lika med ``1``."

msgid ""
"Parser debug mode. If greater than ``0``, turn on parser debugging output "
"(for expert only, depending on compilation options)."
msgstr ""
"Felsökningsläge för parser. Om större än ``0``, aktivera "
"felsökningsutmatning för parser (endast för experter, beroende på "
"kompileringsalternativ)."

msgid ""
"Incremented by the :option:`-d` command line option. Set to the :envvar:"
"`PYTHONDEBUG` environment variable value."
msgstr ""
"Ökas med kommandoradsalternativet :option:`-d`. Sätts till värdet för "
"miljövariabeln :envvar:`PYTHONDEBUG`."

msgid ""
"Needs a :ref:`debug build of Python <debug-build>` (the ``Py_DEBUG`` macro "
"must be defined)."
msgstr ""
"Kräver en :ref:`debug-version av Python <debug-build>` (makrot ``Py_DEBUG`` "
"måste vara definierat)."

msgid ""
"If non-zero, calculation of path configuration is allowed to log warnings "
"into ``stderr``. If equals to ``0``, suppress these warnings."
msgstr ""
"Om ej noll, tillåts beräkning av sökvägskonfiguration att logga varningar i "
"``stderr``. Om lika med ``0``, undertrycks dessa varningar."

msgid "Now also applies on Windows."
msgstr "Gäller nu även på Windows."

msgid ""
"The site-specific directory prefix where the platform independent Python "
"files are installed: :data:`sys.prefix`."
msgstr ""
"Det platsspecifika katalogprefixet där de plattformsoberoende Python-filerna "
"installeras: :data:`sys.prefix`."

msgid "See also :c:member:`PyConfig.base_prefix`."
msgstr "Se även :c:member:`PyConfig.base_prefix`."

msgid ""
"Program name used to initialize :c:member:`~PyConfig.executable` and in "
"early error messages during Python initialization."
msgstr ""
"Programnamn som används för att initiera :c:member:`~PyConfig.executable` "
"och i tidiga felmeddelanden under Python-initialisering."

msgid "On macOS, use :envvar:`PYTHONEXECUTABLE` environment variable if set."
msgstr ""
"På macOS, använd :envvar:`PYTHONEXECUTABLE` miljövariabel om den är inställd."

msgid ""
"If the ``WITH_NEXT_FRAMEWORK`` macro is defined, use :envvar:"
"`__PYVENV_LAUNCHER__` environment variable if set."
msgstr ""
"Om makrot ``WITH_NEXT_FRAMEWORK`` är definierat, använd :envvar:"
"`__PYVENV_LAUNCHER__` miljövariabel om den är inställd."

msgid ""
"Use ``argv[0]`` of :c:member:`~PyConfig.argv` if available and non-empty."
msgstr ""
"Använd ``argv[0]`` i :c:member:`~PyConfig.argv` om den finns tillgänglig och "
"inte är tom."

msgid ""
"Otherwise, use ``L\"python\"`` on Windows, or ``L\"python3\"`` on other "
"platforms."
msgstr ""
"Annars använder du ``L\"python\"`` på Windows, eller ``L\"python3\"`` på "
"andra plattformar."

msgid ""
"Directory where cached ``.pyc`` files are written: :data:`sys."
"pycache_prefix`."
msgstr "Katalog där cachade ``.pyc``-filer skrivs: :data:`sys.pycache_prefix`."

msgid ""
"Set by the :option:`-X pycache_prefix=PATH <-X>` command line option and "
"the :envvar:`PYTHONPYCACHEPREFIX` environment variable. The command-line "
"option takes precedence."
msgstr ""
"Ställs in med kommandoradsalternativet :option:`-X pycache_prefix=PATH <-X>` "
"och miljövariabeln :envvar:`PYTHONPYCACHEPREFIX`. Kommandoradsalternativet "
"har företräde."

msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "Om ``NULL``, sätts :data:`sys.pycache_prefix` till ``None``."

msgid ""
"Quiet mode. If greater than ``0``, don't display the copyright and version "
"at Python startup in interactive mode."
msgstr ""
"Tyst läge. Om större än ``0``, visa inte copyright och version vid Python-"
"start i interaktivt läge."

msgid "Incremented by the :option:`-q` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-q`."

msgid "Value of the :option:`-c` command line option."
msgstr "Värde för kommandoradsalternativet :option:`-c`."

msgid "Used by :c:func:`Py_RunMain`."
msgstr "Används av :c:func:`Py_RunMain`."

msgid ""
"Filename passed on the command line: trailing command line argument without :"
"option:`-c` or :option:`-m`. It is used by the :c:func:`Py_RunMain` function."
msgstr ""
"Filnamn som skickas på kommandoraden: efterföljande argument på "
"kommandoraden utan :option:`-c` eller :option:`-m`. Den används av "
"funktionen :c:func:`Py_RunMain`."

msgid ""
"For example, it is set to ``script.py`` by the ``python3 script.py arg`` "
"command line."
msgstr ""
"Den ställs till exempel in på ``cript.py`` med kommandoraden ``python3 "
"script.py arg``."

msgid "See also the :c:member:`PyConfig.skip_source_first_line` option."
msgstr "Se även alternativet :c:member:`PyConfig.skip_source_first_line`."

msgid "Value of the :option:`-m` command line option."
msgstr "Värde för kommandoradsalternativet :option:`-m`."

msgid ""
"``package.module`` path to module that should be imported before ``site.py`` "
"is run."
msgstr ""
"``package.module`` sökväg till modul som ska importeras innan ``site.py`` "
"körs."

msgid ""
"Set by the :option:`-X presite=package.module <-X>` command-line option and "
"the :envvar:`PYTHON_PRESITE` environment variable. The command-line option "
"takes precedence."
msgstr ""
"Ställs in med kommandoradsalternativet :option:`-X presite=package.module <-"
"X>` och miljövariabeln :envvar:`PYTHON_PRESITE`. Kommandoradsalternativet "
"har företräde."

msgid ""
"Show total reference count at exit (excluding :term:`immortal` objects)?"
msgstr ""
"Visa totalt antal referenser vid utgången (exklusive :term:`immortal`-"
"objekt)?"

msgid "Set to ``1`` by :option:`-X showrefcount <-X>` command line option."
msgstr ""
"Sätts till ``1`` av :option:`-X showrefcount <-X>` kommandoradsalternativ."

msgid ""
"Needs a :ref:`debug build of Python <debug-build>` (the ``Py_REF_DEBUG`` "
"macro must be defined)."
msgstr ""
"Kräver en :ref:`debug-byggnad av Python <debug-build>` (makrot "
"``Py_REF_DEBUG`` måste vara definierat)."

msgid "Import the :mod:`site` module at startup?"
msgstr "Importera modulen :mod:`site` vid uppstart?"

msgid ""
"If equal to zero, disable the import of the module site and the site-"
"dependent manipulations of :data:`sys.path` that it entails."
msgstr ""
"Om värdet är noll inaktiveras importen av modulens webbplats och de "
"webbplatsberoende manipulationerna av :data:`sys.path` som den medför."

msgid ""
"Also disable these manipulations if the :mod:`site` module is explicitly "
"imported later (call :func:`site.main` if you want them to be triggered)."
msgstr ""
"Inaktivera även dessa manipulationer om modulen :mod:`site` uttryckligen "
"importeras senare (anropa :func:`site.main` om du vill att de ska utlösas)."

msgid "Set to ``0`` by the :option:`-S` command line option."
msgstr "Sätts till ``0`` med kommandoradsalternativet :option:`-S`."

msgid ""
":data:`sys.flags.no_site <sys.flags>` is set to the inverted value of :c:"
"member:`~PyConfig.site_import`."
msgstr ""
":data:`sys.flags.no_site <sys.flags>` är satt till det inverterade värdet "
"av :c:member:`~PyConfig.site_import`."

msgid ""
"If non-zero, skip the first line of the :c:member:`PyConfig.run_filename` "
"source."
msgstr ""
"Om värdet är annat än noll, hoppa över första raden i källan :c:member:"
"`PyConfig.run_filename`."

msgid ""
"It allows the usage of non-Unix forms of ``#!cmd``. This is intended for a "
"DOS specific hack only."
msgstr ""
"Det gör det möjligt att använda icke-Unix-former av ``#!cmd``. Detta är "
"endast avsett för ett DOS-specifikt hack."

msgid "Set to ``1`` by the :option:`-x` command line option."
msgstr "Sätts till ``1`` med kommandoradsalternativet :option:`-x`."

msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and :"
"data:`sys.stderr` (but :data:`sys.stderr` always uses "
"``\"backslashreplace\"`` error handler)."
msgstr ""
"Kodnings- och kodningsfel i :data:`sys.stdin`, :data:`sys.stdout` och :data:"
"`sys.stderr` (men :data:`sys.stderr` använder alltid felhanteraren "
"``\"backslashreplace\"``)."

msgid ""
"Use the :envvar:`PYTHONIOENCODING` environment variable if it is non-empty."
msgstr "Använd miljövariabeln :envvar:`PYTHONIOENCODING` om den inte är tom."

msgid "Default encoding:"
msgstr "Standardkodning:"

msgid "``\"UTF-8\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero."
msgstr "``\"UTF-8\"`` om :c:member:`PyPreConfig.utf8_mode` inte är noll."

msgid "Otherwise, use the :term:`locale encoding`."
msgstr "I annat fall används :term:`locale encoding`."

msgid "Default error handler:"
msgstr "Standard felhanterare:"

msgid "On Windows: use ``\"surrogateescape\"``."
msgstr "I Windows: använd ``\"surrogateescape\"``."

msgid ""
"``\"surrogateescape\"`` if :c:member:`PyPreConfig.utf8_mode` is non-zero, or "
"if the LC_CTYPE locale is \"C\" or \"POSIX\"."
msgstr ""
"``\"surrogateescape\"`` om :c:member:`PyPreConfig.utf8_mode` är icke-noll, "
"eller om LC_CTYPE locale är \"C\" eller \"POSIX\"."

msgid "``\"strict\"`` otherwise."
msgstr "``\"strikt\"`` annars."

msgid "See also :c:member:`PyConfig.legacy_windows_stdio`."
msgstr "Se även :c:member:`PyConfig.legacy_windows_stdio`."

msgid "Enable tracemalloc?"
msgstr "Aktivera tracemalloc?"

msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr "Om ej noll, anropa :func:`tracemalloc.start` vid uppstart."

msgid ""
"Set by :option:`-X tracemalloc=N <-X>` command line option and by the :"
"envvar:`PYTHONTRACEMALLOC` environment variable."
msgstr ""
"Ställs in av :option:`-X tracemalloc=N <-X>` kommandoradsalternativ och av "
"miljövariabeln :envvar:`PYTHONTRACEMALLOC`."

msgid "Enable the Linux ``perf`` profiler support?"
msgstr "Aktivera stöd för Linux-profiler ``perf``?"

msgid "If equals to ``1``, enable support for the Linux ``perf`` profiler."
msgstr "Om lika med ``1``, aktiveras stöd för Linux-profileraren ``perf``."

msgid ""
"If equals to ``2``, enable support for the Linux ``perf`` profiler with "
"DWARF JIT support."
msgstr ""
"Om lika med ``2``, aktivera stöd för Linux ``perf`` profiler med DWARF JIT-"
"stöd."

msgid ""
"Set to ``1`` by :option:`-X perf <-X>` command-line option and the :envvar:"
"`PYTHONPERFSUPPORT` environment variable."
msgstr ""
"Sätts till ``1`` av :option:`-X perf <-X>` kommandoradsalternativ och "
"miljövariabeln :envvar:`PYTHONPERFSUPPORT`."

msgid ""
"Set to ``2`` by the :option:`-X perf_jit <-X>` command-line option and the :"
"envvar:`PYTHON_PERF_JIT_SUPPORT` environment variable."
msgstr ""
"Sätts till ``2`` med kommandoradsalternativet :option:`-X perf_jit <-X>` och "
"miljövariabeln :envvar:`PYTHON_PERF_JIT_SUPPORT`."

msgid "See :ref:`perf_profiling` for more information."
msgstr "Se :ref:`perf_profiling` för mer information."

msgid "Directory of the Python standard library."
msgstr "Katalog över Pythons standardbibliotek."

msgid "Use :ref:`environment variables <using-on-envvars>`?"
msgstr "Använd :ref:`miljövariabler <using-on-envvars>`?"

msgid ""
"If equals to zero, ignore the :ref:`environment variables <using-on-"
"envvars>`."
msgstr ""
"Om den är lika med noll ignoreras :ref:`miljövariabler <using-on-envvars>`."

msgid "Set to ``0`` by the :option:`-E` environment variable."
msgstr "Sätts till ``0`` av miljövariabeln :option:`-E`."

msgid ""
"If non-zero, ``stdout`` and ``stderr`` will be redirected to the system log."
msgstr ""
"Om värdet inte är noll kommer ``stdout`` och ``stderr`` att omdirigeras till "
"systemloggen."

msgid "Only available on macOS 10.12 and later, and on iOS."
msgstr "Endast tillgängligt på macOS 10.12 och senare, och på iOS."

msgid ""
"Default: ``0`` (don't use the system log) on macOS; ``1`` on iOS (use the "
"system log)."
msgstr ""
"Standard: ``0`` (använd inte systemloggen) på macOS; ``1`` på iOS (använd "
"systemloggen)."

msgid "If non-zero, add the user site directory to :data:`sys.path`."
msgstr ""
"Om värdet är annat än noll läggs användarens webbplatskatalog till i :data:"
"`sys.path`."

msgid "Set to ``0`` by the :option:`-s` and :option:`-I` command line options."
msgstr ""
"Sätts till ``0`` med kommandoradsalternativen :option:`-s` och :option:`-I`."

msgid "Set to ``0`` by the :envvar:`PYTHONNOUSERSITE` environment variable."
msgstr "Sätts till ``0`` av miljövariabeln :envvar:`PYTHONNOUSERSITE`."

msgid ""
"Verbose mode. If greater than ``0``, print a message each time a module is "
"imported, showing the place (filename or built-in module) from which it is "
"loaded."
msgstr ""
"Verbose-läge. Om större än ``0``, skriv ut ett meddelande varje gång en "
"modul importeras, som visar platsen (filnamn eller inbyggd modul) från "
"vilken den laddas."

msgid ""
"If greater than or equal to ``2``, print a message for each file that is "
"checked for when searching for a module. Also provides information on module "
"cleanup at exit."
msgstr ""
"Om större än eller lika med ``2``, skrivs ett meddelande ut för varje fil "
"som kontrolleras vid sökning efter en modul. Ger också information om "
"modulrensning vid avslutning."

msgid "Incremented by the :option:`-v` command line option."
msgstr "Ökas med kommandoradsalternativet :option:`-v`."

msgid "Set by the :envvar:`PYTHONVERBOSE` environment variable value."
msgstr "Ställs in av värdet för miljövariabeln :envvar:`PYTHONVERBOSE`."

msgid ""
"Options of the :mod:`warnings` module to build warnings filters, lowest to "
"highest priority: :data:`sys.warnoptions`."
msgstr ""
"Alternativ för modulen :mod:`warnings` för att bygga varningsfilter, från "
"lägsta till högsta prioritet: :data:`sys.warnoptions`."

msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first item "
"of :data:`warnings.filters` which is checked first (highest priority)."
msgstr ""
"Modulen :mod:`warnings` lägger till :data:`sys.warnoptions` i omvänd "
"ordning: det sista :c:member:`PyConfig.warnoptions`-objektet blir det första "
"objektet i :data:`warnings.filters` som kontrolleras först (högsta "
"prioritet)."

msgid ""
"The :option:`-W` command line options adds its value to :c:member:`~PyConfig."
"warnoptions`, it can be used multiple times."
msgstr ""
"Kommandoradsalternativet :option:`-W` lägger till sitt värde i :c:member:"
"`~PyConfig.warnoptions`, det kan användas flera gånger."

msgid ""
"The :envvar:`PYTHONWARNINGS` environment variable can also be used to add "
"warning options. Multiple options can be specified, separated by commas (``,"
"``)."
msgstr ""
"Miljövariabeln :envvar:`PYTHONWARNINGS` kan också användas för att lägga "
"till varningsalternativ. Flera alternativ kan anges, åtskilda med "
"kommatecken (``,``)."

msgid ""
"If equal to ``0``, Python won't try to write ``.pyc`` files on the import of "
"source modules."
msgstr ""
"Om lika med ``0``, kommer Python inte att försöka skriva ``.pyc``-filer vid "
"import av källmoduler."

msgid ""
"Set to ``0`` by the :option:`-B` command line option and the :envvar:"
"`PYTHONDONTWRITEBYTECODE` environment variable."
msgstr ""
"Sätts till ``0`` med kommandoradsalternativet :option:`-B` och "
"miljövariabeln :envvar:`PYTHONDONTWRITEBYTECODE`."

msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of :c:"
"member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode` initialiseras till det inverterade värdet "
"av :c:member:`~PyConfig.write_bytecode`."

msgid "Values of the :option:`-X` command line options: :data:`sys._xoptions`."
msgstr ""
"Värden för kommandoradsalternativen :option:`-X`: :data:`sys._xoptions`."

msgid "If non-zero, write performance statistics at Python exit."
msgstr "Om ej noll, skriv prestandastatistik när Python avslutas."

msgid ""
"Need a special build with the ``Py_STATS`` macro: see :option:`--enable-"
"pystats`."
msgstr ""
"Behöver en speciell konstruktion med makrot ``Py_STATS``: se :option:`--"
"enable-pystats`."

msgid ""
"If :c:member:`~PyConfig.parse_argv` is non-zero, :c:member:`~PyConfig.argv` "
"arguments are parsed the same way the regular Python parses :ref:`command "
"line arguments <using-on-cmdline>`, and Python arguments are stripped from :"
"c:member:`~PyConfig.argv`."
msgstr ""
"Om :c:member:`~PyConfig.parse_argv` inte är noll, analyseras :c:member:"
"`~PyConfig.argv`-argument på samma sätt som vanliga Python analyserar :ref:"
"`kommandoradsargument <using-on-cmdline>`, och Python-argument tas bort "
"från :c:member:`~PyConfig.argv`."

msgid ""
"The :c:member:`~PyConfig.xoptions` options are parsed to set other options: "
"see the :option:`-X` command line option."
msgstr ""
"Alternativen :c:member:`~PyConfig.xoptions` analyseras för att ange andra "
"alternativ: se kommandoradsalternativet :option:`-X`."

msgid "The ``show_alloc_count`` field has been removed."
msgstr "Fältet ``show_alloc_count`` har tagits bort."

msgid "Initialization with PyConfig"
msgstr "Initialisering med PyConfig"

msgid ""
"Initializing the interpreter from a populated configuration struct is "
"handled by calling :c:func:`Py_InitializeFromConfig`."
msgstr ""
"Initialisering av tolken från en ifylld konfigurationsstruktur hanteras "
"genom att anropa :c:func:`Py_InitializeFromConfig`."

msgid ""
"If :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` or :c:"
"func:`PyImport_ExtendInittab` are used, they must be set or called after "
"Python preinitialization and before the Python initialization. If Python is "
"initialized multiple times, :c:func:`PyImport_AppendInittab` or :c:func:"
"`PyImport_ExtendInittab` must be called before each Python initialization."
msgstr ""
"Om :c:func:`PyImport_FrozenModules`, :c:func:`PyImport_AppendInittab` eller :"
"c:func:`PyImport_ExtendInittab` används, måste de anges eller anropas efter "
"Pythons förinitialisering och före Pythons initialisering. Om Python "
"initialiseras flera gånger måste :c:func:`PyImport_AppendInittab` eller :c:"
"func:`PyImport_ExtendInittab` anropas före varje Python-initialisering."

msgid ""
"The current configuration (``PyConfig`` type) is stored in "
"``PyInterpreterState.config``."
msgstr ""
"Den aktuella konfigurationen (av typen ``PyConfig``) lagras i "
"``PyInterpreterState.config``."

msgid "Example setting the program name::"
msgstr "Exempel på inställning av programnamn::"

msgid ""
"void init_python(void)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Set the program name. Implicitly preinitialize Python. */\n"
"    status = PyConfig_SetString(&config, &config.program_name,\n"
"                                L\"/path/to/my_program\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto exception;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"    return;\n"
"\n"
"exception:\n"
"    PyConfig_Clear(&config);\n"
"    Py_ExitStatusException(status);\n"
"}"
msgstr ""
"void init_python(void)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Ställ in programnamnet. Förinitialisera Python implicit. */\n"
"    status = PyConfig_SetString(&config, &config.program_name,\n"
"                                L\"/stig/till/mitt_program\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto undantag;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        gå till undantaget;\n"
"    }\n"
"    PyConfig_Clear(&config);\n"
"    returnera;\n"
"\n"
"undantag:\n"
"    PyConfig_Clear(&config);\n"
"    Py_ExitStatusException(status);\n"
"}"

msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters. Note that since 3.11, many "
"parameters are not calculated until initialization, and so values cannot be "
"read from the configuration structure. Any values set before initialize is "
"called will be left unchanged by initialization::"
msgstr ""
"Ett mer komplett exempel på hur man ändrar standardkonfigurationen, läser "
"konfigurationen och sedan åsidosätter vissa parametrar. Observera att sedan "
"3.11 beräknas många parametrar inte förrän vid initialiseringen, och därför "
"kan värdena inte läsas från konfigurationsstrukturen. Alla värden som "
"ställts in innan initialize anropas kommer att lämnas oförändrade av "
"initialization::"

msgid ""
"PyStatus init_python(const char *program_name)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Set the program name before reading the configuration\n"
"       (decode byte string from the locale encoding).\n"
"\n"
"       Implicitly preinitialize Python. */\n"
"    status = PyConfig_SetBytesString(&config, &config.program_name,\n"
"                                     program_name);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Read all configuration at once */\n"
"    status = PyConfig_Read(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Specify sys.path explicitly */\n"
"    /* If you want to modify the default set of paths, finish\n"
"       initialization first and then use PySys_GetObject(\"path\") */\n"
"    config.module_search_paths_set = 1;\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/stdlib\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/more/modules\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Override executable computed by PyConfig_Read() */\n"
"    status = PyConfig_SetString(&config, &config.executable,\n"
"                                L\"/path/to/my_executable\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"\n"
"done:\n"
"    PyConfig_Clear(&config);\n"
"    return status;\n"
"}"
msgstr ""
"PyStatus init_python(const char *programnamn)\n"
"{\n"
"    PyStatus status;\n"
"\n"
"    PyConfig config;\n"
"    PyConfig_InitPythonConfig(&config);\n"
"\n"
"    /* Ställ in programnamnet innan du läser konfigurationen\n"
"       (avkoda byte-strängen från den lokala kodningen).\n"
"\n"
"       Förinitialiserar Python implicit. */\n"
"    status = PyConfig_SetBytesString(&config, &config.program_name,\n"
"                                     program_namn);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Läs all konfiguration på en gång */\n"
"    status = PyConfig_Read(&config);\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Ange sys.path uttryckligen */\n"
"    /* Om du vill ändra standarduppsättningen av sökvägar, avsluta\n"
"       initialiseringen först och använd sedan PySys_GetObject(\"path\") */\n"
"    config.module_search_paths_set = 1;\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/path/to/stdlib\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"    status = PyWideStringList_Append(&config.module_search_paths,\n"
"                                     L\"/väg/till/mera/moduler\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    /* Åsidosätt den körbara filen som beräknas av PyConfig_Read() */\n"
"    status = PyConfig_SetString(&config, &config.körbar,\n"
"                                L\"/stig/till/mitt_körbara\");\n"
"    if (PyStatus_Exception(status)) {\n"
"        goto done;\n"
"    }\n"
"\n"
"    status = Py_InitializeFromConfig(&config);\n"
"\n"
"gjort:\n"
"    PyConfig_Clear(&config);\n"
"    returnera status;\n"
"}"

msgid "Isolated Configuration"
msgstr "Isolerad konfiguration"

msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and :c:func:"
"`PyConfig_InitIsolatedConfig` functions create a configuration to isolate "
"Python from the system. For example, to embed Python into an application."
msgstr ""
"funktionerna :c:func:`PyPreConfig_InitIsolatedConfig` och :c:func:"
"`PyConfig_InitIsolatedConfig` skapar en konfiguration för att isolera Python "
"från systemet. Till exempel för att bädda in Python i en applikation."

msgid ""
"This configuration ignores global configuration variables, environment "
"variables, command line arguments (:c:member:`PyConfig.argv` is not parsed) "
"and user site directory. The C standard streams (ex: ``stdout``) and the "
"LC_CTYPE locale are left unchanged. Signal handlers are not installed."
msgstr ""
"Denna konfiguration ignorerar globala konfigurationsvariabler, "
"miljövariabler, kommandoradsargument (:c:member:`PyConfig.argv` tolkas inte) "
"och användarens webbplatskatalog. C-standardströmmarna (t.ex. ``stdout``) "
"och LC_CTYPE-lokalen lämnas oförändrade. Signalhanterare är inte "
"installerade."

msgid ""
"Configuration files are still used with this configuration to determine "
"paths that are unspecified. Ensure :c:member:`PyConfig.home` is specified to "
"avoid computing the default path configuration."
msgstr ""
"Konfigurationsfiler används fortfarande med den här konfigurationen för att "
"bestämma sökvägar som inte är specificerade. Se till att :c:member:`PyConfig."
"home` anges för att undvika att beräkna standardsökvägskonfigurationen."

msgid "Python Configuration"
msgstr "Python-konfiguration"

msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and :c:func:"
"`PyConfig_InitPythonConfig` functions create a configuration to build a "
"customized Python which behaves as the regular Python."
msgstr ""
"funktionerna :c:func:`PyPreConfig_InitPythonConfig` och :c:func:"
"`PyConfig_InitPythonConfig` skapar en konfiguration för att bygga ett "
"anpassat Python som beter sig som det vanliga Python."

msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr ""
"Miljövariabler och kommandoradsargument används för att konfigurera Python, "
"medan globala konfigurationsvariabler ignoreras."

msgid ""
"This function enables C locale coercion (:pep:`538`) and :ref:`Python UTF-8 "
"Mode <utf8-mode>` (:pep:`540`) depending on the LC_CTYPE locale, :envvar:"
"`PYTHONUTF8` and :envvar:`PYTHONCOERCECLOCALE` environment variables."
msgstr ""
"Denna funktion aktiverar C locale coercion (:pep:`538`) och :ref:`Python "
"UTF-8 Mode <utf8-mode>` (:pep:`540`) beroende på LC_CTYPE locale, :envvar:"
"`PYTHONUTF8` och :envvar:`PYTHONCOERCECLOCALE` miljövariabler."

msgid "Python Path Configuration"
msgstr "Konfiguration av Python-sökväg"

msgid ":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ":c:type:`PyConfig` innehåller flera fält för sökvägskonfigurationen:"

msgid "Path configuration inputs:"
msgstr "Ingångar för konfiguration av sökväg:"

msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

msgid ":c:member:`PyConfig.platlibdir`"
msgstr ":c:member:`PyConfig.platlibdir`"

msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_namn`"

msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

msgid "current working directory: to get absolute paths"
msgstr "aktuell arbetskatalog: för att få absoluta sökvägar"

msgid ""
"``PATH`` environment variable to get the program full path (from :c:member:"
"`PyConfig.program_name`)"
msgstr ""
"``PATH`` miljövariabel för att få den fullständiga sökvägen till programmet "
"(från :c:member:`PyConfig.program_name`)"

msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "miljövariabeln ``PYVENV_LAUNCHER__``"

msgid ""
"(Windows only) Application paths in the registry under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER and "
"HKEY_LOCAL_MACHINE (where X.Y is the Python version)."
msgstr ""
"(Endast Windows) Programsökvägar i registret under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" i HKEY_CURRENT_USER och "
"HKEY_LOCAL_MACHINE (där X.Y är Python-versionen)."

msgid "Path configuration output fields:"
msgstr "Utmatningsfält för konfiguration av sökväg:"

msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.körbar`"

msgid ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"

msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If :c:member:`~PyConfig."
"module_search_paths_set` is equal to ``0``, :c:member:`~PyConfig."
"module_search_paths` is overridden and :c:member:`~PyConfig."
"module_search_paths_set` is set to ``1``."
msgstr ""
"Om minst ett \"utdatafält\" inte är inställt, beräknar Python "
"sökvägskonfigurationen för att fylla oinställda fält. Om :c:member:"
"`~PyConfig.module_search_paths_set` är lika med ``0``, åsidosätts :c:member:"
"`~PyConfig.module_search_paths` och :c:member:`~PyConfig."
"module_search_paths_set` sätts till ``1``."

msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-empty. "
"``module_search_paths`` is considered as set if ``module_search_paths_set`` "
"is set to ``1``. In this case, ``module_search_paths`` will be used without "
"modification."
msgstr ""
"Det är möjligt att helt ignorera funktionen som beräknar "
"standardsökvägskonfigurationen genom att uttryckligen ange alla utdatafält "
"för sökvägskonfigurationen som anges ovan. En sträng anses vara inställd "
"även om den inte är tom. ``module_search_paths`` betraktas som set om "
"``module_search_paths_set`` är satt till ``1``. I detta fall kommer "
"``module_search_paths`` att användas utan modifiering."

msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to ``0`` to suppress warnings "
"when calculating the path configuration (Unix only, Windows does not log any "
"warning)."
msgstr ""
"Sätt :c:member:`~PyConfig.pathconfig_warnings` till ``0`` för att "
"undertrycka varningar vid beräkning av sökvägskonfigurationen (endast Unix, "
"Windows loggar inte någon varning)."

msgid ""
"If :c:member:`~PyConfig.base_prefix` or :c:member:`~PyConfig."
"base_exec_prefix` fields are not set, they inherit their value from :c:"
"member:`~PyConfig.prefix` and :c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
"Om fälten :c:member:`~PyConfig.base_prefix` eller :c:member:`~PyConfig."
"base_exec_prefix` inte har angetts ärver de sina värden från :c:member:"
"`~PyConfig.prefix` respektive :c:member:`~PyConfig.exec_prefix`."

msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ""
":c:func:`Py_RunMain` och :c:func:`Py_Main` modifierar :data:`sys.path`:"

msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend :c:member:`~PyConfig."
"run_filename` to :data:`sys.path`."
msgstr ""
"Om :c:member:`~PyConfig.run_filename` är inställd och är en katalog som "
"innehåller ett ``__main__.py``-skript, prepend :c:member:`~PyConfig."
"run_filename` till :data:`sys.path`."

msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr "Om :c:member:`~PyConfig.isolated` är noll:"

msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory "
"to :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
"Om :c:member:`~PyConfig.run_module` är inställd, lägg till den aktuella "
"katalogen i :data:`sys.path`. Gör ingenting om den aktuella katalogen inte "
"kan läsas."

msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of the "
"filename to :data:`sys.path`."
msgstr ""
"Om :c:member:`~PyConfig.run_filename` är inställt, lägg till katalogen för "
"filnamnet i :data:`sys.path`."

msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr "I annat fall läggs en tom sträng till :data:`sys.path`."

msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be "
"modified by the :mod:`site` module. If :c:member:`~PyConfig."
"user_site_directory` is non-zero and the user's site-package directory "
"exists, the :mod:`site` module appends the user's site-package directory to :"
"data:`sys.path`."
msgstr ""
"Om :c:member:`~PyConfig.site_import` inte är noll, kan :data:`sys.path` "
"ändras av modulen :mod:`site`. Om :c:member:`~PyConfig.user_site_directory` "
"inte är noll och användarens katalog för site-paketet finns, lägger modulen :"
"mod:`site` till användarens katalog för site-paketet till :data:`sys.path`."

msgid "The following configuration files are used by the path configuration:"
msgstr "Följande konfigurationsfiler används av sökvägskonfigurationen:"

msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

msgid "``._pth`` file (ex: ``python._pth``)"
msgstr "filen ``._pth`` (t.ex. ``python._pth``)"

msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (endast Unix)"

msgid "If a ``._pth`` file is present:"
msgstr "Om en ``._pth``-fil finns:"

msgid "Set :c:member:`~PyConfig.isolated` to ``1``."
msgstr "Sätt :c:member:`~PyConfig.isolated` till ``1``."

msgid "Set :c:member:`~PyConfig.use_environment` to ``0``."
msgstr "Sätt :c:member:`~PyConfig.use_environment` till ``0``."

msgid "Set :c:member:`~PyConfig.site_import` to ``0``."
msgstr "Ställ in :c:member:`~PyConfig.site_import` till ``0``."

msgid "Set :c:member:`~PyConfig.safe_path` to ``1``."
msgstr "Sätt :c:member:`~PyConfig.safe_path` till ``1``."

msgid ""
"If :c:member:`~PyConfig.home` is not set and a ``pyvenv.cfg`` file is "
"present in the same directory as :c:member:`~PyConfig.executable`, or its "
"parent, :c:member:`~PyConfig.prefix` and :c:member:`~PyConfig.exec_prefix` "
"are set that location. When this happens, :c:member:`~PyConfig.base_prefix` "
"and :c:member:`~PyConfig.base_exec_prefix` still keep their value, pointing "
"to the base installation. See :ref:`sys-path-init-virtual-environments` for "
"more information."
msgstr ""
"Om :c:member:`~PyConfig.home` inte är inställd och en ``pyvenv.cfg``-fil "
"finns i samma katalog som :c:member:`~PyConfig.executable`, eller dess "
"överordnade, kommer :c:member:`~PyConfig.prefix` och :c:member:`~PyConfig."
"exec_prefix` att ställas in på den platsen. När detta händer behåller :c:"
"member:`~PyConfig.base_prefix` och :c:member:`~PyConfig.base_exec_prefix` "
"fortfarande sina värden och pekar på basinstallationen. Se :ref:`sys-path-"
"init-virtual-environments` för mer information."

msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set :c:member:"
"`PyConfig.base_executable`."
msgstr ""
"Miljövariabeln ``__PYVENV_LAUNCHER__`` används för att ställa in :c:member:"
"`PyConfig.base_executable`."

msgid ""
":c:member:`~PyConfig.prefix`, and :c:member:`~PyConfig.exec_prefix`, are now "
"set to the ``pyvenv.cfg`` directory. This was previously done by :mod:"
"`site`, therefore affected by :option:`-S`."
msgstr ""
":c:member:`~PyConfig.prefix`, och :c:member:`~PyConfig.exec_prefix`, är nu "
"inställda på katalogen ``pyvenv.cfg``. Detta gjordes tidigare av :mod:"
"`site`, och påverkas därför av :option:`-S`."

msgid "Py_GetArgcArgv()"
msgstr "Py_GetArgcArgv()"

msgid "Get the original command line arguments, before Python modified them."
msgstr ""
"Hämta de ursprungliga kommandoradsargumenten, innan Python ändrade dem."

msgid "See also :c:member:`PyConfig.orig_argv` member."
msgstr "Se även :c:member:`PyConfig.orig_argv` member."

msgid "Delaying main module execution"
msgstr "Fördröjning av exekvering av huvudmodul"

msgid ""
"In some embedding use cases, it may be desirable to separate interpreter "
"initialization from the execution of the main module."
msgstr ""
"I vissa inbäddningsfall kan det vara önskvärt att skilja initialiseringen av "
"tolken från exekveringen av huvudmodulen."

msgid ""
"This separation can be achieved by setting ``PyConfig.run_command`` to the "
"empty string during initialization (to prevent the interpreter from dropping "
"into the interactive prompt), and then subsequently executing the desired "
"main module code using ``__main__.__dict__`` as the global namespace."
msgstr ""
"Denna separation kan uppnås genom att sätta ``PyConfig.run_command`` till "
"den tomma strängen under initialiseringen (för att förhindra att tolken "
"hamnar i den interaktiva prompten) och sedan köra den önskade "
"huvudmodulskoden med ``__main__.__dict__`` som globalt namnområde."

msgid "main()"
msgstr "main()"

msgid "argv (in module sys)"
msgstr "argv (i modul sys)"
