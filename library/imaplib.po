# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-19 14:18+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!imaplib` --- IMAP4 protocol client"
msgstr ""

msgid "**Source code:** :source:`Lib/imaplib.py`"
msgstr ""

msgid ""
"This module defines three classes, :class:`IMAP4`, :class:`IMAP4_SSL` and :"
"class:`IMAP4_stream`, which encapsulate a connection to an IMAP4 server and "
"implement a large subset of the IMAP4rev1 client protocol as defined in :rfc:"
"`2060`. It is backward compatible with IMAP4 (:rfc:`1730`) servers, but note "
"that the ``STATUS`` command is not supported in IMAP4."
msgstr ""

msgid "Availability"
msgstr ""

msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""

msgid ""
"Three classes are provided by the :mod:`imaplib` module, :class:`IMAP4` is "
"the base class:"
msgstr ""

msgid ""
"This class implements the actual IMAP4 protocol.  The connection is created "
"and protocol version (IMAP4 or IMAP4rev1) is determined when the instance is "
"initialized. If *host* is not specified, ``''`` (the local host) is used. If "
"*port* is omitted, the standard IMAP4 port (143) is used. The optional "
"*timeout* parameter specifies a timeout in seconds for the connection "
"attempt. If timeout is not given or is ``None``, the global default socket "
"timeout is used."
msgstr ""

msgid ""
"The :class:`IMAP4` class supports the :keyword:`with` statement.  When used "
"like this, the IMAP4 ``LOGOUT`` command is issued automatically when the :"
"keyword:`!with` statement exits.  E.g.::"
msgstr ""

msgid ""
">>> from imaplib import IMAP4\n"
">>> with IMAP4(\"domain.org\") as M:\n"
"...     M.noop()\n"
"...\n"
"('OK', [b'Nothing Accomplished. d25if65hy903weo.87'])"
msgstr ""

msgid "Support for the :keyword:`with` statement was added."
msgstr ""

msgid "The optional *timeout* parameter was added."
msgstr ""

msgid "Three exceptions are defined as attributes of the :class:`IMAP4` class:"
msgstr ""

msgid ""
"Exception raised on any errors.  The reason for the exception is passed to "
"the constructor as a string."
msgstr ""

msgid ""
"IMAP4 server errors cause this exception to be raised.  This is a sub-class "
"of :exc:`IMAP4.error`.  Note that closing the instance and instantiating a "
"new one will usually allow recovery from this exception."
msgstr ""

msgid ""
"This exception is raised when a writable mailbox has its status changed by "
"the server.  This is a sub-class of :exc:`IMAP4.error`.  Some other client "
"now has write permission, and the mailbox will need to be re-opened to re-"
"obtain write permission."
msgstr ""

msgid "There's also a subclass for secure connections:"
msgstr ""

msgid ""
"This is a subclass derived from :class:`IMAP4` that connects over an SSL "
"encrypted socket (to use this class you need a socket module that was "
"compiled with SSL support).  If *host* is not specified, ``''`` (the local "
"host) is used. If *port* is omitted, the standard IMAP4-over-SSL port (993) "
"is used. *ssl_context* is a :class:`ssl.SSLContext` object which allows "
"bundling SSL configuration options, certificates and private keys into a "
"single (potentially long-lived) structure.  Please read :ref:`ssl-security` "
"for best practices."
msgstr ""

msgid ""
"The optional *timeout* parameter specifies a timeout in seconds for the "
"connection attempt. If timeout is not given or is ``None``, the global "
"default socket timeout is used."
msgstr ""

msgid "*ssl_context* parameter was added."
msgstr ""

msgid ""
"The class now supports hostname check with :attr:`ssl.SSLContext."
"check_hostname` and *Server Name Indication* (see :const:`ssl.HAS_SNI`)."
msgstr ""

msgid "The deprecated *keyfile* and *certfile* parameters have been removed."
msgstr ""

msgid "The second subclass allows for connections created by a child process:"
msgstr ""

msgid ""
"This is a subclass derived from :class:`IMAP4` that connects to the ``stdin/"
"stdout`` file descriptors created by passing *command* to ``subprocess."
"Popen()``."
msgstr ""

msgid "The following utility functions are defined:"
msgstr ""

msgid ""
"Parse an IMAP4 ``INTERNALDATE`` string and return corresponding local time.  "
"The return value is a :class:`time.struct_time` tuple or ``None`` if the "
"string has wrong format."
msgstr ""

msgid ""
"Converts an integer into a bytes representation using characters from the "
"set [``A`` .. ``P``]."
msgstr ""

msgid "Converts an IMAP4 ``FLAGS`` response to a tuple of individual flags."
msgstr ""

msgid ""
"Convert *date_time* to an IMAP4 ``INTERNALDATE`` representation. The return "
"value is a string in the form: ``\"DD-Mmm-YYYY HH:MM:SS +HHMM\"`` (including "
"double-quotes).  The *date_time* argument can be a number (int or float) "
"representing seconds since epoch (as returned by :func:`time.time`), a 9-"
"tuple representing local time an instance of :class:`time.struct_time` (as "
"returned by :func:`time.localtime`), an aware instance of :class:`datetime."
"datetime`, or a double-quoted string.  In the last case, it is assumed to "
"already be in the correct format."
msgstr ""

msgid ""
"Note that IMAP4 message numbers change as the mailbox changes; in "
"particular, after an ``EXPUNGE`` command performs deletions the remaining "
"messages are renumbered. So it is highly advisable to use UIDs instead, with "
"the UID command."
msgstr ""

msgid ""
"At the end of the module, there is a test section that contains a more "
"extensive example of usage."
msgstr ""

msgid ""
"Documents describing the protocol, sources for servers implementing it, by "
"the University of Washington's IMAP Information Center can all be found at "
"(**Source Code**) https://github.com/uw-imap/imap (**Not Maintained**)."
msgstr ""

msgid "IMAP4 Objects"
msgstr ""

msgid ""
"All IMAP4rev1 commands are represented by methods of the same name, either "
"uppercase or lowercase."
msgstr ""

msgid ""
"All arguments to commands are converted to strings, except for "
"``AUTHENTICATE``, and the last argument to ``APPEND`` which is passed as an "
"IMAP4 literal.  If necessary (the string contains IMAP4 protocol-sensitive "
"characters and isn't enclosed with either parentheses or double quotes) each "
"string is quoted. However, the *password* argument to the ``LOGIN`` command "
"is always quoted. If you want to avoid having an argument string quoted (eg: "
"the *flags* argument to ``STORE``) then enclose the string in parentheses "
"(eg: ``r'(\\Deleted)'``)."
msgstr ""

msgid ""
"Most commands return a tuple: ``(type, [data, ...])`` where *type* is "
"usually ``'OK'`` or ``'NO'``, and *data* is either the text from the command "
"response, or mandated results from the command. Each *data* is either a "
"``bytes``, or a tuple. If a tuple, then the first part is the header of the "
"response, and the second part contains the data (ie: 'literal' value)."
msgstr ""

msgid ""
"The *message_set* options to commands below is a string specifying one or "
"more messages to be acted upon.  It may be a simple message number "
"(``'1'``), a range of message numbers (``'2:4'``), or a group of non-"
"contiguous ranges separated by commas (``'1:3,6:9'``).  A range can contain "
"an asterisk to indicate an infinite upper bound (``'3:*'``)."
msgstr ""

msgid "An :class:`IMAP4` instance has the following methods:"
msgstr ""

msgid "Append *message* to named mailbox."
msgstr ""

msgid "Authenticate command --- requires response processing."
msgstr ""

msgid ""
"*mechanism* specifies which authentication mechanism is to be used - it "
"should appear in the instance variable ``capabilities`` in the form "
"``AUTH=mechanism``."
msgstr ""

msgid "*authobject* must be a callable object::"
msgstr ""

msgid "data = authobject(response)"
msgstr ""

msgid ""
"It will be called to process server continuation responses; the *response* "
"argument it is passed will be ``bytes``.  It should return ``bytes`` *data* "
"that will be base64 encoded and sent to the server.  It should return "
"``None`` if the client abort response ``*`` should be sent instead."
msgstr ""

msgid ""
"string usernames and passwords are now encoded to ``utf-8`` instead of being "
"limited to ASCII."
msgstr ""

msgid "Checkpoint mailbox on server."
msgstr ""

msgid ""
"Close currently selected mailbox. Deleted messages are removed from writable "
"mailbox. This is the recommended command before ``LOGOUT``."
msgstr ""

msgid "Copy *message_set* messages onto end of *new_mailbox*."
msgstr ""

msgid "Create new mailbox named *mailbox*."
msgstr ""

msgid "Delete old mailbox named *mailbox*."
msgstr ""

msgid "Delete the ACLs (remove any rights) set for who on mailbox."
msgstr ""

msgid ""
"Enable *capability* (see :rfc:`5161`).  Most capabilities do not need to be "
"enabled.  Currently only the ``UTF8=ACCEPT`` capability is supported (see :"
"RFC:`6855`)."
msgstr ""

msgid "The :meth:`enable` method itself, and :RFC:`6855` support."
msgstr ""

msgid ""
"Permanently remove deleted items from selected mailbox. Generates an "
"``EXPUNGE`` response for each deleted message. Returned data contains a list "
"of ``EXPUNGE`` message numbers in order received."
msgstr ""

msgid ""
"Fetch (parts of) messages.  *message_parts* should be a string of message "
"part names enclosed within parentheses, eg: ``\"(UID BODY[TEXT])\"``.  "
"Returned data are tuples of message part envelope and data."
msgstr ""

msgid ""
"Get the ``ACL``\\ s for *mailbox*. The method is non-standard, but is "
"supported by the ``Cyrus`` server."
msgstr ""

msgid ""
"Retrieve the specified ``ANNOTATION``\\ s for *mailbox*. The method is non-"
"standard, but is supported by the ``Cyrus`` server."
msgstr ""

msgid ""
"Get the ``quota`` *root*'s resource usage and limits. This method is part of "
"the IMAP4 QUOTA extension defined in rfc2087."
msgstr ""

msgid ""
"Get the list of ``quota`` ``roots`` for the named *mailbox*. This method is "
"part of the IMAP4 QUOTA extension defined in rfc2087."
msgstr ""

msgid ""
"Return an :class:`!Idler`: an iterable context manager implementing the "
"IMAP4 ``IDLE`` command as defined in :rfc:`2177`."
msgstr ""

msgid ""
"The returned object sends the ``IDLE`` command when activated by the :"
"keyword:`with` statement, produces IMAP untagged responses via the :term:"
"`iterator` protocol, and sends ``DONE`` upon context exit."
msgstr ""

msgid ""
"All untagged responses that arrive after sending the ``IDLE`` command "
"(including any that arrive before the server acknowledges the command) will "
"be available via iteration. Any leftover responses (those not iterated in "
"the :keyword:`with` context) can be retrieved in the usual way after "
"``IDLE`` ends, using :meth:`IMAP4.response`."
msgstr ""

msgid ""
"Responses are represented as ``(type, [data, ...])`` tuples, as described "
"in :ref:`IMAP4 Objects <imap4-objects>`."
msgstr ""

msgid ""
"The *duration* argument sets a maximum duration (in seconds) to keep idling, "
"after which any ongoing iteration will stop. It can be an :class:`int` or :"
"class:`float`, or ``None`` for no time limit. Callers wishing to avoid "
"inactivity timeouts on servers that impose them should keep this at most 29 "
"minutes (1740 seconds). Requires a socket connection; *duration* must be "
"``None`` on :class:`IMAP4_stream` connections."
msgstr ""

msgid ""
">>> with M.idle(duration=29 * 60) as idler:\n"
"...     for typ, data in idler:\n"
"...         print(typ, data)\n"
"...\n"
"EXISTS [b'1']\n"
"RECENT [b'1']"
msgstr ""

msgid ""
"Yield a burst of responses no more than *interval* seconds apart (expressed "
"as an :class:`int` or :class:`float`)."
msgstr ""

msgid ""
"This :term:`generator` is an alternative to iterating one response at a "
"time, intended to aid in efficient batch processing. It retrieves the next "
"response along with any immediately available subsequent responses. (For "
"example, a rapid series of ``EXPUNGE`` responses after a bulk delete.)"
msgstr ""

msgid ""
"Requires a socket connection; does not work on :class:`IMAP4_stream` "
"connections."
msgstr ""

msgid ""
">>> with M.idle() as idler:\n"
"...     # get a response and any others following by < 0.1 seconds\n"
"...     batch = list(idler.burst())\n"
"...     print(f'processing {len(batch)} responses...')\n"
"...     print(batch)\n"
"...\n"
"processing 3 responses...\n"
"[('EXPUNGE', [b'2']), ('EXPUNGE', [b'1']), ('RECENT', [b'0'])]"
msgstr ""

msgid ""
"The ``IDLE`` context's maximum duration, as passed to :meth:`IMAP4.idle`, is "
"respected when waiting for the first response in a burst. Therefore, an "
"expired :class:`!Idler` will cause this generator to return immediately "
"without producing anything. Callers should consider this if using it in a "
"loop."
msgstr ""

msgid ""
"The iterator returned by :meth:`IMAP4.idle` is usable only within a :keyword:"
"`with` statement. Before or after that context, unsolicited responses are "
"collected internally whenever a command finishes, and can be retrieved with :"
"meth:`IMAP4.response`."
msgstr ""

msgid ""
"The :class:`!Idler` class name and structure are internal interfaces, "
"subject to change. Calling code can rely on its context management, "
"iteration, and public method to remain stable, but should not subclass, "
"instantiate, compare, or otherwise directly reference the class."
msgstr ""

msgid ""
"List mailbox names in *directory* matching *pattern*.  *directory* defaults "
"to the top-level mail folder, and *pattern* defaults to match anything.  "
"Returned data contains a list of ``LIST`` responses."
msgstr ""

msgid ""
"Identify the client using a plaintext password. The *password* will be "
"quoted."
msgstr ""

msgid ""
"Force use of ``CRAM-MD5`` authentication when identifying the client to "
"protect the password.  Will only work if the server ``CAPABILITY`` response "
"includes the phrase ``AUTH=CRAM-MD5``."
msgstr ""

msgid "Shutdown connection to server. Returns server ``BYE`` response."
msgstr ""

msgid "The method no longer ignores silently arbitrary exceptions."
msgstr ""

msgid ""
"List subscribed mailbox names in directory matching pattern. *directory* "
"defaults to the top level directory and *pattern* defaults to match any "
"mailbox. Returned data are tuples of message part envelope and data."
msgstr ""

msgid "Show my ACLs for a mailbox (i.e. the rights that I have on mailbox)."
msgstr ""

msgid "Returns IMAP namespaces as defined in :rfc:`2342`."
msgstr ""

msgid "Send ``NOOP`` to server."
msgstr ""

msgid ""
"Opens socket to *port* at *host*. The optional *timeout* parameter specifies "
"a timeout in seconds for the connection attempt. If timeout is not given or "
"is ``None``, the global default socket timeout is used. Also note that if "
"the *timeout* parameter is set to be zero, it will raise a :class:"
"`ValueError` to reject creating a non-blocking socket. This method is "
"implicitly called by the :class:`IMAP4` constructor. The connection objects "
"established by this method will be used in the :meth:`IMAP4.read`, :meth:"
"`IMAP4.readline`, :meth:`IMAP4.send`, and :meth:`IMAP4.shutdown` methods. "
"You may override this method."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``imaplib.open`` with arguments "
"``self``, ``host``, ``port``."
msgstr ""

msgid "The *timeout* parameter was added."
msgstr ""

msgid ""
"Fetch truncated part of a message. Returned data is a tuple of message part "
"envelope and data."
msgstr ""

msgid ""
"Assume authentication as *user*. Allows an authorised administrator to proxy "
"into any user's mailbox."
msgstr ""

msgid ""
"Reads *size* bytes from the remote server. You may override this method."
msgstr ""

msgid "Reads one line from the remote server. You may override this method."
msgstr ""

msgid ""
"Prompt server for an update. Returned data is ``None`` if no new messages, "
"else value of ``RECENT`` response."
msgstr ""

msgid "Rename mailbox named *oldmailbox* to *newmailbox*."
msgstr ""

msgid ""
"Return data for response *code* if received, or ``None``. Returns the given "
"code, instead of the usual type."
msgstr ""

msgid ""
"Search mailbox for matching messages.  *charset* may be ``None``, in which "
"case no ``CHARSET`` will be specified in the request to the server.  The "
"IMAP protocol requires that at least one criterion be specified; an "
"exception will be raised when the server returns an error.  *charset* must "
"be ``None`` if the ``UTF8=ACCEPT`` capability was enabled using the :meth:"
"`enable` command."
msgstr ""

msgid "Example::"
msgstr ""

msgid ""
"# M is a connected IMAP4 instance...\n"
"typ, msgnums = M.search(None, 'FROM', '\"LDJ\"')\n"
"\n"
"# or:\n"
"typ, msgnums = M.search(None, '(FROM \"LDJ\")')"
msgstr ""

msgid ""
"Select a mailbox. Returned data is the count of messages in *mailbox* "
"(``EXISTS`` response).  The default *mailbox* is ``'INBOX'``.  If the "
"*readonly* flag is set, modifications to the mailbox are not allowed."
msgstr ""

msgid "Sends ``data`` to the remote server. You may override this method."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``imaplib.send`` with arguments "
"``self``, ``data``."
msgstr ""

msgid ""
"Set an ``ACL`` for *mailbox*. The method is non-standard, but is supported "
"by the ``Cyrus`` server."
msgstr ""

msgid ""
"Set ``ANNOTATION``\\ s for *mailbox*. The method is non-standard, but is "
"supported by the ``Cyrus`` server."
msgstr ""

msgid ""
"Set the ``quota`` *root*'s resource *limits*. This method is part of the "
"IMAP4 QUOTA extension defined in rfc2087."
msgstr ""

msgid ""
"Close connection established in ``open``.  This method is implicitly called "
"by :meth:`IMAP4.logout`.  You may override this method."
msgstr ""

msgid "Returns socket instance used to connect to server."
msgstr ""

msgid ""
"The ``sort`` command is a variant of ``search`` with sorting semantics for "
"the results.  Returned data contains a space separated list of matching "
"message numbers."
msgstr ""

msgid ""
"Sort has two arguments before the *search_criterion* argument(s); a "
"parenthesized list of *sort_criteria*, and the searching *charset*.  Note "
"that unlike ``search``, the searching *charset* argument is mandatory.  "
"There is also a ``uid sort`` command which corresponds to ``sort`` the way "
"that ``uid search`` corresponds to ``search``.  The ``sort`` command first "
"searches the mailbox for messages that match the given searching criteria "
"using the charset argument for the interpretation of strings in the "
"searching criteria.  It then returns the numbers of matching messages."
msgstr ""

msgid "This is an ``IMAP4rev1`` extension command."
msgstr ""

msgid ""
"Send a ``STARTTLS`` command.  The *ssl_context* argument is optional and "
"should be a :class:`ssl.SSLContext` object.  This will enable encryption on "
"the IMAP connection.  Please read :ref:`ssl-security` for best practices."
msgstr ""

msgid ""
"The method now supports hostname check with :attr:`ssl.SSLContext."
"check_hostname` and *Server Name Indication* (see :const:`ssl.HAS_SNI`)."
msgstr ""

msgid "Request named status conditions for *mailbox*."
msgstr ""

msgid ""
"Alters flag dispositions for messages in mailbox.  *command* is specified by "
"section 6.4.6 of :rfc:`2060` as being one of \"FLAGS\", \"+FLAGS\", or \"-"
"FLAGS\", optionally with a suffix of \".SILENT\"."
msgstr ""

msgid "For example, to set the delete flag on all messages::"
msgstr ""

msgid ""
"typ, data = M.search(None, 'ALL')\n"
"for num in data[0].split():\n"
"   M.store(num, '+FLAGS', '\\\\Deleted')\n"
"M.expunge()"
msgstr ""

msgid ""
"Creating flags containing ']' (for example: \"[test]\") violates :rfc:`3501` "
"(the IMAP protocol).  However, imaplib has historically allowed creation of "
"such tags, and popular IMAP servers, such as Gmail, accept and produce such "
"flags.  There are non-Python programs which also create such tags.  Although "
"it is an RFC violation and IMAP clients and servers are supposed to be "
"strict, imaplib still continues to allow such tags to be created for "
"backward compatibility reasons, and as of Python 3.6, handles them if they "
"are sent from the server, since this improves real-world compatibility."
msgstr ""

msgid "Subscribe to new mailbox."
msgstr ""

msgid ""
"The ``thread`` command is a variant of ``search`` with threading semantics "
"for the results.  Returned data contains a space separated list of thread "
"members."
msgstr ""

msgid ""
"Thread members consist of zero or more messages numbers, delimited by "
"spaces, indicating successive parent and child."
msgstr ""

msgid ""
"Thread has two arguments before the *search_criterion* argument(s); a "
"*threading_algorithm*, and the searching *charset*.  Note that unlike "
"``search``, the searching *charset* argument is mandatory.  There is also a "
"``uid thread`` command which corresponds to ``thread`` the way that ``uid "
"search`` corresponds to ``search``.  The ``thread`` command first searches "
"the mailbox for messages that match the given searching criteria using the "
"*charset* argument for the interpretation of strings in the searching "
"criteria. It then returns the matching messages threaded according to the "
"specified threading algorithm."
msgstr ""

msgid ""
"Execute command args with messages identified by UID, rather than message "
"number.  Returns response appropriate to command.  At least one argument "
"must be supplied; if none are provided, the server will return an error and "
"an exception will be raised."
msgstr ""

msgid "Unsubscribe from old mailbox."
msgstr ""

msgid ""
":meth:`imaplib.IMAP4.unselect` frees server's resources associated with the "
"selected mailbox and returns the server to the authenticated state. This "
"command performs the same actions as :meth:`imaplib.IMAP4.close`, except "
"that no messages are permanently removed from the currently selected mailbox."
msgstr ""

msgid ""
"Allow simple extension commands notified by server in ``CAPABILITY`` "
"response."
msgstr ""

msgid "The following attributes are defined on instances of :class:`IMAP4`:"
msgstr ""

msgid ""
"The most recent supported protocol in the ``CAPABILITY`` response from the "
"server."
msgstr ""

msgid ""
"Integer value to control debugging output.  The initialize value is taken "
"from the module variable ``Debug``.  Values greater than three trace each "
"command."
msgstr ""

msgid ""
"Boolean value that is normally ``False``, but is set to ``True`` if an :meth:"
"`enable` command is successfully issued for the ``UTF8=ACCEPT`` capability."
msgstr ""

msgid "IMAP4 Example"
msgstr ""

msgid ""
"Here is a minimal example (without error checking) that opens a mailbox and "
"retrieves and prints all messages::"
msgstr ""

msgid ""
"import getpass, imaplib\n"
"\n"
"M = imaplib.IMAP4(host='example.org')\n"
"M.login(getpass.getuser(), getpass.getpass())\n"
"M.select()\n"
"typ, data = M.search(None, 'ALL')\n"
"for num in data[0].split():\n"
"    typ, data = M.fetch(num, '(RFC822)')\n"
"    print('Message %s\\n%s\\n' % (num, data[0][1]))\n"
"M.close()\n"
"M.logout()"
msgstr ""

msgid "IMAP4"
msgstr ""

msgid "protocol"
msgstr ""

msgid "IMAP4_SSL"
msgstr ""

msgid "IMAP4_stream"
msgstr ""
