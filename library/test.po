# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!test` --- Regression tests package for Python"
msgstr ":mod:`!test` --- Paket med regressionstester för Python"

msgid ""
"The :mod:`test` package is meant for internal use by Python only. It is "
"documented for the benefit of the core developers of Python. Any use of this "
"package outside of Python's standard library is discouraged as code "
"mentioned here can change or be removed without notice between releases of "
"Python."
msgstr ""
"Paketet :mod:`test` är endast avsett för internt bruk av Python. Det är "
"dokumenterat till förmån för Pythons kärnutvecklare. All användning av detta "
"paket utanför Pythons standardbibliotek avråds eftersom koden som nämns här "
"kan ändras eller tas bort utan förvarning mellan utgåvor av Python."

msgid ""
"The :mod:`test` package contains all regression tests for Python as well as "
"the modules :mod:`test.support` and :mod:`test.regrtest`. :mod:`test."
"support` is used to enhance your tests while :mod:`test.regrtest` drives the "
"testing suite."
msgstr ""
"Paketet :mod:`test` innehåller alla regressionstester för Python samt "
"modulerna :mod:`test.support` och :mod:`test.regrtest`. :mod:`test.support` "
"används för att förbättra dina tester medan :mod:`test.regrtest` driver "
"testsviten."

msgid ""
"Each module in the :mod:`test` package whose name starts with ``test_`` is a "
"testing suite for a specific module or feature. All new tests should be "
"written using the :mod:`unittest` or :mod:`doctest` module.  Some older "
"tests are written using a \"traditional\" testing style that compares output "
"printed to ``sys.stdout``; this style of test is considered deprecated."
msgstr ""
"Varje modul i paketet :mod:`test` vars namn börjar med ``test_`` är en "
"testsvit för en specifik modul eller funktion. Alla nya tester bör skrivas "
"med hjälp av modulen :mod:`unittest` eller :mod:`doctest`.  Vissa äldre "
"tester är skrivna med en \"traditionell\" teststil som jämför utdata som "
"skrivs ut till ``sys.stdout``; denna teststil anses vara föråldrad."

msgid "Module :mod:`unittest`"
msgstr "Modul :mod:`unittest`"

msgid "Writing PyUnit regression tests."
msgstr "Skriva PyUnit regressionstester."

msgid "Module :mod:`doctest`"
msgstr "Modul :mod:`doctest`"

msgid "Tests embedded in documentation strings."
msgstr "Tester inbäddade i dokumentationssträngar."

msgid "Writing Unit Tests for the :mod:`test` package"
msgstr "Skriva enhetstester för :mod:`test`-paketet"

msgid ""
"It is preferred that tests that use the :mod:`unittest` module follow a few "
"guidelines. One is to name the test module by starting it with ``test_`` and "
"end it with the name of the module being tested. The test methods in the "
"test module should start with ``test_`` and end with a description of what "
"the method is testing. This is needed so that the methods are recognized by "
"the test driver as test methods. Also, no documentation string for the "
"method should be included. A comment (such as ``# Tests function returns "
"only True or False``) should be used to provide documentation for test "
"methods. This is done because documentation strings get printed out if they "
"exist and thus what test is being run is not stated."
msgstr ""
"Det är önskvärt att tester som använder modulen :mod:`unittest` följer några "
"riktlinjer. En är att namnge testmodulen genom att börja den med ``test_`` "
"och avsluta den med namnet på den modul som testas. Testmetoderna i "
"testmodulen bör börja med ``test_`` och sluta med en beskrivning av vad "
"metoden testar. Detta behövs för att testdrivrutinen ska känna igen "
"metoderna som testmetoder. Dessutom bör ingen dokumentationssträng för "
"metoden inkluderas. En kommentar (t.ex. ``# Testfunktionen returnerar endast "
"True eller False``) bör användas för att tillhandahålla dokumentation för "
"testmetoder. Detta görs för att dokumentationssträngar skrivs ut om de finns "
"och därmed anges inte vilket test som körs."

msgid "A basic boilerplate is often used::"
msgstr "En grundläggande boilerplate används ofta::"

msgid ""
"import unittest\n"
"from test import support\n"
"\n"
"class MyTestCase1(unittest.TestCase):\n"
"\n"
"    # Only use setUp() and tearDown() if necessary\n"
"\n"
"    def setUp(self):\n"
"        ... code to execute in preparation for tests ...\n"
"\n"
"    def tearDown(self):\n"
"        ... code to execute to clean up after tests ...\n"
"\n"
"    def test_feature_one(self):\n"
"        # Test feature one.\n"
"        ... testing code ...\n"
"\n"
"    def test_feature_two(self):\n"
"        # Test feature two.\n"
"        ... testing code ...\n"
"\n"
"    ... more test methods ...\n"
"\n"
"class MyTestCase2(unittest.TestCase):\n"
"    ... same structure as MyTestCase1 ...\n"
"\n"
"... more test classes ...\n"
"\n"
"if __name__ == '__main__':\n"
"    unittest.main()"
msgstr ""
"import unittest\n"
"from test import support\n"
"\n"
"class MyTestCase1(unittest.TestCase):\n"
"\n"
"    # Only use setUp() and tearDown() if necessary\n"
"\n"
"    def setUp(self):\n"
"        ... code to execute in preparation for tests ...\n"
"\n"
"    def tearDown(self):\n"
"        ... code to execute to clean up after tests ...\n"
"\n"
"    def test_feature_one(self):\n"
"        # Test feature one.\n"
"        ... testing code ...\n"
"\n"
"    def test_feature_two(self):\n"
"        # Test feature two.\n"
"        ... testing code ...\n"
"\n"
"    ... more test methods ...\n"
"\n"
"class MyTestCase2(unittest.TestCase):\n"
"    ... same structure as MyTestCase1 ...\n"
"\n"
"... more test classes ...\n"
"\n"
"if __name__ == '__main__':\n"
"    unittest.main()"

msgid ""
"This code pattern allows the testing suite to be run by :mod:`test."
"regrtest`, on its own as a script that supports the :mod:`unittest` CLI, or "
"via the ``python -m unittest`` CLI."
msgstr ""
"Detta kodmönster gör att testsviten kan köras av :mod:`test.regrtest`, på "
"egen hand som ett skript som stöder :mod:`unittest` CLI, eller via ``python -"
"m unittest`` CLI."

msgid ""
"The goal for regression testing is to try to break code. This leads to a few "
"guidelines to be followed:"
msgstr ""
"Målet med regressionstestning är att försöka knäcka koden. Detta leder till "
"några riktlinjer som ska följas:"

msgid ""
"The testing suite should exercise all classes, functions, and constants. "
"This includes not just the external API that is to be presented to the "
"outside world but also \"private\" code."
msgstr ""
"Testsviten bör omfatta alla klasser, funktioner och konstanter. Detta "
"inkluderar inte bara det externa API som ska presenteras för omvärlden utan "
"även \"privat\" kod."

msgid ""
"Whitebox testing (examining the code being tested when the tests are being "
"written) is preferred. Blackbox testing (testing only the published user "
"interface) is not complete enough to make sure all boundary and edge cases "
"are tested."
msgstr ""
"Whitebox-testning (undersökning av den kod som testas när testerna skrivs) "
"är att föredra. Blackbox-testning (testning av endast det publicerade "
"användargränssnittet) är inte tillräckligt komplett för att säkerställa att "
"alla gräns- och kantfall testas."

msgid ""
"Make sure all possible values are tested including invalid ones. This makes "
"sure that not only all valid values are acceptable but also that improper "
"values are handled correctly."
msgstr ""
"Se till att alla möjliga värden testas, inklusive ogiltiga värden. På så "
"sätt säkerställs inte bara att alla giltiga värden accepteras utan också att "
"felaktiga värden hanteras korrekt."

msgid ""
"Exhaust as many code paths as possible. Test where branching occurs and thus "
"tailor input to make sure as many different paths through the code are taken."
msgstr ""
"Utnyttja så många kodvägar som möjligt. Testa var förgreningar förekommer "
"och anpassa därmed indata för att se till att så många olika vägar genom "
"koden som möjligt tas."

msgid ""
"Add an explicit test for any bugs discovered for the tested code. This will "
"make sure that the error does not crop up again if the code is changed in "
"the future."
msgstr ""
"Lägg till ett uttryckligt test för eventuella buggar som upptäcks i den "
"testade koden. Detta kommer att säkerställa att felet inte dyker upp igen om "
"koden ändras i framtiden."

msgid ""
"Make sure to clean up after your tests (such as close and remove all "
"temporary files)."
msgstr ""
"Se till att städa upp efter dina tester (t.ex. genom att stänga och ta bort "
"alla temporära filer)."

msgid ""
"If a test is dependent on a specific condition of the operating system then "
"verify the condition already exists before attempting the test."
msgstr ""
"Om ett test är beroende av ett specifikt tillstånd i operativsystemet ska du "
"kontrollera att tillståndet redan finns innan du utför testet."

msgid ""
"Import as few modules as possible and do it as soon as possible. This "
"minimizes external dependencies of tests and also minimizes possible "
"anomalous behavior from side-effects of importing a module."
msgstr ""
"Importera så få moduler som möjligt och gör det så snart som möjligt. Detta "
"minimerar externa beroenden för tester och minimerar också eventuella "
"avvikande beteenden från bieffekter av att importera en modul."

msgid ""
"Try to maximize code reuse. On occasion, tests will vary by something as "
"small as what type of input is used. Minimize code duplication by "
"subclassing a basic test class with a class that specifies the input::"
msgstr ""
"Försök att maximera återanvändning av kod. Ibland kommer testerna att "
"variera genom något så litet som vilken typ av indata som används. Minimera "
"kodduplicering genom att underklassa en grundläggande testklass med en klass "
"som specificerar indata::"

msgid ""
"class TestFuncAcceptsSequencesMixin:\n"
"\n"
"    func = mySuperWhammyFunction\n"
"\n"
"    def test_func(self):\n"
"        self.func(self.arg)\n"
"\n"
"class AcceptLists(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = [1, 2, 3]\n"
"\n"
"class AcceptStrings(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = 'abc'\n"
"\n"
"class AcceptTuples(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = (1, 2, 3)"
msgstr ""
"class TestFuncAcceptsSequencesMixin:\n"
"\n"
"    func = mySuperWhammyFunction\n"
"\n"
"    def test_func(self):\n"
"        self.func(self.arg)\n"
"\n"
"class AcceptLists(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = [1, 2, 3]\n"
"\n"
"class AcceptStrings(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = 'abc'\n"
"\n"
"class AcceptTuples(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = (1, 2, 3)"

msgid ""
"When using this pattern, remember that all classes that inherit from :class:"
"`unittest.TestCase` are run as tests.  The :class:`!"
"TestFuncAcceptsSequencesMixin` class in the example above does not have any "
"data and so can't be run by itself, thus it does not inherit from :class:"
"`unittest.TestCase`."
msgstr ""
"När du använder det här mönstret ska du komma ihåg att alla klasser som "
"ärver från :class:`unittest.TestCase` körs som tester.  Klassen :class:`!"
"TestFuncAcceptsSequencesMixin` i exemplet ovan har ingen data och kan därför "
"inte köras själv, och den ärver därför inte från :class:`unittest.TestCase`."

msgid "Test Driven Development"
msgstr "Testdriven utveckling"

msgid "A book by Kent Beck on writing tests before code."
msgstr "En bok av Kent Beck om att skriva tester före kod."

msgid "Running tests using the command-line interface"
msgstr "Utföra tester med hjälp av kommandoradsgränssnittet"

msgid ""
"The :mod:`test` package can be run as a script to drive Python's regression "
"test suite, thanks to the :option:`-m` option: :program:`python -m test`. "
"Under the hood, it uses :mod:`test.regrtest`; the call :program:`python -m "
"test.regrtest` used in previous Python versions still works.  Running the "
"script by itself automatically starts running all regression tests in the :"
"mod:`test` package. It does this by finding all modules in the package whose "
"name starts with ``test_``, importing them, and executing the function :func:"
"`test_main` if present or loading the tests via unittest.TestLoader."
"loadTestsFromModule if ``test_main`` does not exist.  The names of tests to "
"execute may also be passed to the script. Specifying a single regression "
"test (:program:`python -m test test_spam`) will minimize output and only "
"print whether the test passed or failed."
msgstr ""
"Paketet :mod:`test` kan köras som ett skript för att driva Pythons "
"regressionstestsvit, tack vare alternativet :option:`-m`: :program:`python -"
"m test`. Under huven använder det :mod:`test.regrtest`; anropet :program:"
"`python -m test.regrtest` som användes i tidigare Python-versioner fungerar "
"fortfarande.  Om du kör skriptet själv börjar du automatiskt köra alla "
"regressionstester i paketet :mod:`test`. Detta görs genom att hitta alla "
"moduler i paketet vars namn börjar med ``test_``, importera dem och köra "
"funktionen :func:`test_main` om den finns eller ladda testerna via unittest."
"TestLoader.loadTestsFromModule om ``test_main`` inte finns.  Namnen på de "
"tester som ska köras kan också skickas till skriptet. Om du anger ett enda "
"regressionstest (:program:`python -m test test_spam`) minimeras utdata och "
"det skrivs bara ut om testet godkändes eller misslyckades."

msgid ""
"Running :mod:`test` directly allows what resources are available for tests "
"to use to be set. You do this by using the ``-u`` command-line option. "
"Specifying ``all`` as the value for the ``-u`` option enables all possible "
"resources: :program:`python -m test -uall`. If all but one resource is "
"desired (a more common case), a comma-separated list of resources that are "
"not desired may be listed after ``all``. The command :program:`python -m "
"test -uall,-audio,-largefile` will run :mod:`test` with all resources except "
"the ``audio`` and ``largefile`` resources. For a list of all resources and "
"more command-line options, run :program:`python -m test -h`."
msgstr ""
"Om du kör :mod:`test` direkt kan du ställa in vilka resurser som ska vara "
"tillgängliga för tester. Detta görs genom att använda "
"kommandoradsalternativet ``-u``. Om du anger ``all`` som värde för "
"alternativet ``-u`` aktiveras alla möjliga resurser: :program:`python -m "
"test -uall`. Om alla resurser utom en önskas (ett vanligare fall) kan en "
"kommaseparerad lista med resurser som inte önskas anges efter ``all``. "
"Kommandot :program:`python -m test -uall,-audio,-largefile` kommer att köra :"
"mod:`test` med alla resurser utom resurserna ``audio`` och ``largefile``. "
"För en lista över alla resurser och fler kommandoradsalternativ, kör :"
"program:`python -m test -h`."

msgid ""
"Some other ways to execute the regression tests depend on what platform the "
"tests are being executed on. On Unix, you can run :program:`make test` at "
"the top-level directory where Python was built. On Windows, executing :"
"program:`rt.bat` from your :file:`PCbuild` directory will run all regression "
"tests."
msgstr ""
"Några andra sätt att köra regressionstesterna beror på vilken plattform "
"testerna körs på. På Unix kan du köra :program:`make test` i den katalog på "
"högsta nivån där Python byggdes. På Windows kan du köra alla "
"regressionstester genom att köra :program:`rt.bat` från din :file:`PCbuild`-"
"katalog."

msgid ""
"Output is colorized by default and can be :ref:`controlled using environment "
"variables <using-on-controlling-color>`."
msgstr ""
"Utdata är färgade som standard och kan :ref:`kontrolleras med hjälp av "
"miljövariabler <using-on-controlling-color>`."

msgid ":mod:`test.support` --- Utilities for the Python test suite"
msgstr ":mod:`test.support` --- Verktyg för Python-testsviten"

msgid ""
"The :mod:`test.support` module provides support for Python's regression test "
"suite."
msgstr "Modulen :mod:`test.support` ger stöd för Pythons regressionstestsvit."

msgid ""
":mod:`test.support` is not a public module.  It is documented here to help "
"Python developers write tests.  The API of this module is subject to change "
"without backwards compatibility concerns between releases."
msgstr ""
":mod:`test.support` är inte en publik modul.  Den är dokumenterad här för "
"att hjälpa Python-utvecklare att skriva tester.  API:et för denna modul kan "
"komma att ändras utan hänsyn till bakåtkompatibilitet mellan utgåvor."

msgid "This module defines the following exceptions:"
msgstr "Denna modul definierar följande undantag:"

msgid ""
"Exception to be raised when a test fails. This is deprecated in favor of :"
"mod:`unittest`\\ -based tests and :class:`unittest.TestCase`'s assertion "
"methods."
msgstr ""
"Undantag som ska tas upp när ett test misslyckas. Detta är föråldrat till "
"förmån för :mod:`unittest` -baserade tester och :class:`unittest.TestCase` s "
"assertion-metoder."

msgid ""
"Subclass of :exc:`unittest.SkipTest`. Raised when a resource (such as a "
"network connection) is not available. Raised by the :func:`requires` "
"function."
msgstr ""
"Underklass till :exc:`unittest.SkipTest`. Utlöses när en resurs (t.ex. en "
"nätverksanslutning) inte är tillgänglig. Utlöses av funktionen :func:"
"`requires`."

msgid "The :mod:`test.support` module defines the following constants:"
msgstr "Modulen :mod:`test.support` definierar följande konstanter:"

msgid ""
"``True`` when verbose output is enabled. Should be checked when more "
"detailed information is desired about a running test. *verbose* is set by :"
"mod:`test.regrtest`."
msgstr ""
"``True`` när verbose-utdata är aktiverat. Bör markeras när mer detaljerad "
"information önskas om ett test som körs. *verbose* ställs in av :mod:`test."
"regrtest`."

msgid "``True`` if the running interpreter is Jython."
msgstr "``True`` om den körande tolken är Jython."

msgid "``True`` if ``sys.platform`` is ``android``."
msgstr "``True`` om ```sys.platform`` är ``android``."

msgid "``True`` if ``sys.platform`` is ``emscripten``."
msgstr "``True`` om ```sys.platform`` är ``emscripten``."

msgid "``True`` if ``sys.platform`` is ``wasi``."
msgstr "``True`` om ```sys.platform`` är ``wasi``."

msgid "``True`` if ``sys.platform`` is ``ios``, ``tvos``, or ``watchos``."
msgstr "``True`` om ``sys.platform`` är ``ios``, ``tvos`` eller ``watchos``."

msgid ""
"``True`` if ``sys.platform`` is ``darwin`` or ``is_apple_mobile`` is "
"``True``."
msgstr ""
"``True`` om ```sys.platform`` är ``darwin`` eller ``is_apple_mobile`` är "
"``True``."

msgid "Path for shell if not on Windows; otherwise ``None``."
msgstr "Sökväg till skalet om det inte finns på Windows; annars ``None``."

msgid ""
"Timeout in seconds for tests using a network server listening on the network "
"local loopback interface like ``127.0.0.1``."
msgstr ""
"Timeout i sekunder för tester som använder en nätverksserver som lyssnar på "
"nätverkets lokala loopback-gränssnitt, t.ex. ``127.0.0.1``."

msgid ""
"The timeout is long enough to prevent test failure: it takes into account "
"that the client and the server can run in different threads or even "
"different processes."
msgstr ""
"Timeouten är tillräckligt lång för att förhindra att testet misslyckas: den "
"tar hänsyn till att klienten och servern kan köras i olika trådar eller till "
"och med olika processer."

msgid ""
"The timeout should be long enough for :meth:`~socket.socket.connect`, :meth:"
"`~socket.socket.recv` and :meth:`~socket.socket.send` methods of :class:"
"`socket.socket`."
msgstr ""
"Timeouten ska vara tillräckligt lång för metoderna :meth:`~socket.socket."
"connect`, :meth:`~socket.socket.recv` och :meth:`~socket.socket.send` i :"
"class:`socket.socket`."

msgid "Its default value is 5 seconds."
msgstr "Dess standardvärde är 5 sekunder."

msgid "See also :data:`INTERNET_TIMEOUT`."
msgstr "Se även :data:`INTERNET_TIMEOUT`."

msgid "Timeout in seconds for network requests going to the internet."
msgstr "Timeout i sekunder för nätverksförfrågningar som går till internet."

msgid ""
"The timeout is short enough to prevent a test to wait for too long if the "
"internet request is blocked for whatever reason."
msgstr ""
"Timeouten är tillräckligt kort för att förhindra att ett test får vänta för "
"länge om internetbegäran blockeras av någon anledning."

msgid ""
"Usually, a timeout using :data:`INTERNET_TIMEOUT` should not mark a test as "
"failed, but skip the test instead: see :func:`~test.support.socket_helper."
"transient_internet`."
msgstr ""
"Vanligtvis bör en timeout som använder :data:`INTERNET_TIMEOUT` inte markera "
"ett test som misslyckat, utan hoppa över testet istället: se :func:`~test."
"support.socket_helper.transient_internet`."

msgid "Its default value is 1 minute."
msgstr "Dess standardvärde är 1 minut."

msgid "See also :data:`LOOPBACK_TIMEOUT`."
msgstr "Se även :data:`LOOPBACK_TIMEOUT`."

msgid ""
"Timeout in seconds to mark a test as failed if the test takes \"too long\"."
msgstr ""
"Timeout i sekunder för att markera ett test som misslyckat om testet tar "
"\"för lång tid\"."

msgid ""
"The timeout value depends on the regrtest ``--timeout`` command line option."
msgstr ""
"Timeout-värdet beror på regrtests kommandoradsalternativ ``--timeout``."

msgid ""
"If a test using :data:`SHORT_TIMEOUT` starts to fail randomly on slow "
"buildbots, use :data:`LONG_TIMEOUT` instead."
msgstr ""
"Om ett test som använder :data:`SHORT_TIMEOUT` börjar misslyckas "
"slumpmässigt på långsamma byggrobotar, använd :data:`LONG_TIMEOUT` istället."

msgid "Its default value is 30 seconds."
msgstr "Dess standardvärde är 30 sekunder."

msgid "Timeout in seconds to detect when a test hangs."
msgstr "Timeout i sekunder för att upptäcka när ett test hänger sig."

msgid ""
"It is long enough to reduce the risk of test failure on the slowest Python "
"buildbots. It should not be used to mark a test as failed if the test takes "
"\"too long\".  The timeout value depends on the regrtest ``--timeout`` "
"command line option."
msgstr ""
"Den är tillräckligt lång för att minska risken för att testet misslyckas på "
"de långsammaste Python-byggrobotarna. Det ska inte användas för att markera "
"ett test som misslyckat om testet tar \"för lång tid\".  Timeout-värdet "
"beror på regrtests kommandoradsalternativ ``--timeout``."

msgid "Its default value is 5 minutes."
msgstr "Dess standardvärde är 5 minuter."

msgid ""
"See also :data:`LOOPBACK_TIMEOUT`, :data:`INTERNET_TIMEOUT` and :data:"
"`SHORT_TIMEOUT`."
msgstr ""
"Se även :data:`LOOPBACK_TIMEOUT`, :data:`INTERNET_TIMEOUT` och :data:"
"`SHORT_TIMEOUT`."

msgid "Set when tests can be skipped when they are not useful for PGO."
msgstr "Ställ in när tester kan hoppas över när de inte är användbara för PGO."

msgid ""
"A constant that is likely larger than the underlying OS pipe buffer size, to "
"make writes blocking."
msgstr ""
"En konstant som sannolikt är större än den underliggande OS-"
"pipebuffertstorleken, för att göra skrivningar blockerande."

msgid ""
"``True`` if Python was built with the :c:macro:`Py_DEBUG` macro defined, "
"that is, if Python was :ref:`built in debug mode <debug-build>`."
msgstr ""
"``True`` om Python byggdes med makrot :c:macro:`Py_DEBUG` definierat, det "
"vill säga om Python :ref:`byggdes i felsökningsläge <debug-build>`."

msgid ""
"A constant that is likely larger than the underlying OS socket buffer size, "
"to make writes blocking."
msgstr ""
"En konstant som sannolikt är större än den underliggande OS-"
"socketbuffertstorleken, för att göra skrivningar blockerande."

msgid "Set to the top level directory that contains :mod:`test.support`."
msgstr ""
"Ställs in till den katalog på högsta nivån som innehåller :mod:`test."
"support`."

msgid "Set to the top level directory for the test package."
msgstr "Ställs in till den översta katalogen för testpaketet."

msgid "Set to the ``data`` directory within the test package."
msgstr "Sätts till katalogen ``data`` inom testpaketet."

msgid "Set to :data:`sys.maxsize` for big memory tests."
msgstr "Sätts till :data:`sys.maxsize` för stora minnestester."

msgid ""
"Set by :func:`set_memlimit` as the memory limit for big memory tests. "
"Limited by :data:`MAX_Py_ssize_t`."
msgstr ""
"Ställs in av :func:`set_memlimit` som minnesgräns för stora minnestester. "
"Begränsas av :data:`MAX_Py_ssize_t`."

msgid ""
"Set by :func:`set_memlimit` as the memory limit for big memory tests.  Not "
"limited by :data:`MAX_Py_ssize_t`."
msgstr ""
"Ställs in av :func:`set_memlimit` som minnesgräns för stora minnestester.  "
"Begränsas inte av :data:`MAX_Py_ssize_t`."

msgid ""
"Set to ``True`` if Python is built without docstrings (the :c:macro:"
"`WITH_DOC_STRINGS` macro is not defined). See the :option:`configure --"
"without-doc-strings <--without-doc-strings>` option."
msgstr ""
"Ställs in till ``True`` om Python byggs utan docstrings (makrot :c:macro:"
"`WITH_DOC_STRINGS` är inte definierat). Se alternativet :option:`configure --"
"without-doc-strings <--without-doc-strings>`."

msgid "See also the :data:`HAVE_DOCSTRINGS` variable."
msgstr "Se även variabeln :data:`HAVE_DOCSTRINGS`."

msgid ""
"Set to ``True`` if function docstrings are available. See the :option:"
"`python -OO <-O>` option, which strips docstrings of functions implemented "
"in Python."
msgstr ""
"Ställs in till ``True`` om funktionsdokumentrar finns tillgängliga. Se "
"alternativet :option:`python -OO <-O>`, som tar bort dokumentsträngar för "
"funktioner som implementerats i Python."

msgid "See also the :data:`MISSING_C_DOCSTRINGS` variable."
msgstr "Se även variabeln :data:`MISSING_C_DOCSTRINGS`."

msgid "Define the URL of a dedicated HTTP server for the network tests."
msgstr "Definiera URL:en till en dedikerad HTTP-server för nätverkstesterna."

msgid "Object that is equal to anything.  Used to test mixed type comparison."
msgstr ""
"Objekt som är lika med vad som helst.  Används för att testa jämförelse av "
"blandad typ."

msgid ""
"Object that is not equal to anything (even to :data:`ALWAYS_EQ`). Used to "
"test mixed type comparison."
msgstr ""
"Objekt som inte är lika med något (inte ens med :data:`ALWAYS_EQ`). Används "
"för att testa jämförelse av blandade typer."

msgid ""
"Object that is greater than anything (except itself). Used to test mixed "
"type comparison."
msgstr ""
"Objekt som är större än något annat (utom sig självt). Används för att testa "
"jämförelse av blandade typer."

msgid ""
"Object that is less than anything (except itself). Used to test mixed type "
"comparison."
msgstr ""
"Objekt som är mindre än något annat (utom sig självt). Används för att testa "
"jämförelse av blandade typer."

msgid "The :mod:`test.support` module defines the following functions:"
msgstr "Modulen :mod:`test.support` definierar följande funktioner:"

msgid "Run the loop body until ``break`` stops the loop."
msgstr "Kör slingkroppen tills ``break`` stoppar slingan."

msgid ""
"After *timeout* seconds, raise an :exc:`AssertionError` if *error* is true, "
"or just stop the loop if *error* is false."
msgstr ""
"Efter *timeout* sekunder, skapa ett :exc:`AssertionError` om *error* är "
"sant, eller bara stoppa slingan om *error* är falskt."

msgid "Example::"
msgstr "Exempel::"

msgid ""
"for _ in support.busy_retry(support.SHORT_TIMEOUT):\n"
"    if check():\n"
"        break"
msgstr ""
"for _ in support.busy_retry(support.SHORT_TIMEOUT):\n"
"    if check():\n"
"        break"

msgid "Example of error=False usage::"
msgstr "Exempel på användning av error=False::"

msgid ""
"for _ in support.busy_retry(support.SHORT_TIMEOUT, error=False):\n"
"    if check():\n"
"        break\n"
"else:\n"
"    raise RuntimeError('my custom error')"
msgstr ""
"for _ in support.busy_retry(support.SHORT_TIMEOUT, error=False):\n"
"    if check():\n"
"        break\n"
"else:\n"
"    raise RuntimeError('my custom error')"

msgid "Wait strategy that applies exponential backoff."
msgstr "Vänta-strategi som tillämpar exponentiell backoff."

msgid ""
"Run the loop body until ``break`` stops the loop. Sleep at each loop "
"iteration, but not at the first iteration. The sleep delay is doubled at "
"each iteration (up to *max_delay* seconds)."
msgstr ""
"Kör slingan tills ``break`` stoppar slingan. Sömn vid varje loop-iteration, "
"men inte vid den första iterationen. Sömnfördröjningen fördubblas vid varje "
"iteration (upp till *max_delay* sekunder)."

msgid "See :func:`busy_retry` documentation for the parameters usage."
msgstr "Se :func:`busy_retry` dokumentation för parametrarnas användning."

msgid "Example raising an exception after SHORT_TIMEOUT seconds::"
msgstr "Exempel på undantag efter SHORT_TIMEOUT sekunder::"

msgid ""
"for _ in support.sleeping_retry(support.SHORT_TIMEOUT):\n"
"    if check():\n"
"        break"
msgstr ""
"for _ in support.sleeping_retry(support.SHORT_TIMEOUT):\n"
"    if check():\n"
"        break"

msgid ""
"for _ in support.sleeping_retry(support.SHORT_TIMEOUT, error=False):\n"
"    if check():\n"
"        break\n"
"else:\n"
"    raise RuntimeError('my custom error')"
msgstr ""
"for _ in support.sleeping_retry(support.SHORT_TIMEOUT, error=False):\n"
"    if check():\n"
"        break\n"
"else:\n"
"    raise RuntimeError('my custom error')"

msgid ""
"Return ``True`` if *resource* is enabled and available. The list of "
"available resources is only set when :mod:`test.regrtest` is executing the "
"tests."
msgstr ""
"Returnerar ``True`` om *resource* är aktiverad och tillgänglig. Listan över "
"tillgängliga resurser anges endast när :mod:`test.regrtest` kör testerna."

msgid "Return ``True`` if Python was not built with ``-O0`` or ``-Og``."
msgstr "Returnerar ``True`` om Python inte byggdes med ``-O0`` eller ``-Og``."

msgid "Return :const:`_testcapi.WITH_PYMALLOC`."
msgstr "Returnerar :const:`_testcapi.WITH_PYMALLOC`."

msgid ""
"Raise :exc:`ResourceDenied` if *resource* is not available. *msg* is the "
"argument to :exc:`ResourceDenied` if it is raised. Always returns ``True`` "
"if called by a function whose ``__name__`` is ``'__main__'``. Used when "
"tests are executed by :mod:`test.regrtest`."
msgstr ""
"Utlös :exc:`ResourceDenied` om *resurs* inte är tillgänglig. *msg* är "
"argumentet till :exc:`ResourceDenied` om det aktiveras. Returnerar alltid "
"``True`` om den anropas av en funktion vars ``__name__`` är ``'__main__'``. "
"Används när tester exekveras av :mod:`test.regrtest`."

msgid "Return a repr of *dict* with keys sorted."
msgstr "Returnerar en repr av *dict* med nycklar sorterade."

msgid ""
"Return the path to the file named *filename*. If no match is found "
"*filename* is returned. This does not equal a failure since it could be the "
"path to the file."
msgstr ""
"Returnerar sökvägen till filen med namnet *filnamn*. Om ingen matchning "
"hittas returneras *filnamn*. Detta är inte detsamma som ett misslyckande "
"eftersom det kan vara sökvägen till filen."

msgid ""
"Setting *subdir* indicates a relative path to use to find the file rather "
"than looking directly in the path directories."
msgstr ""
"Om du anger *subdir* anges en relativ sökväg som ska användas för att hitta "
"filen i stället för att leta direkt i sökvägskatalogerna."

msgid "Get size of a page in bytes."
msgstr "Hämta storleken på en sida i byte."

msgid ""
"Set the :func:`sys.setswitchinterval` to the given *interval*.  Defines a "
"minimum interval for Android systems to prevent the system from hanging."
msgstr ""
"Ställ in :func:`sys.setswitchinterval` till det angivna *intervallet*.  "
"Definierar ett minimiintervall för Android-system för att förhindra att "
"systemet hänger sig."

msgid ""
"Use this check to guard CPython's implementation-specific tests or to run "
"them only on the implementations guarded by the arguments.  This function "
"returns ``True`` or ``False`` depending on the host platform. Example usage::"
msgstr ""
"Använd denna kontroll för att skydda CPythons implementationsspecifika "
"tester eller för att endast köra dem på de implementationer som skyddas av "
"argumenten.  Denna funktion returnerar ``True`` eller ``False`` beroende på "
"värdplattformen. Exempel på användning::"

msgid ""
"check_impl_detail()               # Only on CPython (default).\n"
"check_impl_detail(jython=True)    # Only on Jython.\n"
"check_impl_detail(cpython=False)  # Everywhere except CPython."
msgstr ""
"check_impl_detail()               # Only on CPython (default).\n"
"check_impl_detail(jython=True)    # Only on Jython.\n"
"check_impl_detail(cpython=False)  # Everywhere except CPython."

msgid ""
"Set the values for :data:`max_memuse` and :data:`real_max_memuse` for big "
"memory tests."
msgstr ""
"Ställ in värdena för :data:`max_memuse` och :data:`real_max_memuse` för "
"stora minnestester."

msgid ""
"Store the value from *stdout*.  It is meant to hold the stdout at the time "
"the regrtest began."
msgstr ""
"Lagra värdet från *stdout*.  Det är tänkt att hålla stdout vid den tidpunkt "
"då regrtestet började."

msgid ""
"Return the original stdout set by :func:`record_original_stdout` or ``sys."
"stdout`` if it's not set."
msgstr ""
"Returnerar den ursprungliga stdout som ställdes in av :func:"
"`record_original_stdout` eller ``sys.stdout`` om den inte är inställd."

msgid ""
"Return a list of command line arguments reproducing the current settings in "
"``sys.flags`` and ``sys.warnoptions``."
msgstr ""
"Returnerar en lista med kommandoradsargument som återger de aktuella "
"inställningarna i ``sys.flags`` och ``sys.warnoptions``."

msgid ""
"Return a list of command line arguments reproducing the current optimization "
"settings in ``sys.flags``."
msgstr ""
"Returnerar en lista med kommandoradsargument som återger de aktuella "
"optimeringsinställningarna i ``sys.flags``."

msgid ""
"A context managers that temporarily replaces the named stream with :class:"
"`io.StringIO` object."
msgstr ""
"En kontexthanterare som tillfälligt ersätter den angivna strömmen med :class:"
"`io.StringIO`-objekt."

msgid "Example use with output streams::"
msgstr "Exempel på användning med utdataströmmar::"

msgid ""
"with captured_stdout() as stdout, captured_stderr() as stderr:\n"
"    print(\"hello\")\n"
"    print(\"error\", file=sys.stderr)\n"
"assert stdout.getvalue() == \"hello\\n\"\n"
"assert stderr.getvalue() == \"error\\n\""
msgstr ""
"with captured_stdout() as stdout, captured_stderr() as stderr:\n"
"    print(\"hello\")\n"
"    print(\"error\", file=sys.stderr)\n"
"assert stdout.getvalue() == \"hello\\n\"\n"
"assert stderr.getvalue() == \"error\\n\""

msgid "Example use with input stream::"
msgstr "Exempel på användning med inmatningsström::"

msgid ""
"with captured_stdin() as stdin:\n"
"    stdin.write('hello\\n')\n"
"    stdin.seek(0)\n"
"    # call test code that consumes from sys.stdin\n"
"    captured = input()\n"
"self.assertEqual(captured, \"hello\")"
msgstr ""
"with captured_stdin() as stdin:\n"
"    stdin.write('hello\\n')\n"
"    stdin.seek(0)\n"
"    # call test code that consumes from sys.stdin\n"
"    captured = input()\n"
"self.assertEqual(captured, \"hello\")"

msgid "A context manager that temporary disables :mod:`faulthandler`."
msgstr "En kontexthanterare som tillfälligt inaktiverar :mod:`faulthandler`."

msgid ""
"Force as many objects as possible to be collected.  This is needed because "
"timely deallocation is not guaranteed by the garbage collector.  This means "
"that ``__del__`` methods may be called later than expected and weakrefs may "
"remain alive for longer than expected."
msgstr ""
"Tvinga så många objekt som möjligt att samlas in.  Detta behövs eftersom "
"skräpsamlaren inte kan garantera att deallokering sker i rätt tid.  Detta "
"innebär att ``__del__``-metoder kan anropas senare än förväntat och att "
"weakrefs kan leva kvar längre än förväntat."

msgid ""
"A context manager that disables the garbage collector on entry. On exit, the "
"garbage collector is restored to its prior state."
msgstr ""
"En kontexthanterare som inaktiverar skräpsamlaren vid inmatning. Vid avslut "
"återställs skräpsamlaren till sitt tidigare tillstånd."

msgid "Context manager to swap out an attribute with a new object."
msgstr "Kontexthanterare för att byta ut ett attribut mot ett nytt objekt."

msgid "Usage::"
msgstr "Användning::"

msgid ""
"with swap_attr(obj, \"attr\", 5):\n"
"    ..."
msgstr ""
"with swap_attr(obj, \"attr\", 5):\n"
"    ..."

msgid ""
"This will set ``obj.attr`` to 5 for the duration of the ``with`` block, "
"restoring the old value at the end of the block.  If ``attr`` doesn't exist "
"on ``obj``, it will be created and then deleted at the end of the block."
msgstr ""
"Detta kommer att sätta ``obj.attr`` till 5 under hela ``with``-blocket och "
"återställa det gamla värdet i slutet av blocket.  Om ``attr`` inte finns på "
"``obj`` kommer den att skapas och sedan tas bort i slutet av blocket."

msgid ""
"The old value (or ``None`` if it doesn't exist) will be assigned to the "
"target of the \"as\" clause, if there is one."
msgstr ""
"Det gamla värdet (eller ``None`` om det inte finns) kommer att tilldelas "
"målet för \"as\"-klausulen, om det finns ett sådant."

msgid "Context manager to swap out an item with a new object."
msgstr "Context manager för att byta ut ett objekt mot ett nytt."

msgid ""
"with swap_item(obj, \"item\", 5):\n"
"    ..."
msgstr ""
"with swap_item(obj, \"item\", 5):\n"
"    ..."

msgid ""
"This will set ``obj[\"item\"]`` to 5 for the duration of the ``with`` block, "
"restoring the old value at the end of the block. If ``item`` doesn't exist "
"on ``obj``, it will be created and then deleted at the end of the block."
msgstr ""
"Detta kommer att sätta ``obj[\"item\"]`` till 5 under hela ``with``-blocket, "
"och återställa det gamla värdet i slutet av blocket. Om ``item`` inte finns "
"på ``obj``, kommer det att skapas och sedan raderas i slutet av blocket."

msgid ""
"Call the ``flush()`` method on :data:`sys.stdout` and then on :data:`sys."
"stderr`. It can be used to make sure that the logs order is consistent "
"before writing into stderr."
msgstr ""
"Anropa metoden ``flush()`` på :data:`sys.stdout` och sedan på :data:`sys."
"stderr`. Den kan användas för att se till att loggarnas ordning är "
"konsekvent innan de skrivs till stderr."

msgid ""
"Print a warning into :data:`sys.__stderr__`. Format the message as: "
"``f\"Warning -- {msg}\"``. If *msg* is made of multiple lines, add "
"``\"Warning -- \"`` prefix to each line."
msgstr ""
"Skriv ut en varning i :data:`sys.__stderr__`. Formatera meddelandet som: "
"``f\"Varning -- {msg}\"``. Om *msg* består av flera rader, lägg till "
"prefixet ``\"Warning --\"`` på varje rad."

msgid ""
"Wait until process *pid* completes and check that the process exit code is "
"*exitcode*."
msgstr ""
"Vänta tills process *pid* har avslutats och kontrollera att processens "
"exitkod är *exitcode*."

msgid ""
"Raise an :exc:`AssertionError` if the process exit code is not equal to "
"*exitcode*."
msgstr ""
"Utlöser ett :exc:`AssertionError` om processens utgångskod inte är lika med "
"*exitcode*."

msgid ""
"If the process runs longer than *timeout* seconds (:data:`SHORT_TIMEOUT` by "
"default), kill the process and raise an :exc:`AssertionError`. The timeout "
"feature is not available on Windows."
msgstr ""
"Om processen pågår längre än *timeout* sekunder (:data:`SHORT_TIMEOUT` som "
"standard), dödas processen och ett :exc:`AssertionError` visas. Timeout-"
"funktionen är inte tillgänglig i Windows."

msgid ""
"Return the size of the :c:type:`PyObject` whose structure members are "
"defined by *fmt*. The returned value includes the size of the Python object "
"header and alignment."
msgstr ""
"Returnerar storleken på :c:type:`PyObject` vars strukturmedlemmar definieras "
"av *fmt*. Det returnerade värdet inkluderar storleken på Python-objektets "
"rubrik och justering."

msgid ""
"Return the size of the :c:type:`PyVarObject` whose structure members are "
"defined by *fmt*. The returned value includes the size of the Python object "
"header and alignment."
msgstr ""
"Returnerar storleken på :c:type:`PyVarObject` vars strukturmedlemmar "
"definieras av *fmt*. Det returnerade värdet inkluderar storleken på Python-"
"objektets rubrik och justering."

msgid ""
"For testcase *test*, assert that the ``sys.getsizeof`` for *o* plus the GC "
"header size equals *size*."
msgstr ""
"För testfall *test*, hävda att ``sys.getsizeof`` för *o* plus GC-"
"huvudstorleken är lika med *size*."

msgid ""
"A decorator to conditionally mark tests with :func:`unittest."
"expectedFailure`. Any use of this decorator should have an associated "
"comment identifying the relevant tracker issue."
msgstr ""
"En dekorator för att villkorligt markera tester med :func:`unittest."
"expectedFailure`. Varje användning av denna dekorator bör ha en associerad "
"kommentar som identifierar den relevanta spårningsfrågan."

msgid ""
"A decorator that skips the decorated test on TLS certification validation "
"failures."
msgstr ""
"En dekorator som hoppar över det dekorerade testet vid fel i valideringen av "
"TLS-certifieringen."

msgid ""
"A decorator for running a function in a different locale, correctly "
"resetting it after it has finished.  *catstr* is the locale category as a "
"string (for example ``\"LC_ALL\"``).  The *locales* passed will be tried "
"sequentially, and the first valid locale will be used."
msgstr ""
"En dekorator för att köra en funktion i en annan locale och återställa den "
"korrekt efter att den är klar.  *catstr* är lokalkategorin som en sträng (t."
"ex. ``\"LC_ALL\"``).  De *locales* som skickas kommer att prövas "
"sekventiellt, och den första giltiga locale kommer att användas."

msgid ""
"A decorator for running a function in a specific timezone, correctly "
"resetting it after it has finished."
msgstr ""
"En dekorator för att köra en funktion i en specifik tidszon och återställa "
"den korrekt efter att den har avslutats."

msgid ""
"Decorator for the minimum version when running test on FreeBSD.  If the "
"FreeBSD version is less than the minimum, the test is skipped."
msgstr ""
"Dekorator för minimiversionen när test körs på FreeBSD.  Om FreeBSD-"
"versionen är mindre än minimiversionen hoppas testet över."

msgid ""
"Decorator for the minimum version when running test on Linux.  If the Linux "
"version is less than the minimum, the test is skipped."
msgstr ""
"Dekorator för minimiversionen när test körs på Linux.  Om Linux-versionen är "
"mindre än minimiversionen hoppas testet över."

msgid ""
"Decorator for the minimum version when running test on macOS.  If the macOS "
"version is less than the minimum, the test is skipped."
msgstr ""
"Dekorator för minimiversionen när du kör test på macOS.  Om macOS-versionen "
"är mindre än minimiversionen hoppas testet över."

msgid ""
"Decorator for skipping tests on the free-threaded build.  If the :term:`GIL` "
"is disabled, the test is skipped."
msgstr ""
"Dekorator för att hoppa över tester på den fri-trådade byggnaden.  Om :term:"
"`GIL` är avaktiverad, hoppas testet över."

msgid "Decorator for skipping tests on non-IEEE 754 platforms."
msgstr ""
"Dekorator för att hoppa över tester på plattformar som inte är IEEE 754."

msgid "Decorator for skipping tests if :mod:`zlib` doesn't exist."
msgstr "Dekorator för att hoppa över tester om :mod:`zlib` inte finns."

msgid "Decorator for skipping tests if :mod:`gzip` doesn't exist."
msgstr "Dekorator för att hoppa över tester om :mod:`gzip` inte finns."

msgid "Decorator for skipping tests if :mod:`bz2` doesn't exist."
msgstr "Dekorator för att hoppa över tester om :mod:`bz2` inte finns."

msgid "Decorator for skipping tests if :mod:`lzma` doesn't exist."
msgstr "Dekorator för att hoppa över tester om :mod:`lzma` inte finns."

msgid "Decorator for skipping tests if *resource* is not available."
msgstr "Dekorator för att hoppa över tester om *resurs* inte är tillgänglig."

msgid "Decorator for only running the test if :data:`HAVE_DOCSTRINGS`."
msgstr "Dekorator för att bara köra testet om :data:`HAVE_DOCSTRINGS`."

msgid ""
"Decorator for only running the test if :ref:`Limited C API <limited-c-api>` "
"is available."
msgstr ""
"Dekorator för att bara köra testet om :ref:`Limited C API <limited-c-api>` "
"är tillgängligt."

msgid "Decorator for tests only applicable to CPython."
msgstr "Dekorator för tester som endast är tillämpliga på CPython."

msgid ""
"Decorator for invoking :func:`check_impl_detail` on *guards*.  If that "
"returns ``False``, then uses *msg* as the reason for skipping the test."
msgstr ""
"Dekorator för att anropa :func:`check_impl_detail` på *guards*.  Om det "
"returnerar ``False``, så används *msg* som anledning till att hoppa över "
"testet."

msgid ""
"Decorator for marking tests as thread-unsafe.  This test always runs in one "
"thread even when invoked with ``--parallel-threads``."
msgstr ""
"Dekorator för att markera tester som tråd-osäkra.  Detta test körs alltid i "
"en tråd även när det anropas med ``--parallel-threads``."

msgid "Decorator to temporarily turn off tracing for the duration of the test."
msgstr "Dekoratör för att tillfälligt stänga av spårning under testets gång."

msgid ""
"Decorator for tests which involve reference counting.  The decorator does "
"not run the test if it is not run by CPython.  Any trace function is unset "
"for the duration of the test to prevent unexpected refcounts caused by the "
"trace function."
msgstr ""
"Dekorator för tester som involverar referensräkning.  Dekoratorn kör inte "
"testet om det inte körs av CPython.  Eventuella spårningsfunktioner "
"avaktiveras under testets gång för att förhindra oväntade referensräkningar "
"som orsakas av spårningsfunktionen."

msgid "Decorator for bigmem tests."
msgstr "Dekorator för bigmem-tester."

msgid ""
"*size* is a requested size for the test (in arbitrary, test-interpreted "
"units.)  *memuse* is the number of bytes per unit for the test, or a good "
"estimate of it.  For example, a test that needs two byte buffers, of 4 GiB "
"each, could be decorated with ``@bigmemtest(size=_4G, memuse=2)``."
msgstr ""
"*size* är en begärd storlek för testet (i godtyckliga, testtolkade enheter.) "
"*memuse* är antalet byte per enhet för testet, eller en bra uppskattning av "
"det.  Till exempel kan ett test som behöver två bytebuffertar på 4 GiB "
"vardera dekoreras med ``@bigmemtest(size=_4G, memuse=2)``."

msgid ""
"The *size* argument is normally passed to the decorated test method as an "
"extra argument.  If *dry_run* is ``True``, the value passed to the test "
"method may be less than the requested value.  If *dry_run* is ``False``, it "
"means the test doesn't support dummy runs when ``-M`` is not specified."
msgstr ""
"Argumentet *size* skickas normalt till den dekorerade testmetoden som ett "
"extra argument.  Om *dry_run* är ``True`` kan det värde som skickas till "
"testmetoden vara mindre än det begärda värdet.  Om *dry_run* är ``False`` "
"betyder det att testet inte stöder dummykörningar när ``-M`` inte har "
"angetts."

msgid "Decorator for tests that fill the address space."
msgstr "Dekorator för tester som fyller adressrymden."

msgid ""
"Return ``False`` if there is no evidence the interpreter was compiled with "
"``musl``, otherwise return a version triple, either ``(0, 0, 0)`` if the "
"version is unknown, or the actual version if it is known.  Intended for use "
"in ``skip`` decorators.  ``emscripten`` and ``wasi`` are assumed to be "
"compiled with ``musl``; otherwise ``platform.libc_ver`` is checked."
msgstr ""
"Returnerar ``False`` om det inte finns några bevis för att tolken "
"kompilerades med ``musl``, annars returneras en versionstrippel, antingen "
"``(0, 0, 0)`` om versionen är okänd, eller den faktiska versionen om den är "
"känd.  Avsedd för användning i ``skip`` dekoratorer.  ``emscripten`` och "
"``wasi`` antas vara kompilerade med ``musl``; annars kontrolleras ``platform."
"libc_ver``."

msgid ""
"Test for syntax errors in *statement* by attempting to compile *statement*. "
"*testcase* is the :mod:`unittest` instance for the test.  *errtext* is the "
"regular expression which should match the string representation of the "
"raised :exc:`SyntaxError`.  If *lineno* is not ``None``, compares to the "
"line of the exception.  If *offset* is not ``None``, compares to the offset "
"of the exception."
msgstr ""
"Testa för syntaxfel i *statement* genom att försöka kompilera *statement*. "
"*testcase* är :mod:`unittest`-instansen för testet.  *errtext* är det "
"reguljära uttryck som ska matcha strängrepresentationen av det uppkomna :exc:"
"`SyntaxError`.  Om *lineno* inte är ``None``, jämförs med raden för "
"undantaget.  Om *offset* inte är ``None``, jämförs med undantagets offset."

msgid "Open *url*.  If open fails, raises :exc:`TestFailed`."
msgstr "Öppna *url*.  Om öppningen misslyckas, utlöses :exc:`TestFailed`."

msgid ""
"Use this at the end of ``test_main`` whenever sub-processes are started. "
"This will help ensure that no extra children (zombies) stick around to hog "
"resources and create problems when looking for refleaks."
msgstr ""
"Använd detta i slutet av ``test_main`` närhelst underprocesser startas. "
"Detta hjälper till att säkerställa att inga extra barn (zombies) stannar "
"kvar för att ta resurser och skapa problem när man letar efter refleaks."

msgid ""
"Get an attribute, raising :exc:`unittest.SkipTest` if :exc:`AttributeError` "
"is raised."
msgstr ""
"Hämtar ett attribut och ger upphov till :exc:`unittest.SkipTest` om :exc:"
"`AttributeError` ges upphov till."

msgid ""
"Context manager catching unraisable exception using :func:`sys."
"unraisablehook`."
msgstr ""
"Kontexthanteraren fångar upp ett undantag som inte kan bedömas med hjälp av :"
"func:`sys.unraisablehook`."

msgid ""
"Storing the exception value (``cm.unraisable.exc_value``) creates a "
"reference cycle. The reference cycle is broken explicitly when the context "
"manager exits."
msgstr ""
"Genom att lagra undantagsvärdet (``cm.unraisable.exc_value``) skapas en "
"referenscykel. Referenscykeln bryts explicit när kontexthanteraren avslutas."

msgid ""
"Storing the object (``cm.unraisable.object``) can resurrect it if it is set "
"to an object which is being finalized. Exiting the context manager clears "
"the stored object."
msgstr ""
"Om du lagrar objektet (``cm.unraisable.object``) kan det återuppstå om det "
"är inställt på ett objekt som håller på att slutföras. Om du avslutar "
"kontexthanteraren rensas det lagrade objektet."

msgid ""
"with support.catch_unraisable_exception() as cm:\n"
"    # code creating an \"unraisable exception\"\n"
"    ...\n"
"\n"
"    # check the unraisable exception: use cm.unraisable\n"
"    ...\n"
"\n"
"# cm.unraisable attribute no longer exists at this point\n"
"# (to break a reference cycle)"
msgstr ""
"with support.catch_unraisable_exception() as cm:\n"
"    # code creating an \"unraisable exception\"\n"
"    ...\n"
"\n"
"    # check the unraisable exception: use cm.unraisable\n"
"    ...\n"
"\n"
"# cm.unraisable attribute no longer exists at this point\n"
"# (to break a reference cycle)"

msgid ""
"Generic implementation of the :mod:`unittest` ``load_tests`` protocol for "
"use in test packages.  *pkg_dir* is the root directory of the package; "
"*loader*, *standard_tests*, and *pattern* are the arguments expected by "
"``load_tests``.  In simple cases, the test package's ``__init__.py`` can be "
"the following::"
msgstr ""
"Generisk implementation av protokollet :mod:`unittest` ``load_tests`` för "
"användning i testpaket.  *pkg_dir* är rotkatalogen för paketet; *loader*, "
"*standard_tests* och *pattern* är de argument som förväntas av "
"``load_tests``.  I enkla fall kan testpaketets ``__init__.py`` se ut på "
"följande sätt::"

msgid ""
"import os\n"
"from test.support import load_package_tests\n"
"\n"
"def load_tests(*args):\n"
"    return load_package_tests(os.path.dirname(__file__), *args)"
msgstr ""
"import os\n"
"from test.support import load_package_tests\n"
"\n"
"def load_tests(*args):\n"
"    return load_package_tests(os.path.dirname(__file__), *args)"

msgid ""
"Returns the set of attributes, functions or methods of *ref_api* not found "
"on *other_api*, except for a defined list of items to be ignored in this "
"check specified in *ignore*."
msgstr ""
"Returnerar den uppsättning attribut, funktioner eller metoder i *ref_api* "
"som inte finns i *other_api*, med undantag för en definierad lista över "
"objekt som ska ignoreras vid denna kontroll och som anges i *ignore*."

msgid ""
"By default this skips private attributes beginning with '_' but includes all "
"magic methods, i.e. those starting and ending in '__'."
msgstr ""
"Som standard utelämnas privata attribut som börjar med \"_\", men alla "
"magiska metoder inkluderas, dvs. de som börjar och slutar med \"__\"."

msgid ""
"Override *object_to_patch.attr_name* with *new_value*.  Also add cleanup "
"procedure to *test_instance* to restore *object_to_patch* for *attr_name*.  "
"The *attr_name* should be a valid attribute for *object_to_patch*."
msgstr ""
"Åsidosätt *object_to_patch.attr_name* med *new_value*.  Lägg också till en "
"rensningsprocedur till *test_instance* för att återställa *object_to_patch* "
"för *attr_name*.  *attr_name* ska vara ett giltigt attribut för "
"*object_to_patch*."

msgid ""
"Run *code* in subinterpreter.  Raise :exc:`unittest.SkipTest` if :mod:"
"`tracemalloc` is enabled."
msgstr ""
"Kör *kod* i undertolk.  Utlös :exc:`unittest.SkipTest` om :mod:`tracemalloc` "
"är aktiverat."

msgid "Assert instances of *cls* are deallocated after iterating."
msgstr "Försäkra att instanser av *cls* avallokeras efter iterering."

msgid ""
"Check for the existence of the compiler executables whose names are listed "
"in *cmd_names* or all the compiler executables when *cmd_names* is empty and "
"return the first missing executable or ``None`` when none is found missing."
msgstr ""
"Kontrollera om det finns körbara kompilatorer vars namn anges i *cmd_names* "
"eller alla körbara kompilatorer om *cmd_names* är tom och returnera den "
"första körbara filen som saknas eller ``None`` om ingen saknas."

msgid ""
"Assert that the ``__all__`` variable of *module* contains all public names."
msgstr ""
"Försäkra att variabeln ``__all__`` i *modul* innehåller alla offentliga namn."

msgid ""
"The module's public names (its API) are detected automatically based on "
"whether they match the public name convention and were defined in *module*."
msgstr ""
"Modulens publika namn (dess API) identifieras automatiskt baserat på om de "
"överensstämmer med konventionen för publika namn och om de definierades i "
"*module*."

msgid ""
"The *name_of_module* argument can specify (as a string or tuple thereof) "
"what module(s) an API could be defined in order to be detected as a public "
"API. One case for this is when *module* imports part of its public API from "
"other modules, possibly a C backend (like ``csv`` and its ``_csv``)."
msgstr ""
"Argumentet *name_of_module* kan ange (som en sträng eller en tupel därav) "
"vilken eller vilka moduler ett API kan definieras i för att upptäckas som "
"ett offentligt API. Ett fall för detta är när *modul* importerar en del av "
"sitt offentliga API från andra moduler, eventuellt en C-backend (som ``csv`` "
"och dess ``_csv``)."

msgid ""
"The *extra* argument can be a set of names that wouldn't otherwise be "
"automatically detected as \"public\", like objects without a proper :attr:"
"`~definition.__module__` attribute. If provided, it will be added to the "
"automatically detected ones."
msgstr ""
"Argumentet *extra* kan vara en uppsättning namn som annars inte automatiskt "
"skulle identifieras som \"public\", t.ex. objekt utan ett korrekt :attr:"
"`~definition.__module__`-attribut. Om det anges kommer det att läggas till "
"de automatiskt upptäckta."

msgid ""
"The *not_exported* argument can be a set of names that must not be treated "
"as part of the public API even though their names indicate otherwise."
msgstr ""
"Argumentet *not_exported* kan vara en uppsättning namn som inte får "
"behandlas som en del av det publika API:et även om deras namn anger något "
"annat."

msgid "Example use::"
msgstr "Exempel på användning::"

msgid ""
"import bar\n"
"import foo\n"
"import unittest\n"
"from test import support\n"
"\n"
"class MiscTestCase(unittest.TestCase):\n"
"    def test__all__(self):\n"
"        support.check__all__(self, foo)\n"
"\n"
"class OtherTestCase(unittest.TestCase):\n"
"    def test__all__(self):\n"
"        extra = {'BAR_CONST', 'FOO_CONST'}\n"
"        not_exported = {'baz'}  # Undocumented name.\n"
"        # bar imports part of its API from _bar.\n"
"        support.check__all__(self, bar, ('bar', '_bar'),\n"
"                             extra=extra, not_exported=not_exported)"
msgstr ""
"import bar\n"
"import foo\n"
"import unittest\n"
"from test import support\n"
"\n"
"class MiscTestCase(unittest.TestCase):\n"
"    def test__all__(self):\n"
"        support.check__all__(self, foo)\n"
"\n"
"class OtherTestCase(unittest.TestCase):\n"
"    def test__all__(self):\n"
"        extra = {'BAR_CONST', 'FOO_CONST'}\n"
"        not_exported = {'baz'}  # Undocumented name.\n"
"        # bar imports part of its API from _bar.\n"
"        support.check__all__(self, bar, ('bar', '_bar'),\n"
"                             extra=extra, not_exported=not_exported)"

msgid ""
"Skip tests if the :mod:`multiprocessing.synchronize` module is missing, if "
"there is no available semaphore implementation, or if creating a lock raises "
"an :exc:`OSError`."
msgstr ""
"Hoppa över tester om modulen :mod:`multiprocessing.synchronize` saknas, om "
"det inte finns någon tillgänglig semaforimplementering eller om skapandet av "
"ett lås ger upphov till ett :exc:`OSError`."

msgid "Assert that type *tp* cannot be instantiated using *args* and *kwds*."
msgstr ""
"Påstå att typen *tp* inte kan instansieras med hjälp av *args* och *kwds*."

msgid ""
"This function returns a context manager that will change the global :func:"
"`sys.set_int_max_str_digits` setting for the duration of the context to "
"allow execution of test code that needs a different limit on the number of "
"digits when converting between an integer and string."
msgstr ""
"Denna funktion returnerar en kontexthanterare som ändrar den globala "
"inställningen :func:`sys.set_int_max_str_digits` under kontextens "
"varaktighet för att möjliggöra exekvering av testkod som behöver en annan "
"gräns för antalet siffror vid konvertering mellan ett heltal och en sträng."

msgid "The :mod:`test.support` module defines the following classes:"
msgstr "Modulen :mod:`test.support` definierar följande klasser:"

msgid ""
"A context manager used to try to prevent crash dialog popups on tests that "
"are expected to crash a subprocess."
msgstr ""
"En kontexthanterare som används för att försöka förhindra popup-fönster i "
"kraschdialogen vid tester som förväntas krascha en underprocess."

msgid ""
"On Windows, it disables Windows Error Reporting dialogs using `SetErrorMode "
"<https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx>`_."
msgstr ""
"I Windows inaktiveras dialogrutorna för Windows Felrapportering med hjälp av "
"`SetErrorMode <https://msdn.microsoft.com/en-us/library/windows/desktop/"
"ms680621.aspx>`_."

msgid ""
"On UNIX, :func:`resource.setrlimit` is used to set :const:`resource."
"RLIMIT_CORE`'s soft limit to 0 to prevent coredump file creation."
msgstr ""
"På UNIX används :func:`resource.setrlimit` för att sätta :const:`resource."
"RLIMIT_CORE`:s mjuka gräns till 0 för att förhindra att coredump-filer "
"skapas."

msgid ""
"On both platforms, the old value is restored by :meth:`~object.__exit__`."
msgstr ""
"På båda plattformarna återställs det gamla värdet av :meth:`~object."
"__exit__`."

msgid ""
"Class to save and restore signal handlers registered by the Python signal "
"handler."
msgstr ""
"Klass för att spara och återställa signalhanterare som registrerats av "
"Pythons signalhanterare."

msgid ""
"Save the signal handlers to a dictionary mapping signal numbers to the "
"current signal handler."
msgstr ""
"Spara signalhanterarna till en ordbok som mappar signalnummer till den "
"aktuella signalhanteraren."

msgid ""
"Set the signal numbers from the :meth:`save` dictionary to the saved handler."
msgstr ""
"Ställ in signalnumren från :meth:`save`-ordlistan till den sparade "
"hanteraren."

msgid "Try to match a single dict with the supplied arguments."
msgstr "Försök att matcha en enda dict med de angivna argumenten."

msgid "Try to match a single stored value (*dv*) with a supplied value (*v*)."
msgstr ""
"Försök att matcha ett enskilt lagrat värde (*dv*) med ett medföljande värde "
"(*v*)."

msgid ":mod:`test.support.socket_helper` --- Utilities for socket tests"
msgstr ":mod:`test.support.socket_helper` --- Hjälpmedel för socket-tester"

msgid ""
"The :mod:`test.support.socket_helper` module provides support for socket "
"tests."
msgstr "Modulen :mod:`test.support.socket_helper` ger stöd för socket-tester."

msgid "Set to ``True`` if IPv6 is enabled on this host, ``False`` otherwise."
msgstr ""
"Sätts till ``True`` om IPv6 är aktiverat på denna värd, annars ``False``."

msgid ""
"Returns an unused port that should be suitable for binding.  This is "
"achieved by creating a temporary socket with the same family and type as the "
"``sock`` parameter (default is :const:`~socket.AF_INET`, :const:`~socket."
"SOCK_STREAM`), and binding it to the specified host address (defaults to "
"``0.0.0.0``) with the port set to 0, eliciting an unused ephemeral port from "
"the OS. The temporary socket is then closed and deleted, and the ephemeral "
"port is returned."
msgstr ""
"Returnerar en oanvänd port som bör vara lämplig för bindning.  Detta uppnås "
"genom att skapa ett tillfälligt uttag med samma familj och typ som "
"parametern ``sock`` (standard är :const:`~socket.AF_INET`, :const:`~socket."
"SOCK_STREAM`) och binda det till den angivna värdadressen (standard är "
"``0.0.0.0``) med porten inställd på 0, vilket framkallar en oanvänd efemär "
"port från operativsystemet. Det tillfälliga uttaget stängs och raderas sedan "
"och den tillfälliga porten returneras."

msgid ""
"Either this method or :func:`bind_port` should be used for any tests where a "
"server socket needs to be bound to a particular port for the duration of the "
"test. Which one to use depends on whether the calling code is creating a "
"Python socket, or if an unused port needs to be provided in a constructor or "
"passed to an external program (i.e. the ``-accept`` argument to openssl's "
"s_server mode).  Always prefer :func:`bind_port` over :func:"
"`find_unused_port` where possible.  Using a hard coded port is discouraged "
"since it can make multiple instances of the test impossible to run "
"simultaneously, which is a problem for buildbots."
msgstr ""
"Antingen denna metod eller :func:`bind_port` bör användas för alla tester "
"där ett serveruttag måste bindas till en viss port under hela testet. Vilken "
"som ska användas beror på om den anropande koden skapar ett Python-socket, "
"eller om en oanvänd port måste tillhandahållas i en konstruktör eller "
"skickas till ett externt program (t.ex. argumentet ``-accept`` till openssl:"
"s s_server-läge).  Föredra alltid :func:`bind_port` framför :func:"
"`find_unused_port` när det är möjligt.  Att använda en hårdkodad port "
"avrådes eftersom det kan göra det omöjligt att köra flera instanser av "
"testet samtidigt, vilket är ett problem för buildbots."

msgid ""
"Bind the socket to a free port and return the port number.  Relies on "
"ephemeral ports in order to ensure we are using an unbound port.  This is "
"important as many tests may be running simultaneously, especially in a "
"buildbot environment.  This method raises an exception if the ``sock."
"family`` is :const:`~socket.AF_INET` and ``sock.type`` is :const:`~socket."
"SOCK_STREAM`, and the socket has :const:`~socket.SO_REUSEADDR` or :const:"
"`~socket.SO_REUSEPORT` set on it. Tests should never set these socket "
"options for TCP/IP sockets. The only case for setting these options is "
"testing multicasting via multiple UDP sockets."
msgstr ""
"Binder uttaget till en ledig port och returnerar portnumret.  Förlitar sig "
"på efemära portar för att säkerställa att vi använder en obunden port.  "
"Detta är viktigt eftersom många tester kan köras samtidigt, särskilt i en "
"buildbot-miljö.  Denna metod ger upphov till ett undantag om ``sock.family`` "
"är :const:`~socket.AF_INET` och ``sock.type`` är :const:`~socket."
"SOCK_STREAM`, och uttaget har :const:`~socket.SO_REUSEADDR` eller :const:"
"`~socket.SO_REUSEPORT` inställt på det. Tester bör aldrig ställa in dessa "
"socket-alternativ för TCP/IP-sockets. Det enda fallet för att ställa in "
"dessa alternativ är att testa multicasting via flera UDP-sockets."

msgid ""
"Additionally, if the :const:`~socket.SO_EXCLUSIVEADDRUSE` socket option is "
"available (i.e. on Windows), it will be set on the socket.  This will "
"prevent anyone else from binding to our host/port for the duration of the "
"test."
msgstr ""
"Om uttagsalternativet :const:`~socket.SO_EXCLUSIVEADDRUSE` är tillgängligt "
"(t.ex. i Windows) kommer det dessutom att ställas in på uttaget.  Detta "
"kommer att förhindra att någon annan binder till vår värd/port under hela "
"testet."

msgid ""
"Bind a Unix socket, raising :exc:`unittest.SkipTest` if :exc:"
"`PermissionError` is raised."
msgstr ""
"Binder ett Unix-uttag och ger upphov till :exc:`unittest.SkipTest` om :exc:"
"`PermissionError` ges upphov till."

msgid ""
"A decorator for running tests that require a functional ``bind()`` for Unix "
"sockets."
msgstr ""
"En dekorator för att köra tester som kräver en funktionell ``bind()`` för "
"Unix-sockets."

msgid ""
"A context manager that raises :exc:`~test.support.ResourceDenied` when "
"various issues with the internet connection manifest themselves as "
"exceptions."
msgstr ""
"En kontexthanterare som utlöser :exc:`~test.support.ResourceDenied` när "
"olika problem med internetanslutningen manifesterar sig som undantag."

msgid ""
":mod:`test.support.script_helper` --- Utilities for the Python execution "
"tests"
msgstr ""
":mod:`test.support.script_helper` --- Hjälpmedel för Python-testkörning"

msgid ""
"The :mod:`test.support.script_helper` module provides support for Python's "
"script execution tests."
msgstr ""
"Modulen :mod:`test.support.script_helper` ger stöd för Pythons tester för "
"exekvering av skript."

msgid ""
"Return ``True`` if ``sys.executable interpreter`` requires environment "
"variables in order to be able to run at all."
msgstr ""
"Returnerar ``True`` om ```sys.executable interpreter`` kräver miljövariabler "
"för att överhuvudtaget kunna köras."

msgid ""
"This is designed to be used with ``@unittest.skipIf()`` to annotate tests "
"that need to use an ``assert_python*()`` function to launch an isolated mode "
"(``-I``) or no environment mode (``-E``) sub-interpreter process."
msgstr ""
"Detta är utformat för att användas med ``@unittest.skipIf()`` för att "
"kommentera tester som behöver använda en ``assert_python*()``-funktion för "
"att starta en subinterpreterprocess i isolerat läge (``-I``) eller inget "
"miljöläge (``-E``)."

msgid ""
"A normal build & test does not run into this situation but it can happen "
"when trying to run the standard library test suite from an interpreter that "
"doesn't have an obvious home with Python's current home finding logic."
msgstr ""
"En normal build & test stöter inte på den här situationen, men det kan hända "
"när man försöker köra standardbibliotekets testsvit från en tolk som inte "
"har en uppenbar hemvist med Pythons nuvarande logik för att hitta hemvist."

msgid ""
"Setting :envvar:`PYTHONHOME` is one way to get most of the testsuite to run "
"in that situation.  :envvar:`PYTHONPATH` or :envvar:`PYTHONUSERSITE` are "
"other common environment variables that might impact whether or not the "
"interpreter can start."
msgstr ""
"Att ställa in :envvar:`PYTHONHOME` är ett sätt att få det mesta av "
"testsuiten att köras i den situationen. :envvar:`PYTHONPATH` eller :envvar:"
"`PYTHONUSERSITE` är andra vanliga miljövariabler som kan påverka om tolken "
"kan starta eller inte."

msgid ""
"Set up the environment based on *env_vars* for running the interpreter in a "
"subprocess.  The values can include ``__isolated``, ``__cleanenv``, "
"``__cwd``, and ``TERM``."
msgstr ""
"Ställ in miljön baserat på *env_vars* för att köra tolken i en "
"underprocess.  Värdena kan inkludera ``__isolated``, ``__cleanenv``, "
"``__cwd`` och ``TERM``."

msgid "The function no longer strips whitespaces from *stderr*."
msgstr "Funktionen tar inte längre bort blanksteg från *stderr*."

msgid ""
"Assert that running the interpreter with *args* and optional environment "
"variables *env_vars* succeeds (``rc == 0``) and return a ``(return code, "
"stdout, stderr)`` tuple."
msgstr ""
"Försäkra att körningen av tolken med *args* och de valfria miljövariablerna "
"*env_vars* lyckas (``rc == 0``) och returnera en ``(returkod, stdout, "
"stderr)``-tupel."

msgid ""
"If the *__cleanenv* keyword-only parameter is set, *env_vars* is used as a "
"fresh environment."
msgstr ""
"Om parametern *__cleanenv* (endast nyckelord) har angetts används *env_vars* "
"som en ny miljö."

msgid ""
"Python is started in isolated mode (command line option ``-I``), except if "
"the *__isolated* keyword-only parameter is set to ``False``."
msgstr ""
"Python startas i isolerat läge (kommandoradsalternativet ``-I``), utom om "
"parametern *__isolated* keyword-only är inställd på ``False``."

msgid ""
"Assert that running the interpreter with *args* and optional environment "
"variables *env_vars* fails (``rc != 0``) and return a ``(return code, "
"stdout, stderr)`` tuple."
msgstr ""
"Försäkra att körning av tolken med *args* och valfria miljövariabler "
"*env_vars* misslyckas (``rc != 0``) och returnera en ``(returkod, stdout, "
"stderr)``-tupel."

msgid "See :func:`assert_python_ok` for more options."
msgstr "Se :func:`assert_python_ok` för fler alternativ."

msgid "Run a Python subprocess with the given arguments."
msgstr "Kör en Python-subprocess med de angivna argumenten."

msgid ""
"*kw* is extra keyword args to pass to :func:`subprocess.Popen`. Returns a :"
"class:`subprocess.Popen` object."
msgstr ""
"*kw* är extra nyckelord att skicka till :func:`subprocess.Popen`. Returnerar "
"ett :class:`subprocess.Popen`-objekt."

msgid ""
"Run the given :class:`subprocess.Popen` process until completion and return "
"stdout."
msgstr ""
"Kör den angivna :class:`subprocess.Popen`-processen tills den är klar och "
"returnera stdout."

msgid ""
"Create script containing *source* in path *script_dir* and "
"*script_basename*. If *omit_suffix* is ``False``, append ``.py`` to the "
"name.  Return the full script path."
msgstr ""
"Skapa skript som innehåller *källa* i sökvägen *script_dir* och "
"*script_basnamn*. Om *omit_suffix* är ``False``, lägg till ``.py`` till "
"namnet.  Returnerar den fullständiga sökvägen till skriptet."

msgid ""
"Create zip file at *zip_dir* and *zip_basename* with extension ``zip`` which "
"contains the files in *script_name*. *name_in_zip* is the archive name. "
"Return a tuple containing ``(full path, full path of archive name)``."
msgstr ""
"Skapa en zip-fil på *zip_dir* och *zip_basnamn* med tillägget ``zip`` som "
"innehåller filerna i *script_name*. *name_in_zip* är arkivnamnet. Returnera "
"en tupel som innehåller ``(fullständig sökväg, fullständig sökväg till "
"arkivnamnet)``."

msgid ""
"Create a directory named *pkg_dir* containing an ``__init__`` file with "
"*init_source* as its contents."
msgstr ""
"Skapa en katalog med namnet *pkg_dir* som innehåller en ``__init__``-fil med "
"*init_source* som innehåll."

msgid ""
"Create a zip package directory with a path of *zip_dir* and *zip_basename* "
"containing an empty ``__init__`` file and a file *script_basename* "
"containing the *source*.  If *compiled* is ``True``, both source files will "
"be compiled and added to the zip package.  Return a tuple of the full zip "
"path and the archive name for the zip file."
msgstr ""
"Skapa en zip-paketkatalog med sökvägen *zip_dir* och *zip_basnamn* som "
"innehåller en tom ``__init__``-fil och en fil *script_basnamn* som "
"innehåller *källan*.  Om *compiled* är ``True`` kommer båda källfilerna att "
"kompileras och läggas till i zip-paketet.  Returnerar en tupel av den "
"fullständiga zip-sökvägen och arkivnamnet för zip-filen."

msgid ""
":mod:`test.support.bytecode_helper` --- Support tools for testing correct "
"bytecode generation"
msgstr ""
":mod:`test.support.bytecode_helper` --- Stödverktyg för att testa korrekt "
"generering av bytekoder"

msgid ""
"The :mod:`test.support.bytecode_helper` module provides support for testing "
"and inspecting bytecode generation."
msgstr ""
"Modulen :mod:`test.support.bytecode_helper` ger stöd för att testa och "
"inspektera generering av bytekoder."

msgid "The module defines the following class:"
msgstr "Modulen definierar följande klass:"

msgid "This class has custom assertion methods for inspecting bytecode."
msgstr ""
"Denna klass har anpassade assertion-metoder för att inspektera bytecode."

msgid "Return the disassembly of *co* as string."
msgstr "Returnera demonteringen av *co* som en sträng."

msgid ""
"Return instr if *opname* is found, otherwise throws :exc:`AssertionError`."
msgstr ""
"Returnerar instr om *opname* hittas, annars kastar :exc:`AssertionError`."

msgid "Throws :exc:`AssertionError` if *opname* is found."
msgstr "Kastar :exc:`AssertionError` om *opname* hittas."

msgid ":mod:`test.support.threading_helper` --- Utilities for threading tests"
msgstr ""
":mod:`test.support.threading_helper` --- Hjälpmedel för trådning av tester"

msgid ""
"The :mod:`test.support.threading_helper` module provides support for "
"threading tests."
msgstr ""
"Modulen :mod:`test.support.threading_helper` ger stöd för trådning av tester."

msgid ""
"Join a *thread* within *timeout*.  Raise an :exc:`AssertionError` if thread "
"is still alive after *timeout* seconds."
msgstr ""
"Gå med i en *tråd* inom *timeout*.  Skapa ett :exc:`AssertionError` om "
"tråden fortfarande är vid liv efter *timeout* sekunder."

msgid "Decorator to ensure the threads are cleaned up even if the test fails."
msgstr ""
"Dekorator för att säkerställa att trådarna rensas upp även om testet "
"misslyckas."

msgid ""
"Context manager to start *threads*, which is a sequence of threads. *unlock* "
"is a function called after the threads are started, even if an exception was "
"raised; an example would be :meth:`threading.Event.set`. ``start_threads`` "
"will attempt to join the started threads upon exit."
msgstr ""
"Kontexthanterare för att starta *threads*, vilket är en sekvens av trådar. "
"*unlock* är en funktion som anropas efter att trådarna har startats, även om "
"ett undantag har uppstått; ett exempel skulle vara :meth:`threading.Event."
"set`. ``start_threads`` kommer att försöka ansluta de startade trådarna vid "
"avslut."

msgid ""
"Cleanup up threads not specified in *original_values*.  Designed to emit a "
"warning if a test leaves running threads in the background."
msgstr ""
"Rensa upp trådar som inte specificerats i *original_values*.  Utformad för "
"att avge en varning om ett test lämnar pågående trådar i bakgrunden."

msgid "Return current thread count and copy of dangling threads."
msgstr "Returnerar aktuellt trådantal och kopia av hängande trådar."

msgid ""
"Context manager to wait until all threads created in the ``with`` statement "
"exit."
msgstr ""
"Kontexthanterare som väntar tills alla trådar som skapats i ``with``-satsen "
"avslutas."

msgid ""
"Context manager catching :class:`threading.Thread` exception using :func:"
"`threading.excepthook`."
msgstr ""
"Kontexthanterare som fångar upp :class:`threading.Thread` undantag med :func:"
"`threading.excepthook`."

msgid "Attributes set when an exception is caught:"
msgstr "Attribut som anges när ett undantag fångas upp:"

msgid "``exc_type``"
msgstr "``exc_type``"

msgid "``exc_value``"
msgstr "``exc_value``"

msgid "``exc_traceback``"
msgstr "``exc_traceback``"

msgid "``thread``"
msgstr "``thread``"

msgid "See :func:`threading.excepthook` documentation."
msgstr "Se :func:`threading.excepthook` dokumentation."

msgid "These attributes are deleted at the context manager exit."
msgstr "Dessa attribut raderas när kontexthanteraren avslutas."

msgid ""
"with threading_helper.catch_threading_exception() as cm:\n"
"    # code spawning a thread which raises an exception\n"
"    ...\n"
"\n"
"    # check the thread exception, use cm attributes:\n"
"    # exc_type, exc_value, exc_traceback, thread\n"
"    ...\n"
"\n"
"# exc_type, exc_value, exc_traceback, thread attributes of cm no longer\n"
"# exists at this point\n"
"# (to avoid reference cycles)"
msgstr ""
"med threading_helper.catch_threading_exception() som cm:\n"
"    # kod som skapar en tråd som ger upphov till ett undantag\n"
"    ...\n"
"\n"
"    # kontrollera trådundantaget, använd cm-attribut:\n"
"    # exc_type, exc_value, exc_traceback, thread\n"
"    ...\n"
"\n"
"# exc_type, exc_value, exc_traceback, thread attribut för cm finns inte "
"längre\n"
"# existerar vid denna tidpunkt\n"
"# (för att undvika referenscykler)"

msgid ""
"Run the worker function concurrently in multiple threads. Re-raises an "
"exception if any thread raises one, after all threads have finished."
msgstr ""
"Kör arbetsfunktionen samtidigt i flera trådar. Löser ut ett undantag igen om "
"någon tråd löser ut ett, efter att alla trådar har avslutats."

msgid ":mod:`test.support.os_helper` --- Utilities for os tests"
msgstr ":mod:`test.support.os_helper` --- Hjälpmedel för os-test"

msgid "The :mod:`test.support.os_helper` module provides support for os tests."
msgstr "Modulen :mod:`test.support.os_helper` ger stöd för os-tester."

msgid "A non-ASCII character encodable by :func:`os.fsencode`."
msgstr "Ett icke-ASCII-tecken som kan kodas med :func:`os.fsencode`."

msgid "Set to :func:`os.getcwd`."
msgstr "Ställs in på :func:`os.getcwd`."

msgid ""
"Set to a name that is safe to use as the name of a temporary file.  Any "
"temporary file that is created should be closed and unlinked (removed)."
msgstr ""
"Ange ett namn som är säkert att använda som namn på en tillfällig fil.  Alla "
"temporära filer som skapas ska stängas och avlänkas (tas bort)."

msgid ""
"Set to a filename containing the :data:`FS_NONASCII` character, if it "
"exists. This guarantees that if the filename exists, it can be encoded and "
"decoded with the default filesystem encoding. This allows tests that require "
"a non-ASCII filename to be easily skipped on platforms where they can't work."
msgstr ""
"Sätts till ett filnamn som innehåller tecknet :data:`FS_NONASCII`, om det "
"finns. Detta garanterar att om filnamnet existerar kan det kodas och avkodas "
"med filsystemets standardkodning. Detta gör att tester som kräver ett icke-"
"ASCII-filnamn enkelt kan hoppas över på plattformar där de inte kan fungera."

msgid ""
"Set to a filename (str type) that should not be able to be encoded by file "
"system encoding in strict mode.  It may be ``None`` if it's not possible to "
"generate such a filename."
msgstr ""
"Sätts till ett filnamn (str-typ) som inte bör kunna kodas av filsystemets "
"kodning i strikt läge.  Det kan vara ``None`` om det inte är möjligt att "
"generera ett sådant filnamn."

msgid ""
"Set to a filename (bytes type) that should not be able to be decoded by file "
"system encoding in strict mode.  It may be ``None`` if it's not possible to "
"generate such a filename."
msgstr ""
"Sätts till ett filnamn (bytes-typ) som inte bör kunna avkodas av "
"filsystemets kodning i strikt läge.  Det kan vara ``None`` om det inte är "
"möjligt att generera ett sådant filnamn."

msgid "Set to a non-ASCII name for a temporary file."
msgstr "Ange ett icke-ASCII-namn för en temporär fil."

msgid ""
"Class used to temporarily set or unset environment variables.  Instances can "
"be used as a context manager and have a complete dictionary interface for "
"querying/modifying the underlying ``os.environ``. After exit from the "
"context manager all changes to environment variables done through this "
"instance will be rolled back."
msgstr ""
"Klass som används för att temporärt ställa in eller ta bort miljövariabler.  "
"Instanser kan användas som en kontexthanterare och har ett komplett "
"dictionary-gränssnitt för att fråga/ändra den underliggande ``os.environ``. "
"Efter avslut från kontexthanteraren kommer alla ändringar av miljövariabler "
"som gjorts genom denna instans att återställas."

msgid "Added dictionary interface."
msgstr "Lagt till gränssnitt för ordbok."

msgid ""
"Simple :term:`path-like object`.  It implements the :meth:`~os.PathLike."
"__fspath__` method which just returns the *path* argument.  If *path* is an "
"exception, it will be raised in :meth:`!__fspath__`."
msgstr ""
"Enkelt :term:`path-liknande objekt`.  Det implementerar metoden :meth:`~os."
"PathLike.__fspath__` som bara returnerar argumentet *path*.  Om *path* är "
"ett undantag kommer det att tas upp i :meth:`!__fspath__`."

msgid ""
"Temporarily set the environment variable ``envvar`` to the value of "
"``value``."
msgstr "Tillfälligt ställa in miljövariabeln ``envvar`` till värdet ``value``."

msgid "Temporarily unset one or more environment variables."
msgstr "Tillfälligt avaktivera en eller flera miljövariabler."

msgid "More than one environment variable can be unset."
msgstr "Mer än en miljövariabel kan avaktiveras."

msgid "Return ``True`` if the OS supports symbolic links, ``False`` otherwise."
msgstr ""
"Returnerar ``True`` om operativsystemet stöder symboliska länkar, annars "
"``False``."

msgid "Return ``True`` if the OS supports xattr, ``False`` otherwise."
msgstr ""
"Returnerar ``True`` om operativsystemet stöder xattr, ``False`` annars."

msgid ""
"A context manager that temporarily changes the current working directory to "
"*path* and yields the directory."
msgstr ""
"En kontexthanterare som temporärt ändrar den aktuella arbetskatalogen till "
"*path* och lämnar ut katalogen."

msgid ""
"If *quiet* is ``False``, the context manager raises an exception on error.  "
"Otherwise, it issues only a warning and keeps the current working directory "
"the same."
msgstr ""
"Om *quiet* är ``False``, gör kontexthanteraren ett undantag vid fel.  I "
"annat fall utfärdas endast en varning och den aktuella arbetskatalogen "
"förblir densamma."

msgid ""
"Create an empty file with *filename*.  If it already exists, truncate it."
msgstr "Skapa en tom fil med *filnamn*.  Om den redan finns, avkorta den."

msgid "Count the number of open file descriptors."
msgstr "Räkna antalet öppna filbeskrivare."

msgid "Return ``True`` if the file system for *directory* is case-insensitive."
msgstr ""
"Returnerar ``True`` om filsystemet för *katalog* är skiftlägesokänsligt."

msgid ""
"Create an invalid file descriptor by opening and closing a temporary file, "
"and returning its descriptor."
msgstr ""
"Skapa en ogiltig filbeskrivare genom att öppna och stänga en temporär fil "
"och returnera dess beskrivare."

msgid ""
"Call :func:`os.rmdir` on *filename*.  On Windows platforms, this is wrapped "
"with a wait loop that checks for the existence of the file, which is needed "
"due to antivirus programs that can hold files open and prevent deletion."
msgstr ""
"Anropa :func:`os.rmdir` på *filnamn*.  På Windows-plattformar är detta "
"omslutet av en vänteslinga som kontrollerar att filen finns, vilket behövs "
"på grund av antivirusprogram som kan hålla filer öppna och förhindra "
"radering."

msgid ""
"Call :func:`shutil.rmtree` on *path* or call :func:`os.lstat` and :func:`os."
"rmdir` to remove a path and its contents.  As with :func:`rmdir`, on Windows "
"platforms this is wrapped with a wait loop that checks for the existence of "
"the files."
msgstr ""
"Anropa :func:`shutil.rmtree` på *sökväg* eller anropa :func:`os.lstat` och :"
"func:`os.rmdir` för att ta bort en sökväg och dess innehåll.  Precis som "
"med :func:`rmdir`, på Windows-plattformar är detta omslutet av en "
"vänteslinga som kontrollerar att filerna finns."

msgid "A decorator for running tests that require support for symbolic links."
msgstr ""
"En dekorator för att köra tester som kräver stöd för symboliska länkar."

msgid "A decorator for running tests that require support for xattr."
msgstr "En dekorator för att köra tester som kräver stöd för xattr."

msgid ""
"A context manager that temporarily creates a new directory and changes the "
"current working directory (CWD)."
msgstr ""
"En kontexthanterare som tillfälligt skapar en ny katalog och ändrar den "
"aktuella arbetskatalogen (CWD)."

msgid ""
"The context manager creates a temporary directory in the current directory "
"with name *name* before temporarily changing the current working directory.  "
"If *name* is ``None``, the temporary directory is created using :func:"
"`tempfile.mkdtemp`."
msgstr ""
"Kontexthanteraren skapar en temporär katalog i den aktuella katalogen med "
"namnet *name* innan den aktuella arbetskatalogen ändras temporärt.  Om "
"*namn* är ``None`` skapas den temporära katalogen med hjälp av :func:"
"`tempfile.mkdtemp`."

msgid ""
"If *quiet* is ``False`` and it is not possible to create or change the CWD, "
"an error is raised.  Otherwise, only a warning is raised and the original "
"CWD is used."
msgstr ""
"Om *quiet* är ``False`` och det inte är möjligt att skapa eller ändra CWD:n, "
"utlöses ett fel.  I annat fall utfärdas endast en varning och den "
"ursprungliga CWD:n används."

msgid ""
"A context manager that creates a temporary directory at *path* and yields "
"the directory."
msgstr ""
"En kontexthanterare som skapar en tillfällig katalog på *sökväg* och lämnar "
"ut katalogen."

msgid ""
"If *path* is ``None``, the temporary directory is created using :func:"
"`tempfile.mkdtemp`.  If *quiet* is ``False``, the context manager raises an "
"exception on error.  Otherwise, if *path* is specified and cannot be "
"created, only a warning is issued."
msgstr ""
"Om *path* är ``None`` skapas den temporära katalogen med :func:`tempfile."
"mkdtemp`.  Om *quiet* är ``False``, gör kontexthanteraren ett undantag vid "
"fel.  I annat fall, om *path* anges och inte kan skapas, utfärdas endast en "
"varning."

msgid "A context manager that temporarily sets the process umask."
msgstr "En kontexthanterare som temporärt ställer in processens umask."

msgid ""
"Call :func:`os.unlink` on *filename*.  As with :func:`rmdir`, on Windows "
"platforms, this is wrapped with a wait loop that checks for the existence of "
"the file."
msgstr ""
"Anropa :func:`os.unlink` på *filename*.  Precis som med :func:`rmdir`, på "
"Windows-plattformar, är detta omslutet av en vänteslinga som kontrollerar om "
"filen finns."

msgid ":mod:`test.support.import_helper` --- Utilities for import tests"
msgstr ":mod:`test.support.import_helper` --- Hjälpmedel för importtester"

msgid ""
"The :mod:`test.support.import_helper` module provides support for import "
"tests."
msgstr "Modulen :mod:`test.support.import_helper` ger stöd för importtester."

msgid ""
"Remove the module named *module_name* from ``sys.modules`` and delete any "
"byte-compiled files of the module."
msgstr ""
"Ta bort modulen med namnet *modul_namn* från ``sys.modules`` och radera alla "
"bytekompilerade filer i modulen."

msgid ""
"This function imports and returns a fresh copy of the named Python module by "
"removing the named module from ``sys.modules`` before doing the import. Note "
"that unlike :func:`reload`, the original module is not affected by this "
"operation."
msgstr ""
"Denna funktion importerar och returnerar en ny kopia av den namngivna Python-"
"modulen genom att ta bort den namngivna modulen från ``sys.modules`` innan "
"importen görs. Observera att till skillnad från :func:`reload` påverkas inte "
"den ursprungliga modulen av denna operation."

msgid ""
"*fresh* is an iterable of additional module names that are also removed from "
"the ``sys.modules`` cache before doing the import."
msgstr ""
"*fresh* är en iterabel med ytterligare modulnamn som också tas bort från "
"``sys.modules`` cache innan importen görs."

msgid ""
"*blocked* is an iterable of module names that are replaced with ``None`` in "
"the module cache during the import to ensure that attempts to import them "
"raise :exc:`ImportError`."
msgstr ""
"*blocked* är en iterabel av modulnamn som ersätts med ``None`` i modulcachen "
"under importen för att säkerställa att försök att importera dem ger upphov "
"till :exc:`ImportError`."

msgid ""
"The named module and any modules named in the *fresh* and *blocked* "
"parameters are saved before starting the import and then reinserted into "
"``sys.modules`` when the fresh import is complete."
msgstr ""
"Den namngivna modulen och alla moduler som namnges i parametrarna *fresh* "
"och *blocked* sparas innan importen påbörjas och återinförs sedan i ``sys."
"modules`` när den nya importen är klar."

msgid ""
"Module and package deprecation messages are suppressed during this import if "
"*deprecated* is ``True``."
msgstr ""
"Meddelanden om modul- och paketdepreciering undertrycks under denna import "
"om *deprecated* är ``True``."

msgid ""
"This function will raise :exc:`ImportError` if the named module cannot be "
"imported."
msgstr ""
"Denna funktion ger :exc:`ImportError` om den namngivna modulen inte kan "
"importeras."

msgid ""
"# Get copies of the warnings module for testing without affecting the\n"
"# version being used by the rest of the test suite. One copy uses the\n"
"# C implementation, the other is forced to use the pure Python fallback\n"
"# implementation\n"
"py_warnings = import_fresh_module('warnings', blocked=['_warnings'])\n"
"c_warnings = import_fresh_module('warnings', fresh=['_warnings'])"
msgstr ""
"# Hämta kopior av varningsmodulen för testning utan att påverka den\n"
"# version som används av resten av testsviten. En kopia använder\n"
"# C-implementeringen, den andra tvingas använda den rena Python-fallbacken\n"
"# implementeringen\n"
"py_warnings = import_fresh_module('warnings', blocked=['_warnings'])\n"
"c_warnings = import_fresh_module('warnings', fresh=['_warnings'])"

msgid ""
"This function imports and returns the named module. Unlike a normal import, "
"this function raises :exc:`unittest.SkipTest` if the module cannot be "
"imported."
msgstr ""
"Denna funktion importerar och returnerar den namngivna modulen. Till "
"skillnad från en vanlig import ger den här funktionen upphov till :exc:"
"`unittest.SkipTest` om modulen inte kan importeras."

msgid ""
"Module and package deprecation messages are suppressed during this import if "
"*deprecated* is ``True``.  If a module is required on a platform but "
"optional for others, set *required_on* to an iterable of platform prefixes "
"which will be compared against :data:`sys.platform`."
msgstr ""
"Meddelanden om modul- och paketdepreciering undertrycks under denna import "
"om *deprecated* är ``True``.  Om en modul krävs på en plattform men är "
"valfri för andra, ange *required_on* till en iterabel av plattformsprefix "
"som kommer att jämföras med :data:`sys.platform`."

msgid "Return a copy of :data:`sys.modules`."
msgstr "Returnera en kopia av :data:`sys.modules`."

msgid ""
"Remove modules except for *oldmodules* and ``encodings`` in order to "
"preserve internal cache."
msgstr ""
"Ta bort moduler med undantag för *oldmodules* och ``encodings`` för att "
"bevara intern cache."

msgid "Delete *name* from ``sys.modules``."
msgstr "Ta bort *namn* från ``sys.modules``."

msgid ""
"Move a :pep:`3147`/:pep:`488` pyc file to its legacy pyc location and return "
"the file system path to the legacy pyc file.  The *source* value is the file "
"system path to the source file.  It does not need to exist, however the PEP "
"3147/488 pyc file must exist."
msgstr ""
"Flyttar en :pep:`3147`/:pep:`488` pyc-fil till dess äldre pyc-plats och "
"returnerar filsystemets sökväg till den äldre pyc-filen.  Värdet *source* är "
"filsystemets sökväg till källfilen.  Den behöver inte finnas, men PEP "
"3147/488 pyc-filen måste finnas."

msgid ""
"A context manager to force import to return a new module reference.  This is "
"useful for testing module-level behaviors, such as the emission of a :exc:"
"`DeprecationWarning` on import.  Example usage::"
msgstr ""
"En kontexthanterare som tvingar import att returnera en ny modulreferens.  "
"Detta är användbart för att testa beteenden på modulnivå, t.ex. utfärdandet "
"av en :exc:`DeprecationWarning` vid import.  Exempel på användning::"

msgid ""
"with CleanImport('foo'):\n"
"    importlib.import_module('foo')  # New reference."
msgstr ""
"with CleanImport('foo'):\n"
"    importlib.import_module('foo')  # New reference."

msgid "A context manager to temporarily add directories to :data:`sys.path`."
msgstr ""
"En kontexthanterare för att tillfälligt lägga till kataloger i :data:`sys."
"path`."

msgid ""
"This makes a copy of :data:`sys.path`, appends any directories given as "
"positional arguments, then reverts :data:`sys.path` to the copied settings "
"when the context ends."
msgstr ""
"Detta gör en kopia av :data:`sys.path`, lägger till alla kataloger som anges "
"som positionsargument och återställer sedan :data:`sys.path` till de "
"kopierade inställningarna när kontexten avslutas."

msgid ""
"Note that *all* :data:`sys.path` modifications in the body of the context "
"manager, including replacement of the object, will be reverted at the end of "
"the block."
msgstr ""
"Observera att *alla* :data:`sys.path`-ändringar i kontexthanterarens kropp, "
"inklusive ersättning av objektet, kommer att återställas i slutet av blocket."

msgid ":mod:`test.support.warnings_helper` --- Utilities for warnings tests"
msgstr ""
":mod:`test.support.warnings_helper` --- Hjälpmedel för test av varningar"

msgid ""
"The :mod:`test.support.warnings_helper` module provides support for warnings "
"tests."
msgstr "Modulen :mod:`test.support.warnings_helper` ger stöd för varningstest."

msgid ""
"Suppress warnings that are instances of *category*, which must be :exc:"
"`Warning` or a subclass. Roughly equivalent to :func:`warnings."
"catch_warnings` with :meth:`warnings.simplefilter('ignore', "
"category=category) <warnings.simplefilter>`. For example::"
msgstr ""
"Undertrycker varningar som är instanser av *category*, som måste vara :exc:"
"`Warning` eller en underklass. Ungefär likvärdigt med :func:`warnings."
"catch_warnings` med :meth:`warnings.simplefilter('ignore', "
"category=category) <warnings.simplefilter>`. Till exempel::"

msgid ""
"@warning_helper.ignore_warnings(category=DeprecationWarning)\n"
"def test_suppress_warning():\n"
"    # do something"
msgstr ""
"@warning_helper.ignore_warnings(category=DeprecationWarning)\n"
"def test_suppress_warning():\n"
"    # gör något"

msgid ""
"Context manager to check that no :exc:`ResourceWarning` was raised.  You "
"must remove the object which may emit :exc:`ResourceWarning` before the end "
"of the context manager."
msgstr ""
"Kontexthanterare för att kontrollera att ingen :exc:`ResourceWarning` har "
"skapats.  Du måste ta bort det objekt som kan ge upphov till :exc:"
"`ResourceWarning` innan kontexthanteraren avslutas."

msgid ""
"Test for syntax warning in *statement* by attempting to compile *statement*. "
"Test also that the :exc:`SyntaxWarning` is emitted only once, and that it "
"will be converted to a :exc:`SyntaxError` when turned into error. *testcase* "
"is the :mod:`unittest` instance for the test.  *errtext* is the regular "
"expression which should match the string representation of the emitted :exc:"
"`SyntaxWarning` and raised :exc:`SyntaxError`.  If *lineno* is not ``None``, "
"compares to the line of the warning and exception. If *offset* is not "
"``None``, compares to the offset of the exception."
msgstr ""
"Testa för syntaxvarning i *statement* genom att försöka kompilera "
"*statement*. Testa också att :exc:`SyntaxWarning` bara sänds ut en gång och "
"att den konverteras till :exc:`SyntaxError` när den blir ett fel. *testcase* "
"är :mod:`unittest`-instansen för testet.  *errtext* är det reguljära uttryck "
"som skall matcha strängrepresentationen av den utsända :exc:`SyntaxWarning` "
"och den uppkomna :exc:`SyntaxError`.  Om *lineno* inte är ``None``, jämförs "
"med raden för varningen och undantaget. Om *offset* inte är ``None``, "
"jämförs med undantagets offset."

msgid ""
"A convenience wrapper for :func:`warnings.catch_warnings` that makes it "
"easier to test that a warning was correctly raised.  It is approximately "
"equivalent to calling ``warnings.catch_warnings(record=True)`` with :meth:"
"`warnings.simplefilter` set to ``always`` and with the option to "
"automatically validate the results that are recorded."
msgstr ""
"En bekväm omslutning för :func:`warnings.catch_warnings` som gör det enklare "
"att testa att en varning har utlösts korrekt.  Det motsvarar ungefär att "
"anropa ``warnings.catch_warnings(record=True)`` med :meth:`warnings."
"simplefilter` satt till ``always`` och med alternativet att automatiskt "
"validera de resultat som registreras."

msgid ""
"``check_warnings`` accepts 2-tuples of the form ``(\"message regexp\", "
"WarningCategory)`` as positional arguments. If one or more *filters* are "
"provided, or if the optional keyword argument *quiet* is ``False``, it "
"checks to make sure the warnings are as expected:  each specified filter "
"must match at least one of the warnings raised by the enclosed code or the "
"test fails, and if any warnings are raised that do not match any of the "
"specified filters the test fails.  To disable the first of these checks, set "
"*quiet* to ``True``."
msgstr ""
"``check_warnings`` accepterar 2-tuples av formen ``(\"message regexp\", "
"WarningCategory)`` som positionella argument. Om ett eller flera *filter* "
"anges, eller om det valfria nyckelordsargumentet *quiet* är ``False``, "
"kontrolleras att varningarna är som förväntat: varje angivet filter måste "
"matcha minst en av de varningar som den bifogade koden ger upphov till, "
"annars misslyckas testet, och om några varningar ges upphov till som inte "
"matchar något av de angivna filtren misslyckas testet.  För att inaktivera "
"den första av dessa kontroller, sätt *quiet* till ``True``."

msgid "If no arguments are specified, it defaults to::"
msgstr "Om inga argument anges är standardvärdet::"

msgid "check_warnings((\"\", Warning), quiet=True)"
msgstr "check_warnings((\"\", Varning), quiet=True)"

msgid "In this case all warnings are caught and no errors are raised."
msgstr ""
"I det här fallet fångas alla varningar upp och inga felmeddelanden skickas "
"ut."

msgid ""
"On entry to the context manager, a :class:`WarningRecorder` instance is "
"returned. The underlying warnings list from :func:`~warnings.catch_warnings` "
"is available via the recorder object's :attr:`warnings` attribute.  As a "
"convenience, the attributes of the object representing the most recent "
"warning can also be accessed directly through the recorder object (see "
"example below).  If no warning has been raised, then any of the attributes "
"that would otherwise be expected on an object representing a warning will "
"return ``None``."
msgstr ""
"Vid inmatning till kontexthanteraren returneras en :class:`WarningRecorder`-"
"instans. Den underliggande varningslistan från :func:`~warnings."
"catch_warnings` är tillgänglig via recorder-objektets attribut :attr:"
"`warnings`.  Som en bekvämlighet kan attributen för det objekt som "
"representerar den senaste varningen också nås direkt via recorder-objektet "
"(se exemplet nedan).  Om ingen varning har utlösts, kommer alla attribut som "
"annars skulle förväntas på ett objekt som representerar en varning att "
"returnera ``None``."

msgid ""
"The recorder object also has a :meth:`reset` method, which clears the "
"warnings list."
msgstr ""
"Recorder-objektet har också en :meth:`reset`-metod, som rensar "
"varningslistan."

msgid "The context manager is designed to be used like this::"
msgstr "Kontexthanteraren är utformad för att användas på följande sätt::"

msgid ""
"with check_warnings((\"assertion is always true\", SyntaxWarning),\n"
"                    (\"\", UserWarning)):\n"
"    exec('assert(False, \"Hey!\")')\n"
"    warnings.warn(UserWarning(\"Hide me!\"))"
msgstr ""
"with check_warnings((\"assertion is always true\", SyntaxWarning),\n"
"                    (\"\", UserWarning)):\n"
"    exec('assert(False, \"Hey!\")')\n"
"    warnings.warn(UserWarning(\"Hide me!\"))"

msgid ""
"In this case if either warning was not raised, or some other warning was "
"raised, :func:`check_warnings` would raise an error."
msgstr ""
"I det här fallet skulle :func:`check_warnings` ge upphov till ett fel om "
"någon av varningarna inte gavs, eller om någon annan varning gavs."

msgid ""
"When a test needs to look more deeply into the warnings, rather than just "
"checking whether or not they occurred, code like this can be used::"
msgstr ""
"När ett test behöver titta djupare på varningarna, snarare än att bara "
"kontrollera om de inträffade eller inte, kan kod som denna användas::"

msgid ""
"with check_warnings(quiet=True) as w:\n"
"    warnings.warn(\"foo\")\n"
"    assert str(w.args[0]) == \"foo\"\n"
"    warnings.warn(\"bar\")\n"
"    assert str(w.args[0]) == \"bar\"\n"
"    assert str(w.warnings[0].args[0]) == \"foo\"\n"
"    assert str(w.warnings[1].args[0]) == \"bar\"\n"
"    w.reset()\n"
"    assert len(w.warnings) == 0"
msgstr ""
"with check_warnings(quiet=True) as w:\n"
"    warnings.warn(\"foo\")\n"
"    assert str(w.args[0]) == \"foo\"\n"
"    warnings.warn(\"bar\")\n"
"    assert str(w.args[0]) == \"bar\"\n"
"    assert str(w.warnings[0].args[0]) == \"foo\"\n"
"    assert str(w.warnings[1].args[0]) == \"bar\"\n"
"    w.reset()\n"
"    assert len(w.warnings) == 0"

msgid ""
"Here all warnings will be caught, and the test code tests the captured "
"warnings directly."
msgstr ""
"Här kommer alla varningar att fångas upp och testkoden testar de fångade "
"varningarna direkt."

msgid "New optional arguments *filters* and *quiet*."
msgstr "Nya valfria argument *filters* och *quiet*."

msgid ""
"Class used to record warnings for unit tests. See documentation of :func:"
"`check_warnings` above for more details."
msgstr ""
"Klass som används för att registrera varningar för enhetstester. Se "
"dokumentation av :func:`check_warnings` ovan för mer information."
