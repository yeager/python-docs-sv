# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`!cmath` --- Matematiska funktioner för komplexa tal"

msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`~object.__complex__` or a :meth:`~object.__float__` "
"method: these methods are used to convert the object to a complex or "
"floating-point number, respectively, and the function is then applied to the "
"result of the conversion."
msgstr ""
"Den här modulen ger tillgång till matematiska funktioner för komplexa tal.  "
"Funktionerna i denna modul accepterar heltal, flyttal eller komplexa tal som "
"argument. De accepterar också alla Python-objekt som har antingen en :meth:"
"`~object.__complex__`- eller en :meth:`~object.__float__`-metod: dessa "
"metoder används för att konvertera objektet till ett komplext tal respektive "
"ett flyttal, och funktionen tillämpas sedan på resultatet av konverteringen."

msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along "
"the imaginary axis we look at the sign of the real part."
msgstr ""
"För funktioner som involverar förgreningar har vi problemet att bestämma hur "
"vi ska definiera dessa funktioner på själva förgreningen. I enlighet med "
"Kahans dokument \"Branch cuts for complex elementary functions\" samt bilaga "
"G i C99 och senare C-standarder använder vi tecknet för noll för att skilja "
"den ena sidan av förgreningen från den andra: för en förgrening längs (en "
"del av) den reella axeln tittar vi på tecknet för den imaginära delen, medan "
"vi för en förgrening längs den imaginära axeln tittar på tecknet för den "
"reella delen."

msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``-2-0j`` is treated as though it lies "
"*below* the branch cut, and so gives a result on the negative imaginary "
"axis::"
msgstr ""
"Till exempel har funktionen :func:`cmath.sqrt` ett grenavsnitt längs den "
"negativa realaxeln. Ett argument med ``-2-0j`` behandlas som om det ligger "
"*under* grenavsnittet och ger därför ett resultat på den negativa imaginära "
"axeln::"

msgid ""
">>> cmath.sqrt(-2-0j)\n"
"-1.4142135623730951j"
msgstr ""
">>> cmath.sqrt(-2-0j)\n"
"-1.4142135623730951j"

msgid ""
"But an argument of ``-2+0j`` is treated as though it lies above the branch "
"cut::"
msgstr ""
"Men ett argument av ``-2+0j`` behandlas som om det ligger ovanför grenen "
"cut::"

msgid ""
">>> cmath.sqrt(-2+0j)\n"
"1.4142135623730951j"
msgstr ""
">>> cmath.sqrt(-2+0j)\n"
"1.4142135623730951j"

msgid "**Conversions to and from polar coordinates**"
msgstr "**Omvandlingar till och från polära koordinater**"

msgid ":func:`phase(z) <phase>`"
msgstr ":func:`phase(z) <phase>`"

msgid "Return the phase of *z*"
msgstr "Returnera fasen för *z*"

msgid ":func:`polar(z) <polar>`"
msgstr ":func:`polar(z) <polar>`"

msgid "Return the representation of *z* in polar coordinates"
msgstr "Returnera representationen av *z* i polära koordinater"

msgid ":func:`rect(r, phi) <rect>`"
msgstr ":func:`rect(r, phi) <rect>`"

msgid "Return the complex number *z* with polar coordinates *r* and *phi*"
msgstr "Returnerar det komplexa talet *z* med polära koordinater *r* och *phi*"

msgid "**Power and logarithmic functions**"
msgstr "**Kraft- och logaritmfunktioner**"

msgid ":func:`exp(z) <exp>`"
msgstr ":func:`exp(z) <exp>`"

msgid "Return *e* raised to the power *z*"
msgstr "Returnera *e* upphöjd till kraften *z*"

msgid ":func:`log(z[, base]) <log>`"
msgstr ":func:`log(z[, base]) <log>`"

msgid "Return the logarithm of *z* to the given *base* (*e* by default)"
msgstr ""
"Returnerar logaritmen av *z* till den angivna *basen* (*e* som standard)"

msgid ":func:`log10(z) <log10>`"
msgstr ":func:`log10(z) <log10>`"

msgid "Return the base-10 logarithm of *z*"
msgstr "Returnerar bas-10 logaritmen av *z*"

msgid ":func:`sqrt(z) <sqrt>`"
msgstr ":func:`sqrt(z) <sqrt>`"

msgid "Return the square root of *z*"
msgstr "Returnerar kvadratroten av *z*"

msgid "**Trigonometric functions**"
msgstr "**Trigonometriska funktioner**"

msgid ":func:`acos(z) <acos>`"
msgstr ":func:`acos(z) <acos>`"

msgid "Return the arc cosine of *z*"
msgstr "Returnera arc cosinus av *z*"

msgid ":func:`asin(z) <asin>`"
msgstr ":func:`asin(z) <asin>`"

msgid "Return the arc sine of *z*"
msgstr "Returnerar bågsinus av *z*"

msgid ":func:`atan(z) <atan>`"
msgstr ":func:`atan(z) <atan>`"

msgid "Return the arc tangent of *z*"
msgstr "Returnera bågtangenten för *z*"

msgid ":func:`cos(z) <cos>`"
msgstr ":func:`cos(z) <cos>`"

msgid "Return the cosine of *z*"
msgstr "Returnera cosinus av *z*"

msgid ":func:`sin(z) <sin>`"
msgstr ":func:`sin(z) <sin>`"

msgid "Return the sine of *z*"
msgstr "Returnera sinus av *z*"

msgid ":func:`tan(z) <tan>`"
msgstr ":func:`tan(z) <tan>`"

msgid "Return the tangent of *z*"
msgstr "Returnera tangenten till *z*"

msgid "**Hyperbolic functions**"
msgstr "**Hyperboliska funktioner**"

msgid ":func:`acosh(z) <acosh>`"
msgstr ":func:`acosh(z) <acosh>`"

msgid "Return the inverse hyperbolic cosine of *z*"
msgstr "Returnerar den inversa hyperboliska cosinus av *z*"

msgid ":func:`asinh(z) <asinh>`"
msgstr ":func:`asinh(z) <asinh>`"

msgid "Return the inverse hyperbolic sine of *z*"
msgstr "Returnerar den inversa hyperboliska sinus av *z*"

msgid ":func:`atanh(z) <atanh>`"
msgstr ":func:`atanh(z) <atanh>`"

msgid "Return the inverse hyperbolic tangent of *z*"
msgstr "Returnera den inversa hyperboliska tangenten för *z*"

msgid ":func:`cosh(z) <cosh>`"
msgstr ":func:`cosh(z) <cosh>`"

msgid "Return the hyperbolic cosine of *z*"
msgstr "Returnerar hyperbolisk cosinus av *z*"

msgid ":func:`sinh(z) <sinh>`"
msgstr ":func:`sinh(z) <sinh>`"

msgid "Return the hyperbolic sine of *z*"
msgstr "Returnerar hyperbolisk sinus av *z*"

msgid ":func:`tanh(z) <tanh>`"
msgstr ":func:`tanh(z) <tanh>`"

msgid "Return the hyperbolic tangent of *z*"
msgstr "Returnera den hyperboliska tangenten för *z*"

msgid "**Classification functions**"
msgstr "**Klassificeringsfunktioner**"

msgid ":func:`isfinite(z) <isfinite>`"
msgstr ":func:`isfinite(z) <isfinite>`"

msgid "Check if all components of *z* are finite"
msgstr "Kontrollera om alla komponenter i *z* är ändliga"

msgid ":func:`isinf(z) <isinf>`"
msgstr ":func:`isinf(z) <isinf>`"

msgid "Check if any component of *z* is infinite"
msgstr "Kontrollera om någon komponent i *z* är oändlig"

msgid ":func:`isnan(z) <isnan>`"
msgstr ":func:`isnan(z) <isnan>`"

msgid "Check if any component of *z* is a NaN"
msgstr "Kontrollera om någon komponent i *z* är en NaN"

msgid ":func:`isclose(a, b, *, rel_tol, abs_tol) <isclose>`"
msgstr ":func:`isclose(a, b, *, rel_tol, abs_tol) <isclose>`"

msgid "Check if the values *a* and *b* are close to each other"
msgstr "Kontrollera om värdena *a* och *b* ligger nära varandra"

msgid "**Constants**"
msgstr "**Konstanter**"

msgid ":data:`pi`"
msgstr ":data:`pi`"

msgid "*π* = 3.141592..."
msgstr "*π* = 3.141592..."

msgid ":data:`e`"
msgstr ":data:`e`"

msgid "*e* = 2.718281..."
msgstr "*e* = 2.718281..."

msgid ":data:`tau`"
msgstr ":data:`tau`"

msgid "*τ* = 2\\ *π* = 6.283185..."
msgstr "*τ* = 2\\ *π* = 6,283185..."

msgid ":data:`inf`"
msgstr ":data:`inf`"

msgid "Positive infinity"
msgstr "Positiv oändlighet"

msgid ":data:`infj`"
msgstr ":data:`infj`"

msgid "Pure imaginary infinity"
msgstr "Ren imaginär oändlighet"

msgid ":data:`nan`"
msgstr ":data:`nan`"

msgid "\"Not a number\" (NaN)"
msgstr "\"Inte ett tal\" (NaN)"

msgid ":data:`nanj`"
msgstr ":data:`nanj`"

msgid "Pure imaginary NaN"
msgstr "Rent imaginärt NaN"

msgid "Conversions to and from polar coordinates"
msgstr "Omvandling till och från polära koordinater"

msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``."
msgstr ""
"Ett komplext Python-tal ``z`` lagras internt med hjälp av *rektangulära* "
"eller *kartesiska* koordinater.  Det bestäms helt av dess *reella del* ``z."
"real`` och dess *imaginära del* ``z.imag``."

msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Polära koordinater* ger ett alternativt sätt att representera ett komplext "
"tal.  I polära koordinater definieras ett komplext tal *z* av modulus *r* "
"och fasvinkeln *phi*. Modulen *r* är avståndet från *z* till origo, medan "
"fasen *phi* är den motsols vinkeln, mätt i radianer, från den positiva x-"
"axeln till det linjesegment som förbinder origo med *z*."

msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Följande funktioner kan användas för att konvertera från de ursprungliga "
"rektangulära koordinaterna till polära koordinater och vice versa."

msgid ""
"Return the phase of *z* (also known as the *argument* of *z*), as a float. "
"``phase(z)`` is equivalent to ``math.atan2(z.imag, z.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis.  The sign of the result is the same as the "
"sign of ``z.imag``, even when ``z.imag`` is zero::"
msgstr ""
"Returnerar fasen för *z* (även känt som *argumentet* för *z*), som en float. "
"``phase(z)`` är ekvivalent med ``math.atan2(z.imag, z.real)``.  Resultatet "
"ligger i intervallet [-\\ *π*, *π*], och grenavsnittet för denna operation "
"ligger längs den negativa realaxeln.  Tecknet på resultatet är detsamma som "
"tecknet på ``z.imag``, även när ``z.imag`` är noll::"

msgid ""
">>> phase(-1+0j)\n"
"3.141592653589793\n"
">>> phase(-1-0j)\n"
"-3.141592653589793"
msgstr ""
">>> fas(-1+0j)\n"
"3.141592653589793\n"
">>> fas(-1-0j)\n"
"-3.141592653589793"

msgid ""
"The modulus (absolute value) of a complex number *z* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"Modulus (absolutvärdet) för ett komplext tal *z* kan beräknas med hjälp av "
"den inbyggda funktionen :func:`abs`.  Det finns ingen separat :mod:`cmath`-"
"modulfunktion för denna operation."

msgid ""
"Return the representation of *z* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *z* and *phi* is the phase of *z*.  "
"``polar(z)`` is equivalent to ``(abs(z), phase(z))``."
msgstr ""
"Returnerar representationen av *z* i polära koordinater.  Returnerar ett par "
"``(r, phi)`` där *r* är modulus för *z* och *phi* är fas för *z*.  "
"``polar(z)`` är ekvivalent med ``(abs(z), phase(z))``."

msgid ""
"Return the complex number *z* with polar coordinates *r* and *phi*. "
"Equivalent to ``complex(r * math.cos(phi), r * math.sin(phi))``."
msgstr ""
"Returnerar det komplexa talet *z* med polära koordinater *r* och *phi*. "
"Motsvarar ``komplex(r * math.cos(phi), r * math.sin(phi))``."

msgid "Power and logarithmic functions"
msgstr "Potens- och logaritmfunktioner"

msgid ""
"Return *e* raised to the power *z*, where *e* is the base of natural "
"logarithms."
msgstr ""
"Returnerar *e* upphöjt till potensen *z*, där *e* är basen för naturliga "
"logaritmer."

msgid ""
"Return the logarithm of *z* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *z*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""
"Returnerar logaritmen av *z* till den angivna *basen*. Om *bas* inte anges, "
"returneras den naturliga logaritmen för *z*. Det finns ett grenavsnitt, från "
"0 längs den negativa realaxeln till -∞."

msgid ""
"Return the base-10 logarithm of *z*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"Returnerar bas-10 logaritmen av *z*. Detta har samma grenutskärning som :"
"func:`log`."

msgid ""
"Return the square root of *z*. This has the same branch cut as :func:`log`."
msgstr ""
"Returnerar kvadratroten av *z*. Detta har samma grenutsnitt som :func:`log`."

msgid "Trigonometric functions"
msgstr "Trigonometriska funktioner"

msgid ""
"Return the arc cosine of *z*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""
"Returnerar arc cosinus av *z*. Det finns två grenskärningar: Den ena "
"sträcker sig höger från 1 längs den reella axeln till ∞. Den andra sträcker "
"sig vänster från -1 längs den reella axeln till -∞."

msgid ""
"Return the arc sine of *z*. This has the same branch cuts as :func:`acos`."
msgstr ""
"Returnerar bågsinus för *z*. Detta har samma grenavsnitt som :func:`acos`."

msgid ""
"Return the arc tangent of *z*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""
"Returnerar bågtangenten för *z*. Det finns två grenskärningar: Den ena "
"sträcker sig från ``1j`` längs den imaginära axeln till ``∞j``. Den andra "
"sträcker sig från ``-1j`` längs den imaginära axeln till ``-∞j``."

msgid "Return the cosine of *z*."
msgstr "Returnerar cosinus av *z*."

msgid "Return the sine of *z*."
msgstr "Returnerar sinus av *z*."

msgid "Return the tangent of *z*."
msgstr "Returnera tangenten till *z*."

msgid "Hyperbolic functions"
msgstr "Hyperboliska funktioner"

msgid ""
"Return the inverse hyperbolic cosine of *z*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr ""
"Returnerar den inversa hyperboliska cosinus för *z*. Det finns ett "
"grenavsnitt som sträcker sig åt vänster från 1 längs den reella axeln till -"
"∞."

msgid ""
"Return the inverse hyperbolic sine of *z*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""
"Returnerar den inversa hyperboliska sinus för *z*. Det finns två "
"grenskärningar: Den ena sträcker sig från ``1j`` längs imaginäraxeln till "
"``∞j``.  Den andra sträcker sig från ``-1j`` längs den imaginära axeln till "
"``-∞j``."

msgid ""
"Return the inverse hyperbolic tangent of *z*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""
"Returnerar den inversa hyperboliska tangenten för *z*. Det finns två "
"grenskärningar: Den ena sträcker sig från ``1`` längs den reella axeln till "
"``∞``. Den andra sträcker sig från ``-1`` längs den reella axeln till ``-∞``."

msgid "Return the hyperbolic cosine of *z*."
msgstr "Returnerar hyperbolisk cosinus av *z*."

msgid "Return the hyperbolic sine of *z*."
msgstr "Returnerar den hyperboliska sinusformen av *z*."

msgid "Return the hyperbolic tangent of *z*."
msgstr "Returnerar den hyperboliska tangenten för *z*."

msgid "Classification functions"
msgstr "Klassificeringsfunktioner"

msgid ""
"Return ``True`` if both the real and imaginary parts of *z* are finite, and "
"``False`` otherwise."
msgstr ""
"Returnerar ``True`` om både real- och imaginärdelarna av *z* är ändliga, och "
"``False`` annars."

msgid ""
"Return ``True`` if either the real or the imaginary part of *z* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"Returnerar ``True`` om antingen den reella eller den imaginära delen av *z* "
"är en oändlighet, och ``False`` annars."

msgid ""
"Return ``True`` if either the real or the imaginary part of *z* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"Returnerar ``True`` om antingen den reella eller den imaginära delen av *z* "
"är en NaN, och ``False`` annars."

msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Returnerar ``True`` om värdena *a* och *b* ligger nära varandra och "
"``False`` i annat fall."

msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances.  If no errors occur, the result will "
"be: ``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"Huruvida två värden anses ligga nära varandra eller inte avgörs enligt givna "
"absoluta och relativa toleranser.  Om inga fel inträffar blir resultatet: "
"``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)``."

msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be nonnegative and less than "
"``1.0``."
msgstr ""
"*rel_tol* är den relativa toleransen - det är den maximalt tillåtna "
"skillnaden mellan *a* och *b*, i förhållande till det större absoluta värdet "
"av *a* eller *b*. Om du t.ex. vill ange en tolerans på 5 % anger du "
"``rel_tol=0,05``.  Standardtoleransen är ``1e-09``, vilket garanterar att de "
"två värdena är lika inom cirka 9 decimaler.  *rel_tol* måste vara icke-"
"negativt och mindre än ``1,0``."

msgid ""
"*abs_tol* is the absolute tolerance; it defaults to ``0.0`` and it must be "
"nonnegative.  When comparing ``x`` to ``0.0``, ``isclose(x, 0)`` is computed "
"as ``abs(x) <= rel_tol  * abs(x)``, which is ``False`` for any ``x`` and "
"rel_tol less than ``1.0``.  So add an appropriate positive abs_tol argument "
"to the call."
msgstr ""
"*abs_tol* är den absoluta toleransen; standardvärdet är ``0,0`` och det "
"måste vara icke-negativt.  Vid jämförelse av ``x`` med ``0,0`` beräknas "
"``isclose(x, 0)`` som ``abs(x) <= rel_tol * abs(x)``, vilket är ``falskt`` "
"för alla ``x`` och rel_tol som är mindre än ``1,0``.  Lägg därför till ett "
"lämpligt positivt abs_tol-argument i anropet."

msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"IEEE 754 specialvärdena ``NaN``, ``inf`` och ``-inf`` kommer att hanteras "
"enligt IEEE:s regler.  Specifikt anses inte ``NaN`` ligga nära något annat "
"värde, inklusive ``NaN``.  ``inf`` och ``-inf`` betraktas endast som nära "
"sig själva."

msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- En funktion för att testa ungefärlig likhet"

msgid "Constants"
msgstr "Konstanter"

msgid "The mathematical constant *π*, as a float."
msgstr "Den matematiska konstanten *π*, som en flyttal."

msgid "The mathematical constant *e*, as a float."
msgstr "Den matematiska konstanten *e*, som ett flyttal."

msgid "The mathematical constant *τ*, as a float."
msgstr "Den matematiska konstanten *τ*, som flyttal."

msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "Flyttalspositiv oändlighet. Motsvarar ``float('inf')``."

msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Komplext tal med noll i real del och positiv oändlighet i imaginär del. "
"Motsvarar ``komplex(0.0, float('inf'))``."

msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"Ett flytpunktsvärde som inte är ett tal (NaN).  Motsvarar ``float('nan')``."

msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Komplext tal med noll i realdelen och NaN i imaginärdelen. Motsvarar "
"``komplex(0.0, float('nan'))``."

msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Observera att urvalet av funktioner är liknande, men inte identiskt, med det "
"i modul :mod:`math`.  Anledningen till att det finns två moduler är att "
"vissa användare inte är intresserade av komplexa tal, och kanske inte ens "
"vet vad de är.  De vill hellre att ``math.sqrt(-1)`` ska ge upphov till ett "
"undantag än att returnera ett komplext tal. Notera också att de funktioner "
"som definieras i :mod:`cmath` alltid returnerar ett komplext tal, även om "
"svaret kan uttryckas som ett reellt tal (i vilket fall det komplexa talet "
"har en imaginär del på noll)."

msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"En anteckning om grenskärningar: De är kurvor längs vilka den givna "
"funktionen inte är kontinuerlig.  De är en nödvändig egenskap hos många "
"komplexa funktioner.  Det antas att om du behöver beräkna med komplexa "
"funktioner, kommer du att förstå om grenskärningar.  Konsultera nästan "
"vilken (inte alltför elementär) bok som helst om komplexa variabler för "
"upplysning.  För information om det rätta valet av grenskärningar för "
"numeriska ändamål bör en bra referens vara följande:"

msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W: Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  I Iserles, A., och Powell, M. (red.), The state of the "
"art in numerical analysis. Clarendon Press (1987) s. 165--211."

msgid "module"
msgstr "modul"

msgid "math"
msgstr "matematik"
