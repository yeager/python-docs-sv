# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-23 14:15+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Pending removal in future versions"
msgstr ""

msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""

msgid ":mod:`argparse`:"
msgstr ""

msgid ""
"Nesting argument groups and nesting mutually exclusive groups are deprecated."
msgstr ""

msgid ""
"Passing the undocumented keyword argument *prefix_chars* to :meth:`~argparse."
"ArgumentParser.add_argument_group` is now deprecated."
msgstr ""

msgid "The :class:`argparse.FileType` type converter is deprecated."
msgstr ""

msgid ":mod:`builtins`:"
msgstr ""

msgid "``bool(NotImplemented)``."
msgstr ""

msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""

msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""

msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""

msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""

msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""

msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr ""

msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""

msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""

msgid ""
":mod:`codecs`: use :func:`open` instead of :func:`codecs.open`. (:gh:"
"`133038`)"
msgstr ""

msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""

msgid ":mod:`datetime`:"
msgstr ""

msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""

msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""

msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ""

msgid ":mod:`importlib`:"
msgstr ""

msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""

msgid ":mod:`importlib.metadata`:"
msgstr ""

msgid "``EntryPoints`` tuple interface."
msgstr ""

msgid "Implicit ``None`` on return values."
msgstr ""

msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""

msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""

msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ""

msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""

msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""

msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ""

msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""

msgid ":mod:`ssl` options and protocols:"
msgstr ""

msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ""

msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""

msgid "``ssl.OP_NO_SSL*`` options"
msgstr ""

msgid "``ssl.OP_NO_TLS*`` options"
msgstr ""

msgid "``ssl.PROTOCOL_SSLv3``"
msgstr ""

msgid "``ssl.PROTOCOL_TLS``"
msgstr ""

msgid "``ssl.PROTOCOL_TLSv1``"
msgstr ""

msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr ""

msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr ""

msgid "``ssl.TLSVersion.SSLv3``"
msgstr ""

msgid "``ssl.TLSVersion.TLSv1``"
msgstr ""

msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr ""

msgid ":mod:`threading` methods:"
msgstr ""

msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""

msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ""

msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""

msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""

msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""

msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ""

msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ""

msgid ""
"The internal class ``typing._UnionGenericAlias`` is no longer used to "
"implement :class:`typing.Union`. To preserve compatibility with users using "
"this private class, a compatibility shim will be provided until at least "
"Python 3.17. (Contributed by Jelle Zijlstra in :gh:`105499`.)"
msgstr ""

msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""

msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""

msgid "``splitattr()``"
msgstr ""

msgid "``splithost()``"
msgstr ""

msgid "``splitnport()``"
msgstr ""

msgid "``splitpasswd()``"
msgstr ""

msgid "``splitport()``"
msgstr ""

msgid "``splitquery()``"
msgstr ""

msgid "``splittag()``"
msgstr ""

msgid "``splittype()``"
msgstr ""

msgid "``splituser()``"
msgstr ""

msgid "``splitvalue()``"
msgstr ""

msgid "``to_bytes()``"
msgstr ""

msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""

msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""

msgid ""
":func:`sys._clear_type_cache` is deprecated: use :func:`sys."
"_clear_internal_caches` instead."
msgstr ""
