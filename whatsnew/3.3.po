# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "What's New In Python 3.3"
msgstr "Vad är nytt i Python 3.3"

msgid ""
"This article explains the new features in Python 3.3, compared to 3.2. "
"Python 3.3 was released on September 29, 2012.  For full details, see the "
"`changelog <https://docs.python.org/3.3/whatsnew/changelog.html>`_."
msgstr ""
"I den här artikeln förklaras de nya funktionerna i Python 3.3 jämfört med "
"3.2. Python 3.3 släpptes den 29 september 2012.  För fullständig "
"information, se `changelog <https://docs.python.org/3.3/whatsnew/changelog."
"html>`_."

msgid ":pep:`398` - Python 3.3 Release Schedule"
msgstr ":pep:`398` - Python 3.3 Utgivningsschema"

msgid "Summary -- Release highlights"
msgstr "Sammanfattning -- Release highlights"

msgid "New syntax features:"
msgstr "Nya syntaxfunktioner:"

msgid ""
"New ``yield from`` expression for :ref:`generator delegation <pep-380>`."
msgstr "Nytt ``yield from`` uttryck för :ref:`generator delegation <pep-380>`."

msgid "The ``u'unicode'`` syntax is accepted again for :class:`str` objects."
msgstr "Syntaxen ``u'unicode'`` accepteras igen för :class:`str`-objekt."

msgid "New library modules:"
msgstr "Nya biblioteksmoduler:"

msgid ":mod:`faulthandler` (helps debugging low-level crashes)"
msgstr ":mod:`faulthandler` (hjälper till att felsöka krascher på låg nivå)"

msgid ""
":mod:`ipaddress` (high-level objects representing IP addresses and masks)"
msgstr ""
":mod:`ipaddress` (högnivåobjekt som representerar IP-adresser och masker)"

msgid ":mod:`lzma` (compress data using the XZ / LZMA algorithm)"
msgstr ":mod:`lzma` (komprimera data med hjälp av XZ/LZMA-algoritmen)"

msgid ""
":mod:`unittest.mock` (replace parts of your system under test with mock "
"objects)"
msgstr ""
":mod:`unittest.mock` (ersätt delar av ditt system under test med "
"låtsasobjekt)"

msgid ""
":mod:`venv` (Python :ref:`virtual environments <pep-405>`, as in the popular "
"``virtualenv`` package)"
msgstr ""
":mod:`venv` (Python :ref:`virtuella miljöer <pep-405>`, som i det populära "
"paketet ``virtualenv``)"

msgid "New built-in features:"
msgstr "Nya inbyggda funktioner:"

msgid "Reworked :ref:`I/O exception hierarchy <pep-3151>`."
msgstr "Omarbetad :ref:`I/O undantagshierarki <pep-3151>`."

msgid "Implementation improvements:"
msgstr "Förbättringar av genomförandet:"

msgid ""
"Rewritten :ref:`import machinery <importlib>` based on :mod:`importlib`."
msgstr ""
"Omskriven :ref:`import machinery <importlib>` baserat på :mod:`importlib`."

msgid "More compact :ref:`unicode strings <pep-393>`."
msgstr "Mer kompakt :ref:`unicode strängar <pep-393>`."

msgid "More compact :ref:`attribute dictionaries <pep-412>`."
msgstr "Mer kompakt :ref:`attributordböcker <pep-412>`."

msgid "Significantly Improved Library Modules:"
msgstr "Betydligt förbättrade biblioteksmoduler:"

msgid "C Accelerator for the :ref:`decimal <new-decimal>` module."
msgstr "C Accelerator för modulen :ref:`decimal <new-decimal>`."

msgid ""
"Better unicode handling in the :ref:`email <new-email>` module (:term:"
"`provisional <provisional package>`)."
msgstr ""
"Bättre unicode-hantering i modulen :ref:`email <new-email>` (:term:"
"`provisional <provisional package>`)."

msgid "Security improvements:"
msgstr "Förbättringar av säkerheten:"

msgid "Hash randomization is switched on by default."
msgstr "Hash-randomisering är aktiverad som standard."

msgid "Please read on for a comprehensive list of user-facing changes."
msgstr ""
"Läs vidare för en omfattande lista över förändringar som riktar sig till "
"användarna."

msgid "PEP 405: Virtual Environments"
msgstr "PEP 405: Virtuella miljöer"

msgid ""
"Virtual environments help create separate Python setups while sharing a "
"system-wide base install, for ease of maintenance.  Virtual environments "
"have their own set of private site packages (i.e. locally installed "
"libraries), and are optionally segregated from the system-wide site "
"packages.  Their concept and implementation are inspired by the popular "
"``virtualenv`` third-party package, but benefit from tighter integration "
"with the interpreter core."
msgstr ""
"Virtuella miljöer hjälper till att skapa separata Python-installationer "
"samtidigt som de delar en systemomfattande basinstallation för att "
"underlätta underhållet.  Virtuella miljöer har sin egen uppsättning privata "
"webbplatspaket (dvs. lokalt installerade bibliotek) och är valfritt "
"separerade från de systemomfattande webbplatspaketen.  Konceptet och "
"implementeringen är inspirerat av det populära tredjepartspaketet "
"``virtualenv``, men har en tätare integration med tolkens kärna."

msgid ""
"This PEP adds the :mod:`venv` module for programmatic access, and the "
"``pyvenv`` script for command-line access and administration.  The Python "
"interpreter checks for a ``pyvenv.cfg``, file whose existence signals the "
"base of a virtual environment's directory tree."
msgstr ""
"Denna PEP lägger till modulen :mod:`venv` för programmatisk åtkomst och "
"skriptet ``pyvenv`` för kommandoradsåtkomst och administration.  Python-"
"tolken kontrollerar om det finns en \"pyvenv.cfg\"-fil, vars existens "
"signalerar basen i en virtuell miljös katalogträd."

msgid ":pep:`405` - Python Virtual Environments"
msgstr ":pep:`405` - Virtuella Python-miljöer"

msgid "PEP written by Carl Meyer; implementation by Carl Meyer and Vinay Sajip"
msgstr ""
"PEP skriven av Carl Meyer; implementation av Carl Meyer och Vinay Sajip"

msgid "PEP 420: Implicit Namespace Packages"
msgstr "PEP 420: Implicita namnrymdsförpackningar"

msgid ""
"Native support for package directories that don't require ``__init__.py`` "
"marker files and can automatically span multiple path segments (inspired by "
"various third party approaches to namespace packages, as described in :pep:"
"`420`)"
msgstr ""
"Inbyggt stöd för paketkataloger som inte kräver ``__init__.py``-markörfiler "
"och som automatiskt kan sträcka sig över flera sökvägssegment (inspirerat av "
"olika tredjepartsansatser för namnområdespaket, som beskrivs i :pep:`420`)"

msgid ":pep:`420` - Implicit Namespace Packages"
msgstr ":pep:`420` - Implicita paket i namnrymden"

msgid ""
"PEP written by Eric V. Smith; implementation by Eric V. Smith and Barry "
"Warsaw"
msgstr ""
"PEP utarbetat av Eric V. Smith; genomförande av Eric V. Smith och Barry "
"Warsaw"

msgid ""
"PEP 3118: New memoryview implementation and buffer protocol documentation"
msgstr ""
"PEP 3118: Ny implementering av memoryview och dokumentation av "
"buffertprotokoll"

msgid "The implementation of :pep:`3118` has been significantly improved."
msgstr "Implementeringen av :pep:`3118` har förbättrats avsevärt."

msgid ""
"The new memoryview implementation comprehensively fixes all ownership and "
"lifetime issues of dynamically allocated fields in the Py_buffer struct that "
"led to multiple crash reports. Additionally, several functions that crashed "
"or returned incorrect results for non-contiguous or multi-dimensional input "
"have been fixed."
msgstr ""
"Den nya implementeringen av memoryview åtgärdar alla ägande- och "
"livstidsproblem med dynamiskt allokerade fält i Py_buffer-strukturen som "
"ledde till flera kraschrapporter. Dessutom har flera funktioner som "
"kraschade eller returnerade felaktiga resultat för icke-sammanhängande eller "
"flerdimensionell indata åtgärdats."

msgid ""
"The memoryview object now has a PEP-3118 compliant getbufferproc() that "
"checks the consumer's request type. Many new features have been added, most "
"of them work in full generality for non-contiguous arrays and arrays with "
"suboffsets."
msgstr ""
"Memoryview-objektet har nu en PEP-3118-kompatibel getbufferproc() som "
"kontrollerar konsumentens begärandetyp. Många nya funktioner har lagts till, "
"de flesta av dem fungerar i full generalitet för icke sammanhängande arrayer "
"och arrayer med suboffsets."

msgid ""
"The documentation has been updated, clearly spelling out responsibilities "
"for both exporters and consumers. Buffer request flags are grouped into "
"basic and compound flags. The memory layout of non-contiguous and multi-"
"dimensional NumPy-style arrays is explained."
msgstr ""
"Dokumentationen har uppdaterats och anger tydligt ansvarsområdena för både "
"exportörer och konsumenter. Flaggor för buffertbegäran är indelade i "
"grundläggande och sammansatta flaggor. Minneslayouten för icke-"
"sammanhängande och flerdimensionella matriser i NumPy-stil förklaras."

msgid "Features"
msgstr "Funktioner"

msgid ""
"All native single character format specifiers in struct module syntax "
"(optionally prefixed with '@') are now supported."
msgstr ""
"Alla inbyggda formatspecifikatorer för enstaka tecken i struct-modulsyntax "
"(eventuellt med prefixet '@') stöds nu."

msgid ""
"With some restrictions, the cast() method allows changing of format and "
"shape of C-contiguous arrays."
msgstr ""
"Med vissa begränsningar kan cast()-metoden ändra format och form på C-slutna "
"matriser."

msgid ""
"Multi-dimensional list representations are supported for any array type."
msgstr "Flerdimensionella listrepresentationer stöds för alla array-typer."

msgid "Multi-dimensional comparisons are supported for any array type."
msgstr "Flerdimensionella jämförelser stöds för alla typer av matriser."

msgid ""
"One-dimensional memoryviews of hashable (read-only) types with formats B, b "
"or c are now hashable.  (Contributed by Antoine Pitrou in :issue:`13411`.)"
msgstr ""
"Endimensionella minnesvyer av hashbara (skrivskyddade) typer med formaten B, "
"b eller c är nu hashbara.  (Bidrag från Antoine Pitrou i :issue:`13411`.)"

msgid ""
"Arbitrary slicing of any 1-D arrays type is supported. For example, it is "
"now possible to reverse a memoryview in *O*\\ (1) by using a negative step."
msgstr ""
"Stöd finns för godtycklig skivning av alla typer av 1-D matriser. Till "
"exempel är det nu möjligt att vända en minnesvy i *O*\\ (1) genom att "
"använda ett negativt steg."

msgid "API changes"
msgstr "API-ändringar"

msgid "The maximum number of dimensions is officially limited to 64."
msgstr "Det maximala antalet dimensioner är officiellt begränsat till 64."

msgid ""
"The representation of empty shape, strides and suboffsets is now an empty "
"tuple instead of ``None``."
msgstr ""
"Representationen av tom form, strides och suboffsets är nu en tom tupel "
"istället för ``None``."

msgid ""
"Accessing a memoryview element with format 'B' (unsigned bytes) now returns "
"an integer (in accordance with the struct module syntax). For returning a "
"bytes object the view must be cast to 'c' first."
msgstr ""
"Åtkomst till ett memoryview-element med formatet 'B' (unsigned bytes) "
"returnerar nu ett heltal (i enlighet med struct-modulens syntax). För att "
"returnera ett bytes-objekt måste vyn först castas till 'c'."

msgid ""
"memoryview comparisons now use the logical structure of the operands and "
"compare all array elements by value. All format strings in struct module "
"syntax are supported. Views with unrecognised format strings are still "
"permitted, but will always compare as unequal, regardless of view contents."
msgstr ""
"memoryview-jämförelser använder nu operandernas logiska struktur och jämför "
"alla arrayelement med värde. Alla formatsträngar i struct-modulsyntax stöds. "
"Vyer med formatsträngar som inte känns igen är fortfarande tillåtna, men "
"kommer alltid att jämföras som ojämlika, oavsett vyns innehåll."

msgid ""
"For further changes see `Build and C API Changes`_ and `Porting C code`_."
msgstr ""
"För ytterligare ändringar se `Build and C API Changes`_ och `Porting C "
"code`_."

msgid "(Contributed by Stefan Krah in :issue:`10181`.)"
msgstr "(Bidrag från Stefan Krah i :issue:`10181`.)"

msgid ":pep:`3118` - Revising the Buffer Protocol"
msgstr ":pep:`3118` - Revidering av buffertprotokollet"

msgid "PEP 393: Flexible String Representation"
msgstr "PEP 393: Flexibel strängrepresentation"

msgid ""
"The Unicode string type is changed to support multiple internal "
"representations, depending on the character with the largest Unicode ordinal "
"(1, 2, or 4 bytes) in the represented string.  This allows a space-efficient "
"representation in common cases, but gives access to full UCS-4 on all "
"systems.  For compatibility with existing APIs, several representations may "
"exist in parallel; over time, this compatibility should be phased out."
msgstr ""
"Unicode-strängtypen ändras för att stödja flera interna representationer, "
"beroende på tecknet med den största Unicode-ordinalen (1, 2 eller 4 byte) i "
"den representerade strängen.  Detta möjliggör en utrymmeseffektiv "
"representation i vanliga fall, men ger tillgång till fullständig UCS-4 på "
"alla system.  För kompatibilitet med befintliga API:er kan flera "
"representationer existera parallellt; med tiden bör denna kompatibilitet "
"fasas ut."

msgid "On the Python side, there should be no downside to this change."
msgstr ""
"På Python-sidan bör det inte finnas några nackdelar med denna förändring."

msgid ""
"On the C API side, :pep:`393` is fully backward compatible.  The legacy API "
"should remain available at least five years.  Applications using the legacy "
"API will not fully benefit of the memory reduction, or - worse - may use a "
"bit more memory, because Python may have to maintain two versions of each "
"string (in the legacy format and in the new efficient storage)."
msgstr ""
"På C API-sidan är :pep:`393` helt bakåtkompatibel.  Det äldre API:et bör "
"vara tillgängligt i minst fem år.  Program som använder det äldre API:et "
"kommer inte att dra full nytta av minnesminskningen, eller - ännu värre - "
"kan använda lite mer minne, eftersom Python kan behöva underhålla två "
"versioner av varje sträng (i det äldre formatet och i den nya effektiva "
"lagringen)."

msgid "Functionality"
msgstr "Funktionalitet"

msgid "Changes introduced by :pep:`393` are the following:"
msgstr "Ändringar införda av :pep:`393` är följande:"

msgid ""
"Python now always supports the full range of Unicode code points, including "
"non-BMP ones (i.e. from ``U+0000`` to ``U+10FFFF``).  The distinction "
"between narrow and wide builds no longer exists and Python now behaves like "
"a wide build, even under Windows."
msgstr ""
"Python stöder nu alltid hela utbudet av Unicode-kodpunkter, inklusive icke-"
"BMP-kodpunkter (dvs. från ``U+0000`` till ``U+10FFFF``).  Skillnaden mellan "
"narrow och wide builds finns inte längre och Python beter sig nu som en wide "
"build, även under Windows."

msgid ""
"With the death of narrow builds, the problems specific to narrow builds have "
"also been fixed, for example:"
msgstr ""
"Med döden för smala byggnader har de problem som är specifika för smala "
"byggnader också åtgärdats, till exempel:"

msgid ""
":func:`len` now always returns 1 for non-BMP characters, so "
"``len('\\U0010FFFF') == 1``;"
msgstr ""
":func:`len` returnerar nu alltid 1 för icke-BMP-tecken, så "
"``len('\\U0010FFFF') == 1``;"

msgid ""
"surrogate pairs are not recombined in string literals, so "
"``'\\uDBFF\\uDFFF' != '\\U0010FFFF'``;"
msgstr ""
"surrogatpar kombineras inte om i stränglitteraler, så ``'\\uDBFF\\uDFFF' != "
"'\\U0010FFFF'``;"

msgid ""
"indexing or slicing non-BMP characters returns the expected value, so "
"``'\\U0010FFFF'[0]`` now returns ``'\\U0010FFFF'`` and not ``'\\uDBFF'``;"
msgstr ""
"indexering eller skärning av icke-BMP-tecken returnerar det förväntade "
"värdet, så ``'\\U0010FFFF'[0]`` returnerar nu ``'\\U0010FFFF'`` och inte "
"``'\\uDBFF'``;"

msgid ""
"all other functions in the standard library now correctly handle non-BMP "
"code points."
msgstr ""
"alla andra funktioner i standardbiblioteket hanterar nu korrekt icke-BMP-"
"kodpunkter."

msgid ""
"The value of :data:`sys.maxunicode` is now always ``1114111`` (``0x10FFFF`` "
"in hexadecimal).  The :c:func:`!PyUnicode_GetMax` function still returns "
"either ``0xFFFF`` or ``0x10FFFF`` for backward compatibility, and it should "
"not be used with the new Unicode API (see :issue:`13054`)."
msgstr ""
"Värdet för :data:`sys.maxunicode` är nu alltid ``1114111`` (``0x10FFFF`` i "
"hexadecimal).  Funktionen :c:func:`!PyUnicode_GetMax` returnerar fortfarande "
"antingen ``0xFFFF`` eller ``0x10FFFF`` för bakåtkompatibilitet, och den bör "
"inte användas med det nya Unicode API:et (se :issue:`13054`)."

msgid "The :file:`./configure` flag ``--with-wide-unicode`` has been removed."
msgstr "Flaggan :file:`./configure` ``--with-wide-unicode`` har tagits bort."

msgid "Performance and resource usage"
msgstr "Prestanda och resursanvändning"

msgid ""
"The storage of Unicode strings now depends on the highest code point in the "
"string:"
msgstr ""
"Lagringen av Unicode-strängar beror nu på den högsta kodpunkten i strängen:"

msgid ""
"pure ASCII and Latin1 strings (``U+0000-U+00FF``) use 1 byte per code point;"
msgstr ""
"rena ASCII- och Latin1-strängar (``U+0000-U+00FF``) använder 1 byte per "
"kodpunkt;"

msgid "BMP strings (``U+0000-U+FFFF``) use 2 bytes per code point;"
msgstr "BMP-strängar (``U+0000-U+FFFF``) använder 2 byte per kodpunkt;"

msgid "non-BMP strings (``U+10000-U+10FFFF``) use 4 bytes per code point."
msgstr "icke-BMP-strängar (``U+10000-U+10FFFF``) använder 4 byte per kodpunkt."

msgid ""
"The net effect is that for most applications, memory usage of string storage "
"should decrease significantly - especially compared to former wide unicode "
"builds - as, in many cases, strings will be pure ASCII even in international "
"contexts (because many strings store non-human language data, such as XML "
"fragments, HTTP headers, JSON-encoded data, etc.).  We also hope that it "
"will, for the same reasons, increase CPU cache efficiency on non-trivial "
"applications. The memory usage of Python 3.3 is two to three times smaller "
"than Python 3.2, and a little bit better than Python 2.7, on a Django "
"benchmark (see the PEP for details)."
msgstr ""
"Nettoeffekten är att för de flesta applikationer bör minnesanvändningen för "
"stränglagring minska avsevärt - särskilt jämfört med tidigare breda unicode-"
"byggnader - eftersom strängar i många fall kommer att vara ren ASCII även i "
"internationella sammanhang (eftersom många strängar lagrar data som inte är "
"mänskligt språk, t.ex. XML-fragment, HTTP-rubriker, JSON-kodade data etc.).  "
"Vi hoppas också att det, av samma skäl, kommer att öka CPU-"
"cacheeffektiviteten i icke-triviala applikationer. Minnesanvändningen för "
"Python 3.3 är två till tre gånger mindre än för Python 3.2 och lite bättre "
"än för Python 2.7 i ett Django-benchmark (se PEP för detaljer)."

msgid ":pep:`393` - Flexible String Representation"
msgstr ":pep:`393` - Flexibel strängrepresentation"

msgid ""
"PEP written by Martin von Löwis; implementation by Torsten Becker and Martin "
"von Löwis."
msgstr ""
"PEP skriven av Martin von Löwis; implementation av Torsten Becker och Martin "
"von Löwis."

msgid "PEP 397: Python Launcher for Windows"
msgstr "PEP 397: Python Launcher för Windows"

msgid ""
"The Python 3.3 Windows installer now includes a ``py`` launcher application "
"that can be used to launch Python applications in a version independent "
"fashion."
msgstr ""
"Windows-installationsprogrammet för Python 3.3 innehåller nu en "
"startapplikation för Python som kan användas för att starta Python-"
"applikationer på ett versionsoberoende sätt."

msgid ""
"This launcher is invoked implicitly when double-clicking ``*.py`` files. If "
"only a single Python version is installed on the system, that version will "
"be used to run the file. If multiple versions are installed, the most recent "
"version is used by default, but this can be overridden by including a Unix-"
"style \"shebang line\" in the Python script."
msgstr ""
"Den här startprogrammet anropas implicit när man dubbelklickar på ``*.py``-"
"filer. Om bara en enda Python-version är installerad på systemet kommer den "
"versionen att användas för att köra filen. Om flera versioner är "
"installerade används den senaste versionen som standard, men detta kan "
"åsidosättas genom att inkludera en Unix-liknande \"shebang-rad\" i Python-"
"skriptet."

msgid ""
"The launcher can also be used explicitly from the command line as the ``py`` "
"application. Running ``py`` follows the same version selection rules as "
"implicitly launching scripts, but a more specific version can be selected by "
"passing appropriate arguments (such as ``-3`` to request Python 3 when "
"Python 2 is also installed, or ``-2.6`` to specifically request an earlier "
"Python version when a more recent version is installed)."
msgstr ""
"Startprogrammet kan också användas explicit från kommandoraden som "
"programmet ``py``. Att köra ``py`` följer samma regler för versionsval som "
"implicit start av skript, men en mer specifik version kan väljas genom att "
"skicka lämpliga argument (t.ex. ``-3`` för att begära Python 3 när Python 2 "
"också är installerat, eller ``-2.6`` för att specifikt begära en tidigare "
"Python-version när en nyare version är installerad)."

msgid ""
"In addition to the launcher, the Windows installer now includes an option to "
"add the newly installed Python to the system PATH.  (Contributed by Brian "
"Curtin in :issue:`3561`.)"
msgstr ""
"Förutom startprogrammet innehåller Windows-installationsprogrammet nu ett "
"alternativ för att lägga till det nyinstallerade Python i systemets PATH.  "
"(Bidrag från Brian Curtin i :issue:`3561`.)"

msgid ":pep:`397` - Python Launcher for Windows"
msgstr ":pep:`397` - Python Launcher för Windows"

msgid ""
"PEP written by Mark Hammond and Martin v. Löwis; implementation by Vinay "
"Sajip."
msgstr ""
"PEP skriven av Mark Hammond och Martin v. Löwis; implementation av Vinay "
"Sajip."

msgid "Launcher documentation: :ref:`launcher`"
msgstr "Dokumentation om startprogrammet: :ref:`launcher`"

msgid "Installer PATH modification: :ref:`windows-path-mod`"
msgstr "Ändring av installationsprogrammets PATH: :ref:`windows-path-mod`"

msgid "PEP 3151: Reworking the OS and IO exception hierarchy"
msgstr "PEP 3151: Omarbetning av undantagshierarkin för OS och IO"

msgid ""
"The hierarchy of exceptions raised by operating system errors is now both "
"simplified and finer-grained."
msgstr ""
"Hierarkin av undantag som orsakas av fel i operativsystemet är nu både "
"förenklad och mer finkornig."

msgid ""
"You don't have to worry anymore about choosing the appropriate exception "
"type between :exc:`OSError`, :exc:`IOError`, :exc:`EnvironmentError`, :exc:"
"`WindowsError`, :exc:`mmap.error`, :exc:`socket.error` or :exc:`select."
"error`.  All these exception types are now only one: :exc:`OSError`.  The "
"other names are kept as aliases for compatibility reasons."
msgstr ""
"Du behöver inte längre oroa dig för att välja rätt undantagstyp mellan :exc:"
"`OSError`, :exc:`IOError`, :exc:`EnvironmentError`, :exc:`WindowsError`, :"
"exc:`mmap.error`, :exc:`socket.error` eller :exc:`select.error`.  Alla dessa "
"undantagstyper är nu bara en: :exc:`OSError`.  De andra namnen behålls som "
"alias av kompatibilitetsskäl."

msgid ""
"Also, it is now easier to catch a specific error condition.  Instead of "
"inspecting the ``errno`` attribute (or ``args[0]``) for a particular "
"constant from the :mod:`errno` module, you can catch the adequate :exc:"
"`OSError` subclass.  The available subclasses are the following:"
msgstr ""
"Det är nu också lättare att fånga upp ett specifikt feltillstånd.  Istället "
"för att inspektera attributet ``errno`` (eller ``args[0]``) för en viss "
"konstant från modulen :mod:`errno`, kan du fånga den lämpliga underklassen :"
"exc:`OSError`.  De tillgängliga underklasserna är följande:"

msgid ":exc:`BlockingIOError`"
msgstr ":exc:`BlockingIOError`"

msgid ":exc:`ChildProcessError`"
msgstr ":exc:`ChildProcessError`"

msgid ":exc:`ConnectionError`"
msgstr ":exc:`AnslutningFel`"

msgid ":exc:`FileExistsError`"
msgstr ":exc:`FileExistsError`"

msgid ":exc:`FileNotFoundError`"
msgstr ":exc:`FileNotFoundError`"

msgid ":exc:`InterruptedError`"
msgstr ":exc:`AvbrutetFel`"

msgid ":exc:`IsADirectoryError`"
msgstr ":exc:`IsADirectoryError`"

msgid ":exc:`NotADirectoryError`"
msgstr ":exc:`NotADirectoryError`"

msgid ":exc:`PermissionError`"
msgstr ":exc:`PermissionError`"

msgid ":exc:`ProcessLookupError`"
msgstr ":exc:`ProcessLookupError`"

msgid ":exc:`TimeoutError`"
msgstr ":exc:`TimeoutError`"

msgid "And the :exc:`ConnectionError` itself has finer-grained subclasses:"
msgstr "Och :exc:`ConnectionError` i sig har finkornigare underklasser:"

msgid ":exc:`BrokenPipeError`"
msgstr ":exc:`BrokenPipeError`"

msgid ":exc:`ConnectionAbortedError`"
msgstr ":exc:`Fel vid avbruten anslutning`"

msgid ":exc:`ConnectionRefusedError`"
msgstr ":exc:`AnslutningRefusedError`"

msgid ":exc:`ConnectionResetError`"
msgstr ":exc:`Fel vid återställning av anslutning`"

msgid ""
"Thanks to the new exceptions, common usages of the :mod:`errno` can now be "
"avoided.  For example, the following code written for Python 3.2::"
msgstr ""
"Tack vare de nya undantagen kan vanliga användningar av :mod:`errno` nu "
"undvikas.  Till exempel, följande kod skriven för Python 3.2::"

msgid ""
"from errno import ENOENT, EACCES, EPERM\n"
"\n"
"try:\n"
"    with open(\"document.txt\") as f:\n"
"        content = f.read()\n"
"except IOError as err:\n"
"    if err.errno == ENOENT:\n"
"        print(\"document.txt file is missing\")\n"
"    elif err.errno in (EACCES, EPERM):\n"
"        print(\"You are not allowed to read document.txt\")\n"
"    else:\n"
"        raise"
msgstr ""
"från errno import ENOENT, EACCES, EPERM\n"
"\n"
"försök:\n"
"    med open(\"document.txt\") som f:\n"
"        innehåll = f.read()\n"
"except IOError as err:\n"
"    if err.errno == ENOENT:\n"
"        print(\"filen document.txt saknas\")\n"
"    elif err.errno in (EACCES, EPERM):\n"
"        print(\"Du har inte tillåtelse att läsa document.txt\")\n"
"    else:\n"
"        raise"

msgid ""
"can now be written without the :mod:`errno` import and without manual "
"inspection of exception attributes::"
msgstr ""
"kan nu skrivas utan :mod:`errno`-importen och utan manuell inspektion av "
"undantagsattribut::"

msgid ""
"try:\n"
"    with open(\"document.txt\") as f:\n"
"        content = f.read()\n"
"except FileNotFoundError:\n"
"    print(\"document.txt file is missing\")\n"
"except PermissionError:\n"
"    print(\"You are not allowed to read document.txt\")"
msgstr ""
"försök:\n"
"    med open(\"document.txt\") som f:\n"
"        innehåll = f.read()\n"
"except FileNotFoundError:\n"
"    print(\"filen document.txt saknas\")\n"
"except PermissionError:\n"
"    print(\"Du har inte tillåtelse att läsa document.txt\")"

msgid ":pep:`3151` - Reworking the OS and IO Exception Hierarchy"
msgstr ":pep:`3151` - Omarbetning av undantagshierarkin för OS och IO"

msgid "PEP written and implemented by Antoine Pitrou"
msgstr "PEP skrivet och genomfört av Antoine Pitrou"

msgid "PEP 380: Syntax for Delegating to a Subgenerator"
msgstr "PEP 380: Syntax för delegering till en undergenerator"

msgid ""
"PEP 380 adds the ``yield from`` expression, allowing a :term:`generator` to "
"delegate part of its operations to another generator. This allows a section "
"of code containing :keyword:`yield` to be factored out and placed in another "
"generator. Additionally, the subgenerator is allowed to return with a value, "
"and the value is made available to the delegating generator."
msgstr ""
"PEP 380 lägger till uttrycket ``yield from``, vilket gör det möjligt för en :"
"term:`generator` att delegera en del av sina operationer till en annan "
"generator. Detta gör att ett kodavsnitt som innehåller :keyword:`yield` kan "
"faktoriseras ut och placeras i en annan generator. Dessutom tillåts "
"subgeneratorn att returnera ett värde, och värdet görs tillgängligt för den "
"delegerande generatorn."

msgid ""
"While designed primarily for use in delegating to a subgenerator, the "
"``yield from`` expression actually allows delegation to arbitrary "
"subiterators."
msgstr ""
"Uttrycket ``yield from`` är främst avsett att användas för delegering till "
"en subgenerator, men det tillåter faktiskt delegering till godtyckliga "
"subiteratorer."

msgid ""
"For simple iterators, ``yield from iterable`` is essentially just a "
"shortened form of ``for item in iterable: yield item``::"
msgstr ""
"För enkla iteratorer är ``yield from iterable`` i huvudsak bara en förkortad "
"form av ``for item in iterable: yield item``::"

msgid ""
">>> def g(x):\n"
"...     yield from range(x, 0, -1)\n"
"...     yield from range(x)\n"
"...\n"
">>> list(g(5))\n"
"[5, 4, 3, 2, 1, 0, 1, 2, 3, 4]"
msgstr ""
">>> def g(x):\n"
"... yield from range(x, 0, -1)\n"
"... avkastning från intervall(x)\n"
"...\n"
">>> list(g(5))\n"
"[5, 4, 3, 2, 1, 0, 1, 2, 3, 4]"

msgid ""
"However, unlike an ordinary loop, ``yield from`` allows subgenerators to "
"receive sent and thrown values directly from the calling scope, and return a "
"final value to the outer generator::"
msgstr ""
"Till skillnad från en vanlig loop tillåter dock ``yield from`` "
"undergeneratorer att ta emot skickade och kastade värden direkt från det "
"anropande området och returnera ett slutvärde till den yttre generatorn::"

msgid ""
">>> def accumulate():\n"
"...     tally = 0\n"
"...     while 1:\n"
"...         next = yield\n"
"...         if next is None:\n"
"...             return tally\n"
"...         tally += next\n"
"...\n"
">>> def gather_tallies(tallies):\n"
"...     while 1:\n"
"...         tally = yield from accumulate()\n"
"...         tallies.append(tally)\n"
"...\n"
">>> tallies = []\n"
">>> acc = gather_tallies(tallies)\n"
">>> next(acc)  # Ensure the accumulator is ready to accept values\n"
">>> for i in range(4):\n"
"...     acc.send(i)\n"
"...\n"
">>> acc.send(None)  # Finish the first tally\n"
">>> for i in range(5):\n"
"...     acc.send(i)\n"
"...\n"
">>> acc.send(None)  # Finish the second tally\n"
">>> tallies\n"
"[6, 10]"
msgstr ""
">>> def ackumulera():\n"
"... tally = 0\n"
"... medan 1:\n"
"... nästa = avkastning\n"
"... om nästa är ingen:\n"
"... returnera tally\n"
"... tally += nästa\n"
"...\n"
">>> def samla_tallies(tallies):\n"
"... while 1:\n"
"... tally = avkastning från accumulate()\n"
"... tallies.append(tally)\n"
"...\n"
">>> tallies = []\n"
">>> acc = samla_tallies(tallies)\n"
">>> next(acc) # Se till att ackumulatorn är redo att ta emot värden\n"
">>> for i in range(4):\n"
"... acc.send(i)\n"
"...\n"
">>> acc.send(None) # Avsluta den första tally\n"
">>> för i i intervall(5):\n"
"... acc.send(i)\n"
"...\n"
">>> acc.send(None) # Avsluta den andra räkningen\n"
">>> tallies\n"
"[6, 10]"

msgid ""
"The main principle driving this change is to allow even generators that are "
"designed to be used with the ``send`` and ``throw`` methods to be split into "
"multiple subgenerators as easily as a single large function can be split "
"into multiple subfunctions."
msgstr ""
"Huvudprincipen bakom denna ändring är att även generatorer som är utformade "
"för att användas med metoderna ``send`` och ``throw`` ska kunna delas upp i "
"flera undergeneratorer lika enkelt som en enda stor funktion kan delas upp i "
"flera underfunktioner."

msgid ":pep:`380` - Syntax for Delegating to a Subgenerator"
msgstr ":pep:`380` - Syntax för att delegera till en undergenerator"

msgid ""
"PEP written by Greg Ewing; implementation by Greg Ewing, integrated into 3.3 "
"by Renaud Blanch, Ryan Kelly and Nick Coghlan; documentation by Zbigniew "
"Jędrzejewski-Szmek and Nick Coghlan"
msgstr ""
"PEP skriven av Greg Ewing; implementering av Greg Ewing, integrerad i 3.3 av "
"Renaud Blanch, Ryan Kelly och Nick Coghlan; dokumentation av Zbigniew "
"Jędrzejewski-Szmek och Nick Coghlan"

msgid "PEP 409: Suppressing exception context"
msgstr "PEP 409: Undertryckande av undantagskontext"

msgid ""
"PEP 409 introduces new syntax that allows the display of the chained "
"exception context to be disabled. This allows cleaner error messages in "
"applications that convert between exception types::"
msgstr ""
"PEP 409 introducerar en ny syntax som gör det möjligt att inaktivera "
"visningen av den kedjade undantagskontexten. Detta möjliggör renare "
"felmeddelanden i applikationer som konverterar mellan undantagstyper::"

msgid ""
">>> class D:\n"
"...     def __init__(self, extra):\n"
"...         self._extra_attributes = extra\n"
"...     def __getattr__(self, attr):\n"
"...         try:\n"
"...             return self._extra_attributes[attr]\n"
"...         except KeyError:\n"
"...             raise AttributeError(attr) from None\n"
"...\n"
">>> D({}).x\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 8, in __getattr__\n"
"AttributeError: x"
msgstr ""
"&gt;&gt;&gt; klass D:\n"
"... def __init__(self, extra):\n"
"... self._extra_attributes = extra\n"
"... def __getattr__(self, attr):\n"
"... try:\n"
"... return self._extra_attributes[attr]\n"
"... except KeyError:\n"
"... raise AttributeError(attr) from None\n"
"...\n"
"&gt;&gt;&gt; D({}).x\n"
"Traceback (senaste anropet senast):\n"
"  Fil \"<stdin>\", rad 1, i <module>\n"
"  Fil \"<stdin>\", rad 8, i __getattr__\n"
"Attributfel: x"

msgid ""
"Without the ``from None`` suffix to suppress the cause, the original "
"exception would be displayed by default::"
msgstr ""
"Utan suffixet ``from None`` för att undertrycka orsaken skulle det "
"ursprungliga undantaget visas som standard::"

msgid ""
">>> class C:\n"
"...     def __init__(self, extra):\n"
"...         self._extra_attributes = extra\n"
"...     def __getattr__(self, attr):\n"
"...         try:\n"
"...             return self._extra_attributes[attr]\n"
"...         except KeyError:\n"
"...             raise AttributeError(attr)\n"
"...\n"
">>> C({}).x\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 6, in __getattr__\n"
"KeyError: 'x'\n"
"\n"
"During handling of the above exception, another exception occurred:\n"
"\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 8, in __getattr__\n"
"AttributeError: x"
msgstr ""
"&gt;&gt;&gt; klass C:\n"
"... def __init__(self, extra):\n"
"... self._extra_attributes = extra\n"
"... def __getattr__(self, attr):\n"
"... try:\n"
"... return self._extra_attributes[attr]\n"
"... except KeyError:\n"
"... raise AttributeError(attr)\n"
"...\n"
"&gt;&gt;&gt; C({}).x\n"
"Traceback (senaste anropet senast):\n"
"  Fil \"<stdin>\", rad 6, i __getattr__\n"
"KeyError: 'x'\n"
"\n"
"Under hanteringen av ovanstående undantag inträffade ett annat undantag:\n"
"\n"
"Traceback (senaste anropet sist):\n"
"  Fil \"<stdin>\", rad 1, i <module>\n"
"  Fil \"<stdin>\", rad 8, i __getattr__\n"
"Attributfel: x"

msgid ""
"No debugging capability is lost, as the original exception context remains "
"available if needed (for example, if an intervening library has incorrectly "
"suppressed valuable underlying details)::"
msgstr ""
"Ingen felsökningskapacitet går förlorad, eftersom den ursprungliga "
"undantagskontexten förblir tillgänglig om det behövs (till exempel om ett "
"mellanliggande bibliotek felaktigt har undertryckt värdefulla underliggande "
"detaljer)::"

msgid ""
">>> try:\n"
"...     D({}).x\n"
"... except AttributeError as exc:\n"
"...     print(repr(exc.__context__))\n"
"...\n"
"KeyError('x',)"
msgstr ""
">>> försök:\n"
"...     D({}).x\n"
"... except AttributeError as exc:\n"
"... print(repr(exc.__context__))\n"
"...\n"
"KeyError('x',)"

msgid ":pep:`409` - Suppressing exception context"
msgstr ":pep:`409` - Undertryckande av undantagskontext"

msgid ""
"PEP written by Ethan Furman; implemented by Ethan Furman and Nick Coghlan."
msgstr ""
"PEP skriven av Ethan Furman; implementerad av Ethan Furman och Nick Coghlan."

msgid "PEP 414: Explicit Unicode literals"
msgstr "PEP 414: Explicita Unicode-litteraler"

msgid ""
"To ease the transition from Python 2 for Unicode aware Python applications "
"that make heavy use of Unicode literals, Python 3.3 once again supports the "
"\"``u``\" prefix for string literals. This prefix has no semantic "
"significance in Python 3, it is provided solely to reduce the number of "
"purely mechanical changes in migrating to Python 3, making it easier for "
"developers to focus on the more significant semantic changes (such as the "
"stricter default separation of binary and text data)."
msgstr ""
"För att underlätta övergången från Python 2 för Unicode-medvetna Python-"
"applikationer som använder Unicode-litteraler i stor utsträckning, stöder "
"Python 3.3 återigen prefixet \"``u``\" för stränglitteraler. Detta prefix "
"har ingen semantisk betydelse i Python 3, det tillhandahålls enbart för att "
"minska antalet rent mekaniska förändringar vid migrering till Python 3, "
"vilket gör det lättare för utvecklare att fokusera på de mer betydande "
"semantiska förändringarna (såsom den striktare standardseparationen av "
"binär- och textdata)."

msgid ":pep:`414` - Explicit Unicode literals"
msgstr ":pep:`414` - Explicita Unicode-litteraler"

msgid "PEP written by Armin Ronacher."
msgstr "PEP skriven av Armin Ronacher."

msgid "PEP 3155: Qualified name for classes and functions"
msgstr "PEP 3155: Kvalificerade namn för klasser och funktioner"

msgid ""
"Functions and class objects have a new :attr:`~definition.__qualname__` "
"attribute representing the \"path\" from the module top-level to their "
"definition.  For global functions and classes, this is the same as :attr:"
"`~definition.__name__`. For other functions and classes, it provides better "
"information about where they were actually defined, and how they might be "
"accessible from the global scope."
msgstr ""
"Funktioner och klassobjekt har ett nytt attribut :attr:`~definition."
"__qualname__` som representerar \"sökvägen\" från modulens toppnivå till "
"deras definition.  För globala funktioner och klasser är detta samma sak "
"som :attr:`~definition.__name__`. För andra funktioner och klasser ger det "
"bättre information om var de faktiskt definierades och hur de kan vara "
"åtkomliga från det globala omfånget."

msgid "Example with (non-bound) methods::"
msgstr "Exempel med (icke bundna) metoder::"

msgid ""
">>> class C:\n"
"...     def meth(self):\n"
"...         pass\n"
"...\n"
">>> C.meth.__name__\n"
"'meth'\n"
">>> C.meth.__qualname__\n"
"'C.meth'"
msgstr ""
">>> klass C:\n"
"... def meth(self):\n"
"... pass\n"
"...\n"
">>> C.meth.__name__\n"
"'meth'\n"
">>> C.meth.__qualname__\n"
"'C.meth'"

msgid "Example with nested classes::"
msgstr "Exempel med nästlade klasser::"

msgid ""
">>> class C:\n"
"...     class D:\n"
"...         def meth(self):\n"
"...             pass\n"
"...\n"
">>> C.D.__name__\n"
"'D'\n"
">>> C.D.__qualname__\n"
"'C.D'\n"
">>> C.D.meth.__name__\n"
"'meth'\n"
">>> C.D.meth.__qualname__\n"
"'C.D.meth'"
msgstr ""
">>> klass C:\n"
"... klass D:\n"
"... def meth(self):\n"
"... pass\n"
"...\n"
">>> C.D.__name__\n"
"'D'\n"
">>> C.D.__kvalnamn\n"
"'C.D'\n"
">>> C.D.meth.__name__\n"
"'meth'\n"
">>> C.D.meth.__kvalnamn\n"
"'C.D.meth'"

msgid "Example with nested functions::"
msgstr "Exempel med nästlade funktioner::"

msgid ""
">>> def outer():\n"
"...     def inner():\n"
"...         pass\n"
"...     return inner\n"
"...\n"
">>> outer().__name__\n"
"'inner'\n"
">>> outer().__qualname__\n"
"'outer.<locals>.inner'"
msgstr ""
"&gt;&gt;&gt; def outer():\n"
"... def inner():\n"
"... pass\n"
"... returnera inre\n"
"...\n"
"&gt;&gt;&gt; yttre().__name__\n"
"'inner'\n"
"&gt;&gt;&gt; yttre().__kvalnamn__\n"
"'outer.<locals>.inner'"

msgid ""
"The string representation of those objects is also changed to include the "
"new, more precise information::"
msgstr ""
"Strängrepresentationen av dessa objekt ändras också för att inkludera den "
"nya, mer exakta informationen::"

msgid ""
">>> str(C.D)\n"
"\"<class '__main__.C.D'>\"\n"
">>> str(C.D.meth)\n"
"'<function C.D.meth at 0x7f46b9fe31e0>'"
msgstr ""
">>> str(C.D)\n"
"\"<klass '__main__.C.D'>\"\n"
">>> str(C.D.meth)\n"
"\"<funktion C.D.meth på 0x7f46b9fe31e0>"

msgid ":pep:`3155` - Qualified name for classes and functions"
msgstr ":pep:`3155` - Kvalificerat namn för klasser och funktioner"

msgid "PEP written and implemented by Antoine Pitrou."
msgstr "PEP skrivet och genomfört av Antoine Pitrou."

msgid "PEP 412: Key-Sharing Dictionary"
msgstr "PEP 412: Ordbok för nyckelutbyte"

msgid ""
"Dictionaries used for the storage of objects' attributes are now able to "
"share part of their internal storage between each other (namely, the part "
"which stores the keys and their respective hashes).  This reduces the memory "
"consumption of programs creating many instances of non-builtin types."
msgstr ""
"Dictionaries som används för lagring av objektens attribut kan nu dela en "
"del av sitt interna minne mellan varandra (nämligen den del som lagrar "
"nycklarna och deras respektive hash).  Detta minskar minnesförbrukningen i "
"program som skapar många instanser av icke byggda typer."

msgid ":pep:`412` - Key-Sharing Dictionary"
msgstr ":pep:`412` - Ordbok för nyckeldelning"

msgid "PEP written and implemented by Mark Shannon."
msgstr "PEP skrivet och genomfört av Mark Shannon."

msgid "PEP 362: Function Signature Object"
msgstr "PEP 362: Funktion Signatur Objekt"

msgid ""
"A new function :func:`inspect.signature` makes introspection of python "
"callables easy and straightforward.  A broad range of callables is "
"supported: python functions, decorated or not, classes, and :func:`functools."
"partial` objects.  New classes :class:`inspect.Signature`, :class:`inspect."
"Parameter` and :class:`inspect.BoundArguments` hold information about the "
"call signatures, such as, annotations, default values, parameters kinds, and "
"bound arguments, which considerably simplifies writing decorators and any "
"code that validates or amends calling signatures or arguments."
msgstr ""
"En ny funktion :func:`inspect.signature` gör introspektion av python "
"callables enkel och okomplicerad.  Ett brett spektrum av anropsbara objekt "
"stöds: pythonfunktioner, dekorerade eller ej, klasser och :func:`functools."
"partial`-objekt.  De nya klasserna :class:`inspect.Signature`, :class:"
"`inspect.Parameter` och :class:`inspect.BoundArguments` innehåller "
"information om anropssignaturer, t.ex. annoteringar, standardvärden, "
"parametertyper och bundna argument, vilket avsevärt förenklar skrivandet av "
"dekoratorer och annan kod som validerar eller ändrar anropssignaturer eller "
"argument."

msgid ":pep:`362`: -  Function Signature Object"
msgstr ":pep:`362`: - Funktion Signatur Objekt"

msgid ""
"PEP written by Brett Cannon, Yury Selivanov, Larry Hastings, Jiwon Seo; "
"implemented by Yury Selivanov."
msgstr ""
"PEP skriven av Brett Cannon, Yury Selivanov, Larry Hastings, Jiwon Seo; "
"implementerad av Yury Selivanov."

msgid "PEP 421: Adding sys.implementation"
msgstr "PEP 421: Lägga till sys.implementation"

msgid ""
"A new attribute on the :mod:`sys` module exposes details specific to the "
"implementation of the currently running interpreter.  The initial set of "
"attributes on :data:`sys.implementation` are ``name``, ``version``, "
"``hexversion``, and ``cache_tag``."
msgstr ""
"Ett nytt attribut på modulen :mod:`sys` visar detaljer som är specifika för "
"implementationen av den tolk som körs för tillfället.  Den första "
"uppsättningen attribut på :data:`sys.implementation` är ``name``, "
"``version``, ``hexversion`` och ``cache_tag``."

msgid ""
"The intention of ``sys.implementation`` is to consolidate into one namespace "
"the implementation-specific data used by the standard library.  This allows "
"different Python implementations to share a single standard library code "
"base much more easily.  In its initial state, ``sys.implementation`` holds "
"only a small portion of the implementation-specific data.  Over time that "
"ratio will shift in order to make the standard library more portable."
msgstr ""
"Avsikten med ``sys.implementation`` är att konsolidera "
"implementationsspecifika data som används av standardbiblioteket i ett "
"namnområde.  Detta gör det möjligt för olika Python-implementationer att "
"dela en enda kodbas för standardbiblioteket mycket lättare.  I sitt initiala "
"tillstånd innehåller ``sys.implementation`` endast en liten del av de "
"implementationsspecifika data.  Med tiden kommer detta förhållande att "
"förändras för att göra standardbiblioteket mer portabelt."

msgid ""
"One example of improved standard library portability is ``cache_tag``.  As "
"of Python 3.3, ``sys.implementation.cache_tag`` is used by :mod:`importlib` "
"to support :pep:`3147` compliance.  Any Python implementation that uses "
"``importlib`` for its built-in import system may use ``cache_tag`` to "
"control the caching behavior for modules."
msgstr ""
"Ett exempel på förbättrad standardbiblioteksportabilitet är ``cache_tag``.  "
"Från och med Python 3.3 används ``sys.implementation.cache_tag`` av :mod:"
"`importlib` för att stödja :pep:`3147` efterlevnad.  Alla Python-"
"implementationer som använder ``importlib`` för sitt inbyggda importsystem "
"kan använda ``cache_tag`` för att kontrollera cachelagringsbeteendet för "
"moduler."

msgid "SimpleNamespace"
msgstr "EnkeltNamnområde"

msgid ""
"The implementation of ``sys.implementation`` also introduces a new type to "
"Python: :class:`types.SimpleNamespace`.  In contrast to a mapping-based "
"namespace, like :class:`dict`, ``SimpleNamespace`` is attribute-based, like :"
"class:`object`.  However, unlike ``object``, ``SimpleNamespace`` instances "
"are writable.  This means that you can add, remove, and modify the namespace "
"through normal attribute access."
msgstr ""
"Implementationen av ``sys.implementation`` introducerar också en ny typ i "
"Python: :class:`types.SimpleNamespace`.  I motsats till en mappningsbaserad "
"namnrymd, som :class:`dict`, är ``SimpleNamespace`` attributbaserad, som :"
"class:`object`.  Men till skillnad från ``object`` är ``SimpleNamespace``-"
"instanser skrivbara.  Detta innebär att du kan lägga till, ta bort och ändra "
"namnområdet genom normal attributåtkomst."

msgid ":pep:`421` - Adding sys.implementation"
msgstr ":pep:`421` - Lägger till sys.implementation"

msgid "PEP written and implemented by Eric Snow."
msgstr "PEP skrivet och implementerat av Eric Snow."

msgid "Using importlib as the Implementation of Import"
msgstr "Använda importlib som implementering av import"

msgid ""
":issue:`2377` - Replace __import__ w/ importlib.__import__ :issue:`13959` - "
"Re-implement parts of :mod:`!imp` in pure Python :issue:`14605` - Make "
"import machinery explicit :issue:`14646` - Require loaders set __loader__ "
"and __package__"
msgstr ""
":issue:`2377` - Ersätt __import__ med importlib.__import__ :issue:`13959` - "
"Återimplementera delar av :mod:`!imp` i ren Python :issue:`14605` - Gör "
"importmaskiner explicit :issue:`14646` - Kräv att laddare anger __loader__ "
"och __package__"

msgid ""
"The :func:`__import__` function is now powered by :func:`importlib."
"__import__`. This work leads to the completion of \"phase 2\" of :pep:`302`. "
"There are multiple benefits to this change. First, it has allowed for more "
"of the machinery powering import to be exposed instead of being implicit and "
"hidden within the C code. It also provides a single implementation for all "
"Python VMs supporting Python 3.3 to use, helping to end any VM-specific "
"deviations in import semantics. And finally it eases the maintenance of "
"import, allowing for future growth to occur."
msgstr ""
"Funktionen :func:`__import__` drivs nu av :func:`importlib.__import__`. "
"Detta arbete leder till slutförandet av \"fas 2\" av :pep:`302`. Det finns "
"flera fördelar med den här förändringen. För det första har det gjort det "
"möjligt att exponera mer av maskineriet som driver import istället för att "
"vara implicit och dolt i C-koden. Det ger också en enda implementering för "
"alla Python VMs som stöder Python 3.3 att använda, vilket hjälper till att "
"avsluta alla VM-specifika avvikelser i import semantik. Och slutligen "
"underlättar det underhållet av import, vilket gör att framtida tillväxt kan "
"ske."

msgid ""
"For the common user, there should be no visible change in semantics.  For "
"those whose code currently manipulates import or calls import "
"programmatically, the code changes that might possibly be required are "
"covered in the `Porting Python code`_ section of this document."
msgstr ""
"För den vanliga användaren bör det inte finnas någon synlig förändring i "
"semantiken.  För dem vars kod för närvarande manipulerar import eller "
"anropar import programmatiskt, beskrivs de kodändringar som eventuellt kan "
"krävas i avsnittet `Porting Python code`_ i detta dokument."

msgid "New APIs"
msgstr "Nya API:er"

msgid ""
"One of the large benefits of this work is the exposure of what goes into "
"making the import statement work. That means the various importers that were "
"once implicit are now fully exposed as part of the :mod:`importlib` package."
msgstr ""
"En av de stora fördelarna med detta arbete är exponeringen av vad som krävs "
"för att importdeklarationen ska fungera. Det innebär att de olika importörer "
"som en gång var implicita nu är helt exponerade som en del av :mod:"
"`importlib`-paketet."

msgid ""
"The abstract base classes defined in :mod:`importlib.abc` have been expanded "
"to properly delineate between :term:`meta path finders <meta path finder>` "
"and :term:`path entry finders <path entry finder>` by introducing :class:"
"`importlib.abc.MetaPathFinder` and :class:`importlib.abc.PathEntryFinder`, "
"respectively. The old ABC of :class:`!importlib.abc.Finder` is now only "
"provided for backwards-compatibility and does not enforce any method "
"requirements."
msgstr ""
"De abstrakta basklasserna som definieras i :mod:`importlib.abc` har utökats "
"för att korrekt skilja mellan :term:`meta path finders <meta path finder>` "
"och :term:`path entry finders <path entry finder>` genom att introducera :"
"class:`importlib.abc.MetaPathFinder` respektive :class:`importlib.abc."
"PathEntryFinder`. Den gamla ABC:en :class:`!importlib.abc.Finder` finns nu "
"bara för bakåtkompatibilitet och upprätthåller inga metodkrav."

msgid ""
"In terms of finders, :class:`importlib.machinery.FileFinder` exposes the "
"mechanism used to search for source and bytecode files of a module. "
"Previously this class was an implicit member of :data:`sys.path_hooks`."
msgstr ""
"När det gäller sökare visar :class:`importlib.machinery.FileFinder` den "
"mekanism som används för att söka efter käll- och bytecode-filer för en "
"modul. Tidigare var denna klass en implicit medlem av :data:`sys.path_hooks`."

msgid ""
"For loaders, the new abstract base class :class:`importlib.abc.FileLoader` "
"helps write a loader that uses the file system as the storage mechanism for "
"a module's code. The loader for source files (:class:`importlib.machinery."
"SourceFileLoader`), sourceless bytecode files (:class:`importlib.machinery."
"SourcelessFileLoader`), and extension modules (:class:`importlib.machinery."
"ExtensionFileLoader`) are now available for direct use."
msgstr ""
"För laddare hjälper den nya abstrakta basklassen :class:`importlib.abc."
"FileLoader` till att skriva en laddare som använder filsystemet som "
"lagringsmekanism för en moduls kod. Laddaren för källfiler (:class:"
"`importlib.machinery.SourceFileLoader`), sourceless bytecode-filer (:class:"
"`importlib.machinery.SourcelessFileLoader`) och tilläggsmoduler (:class:"
"`importlib.machinery.ExtensionFileLoader`) är nu tillgängliga för direkt "
"användning."

msgid ""
":exc:`ImportError` now has ``name`` and ``path`` attributes which are set "
"when there is relevant data to provide. The message for failed imports will "
"also provide the full name of the module now instead of just the tail end of "
"the module's name."
msgstr ""
":exc:`ImportError` har nu attributen ``name`` och ``path`` som anges när det "
"finns relevanta data att tillhandahålla. Meddelandet för misslyckad import "
"kommer nu också att innehålla modulens fullständiga namn istället för bara "
"slutet av modulens namn."

msgid ""
"The :func:`importlib.invalidate_caches` function will now call the method "
"with the same name on all finders cached in :data:`sys.path_importer_cache` "
"to help clean up any stored state as necessary."
msgstr ""
"Funktionen :func:`importlib.invalidate_caches` kommer nu att anropa metoden "
"med samma namn på alla sökare som cachats i :data:`sys.path_importer_cache` "
"för att hjälpa till att rensa upp i lagrat tillstånd vid behov."

msgid "Visible Changes"
msgstr "Synliga förändringar"

msgid ""
"For potential required changes to code, see the `Porting Python code`_ "
"section."
msgstr ""
"För eventuella nödvändiga ändringar i koden, se avsnittet `Porting Python "
"code`_."

msgid ""
"Beyond the expanse of what :mod:`importlib` now exposes, there are other "
"visible changes to import. The biggest is that :data:`sys.meta_path` and :"
"data:`sys.path_hooks` now store all of the meta path finders and path entry "
"hooks used by import.  Previously the finders were implicit and hidden "
"within the C code of import instead of being directly exposed. This means "
"that one can now easily remove or change the order of the various finders to "
"fit one's needs."
msgstr ""
"Utöver den stora mängden av vad :mod:`importlib` nu exponerar, finns det "
"andra synliga förändringar i import. Den största är att :data:`sys."
"meta_path` och :data:`sys.path_hooks` nu lagrar alla metasökvägssökare och "
"sökvägskrokar som används av import.  Tidigare var sökarna implicita och "
"gömda i C-koden för import i stället för att vara direkt exponerade. Detta "
"innebär att man nu enkelt kan ta bort eller ändra ordningen på de olika "
"sökarna så att de passar ens behov."

msgid ""
"Another change is that all modules have a ``__loader__`` attribute, storing "
"the loader used to create the module. :pep:`302` has been updated to make "
"this attribute mandatory for loaders to implement, so in the future once 3rd-"
"party loaders have been updated people will be able to rely on the existence "
"of the attribute. Until such time, though, import is setting the module post-"
"load."
msgstr ""
"En annan förändring är att alla moduler har ett ``__loader__``-attribut, som "
"lagrar den laddare som användes för att skapa modulen. :pep:`302` har "
"uppdaterats för att göra detta attribut obligatoriskt för laddare att "
"implementera, så i framtiden när laddare från tredje part har uppdaterats "
"kommer folk att kunna lita på att attributet finns. Fram till dess ställer "
"dock import in modulen efter laddning."

msgid ""
"Loaders are also now expected to set the ``__package__`` attribute from :pep:"
"`366`. Once again, import itself is already setting this on all loaders "
"from :mod:`importlib` and import itself is setting the attribute post-load."
msgstr ""
"Laddare förväntas nu också ställa in attributet ``__package__`` från :pep:"
"`366`. Än en gång, import själv ställer redan in detta på alla laddare från :"
"mod:`importlib` och import själv ställer in attributet efter laddning."

msgid ""
"``None`` is now inserted into :data:`sys.path_importer_cache` when no finder "
"can be found on :data:`sys.path_hooks`. Since :class:`!imp.NullImporter` is "
"not directly exposed on :data:`sys.path_hooks` it could no longer be relied "
"upon to always be available to use as a value representing no finder found."
msgstr ""
"``None`` infogas nu i :data:`sys.path_importer_cache` när ingen sökare kan "
"hittas i :data:`sys.path_hooks`. Eftersom :class:`!imp.NullImporter` inte är "
"direkt exponerad på :data:`sys.path_hooks` kan man inte längre förlita sig "
"på att den alltid är tillgänglig för att användas som ett värde som "
"representerar att ingen sökare hittats."

msgid ""
"All other changes relate to semantic changes which should be taken into "
"consideration when updating code for Python 3.3, and thus should be read "
"about in the `Porting Python code`_ section of this document."
msgstr ""
"Alla andra ändringar avser semantiska ändringar som bör beaktas vid "
"uppdatering av kod för Python 3.3, och bör därför läsas om i avsnittet "
"`Porting Python code`_ i detta dokument."

msgid "(Implementation by Brett Cannon)"
msgstr "(Genomförande av Brett Cannon)"

msgid "Other Language Changes"
msgstr "Andra språkliga förändringar"

msgid "Some smaller changes made to the core Python language are:"
msgstr "Några mindre ändringar som gjorts i Python-språkets kärna är:"

msgid ""
"Added support for Unicode name aliases and named sequences. Both :func:"
"`unicodedata.lookup` and ``'\\N{...}'`` now resolve name aliases, and :func:"
"`unicodedata.lookup` resolves named sequences too."
msgstr ""
"Stöd för Unicode-namnaliaser och namngivna sekvenser har lagts till. Både :"
"func:`unicodedata.lookup` och ``'\\N{...}'`` löser nu namnaliaser, och :func:"
"`unicodedata.lookup` löser även namngivna sekvenser."

msgid "(Contributed by Ezio Melotti in :issue:`12753`.)"
msgstr "(Bidrag från Ezio Melotti i :issue:`12753`.)"

msgid "Unicode database updated to UCD version 6.1.0"
msgstr "Unicode-databasen uppdaterad till UCD version 6.1.0"

msgid ""
"Equality comparisons on :func:`range` objects now return a result reflecting "
"the equality of the underlying sequences generated by those range objects. (:"
"issue:`13201`)"
msgstr ""
"Jämlikhetsjämförelser på :func:`range`-objekt returnerar nu ett resultat som "
"återspeglar likheten mellan de underliggande sekvenser som genereras av "
"dessa range-objekt. (:issue:`13201`)"

msgid ""
"The ``count()``, ``find()``, ``rfind()``, ``index()`` and ``rindex()`` "
"methods of :class:`bytes` and :class:`bytearray` objects now accept an "
"integer between 0 and 255 as their first argument."
msgstr ""
"Metoderna ``count()``, ``find()``, ``rfind()``, ``index()`` och ``rindex()`` "
"för objekten :class:`bytes` och :class:`bytearray` accepterar nu ett heltal "
"mellan 0 och 255 som sitt första argument."

msgid "(Contributed by Petri Lehtinen in :issue:`12170`.)"
msgstr "(Bidrag från Petri Lehtinen i :issue:`12170`.)"

msgid ""
"The ``rjust()``, ``ljust()``, and ``center()`` methods of :class:`bytes` "
"and :class:`bytearray` now accept a :class:`bytearray` for the ``fill`` "
"argument.  (Contributed by Petri Lehtinen in :issue:`12380`.)"
msgstr ""
"Metoderna ``rjust()``, ``ljust()`` och ``center()`` i :class:`bytes` och :"
"class:`bytearray` accepterar nu :class:`bytearray` som argument för "
"``fill``.  (Bidrag från Petri Lehtinen i :issue:`12380`.)"

msgid ""
"New methods have been added to :class:`list` and :class:`bytearray`: "
"``copy()`` and ``clear()`` (:issue:`10516`).  Consequently, :class:"
"`~collections.abc.MutableSequence` now also defines a :meth:`~collections."
"abc.MutableSequence.clear` method (:issue:`11388`)."
msgstr ""
"Nya metoder har lagts till i :class:`list` och :class:`bytearray`: "
"``copy()`` och ``clear()`` (:issue:`10516`).  Följaktligen definierar :class:"
"`~collections.abc.MutableSequence` nu också en :meth:`~collections.abc."
"MutableSequence.clear`-metod (:issue:`11388`)."

msgid ""
"Raw bytes literals can now be written ``rb\"...\"`` as well as ``br\"...\"``."
msgstr ""
"Raw bytes literaler kan nu skrivas ``rb\"...\"`` såväl som ``br\"...\"``."

msgid "(Contributed by Antoine Pitrou in :issue:`13748`.)"
msgstr "(Bidrag från Antoine Pitrou i :issue:`13748`.)"

msgid ""
":meth:`dict.setdefault` now does only one lookup for the given key, making "
"it atomic when used with built-in types."
msgstr ""
":meth:`dict.setdefault` gör nu bara en uppslagning för den angivna nyckeln, "
"vilket gör den atomisk när den används med inbyggda typer."

msgid "(Contributed by Filip Gruszczyński in :issue:`13521`.)"
msgstr "(Bidrag från Filip Gruszczyński i :issue:`13521`.)"

msgid ""
"The error messages produced when a function call does not match the function "
"signature have been significantly improved."
msgstr ""
"De felmeddelanden som visas när ett funktionsanrop inte stämmer överens med "
"funktionssignaturen har förbättrats avsevärt."

msgid "(Contributed by Benjamin Peterson.)"
msgstr "(Bidrag från Benjamin Peterson.)"

msgid "A Finer-Grained Import Lock"
msgstr "Ett mer finfördelat importlås"

msgid ""
"Previous versions of CPython have always relied on a global import lock. "
"This led to unexpected annoyances, such as deadlocks when importing a module "
"would trigger code execution in a different thread as a side-effect. Clumsy "
"workarounds were sometimes employed, such as the :c:func:"
"`PyImport_ImportModuleNoBlock` C API function."
msgstr ""
"Tidigare versioner av CPython har alltid förlitat sig på ett globalt "
"importlås. Detta ledde till oväntade irritationsmoment, t.ex. dödlägen när "
"import av en modul skulle utlösa kodkörning i en annan tråd som en bieffekt. "
"Klumpiga lösningar användes ibland, till exempel C API-funktionen :c:func:"
"`PyImport_ImportModuleNoBlock`."

msgid ""
"In Python 3.3, importing a module takes a per-module lock.  This correctly "
"serializes importation of a given module from multiple threads (preventing "
"the exposure of incompletely initialized modules), while eliminating the "
"aforementioned annoyances."
msgstr ""
"I Python 3.3 tar import av en modul ett lås per modul.  Detta serialiserar "
"importen av en viss modul från flera trådar på ett korrekt sätt (vilket "
"förhindrar exponering av ofullständigt initialiserade moduler), samtidigt "
"som de tidigare nämnda irritationsmomenten elimineras."

msgid "(Contributed by Antoine Pitrou in :issue:`9260`.)"
msgstr "(Bidrag från Antoine Pitrou i :issue:`9260`.)"

msgid "Builtin functions and types"
msgstr "Inbyggda funktioner och typer"

msgid ""
":func:`open` gets a new *opener* parameter: the underlying file descriptor "
"for the file object is then obtained by calling *opener* with (*file*, "
"*flags*). It can be used to use custom flags like :const:`os.O_CLOEXEC` for "
"example. The ``'x'`` mode was added: open for exclusive creation, failing if "
"the file already exists."
msgstr ""
":func:`open` får en ny parameter *opener*: den underliggande filbeskrivaren "
"för filobjektet erhålls sedan genom att anropa *opener* med (*file*, "
"*flags*). Det kan användas för att använda anpassade flaggor som till "
"exempel :const:`os.O_CLOEXEC`. Läget ``'x'`` lades till: öppet för exklusivt "
"skapande, misslyckas om filen redan finns."

msgid ""
":func:`print`: added the *flush* keyword argument. If the *flush* keyword "
"argument is true, the stream is forcibly flushed."
msgstr ""
":func:`print`: lade till nyckelordsargumentet *flush*. Om "
"nyckelordsargumentet *flush* är sant, spolas flödet med våld."

msgid ""
":func:`hash`: hash randomization is enabled by default, see :meth:`object."
"__hash__` and :envvar:`PYTHONHASHSEED`."
msgstr ""
":func:`hash`: hashslumpning är aktiverad som standard, se :meth:`object."
"__hash__` och :envvar:`PYTHONHASHSEED`."

msgid ""
"The :class:`str` type gets a new :meth:`~str.casefold` method: return a "
"casefolded copy of the string, casefolded strings may be used for caseless "
"matching. For example, ``'ß'.casefold()`` returns ``'ss'``."
msgstr ""
"Typen :class:`str` får en ny :meth:`~str.casefold`-metod: returnerar en "
"casefoldad kopia av strängen, casefoldade strängar kan användas för caseless "
"matchning. Till exempel, ``'ß'.casefold()`` returnerar ``'ss'``."

msgid ""
"The sequence documentation has been substantially rewritten to better "
"explain the binary/text sequence distinction and to provide specific "
"documentation sections for the individual builtin sequence types (:issue:"
"`4966`)."
msgstr ""
"Dokumentationen för sekvenser har skrivits om i stor utsträckning för att "
"bättre förklara skillnaden mellan binära och textsekvenser och för att "
"tillhandahålla specifika dokumentationsavsnitt för de enskilda inbyggda "
"sekvenstyperna (:issue:`4966`)."

msgid "New Modules"
msgstr "Nya moduler"

msgid "faulthandler"
msgstr "felhanterare"

msgid ""
"This new debug module :mod:`faulthandler` contains functions to dump Python "
"tracebacks explicitly, on a fault (a crash like a segmentation fault), after "
"a timeout, or on a user signal. Call :func:`faulthandler.enable` to install "
"fault handlers for the :const:`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :"
"const:`SIGBUS`, and :const:`SIGILL` signals. You can also enable them at "
"startup by setting the :envvar:`PYTHONFAULTHANDLER` environment variable or "
"by using :option:`-X` ``faulthandler`` command line option."
msgstr ""
"Denna nya felsökningsmodul :mod:`faulthandler` innehåller funktioner för att "
"dumpa Python-spårningar explicit, vid ett fel (en krasch som ett "
"segmenteringsfel), efter en timeout eller vid en användarsignal. Anropa :"
"func:`faulthandler.enable` för att installera felhanterare för signalerna :"
"const:`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` och :"
"const:`SIGILL`. Du kan också aktivera dem vid start genom att ställa in "
"miljövariabeln :envvar:`PYTHONFAULTHANDLER` eller genom att använda "
"kommandoradsalternativet :option:`-X` ``faulthandler``."

msgid "Example of a segmentation fault on Linux:"
msgstr "Exempel på ett segmenteringsfel på Linux:"

msgid ""
"$ python -q -X faulthandler\n"
">>> import ctypes\n"
">>> ctypes.string_at(0)\n"
"Fatal Python error: Segmentation fault\n"
"\n"
"Current thread 0x00007fb899f39700:\n"
"  File \"/home/python/cpython/Lib/ctypes/__init__.py\", line 486 in "
"string_at\n"
"  File \"<stdin>\", line 1 in <module>\n"
"Segmentation fault"
msgstr ""
"$ python -q -X faulthandler\n"
"&gt;&gt;&gt; import ctypes\n"
"&gt;&gt;&gt; ctypes.string_at(0)\n"
"Fatalt Python-fel: Segmenteringsfel\n"
"\n"
"Aktuell tråd 0x00007fb899f39700:\n"
"  Fil \"/home/python/cpython/Lib/ctypes/__init__.py\", rad 486 i string_at\n"
"  Fil \"<stdin>\", rad 1 i <module>\n"
"Segmenteringsfel"

msgid "ipaddress"
msgstr "ipadress"

msgid ""
"The new :mod:`ipaddress` module provides tools for creating and manipulating "
"objects representing IPv4 and IPv6 addresses, networks and interfaces (i.e. "
"an IP address associated with a specific IP subnet)."
msgstr ""
"Den nya modulen :mod:`ipaddress` tillhandahåller verktyg för att skapa och "
"manipulera objekt som representerar IPv4- och IPv6-adresser, nätverk och "
"gränssnitt (dvs. en IP-adress som är associerad med ett specifikt IP-subnät)."

msgid "(Contributed by Google and Peter Moody in :pep:`3144`.)"
msgstr "(Bidrag från Google och Peter Moody i :pep:`3144`.)"

msgid "lzma"
msgstr "lzma"

msgid ""
"The newly added :mod:`lzma` module provides data compression and "
"decompression using the LZMA algorithm, including support for the ``.xz`` "
"and ``.lzma`` file formats."
msgstr ""
"Den nyligen tillagda modulen :mod:`lzma` tillhandahåller datakomprimering "
"och dekomprimering med hjälp av LZMA-algoritmen, inklusive stöd för "
"filformaten ``.xz`` och ``.lzma``."

msgid "(Contributed by Nadeem Vawda and Per Øyvind Karlsen in :issue:`6715`.)"
msgstr "(Bidrag från Nadeem Vawda och Per Øyvind Karlsen i :issue:`6715`.)"

msgid "Improved Modules"
msgstr "Förbättrade moduler"

msgid "abc"
msgstr "abc"

msgid ""
"Improved support for abstract base classes containing descriptors composed "
"with abstract methods. The recommended approach to declaring abstract "
"descriptors is now to provide :attr:`__isabstractmethod__` as a dynamically "
"updated property. The built-in descriptors have been updated accordingly."
msgstr ""
"Förbättrat stöd för abstrakta basklasser som innehåller deskriptorer som "
"består av abstrakta metoder. Det rekommenderade tillvägagångssättet för att "
"deklarera abstrakta deskriptorer är nu att tillhandahålla :attr:"
"`__isabstractmethod__` som en dynamiskt uppdaterad egenskap. De inbyggda "
"deskriptorerna har uppdaterats i enlighet med detta."

msgid ""
":class:`abc.abstractproperty` has been deprecated, use :class:`property` "
"with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractproperty` har utgått, använd :class:`property` med :func:"
"`abc.abstractmethod` istället."

msgid ""
":class:`abc.abstractclassmethod` has been deprecated, use :class:"
"`classmethod` with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractclassmethod` har utgått, använd :class:`classmethod` "
"med :func:`abc.abstractmethod` istället."

msgid ""
":class:`abc.abstractstaticmethod` has been deprecated, use :class:"
"`staticmethod` with :func:`abc.abstractmethod` instead."
msgstr ""
":class:`abc.abstractstaticmethod` har utgått, använd :class:`staticmethod` "
"med :func:`abc.abstractmethod` istället."

msgid "(Contributed by Darren Dale in :issue:`11610`.)"
msgstr "(Bidrag från Darren Dale i :issue:`11610`.)"

msgid ""
":meth:`abc.ABCMeta.register` now returns the registered subclass, which "
"means it can now be used as a class decorator (:issue:`10868`)."
msgstr ""
":meth:`abc.ABCMeta.register` returnerar nu den registrerade underklassen, "
"vilket innebär att den nu kan användas som en klassdekorator (:issue:"
"`10868`)."

msgid "array"
msgstr "array"

msgid ""
"The :mod:`array` module supports the :c:expr:`long long` type using ``q`` "
"and ``Q`` type codes."
msgstr ""
"Modulen :mod:`array` stöder typen :c:expr:`long long` med hjälp av "
"typkoderna ``q`` och ``Q``."

msgid "(Contributed by Oren Tirosh and Hirokazu Yamamoto in :issue:`1172711`.)"
msgstr "(Bidrag från Oren Tirosh och Hirokazu Yamamoto i :issue:`1172711`.)"

msgid "base64"
msgstr "bas64"

msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of "
"the :mod:`base64` modern interface. For example, ``base64."
"b64decode('YWJj')`` returns ``b'abc'``.  (Contributed by Catalin Iacob in :"
"issue:`13641`.)"
msgstr ""
"ASCII-only Unicode-strängar accepteras nu av avkodningsfunktionerna i det "
"moderna gränssnittet :mod:`base64`. Till exempel, ``base64."
"b64decode('YWJj')`` returnerar ``b'abc'``.  (Bidrag från Catalin Iacob i :"
"issue:`13641`.)"

msgid "binascii"
msgstr "binascii"

msgid ""
"In addition to the binary objects they normally accept, the ``a2b_`` "
"functions now all also accept ASCII-only strings as input.  (Contributed by "
"Antoine Pitrou in :issue:`13637`.)"
msgstr ""
"Förutom de binära objekt som de normalt accepterar, accepterar nu alla "
"``a2b_``-funktioner även ASCII-strängar som indata.  (Bidrag från Antoine "
"Pitrou i :issue:`13637`.)"

msgid "bz2"
msgstr "bz2"

msgid ""
"The :mod:`bz2` module has been rewritten from scratch. In the process, "
"several new features have been added:"
msgstr ""
"Modulen :mod:`bz2` har skrivits om från grunden. Under processen har flera "
"nya funktioner lagts till:"

msgid ""
"New :func:`bz2.open` function: open a bzip2-compressed file in binary or "
"text mode."
msgstr ""
"Ny :func:`bz2.open`-funktion: öppna en bzip2-komprimerad fil i binärt eller "
"textläge."

msgid ""
":class:`bz2.BZ2File` can now read from and write to arbitrary file-like "
"objects, by means of its constructor's *fileobj* argument."
msgstr ""
":class:`bz2.BZ2File` kan nu läsa från och skriva till godtyckliga "
"filliknande objekt, med hjälp av konstruktörens *fileobj*-argument."

msgid "(Contributed by Nadeem Vawda in :issue:`5863`.)"
msgstr "(Bidrag från Nadeem Vawda i :issue:`5863`.)"

msgid ""
":class:`bz2.BZ2File` and :func:`bz2.decompress` can now decompress multi-"
"stream inputs (such as those produced by the :program:`pbzip2` tool). :class:"
"`bz2.BZ2File` can now also be used to create this type of file, using the "
"``'a'`` (append) mode."
msgstr ""
":class:`bz2.BZ2File` och :func:`bz2.decompress` kan nu dekomprimera "
"inmatningar med flera strömmar (t.ex. de som produceras av verktyget :"
"program:`pbzip2`). :class:`bz2.BZ2File` kan nu också användas för att skapa "
"den här typen av filer med läget ``'a`` (append)."

msgid "(Contributed by Nir Aides in :issue:`1625`.)"
msgstr "(Bidrag från Nir Aides i :issue:`1625`.)"

msgid ""
":class:`bz2.BZ2File` now implements all of the :class:`io.BufferedIOBase` "
"API, except for the :meth:`detach` and :meth:`truncate` methods."
msgstr ""
":class:`bz2.BZ2File` implementerar nu hela :class:`io.BufferedIOBase` API, "
"förutom metoderna :meth:`detach` och :meth:`truncate`."

msgid "codecs"
msgstr "codecs"

msgid ""
"The :mod:`~encodings.mbcs` codec has been rewritten to handle correctly "
"``replace`` and ``ignore`` error handlers on all Windows versions.  The :mod:"
"`~encodings.mbcs` codec now supports all error handlers, instead of only "
"``replace`` to encode and ``ignore`` to decode."
msgstr ""
"Codec :mod:`~encodings.mbcs` har skrivits om för att korrekt hantera "
"felhanterarna ``replace`` och ``ignore`` på alla Windows-versioner.  "
"Codecen :mod:`~encodings.mbcs` stöder nu alla felhanterare, istället för "
"bara ``replace`` för kodning och ``ignore`` för avkodning."

msgid ""
"A new Windows-only codec has been added: ``cp65001`` (:issue:`13216`). It is "
"the Windows code page 65001 (Windows UTF-8, ``CP_UTF8``).  For example, it "
"is used by ``sys.stdout`` if the console output code page is set to cp65001 "
"(e.g., using ``chcp 65001`` command)."
msgstr ""
"En ny codec för enbart Windows har lagts till: ``cp65001`` (:issue:"
"`13216``). Det är Windows-kodsidan 65001 (Windows UTF-8, ``CP_UTF8``).  Den "
"används till exempel av ``sys.stdout`` om kodsidan för konsolutmatning är "
"inställd på cp65001 (t.ex. med kommandot ``chcp 65001``)."

msgid ""
"Multibyte CJK decoders now resynchronize faster.  They only ignore the first "
"byte of an invalid byte sequence. For example, ``b'\\xff\\n'."
"decode('gb2312', 'replace')`` now returns a ``\\n`` after the replacement "
"character."
msgstr ""
"CJK-avkodare för flera byte återsynkroniseras nu snabbare.  De ignorerar "
"bara den första byten i en ogiltig byte-sekvens. Till exempel, ``b'\\xff\\n'."
"decode('gb2312', 'replace')`` returnerar nu ett ``\\n`` efter "
"ersättningstecknet."

msgid "(:issue:`12016`)"
msgstr "(:utgåva:`12016`)"

msgid ""
"Incremental CJK codec encoders are no longer reset at each call to their "
"encode() methods. For example::"
msgstr ""
"Inkrementella CJK-codec-kodare nollställs inte längre vid varje anrop till "
"deras encode()-metoder. Till exempel::"

msgid ""
">>> import codecs\n"
">>> encoder = codecs.getincrementalencoder('hz')('strict')\n"
">>> b''.join(encoder.encode(x) for x in '\\u52ff\\u65bd\\u65bc\\u4eba\\u3002 "
"Bye.')\n"
"b'~{NpJ)l6HK!#~} Bye.'"
msgstr ""
">>> import codecs\n"
">>> kodare = codecs.getincrementalencoder('hz')('strict')\n"
">>> b''.join(encoder.encode(x) for x in '\\u52ff\\u65bd\\u65bc\\u4eba\\u3002 "
"Hej då.')\n"
"b'~{NpJ)l6HK!#~} Hej då.'"

msgid ""
"This example gives ``b'~{Np~}~{J)~}~{l6~}~{HK~}~{!#~} Bye.'`` with older "
"Python versions."
msgstr ""
"Detta exempel ger ``b'~{Np~}~{J)~}~{l6~}~{HK~}~{!#~} Bye.'`` med äldre "
"Python-versioner."

msgid "(:issue:`12100`)"
msgstr "(:utgåva:`12100`)"

msgid "The ``unicode_internal`` codec has been deprecated."
msgstr "Codec ``unicode_internal`` har utgått."

msgid "collections"
msgstr "samlingar"

msgid ""
"Addition of a new :class:`~collections.ChainMap` class to allow treating a "
"number of mappings as a single unit.  (Written by Raymond Hettinger for :"
"issue:`11089`, made public in :issue:`11297`.)"
msgstr ""
"Tillägg av en ny :class:`~collections.ChainMap`-klass som gör det möjligt "
"att behandla ett antal mappningar som en enda enhet.  (Skrivet av Raymond "
"Hettinger för :issue:`11089`, publicerat i :issue:`11297`.)"

msgid ""
"The abstract base classes have been moved in a new :mod:`collections.abc` "
"module, to better differentiate between the abstract and the concrete "
"collections classes.  Aliases for ABCs are still present in the :mod:"
"`collections` module to preserve existing imports.  (:issue:`11085`)"
msgstr ""
"De abstrakta basklasserna har flyttats till en ny modul :mod:`collections."
"abc` för att bättre skilja mellan de abstrakta och de konkreta "
"samlingsklasserna.  Alias för ABC finns fortfarande kvar i modulen :mod:"
"`collections` för att bevara befintlig import.  (:issue:`11085`)"

msgid ""
"The :class:`~collections.Counter` class now supports the unary ``+`` and ``-"
"`` operators, as well as the in-place operators ``+=``, ``-=``, ``|=``, and "
"``&=``.  (Contributed by Raymond Hettinger in :issue:`13121`.)"
msgstr ""
"Klassen :class:`~collections.Counter` har nu stöd för de unära operatorerna "
"``+`` och ``-``, samt för in-place-operatorerna ``+=``, ``-=``, ``|=`` och "
"``&=``.  (Bidrag från Raymond Hettinger i :issue:`13121`.)"

msgid "contextlib"
msgstr "contextlib"

msgid ""
":class:`~contextlib.ExitStack` now provides a solid foundation for "
"programmatic manipulation of context managers and similar cleanup "
"functionality. Unlike the previous ``contextlib.nested`` API (which was "
"deprecated and removed), the new API is designed to work correctly "
"regardless of whether context managers acquire their resources in their "
"``__init__`` method (for example, file objects) or in their ``__enter__`` "
"method (for example, synchronisation objects from the :mod:`threading` "
"module)."
msgstr ""
":class:`~contextlib.ExitStack` ger nu en solid grund för programmatisk "
"manipulation av kontexthanterare och liknande upprensningsfunktioner. Till "
"skillnad från det tidigare API:et ``contextlib.nested`` (som föråldrades och "
"togs bort), är det nya API:et utformat för att fungera korrekt oavsett om "
"kontexthanterare förvärvar sina resurser i sin ``__init__``-metod (till "
"exempel filobjekt) eller i sin ``__enter__``-metod (till exempel "
"synkroniseringsobjekt från modulen :mod:`threading`)."

msgid "(:issue:`13585`)"
msgstr "(:utgåva:`13585`)"

msgid "crypt"
msgstr "kryptan"

msgid ""
"Addition of salt and modular crypt format (hashing method) and the :func:`!"
"mksalt` function to the :mod:`!crypt` module."
msgstr ""
"Tillägg av salt och modulärt kryptformat (hashingmetod) och funktionen :func:"
"`!mksalt` till modulen :mod:`!crypt`."

msgid "(:issue:`10924`)"
msgstr "(:utgåva:`10924`)"

msgid "curses"
msgstr "förbannelser"

msgid ""
"If the :mod:`curses` module is linked to the ncursesw library, use Unicode "
"functions when Unicode strings or characters are passed (e.g. :c:func:"
"`waddwstr`), and bytes functions otherwise (e.g. :c:func:`waddstr`)."
msgstr ""
"Om modulen :mod:`curses` är länkad till biblioteket ncursesw, använd Unicode-"
"funktioner när Unicode-strängar eller tecken skickas (t.ex. :c:func:"
"`waddwstr`), och bytes-funktioner annars (t.ex. :c:func:`waddstr`)."

msgid "Use the locale encoding instead of ``utf-8`` to encode Unicode strings."
msgstr ""
"Använd den lokala kodningen istället för ``utf-8`` för att koda Unicode-"
"strängar."

msgid ""
":class:`curses.window` has a new :attr:`curses.window.encoding` attribute."
msgstr ""
":class:`curses.window` har ett nytt attribut :attr:`curses.window.encoding`."

msgid ""
"The :class:`curses.window` class has a new :meth:`~curses.window.get_wch` "
"method to get a wide character"
msgstr ""
"Klassen :class:`curses.window` har en ny :meth:`~curses.window.get_wch`-"
"metod för att få ett brett tecken"

msgid ""
"The :mod:`curses` module has a new :meth:`~curses.unget_wch` function to "
"push a wide character so the next :meth:`~curses.window.get_wch` will return "
"it"
msgstr ""
"Modulen :mod:`curses` har en ny :meth:`~curses.unget_wch`-funktion för att "
"skjuta upp ett brett tecken så att nästa :meth:`~curses.window.get_wch` "
"returnerar det"

msgid "(Contributed by Iñigo Serna in :issue:`6755`.)"
msgstr "(Bidrag från Iñigo Serna i :issue:`6755`.)"

msgid "datetime"
msgstr "datatid"

msgid ""
"Equality comparisons between naive and aware :class:`~datetime.datetime` "
"instances now return :const:`False` instead of raising :exc:`TypeError` (:"
"issue:`15006`)."
msgstr ""
"Jämlikhetsjämförelser mellan naiva och medvetna :class:`~datetime.datetime`-"
"instanser returnerar nu :const:`False` istället för att ge upphov till :exc:"
"`TypeError` (:issue:`15006`)."

msgid ""
"New :meth:`datetime.datetime.timestamp` method: Return POSIX timestamp "
"corresponding to the :class:`~datetime.datetime` instance."
msgstr ""
"Ny :meth:`datetime.datetime.timestamp`-metod: Returnerar POSIX-tidsstämpel "
"som motsvarar :class:`~datetime.datetime`-instansen."

msgid ""
"The :meth:`datetime.datetime.strftime` method supports formatting years "
"older than 1000."
msgstr ""
"Metoden :meth:`datetime.datetime.strftime` stöder formatering av årtal äldre "
"än 1000."

msgid ""
"The :meth:`datetime.datetime.astimezone` method can now be called without "
"arguments to convert datetime instance to the system timezone."
msgstr ""
"Metoden :meth:`datetime.datetime.astimezone` kan nu anropas utan argument "
"för att konvertera datetime-instansen till systemets tidszon."

msgid "decimal"
msgstr "decimal"

msgid ":issue:`7652` - integrate fast native decimal arithmetic."
msgstr ":issue:`7652` - integrera snabb inbyggd decimalaritmetik."

msgid "C-module and libmpdec written by Stefan Krah."
msgstr "C-modul och libmpdec skrivna av Stefan Krah."

msgid ""
"The new C version of the decimal module integrates the high speed libmpdec "
"library for arbitrary precision correctly rounded decimal floating-point "
"arithmetic. libmpdec conforms to IBM's General Decimal Arithmetic "
"Specification."
msgstr ""
"Den nya C-versionen av decimalmodulen integrerar det snabba libmpdec-"
"biblioteket för flyttalsaritmetik med godtycklig precision och korrekt "
"avrundad decimal. libmpdec överensstämmer med IBM:s General Decimal "
"Arithmetic Specification."

msgid ""
"Performance gains range from 10x for database applications to 100x for "
"numerically intensive applications. These numbers are expected gains for "
"standard precisions used in decimal floating-point arithmetic. Since the "
"precision is user configurable, the exact figures may vary. For example, in "
"integer bignum arithmetic the differences can be significantly higher."
msgstr ""
"Prestandavinsterna varierar från 10x för databasapplikationer till 100x för "
"numeriskt intensiva applikationer. Dessa siffror är förväntade vinster för "
"standardprecisioner som används i decimal aritmetik med flyttal. Eftersom "
"precisionen kan konfigureras av användaren kan de exakta siffrorna variera. "
"Till exempel kan skillnaderna vara betydligt större i aritmetik med heltal "
"och bignum."

msgid ""
"The following table is meant as an illustration. Benchmarks are available at "
"https://www.bytereef.org/mpdecimal/quickstart.html."
msgstr ""
"Följande tabell är avsedd som en illustration. Benchmarks finns tillgängliga "
"på https://www.bytereef.org/mpdecimal/quickstart.html."

msgid "decimal.py"
msgstr "decimal.py"

msgid "_decimal"
msgstr "_decimal"

msgid "speedup"
msgstr "acceleration"

msgid "pi"
msgstr "pi"

msgid "42.02s"
msgstr "42.02s"

msgid "0.345s"
msgstr "0.345s"

msgid "120x"
msgstr "120x"

msgid "telco"
msgstr "telekom"

msgid "172.19s"
msgstr "172.19s"

msgid "5.68s"
msgstr "5.68s"

msgid "30x"
msgstr "30x"

msgid "psycopg"
msgstr "psycopg"

msgid "3.57s"
msgstr "3.57s"

msgid "0.29s"
msgstr "0.29s"

msgid "12x"
msgstr "12x"

msgid ""
"The :exc:`~decimal.FloatOperation` signal optionally enables stricter "
"semantics for mixing floats and Decimals."
msgstr ""
"Signalen :exc:`~decimal.FloatOperation` ger möjlighet till striktare "
"semantik för att blanda floats och decimaler."

msgid ""
"If Python is compiled without threads, the C version automatically disables "
"the expensive thread local context machinery. In this case, the variable :"
"const:`~decimal.HAVE_THREADS` is set to ``False``."
msgstr ""
"Om Python kompileras utan trådar, inaktiverar C-versionen automatiskt den "
"dyra lokala kontextmekanismen för trådar. I detta fall sätts variabeln :"
"const:`~decimal.HAVE_THREADS` till ``False``."

msgid ""
"The C module has the following context limits, depending on the machine "
"architecture:"
msgstr ""
"C-modulen har följande kontextgränser, beroende på maskinens arkitektur:"

msgid "32-bit"
msgstr "32-bitars"

msgid "64-bit"
msgstr "64-bitars"

msgid ":const:`MAX_PREC`"
msgstr ":const:`MAX_PREC`"

msgid "``425000000``"
msgstr "``425000000``"

msgid "``999999999999999999``"
msgstr "``999999999999999999``"

msgid ":const:`MAX_EMAX`"
msgstr ":const:`MAX_EMAX`"

msgid ":const:`MIN_EMIN`"
msgstr ":const:`MIN_EMIN`"

msgid "``-425000000``"
msgstr "``-425000000``"

msgid "``-999999999999999999``"
msgstr "``-999999999999999999``"

msgid ""
"In the context templates (:const:`~decimal.DefaultContext`, :const:`~decimal."
"BasicContext` and :const:`~decimal.ExtendedContext`) the magnitude of :attr:"
"`~decimal.Context.Emax` and :attr:`~decimal.Context.Emin` has changed to "
"``999999``."
msgstr ""
"I kontextmallarna (:const:`~decimal.DefaultContext`, :const:`~decimal."
"BasicContext` och :const:`~decimal.ExtendedContext`) har storleken på :attr:"
"`~decimal.Context.Emax` och :attr:`~decimal.Context.Emin` ändrats till "
"``999999``."

msgid ""
"The :class:`~decimal.Decimal` constructor in decimal.py does not observe the "
"context limits and converts values with arbitrary exponents or precision "
"exactly. Since the C version has internal limits, the following scheme is "
"used: If possible, values are converted exactly, otherwise :exc:`~decimal."
"InvalidOperation` is raised and the result is NaN. In the latter case it is "
"always possible to use :meth:`~decimal.Context.create_decimal` in order to "
"obtain a rounded or inexact value."
msgstr ""
"Konstruktorn :class:`~decimal.Decimal` i decimal.py följer inte "
"kontextgränserna och konverterar värden med godtyckliga exponenter eller "
"precision exakt. Eftersom C-versionen har interna gränser används följande "
"schema: Om möjligt konverteras värden exakt, annars :exc:`~decimal."
"InvalidOperation` och resultatet blir NaN. I det senare fallet är det alltid "
"möjligt att använda :meth:`~decimal.Context.create_decimal` för att få ett "
"avrundat eller inexakt värde."

msgid ""
"The power function in decimal.py is always correctly rounded. In the C "
"version, it is defined in terms of the correctly rounded :meth:`~decimal."
"Decimal.exp` and :meth:`~decimal.Decimal.ln` functions, but the final result "
"is only \"almost always correctly rounded\"."
msgstr ""
"Potensfunktionen i decimal.py är alltid korrekt avrundad. I C-versionen "
"definieras den i termer av de korrekt avrundade funktionerna :meth:`~decimal."
"Decimal.exp` och :meth:`~decimal.Decimal.ln`, men slutresultatet är bara "
"\"nästan alltid korrekt avrundat\"."

msgid ""
"In the C version, the context dictionary containing the signals is a :class:"
"`~collections.abc.MutableMapping`.  For speed reasons, :attr:`~decimal."
"Context.flags` and :attr:`~decimal.Context.traps` always refer to the same :"
"class:`~collections.abc.MutableMapping` that the context was initialized "
"with. If a new signal dictionary is assigned, :attr:`~decimal.Context.flags` "
"and :attr:`~decimal.Context.traps` are updated with the new values, but they "
"do not reference the RHS dictionary."
msgstr ""
"I C-versionen är kontextordboken som innehåller signalerna en :class:"
"`~collections.abc.MutableMapping`.  Av hastighetsskäl refererar :attr:"
"`~decimal.Context.flags` och :attr:`~decimal.Context.traps` alltid till "
"samma :class:`~collections.abc.MutableMapping` som kontexten initialiserades "
"med. Om en ny signalordbok tilldelas, uppdateras :attr:`~decimal.Context."
"flags` och :attr:`~decimal.Context.traps` med de nya värdena, men de "
"refererar inte till RHS ordbok."

msgid ""
"Pickling a :class:`~decimal.Context` produces a different output in order to "
"have a common interchange format for the Python and C versions."
msgstr ""
"Pickling av en :class:`~decimal.Context` ger en annan utdata för att ha ett "
"gemensamt utbytesformat för Python- och C-versionerna."

msgid ""
"The order of arguments in the :class:`~decimal.Context` constructor has been "
"changed to match the order displayed by :func:`repr`."
msgstr ""
"Ordningen på argumenten i :class:`~decimal.Context`-konstruktören har "
"ändrats så att den stämmer överens med den ordning som visas av :func:`repr`."

msgid ""
"The ``watchexp`` parameter in the :meth:`~decimal.Decimal.quantize` method "
"is deprecated."
msgstr ""
"Parametern ``watchexp`` i metoden :meth:`~decimal.Decimal.quantize` är "
"föråldrad."

msgid "email"
msgstr "e-post"

msgid "Policy Framework"
msgstr "Politiskt ramverk"

msgid ""
"The email package now has a :mod:`~email.policy` framework.  A :class:"
"`~email.policy.Policy` is an object with several methods and properties that "
"control how the email package behaves.  The primary policy for Python 3.3 is "
"the :class:`~email.policy.Compat32` policy, which provides backward "
"compatibility with the email package in Python 3.2.  A ``policy`` can be "
"specified when an email message is parsed by a :mod:`~email.parser`, or when "
"a :class:`~email.message.Message` object is created, or when an email is "
"serialized using a :mod:`~email.generator`.  Unless overridden, a policy "
"passed to a ``parser`` is inherited by all the ``Message`` object and sub-"
"objects created by the ``parser``.  By default a ``generator`` will use the "
"policy of the ``Message`` object it is serializing.  The default policy is :"
"data:`~email.policy.compat32`."
msgstr ""
"E-postpaketet har nu ett :mod:`~email.policy`-ramverk.  En :class:`~email."
"policy.policy` är ett objekt med flera metoder och egenskaper som styr hur e-"
"postpaketet beter sig.  Den primära policyn för Python 3.3 är :class:`~email."
"policy.Compat32`-policyn, som ger bakåtkompatibilitet med e-postpaketet i "
"Python 3.2.  En ``policy`` kan anges när ett e-postmeddelande analyseras av "
"en :mod:`~email.parser`, eller när ett :class:`~email.message.Message`-"
"objekt skapas, eller när ett e-postmeddelande serialiseras med en :mod:"
"`~email.generator`.  Om den inte åsidosätts ärvs en policy som skickas till "
"en ``parser`` av alla ``Message``-objekt och underobjekt som skapas av "
"``parser``.  Som standard kommer en ``generator`` att använda policyn för "
"det ``Message``-objekt som den serialiserar.  Standardpolicyn är :data:"
"`~email.policy.compat32`."

msgid "The minimum set of controls implemented by all ``policy`` objects are:"
msgstr ""
"Den minsta uppsättning kontroller som implementeras av alla ``policy``-"
"objekt är:"

msgid "max_line_length"
msgstr "max_radlängd"

msgid ""
"The maximum length, excluding the linesep character(s), individual lines may "
"have when a ``Message`` is serialized.  Defaults to 78."
msgstr ""
"Den maximala längden, exklusive linesep-tecknet/tecknen, som enskilda rader "
"kan ha när ett ``Message`` serialiseras.  Standardvärdet är 78."

msgid "linesep"
msgstr "linjespets"

msgid ""
"The character used to separate individual lines when a ``Message`` is "
"serialized.  Defaults to ``\\n``."
msgstr ""
"Det tecken som används för att separera enskilda rader när ett ``Message`` "
"serialiseras.  Standard är ``n``."

msgid "cte_type"
msgstr "cte_typ"

msgid ""
"``7bit`` or ``8bit``.  ``8bit`` applies only to a ``Bytes`` ``generator``, "
"and means that non-ASCII may be used where allowed by the protocol (or where "
"it exists in the original input)."
msgstr ""
"``7bit`` eller ``8bit``.  ``8bit`` gäller endast för en ``Bytes`` "
"``generator`` och innebär att icke-ASCII kan användas där det är tillåtet "
"enligt protokollet (eller där det finns i den ursprungliga inmatningen)."

msgid "raise_on_defect"
msgstr "höja_på_defekt"

msgid ""
"Causes a ``parser`` to raise error when defects are encountered instead of "
"adding them to the ``Message`` object's ``defects`` list."
msgstr ""
"Gör att en ``parser`` utlöser ett fel när defekter påträffas istället för "
"att lägga till dem i ``Message``-objektets ``defects``-lista."

msgid ""
"A new policy instance, with new settings, is created using the :meth:`~email."
"policy.Policy.clone` method of policy objects.  ``clone`` takes any of the "
"above controls as keyword arguments.  Any control not specified in the call "
"retains its default value.  Thus you can create a policy that uses "
"``\\r\\n`` linesep characters like this::"
msgstr ""
"En ny policyinstans med nya inställningar skapas med hjälp av metoden :meth:"
"`~email.policy.Policy.clone` för policyobjekt.  ``clone`` tar någon av "
"ovanstående kontroller som nyckelordsargument.  Alla kontroller som inte "
"anges i anropet behåller sitt standardvärde.  På så sätt kan du skapa en "
"policy som använder linjära tecken som \"r\" så här::"

msgid "mypolicy = compat32.clone(linesep='\\r\\n')"
msgstr "mypolicy = compat32.clone(linesep='\\r\\n')"

msgid ""
"Policies can be used to make the generation of messages in the format needed "
"by your application simpler.  Instead of having to remember to specify "
"``linesep='\\r\\n'`` in all the places you call a ``generator``, you can "
"specify it once, when you set the policy used by the ``parser`` or the "
"``Message``, whichever your program uses to create ``Message`` objects.  On "
"the other hand, if you need to generate messages in multiple forms, you can "
"still specify the parameters in the appropriate ``generator`` call.  Or you "
"can have custom policy instances for your different cases, and pass those in "
"when you create the ``generator``."
msgstr ""
"Policies kan användas för att förenkla genereringen av meddelanden i det "
"format som behövs i din applikation.  Istället för att behöva komma ihåg att "
"ange ``linesep='\\r\\n'`` på alla ställen där du anropar en ``generator``, "
"kan du ange det en gång, när du anger den policy som används av ``parser`` "
"eller ``Message``, beroende på vilket ditt program använder för att skapa "
"``Message``-objekt.  Om du å andra sidan behöver generera meddelanden i "
"flera olika former kan du fortfarande ange parametrarna i det lämpliga "
"anropet till ``generator``.  Eller så kan du ha anpassade policyinstanser "
"för dina olika fall och skicka in dem när du skapar ``generator``."

msgid "Provisional Policy with New Header API"
msgstr "Provisorisk policy med nytt Header API"

msgid ""
"While the policy framework is worthwhile all by itself, the main motivation "
"for introducing it is to allow the creation of new policies that implement "
"new features for the email package in a way that maintains backward "
"compatibility for those who do not use the new policies.  Because the new "
"policies introduce a new API, we are releasing them in Python 3.3 as a :term:"
"`provisional policy <provisional package>`.  Backwards incompatible changes "
"(up to and including removal of the code) may occur if deemed necessary by "
"the core developers."
msgstr ""
"Policyramverket är värdefullt i sig, men huvudmotivet för att introducera "
"det är att möjliggöra skapandet av nya policyer som implementerar nya "
"funktioner för e-postpaketet på ett sätt som bibehåller bakåtkompatibilitet "
"för dem som inte använder de nya policyerna.  Eftersom de nya policyerna "
"introducerar ett nytt API, släpper vi dem i Python 3.3 som en :term:"
"``provisorisk policy <provisional package>``.  Bakåtkompatibla ändringar "
"(upp till och inklusive borttagning av koden) kan förekomma om det anses "
"nödvändigt av kärnutvecklarna."

msgid ""
"The new policies are instances of :class:`~email.policy.EmailPolicy`, and "
"add the following additional controls:"
msgstr ""
"De nya policyerna är instanser av :class:`~email.policy.EmailPolicy`, och "
"lägger till följande ytterligare kontroller:"

msgid "refold_source"
msgstr "refold_källa"

msgid ""
"Controls whether or not headers parsed by a :mod:`~email.parser` are "
"refolded by the :mod:`~email.generator`.  It can be ``none``, ``long``, or "
"``all``.  The default is ``long``, which means that source headers with a "
"line longer than ``max_line_length`` get refolded.  ``none`` means no line "
"get refolded, and ``all`` means that all lines get refolded."
msgstr ""
"Styr om rubriker som analyseras av en :mod:`~email.parser` ska vikas om av :"
"mod:`~email.generator` eller inte.  Det kan vara ``none``, ``long`` eller "
"``all``.  Standardvärdet är ``long``, vilket innebär att källhuvuden med en "
"rad längre än ``max_line_length`` viks om.  ``none`` innebär att ingen rad "
"viks om och ``all`` innebär att alla rader viks om."

msgid "header_factory"
msgstr "header_factory"

msgid ""
"A callable that take a ``name`` and ``value`` and produces a custom header "
"object."
msgstr ""
"En callable som tar ett ``namn`` och ``värde`` och producerar ett anpassat "
"header-objekt."

msgid ""
"The ``header_factory`` is the key to the new features provided by the new "
"policies.  When one of the new policies is used, any header retrieved from a "
"``Message`` object is an object produced by the ``header_factory``, and any "
"time you set a header on a ``Message`` it becomes an object produced by "
"``header_factory``.  All such header objects have a ``name`` attribute equal "
"to the header name.  Address and Date headers have additional attributes "
"that give you access to the parsed data of the header.  This means you can "
"now do things like this::"
msgstr ""
"``header_factory`` är nyckeln till de nya funktioner som de nya policyerna "
"ger.  När en av de nya policyerna används är varje header som hämtas från "
"ett ``Message``-objekt ett objekt som produceras av ``header_factory``, och "
"varje gång du ställer in en header på ett ``Message`` blir det ett objekt "
"som produceras av ``header_factory``.  Alla sådana headerobjekt har "
"attributet ``name`` som är lika med headerns namn.  Adress- och "
"datumrubriker har ytterligare attribut som ger dig tillgång till rubrikens "
"analyserade data.  Detta innebär att du nu kan göra saker som detta::"

msgid ""
">>> m = Message(policy=SMTP)\n"
">>> m['To'] = 'Éric <foo@example.com>'\n"
">>> m['to']\n"
"'Éric <foo@example.com>'\n"
">>> m['to'].addresses\n"
"(Address(display_name='Éric', username='foo', domain='example.com'),)\n"
">>> m['to'].addresses[0].username\n"
"'foo'\n"
">>> m['to'].addresses[0].display_name\n"
"'Éric'\n"
">>> m['Date'] = email.utils.localtime()\n"
">>> m['Date'].datetime\n"
"datetime.datetime(2012, 5, 25, 21, 39, 24, 465484, tzinfo=datetime."
"timezone(datetime.timedelta(-1, 72000), 'EDT'))\n"
">>> m['Date']\n"
"'Fri, 25 May 2012 21:44:27 -0400'\n"
">>> print(m)\n"
"To: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400"
msgstr ""
">>> m = Meddelande(policy=SMTP)\n"
">>> m['To'] = 'Éric <foo@example.com>'\n"
">>> m['to']\n"
"'Éric <foo@example.com>'\n"
">>> m['to'].adresser\n"
"(Address(display_name='Éric', username='foo', domain='example.com'),)\n"
">>> m['till'].adresser[0].användarnamn\n"
"'foo'\n"
">>> m['till'].adresser[0].visningsnamn\n"
"'Éric'\n"
">>> m['Datum'] = email.utils.localtime()\n"
">>> m['Datum'].datetime\n"
"datetime.datetime(2012, 5, 25, 21, 39, 24, 465484, tzinfo=datetime."
"timezone(datetime.timedelta(-1, 72000), 'EDT'))\n"
">>> m['Datum']\n"
"'Fri, 25 maj 2012 21:44:27 -0400'\n"
">>> print(m)\n"
"Till: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400"

msgid ""
"You will note that the unicode display name is automatically encoded as "
"``utf-8`` when the message is serialized, but that when the header is "
"accessed directly, you get the unicode version.  This eliminates any need to "
"deal with the :mod:`email.header` :meth:`~email.header.decode_header` or :"
"meth:`~email.header.make_header` functions."
msgstr ""
"Du kommer att märka att det unicodade visningsnamnet automatiskt kodas som "
"``utf-8`` när meddelandet serialiseras, men att du får den unicodade "
"versionen när rubriken öppnas direkt.  Detta eliminerar behovet av att "
"hantera funktionerna :mod:`email.header` :meth:`~email.header.decode_header` "
"eller :meth:`~email.header.make_header`."

msgid "You can also create addresses from parts::"
msgstr "Du kan också skapa adresser från delar::"

msgid ""
">>> m['cc'] = [Group('pals', [Address('Bob', 'bob', 'example.com'),\n"
"...                           Address('Sally', 'sally', 'example.com')]),\n"
"...            Address('Bonzo', addr_spec='bonz@laugh.com')]\n"
">>> print(m)\n"
"To: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fri, 25 May 2012 21:44:27 -0400\n"
"cc: pals: Bob <bob@example.com>, Sally <sally@example.com>;, Bonzo "
"<bonz@laugh.com>"
msgstr ""
">>> m['cc'] = [Group('pals', [Address('Bob', 'bob', 'example.com'),\n"
"...                           Adress('Sally', 'sally', 'example.com')]),\n"
"...            Adress('Bonzo', addr_spec='bonz@laugh.com')]\n"
">>> print(m)\n"
"Till: =?utf-8?q?=C3=89ric?= <foo@example.com>\n"
"Date: Fre, 25 maj 2012 21:44:27 -0400\n"
"cc: kompisar: Bob <bob@example.com>, Sally <sally@example.com>;, Bonzo "
"<bonz@laugh.com>"

msgid "Decoding to unicode is done automatically::"
msgstr "Avkodning till unicode sker automatiskt::"

msgid ""
">>> m2 = message_from_string(str(m))\n"
">>> m2['to']\n"
"'Éric <foo@example.com>'"
msgstr ""
">>> m2 = meddelande_från_sträng(str(m))\n"
">>> m2['till']\n"
"'Éric <foo@example.com>'"

msgid ""
"When you parse a message, you can use the ``addresses`` and ``groups`` "
"attributes of the header objects to access the groups and individual "
"addresses::"
msgstr ""
"När du analyserar ett meddelande kan du använda attributen ``addresses`` och "
"``groups`` i rubrikobjekten för att komma åt grupperna och de enskilda "
"adresserna::"

msgid ""
">>> m2['cc'].addresses\n"
"(Address(display_name='Bob', username='bob', domain='example.com'), "
"Address(display_name='Sally', username='sally', domain='example.com'), "
"Address(display_name='Bonzo', username='bonz', domain='laugh.com'))\n"
">>> m2['cc'].groups\n"
"(Group(display_name='pals', addresses=(Address(display_name='Bob', "
"username='bob', domain='example.com'), Address(display_name='Sally', "
"username='sally', domain='example.com')), Group(display_name=None, "
"addresses=(Address(display_name='Bonzo', username='bonz', domain='laugh."
"com'),))"
msgstr ""
">>> m2['cc'].adresser\n"
"(Address(display_name='Bob', username='bob', domain='example.com'), "
"Address(display_name='Sally', username='sally', domain='example.com'), "
"Address(display_name='Bonzo', username='bonz', domain='laugh.com'))\n"
">>> m2['cc'].grupper\n"
"(Group(display_name='pals', addresses=(Address(display_name='Bob', "
"username='bob', domain='example.com'), Address(display_name='Sally', "
"username='sally', domain='example.com')), Group(display_name=None, "
"addresses=(Address(display_name='Bonzo', username='bonz', domain='laugh."
"com'),))"

msgid ""
"In summary, if you use one of the new policies, header manipulation works "
"the way it ought to:  your application works with unicode strings, and the "
"email package transparently encodes and decodes the unicode to and from the "
"RFC standard Content Transfer Encodings."
msgstr ""
"Om du använder en av de nya policyerna fungerar manipuleringen av rubriker "
"som den ska: din applikation arbetar med unicode-strängar och e-postpaketet "
"kodar och avkodar unicode på ett transparent sätt till och från RFC-"
"standarden Content Transfer Encodings."

msgid "Other API Changes"
msgstr "Andra API-ändringar"

msgid ""
"New :class:`~email.parser.BytesHeaderParser`, added to the :mod:`~email."
"parser` module to complement :class:`~email.parser.HeaderParser` and "
"complete the Bytes API."
msgstr ""
"Ny :class:`~email.parser.BytesHeaderParser`, tillagd i modulen :mod:`~email."
"parser` för att komplettera :class:`~email.parser.HeaderParser` och "
"komplettera Bytes API."

msgid "New utility functions:"
msgstr "Nya nyttofunktioner:"

msgid ""
":func:`~email.utils.format_datetime`: given a :class:`~datetime.datetime`, "
"produce a string formatted for use in an email header."
msgstr ""
":func:`~email.utils.format_datetime`: givet en :class:`~datetime.datetime`, "
"producera en sträng formaterad för att användas i ett e-posthuvud."

msgid ""
":func:`~email.utils.parsedate_to_datetime`: given a date string from an "
"email header, convert it into an aware :class:`~datetime.datetime`, or a "
"naive :class:`~datetime.datetime` if the offset is ``-0000``."
msgstr ""
":func:`~email.utils.parsedate_to_datetime`: givet en datumsträng från ett e-"
"posthuvud, konvertera den till en medveten :class:`~datetime.datetime`, "
"eller en naiv :class:`~datetime.datetime` om förskjutningen är ``-0000``."

msgid ""
":func:`~email.utils.localtime`: With no argument, returns the current local "
"time as an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`.  Given an aware :class:`~datetime.datetime`, converts "
"it into an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`."
msgstr ""
":func:`~email.utils.localtime`: Utan argument returneras den aktuella lokala "
"tiden som en medveten :class:`~datetime.datetime` med hjälp av den lokala :"
"class:`~datetime.timezone`.  Given an aware :class:`~datetime.datetime`, "
"converts it into an aware :class:`~datetime.datetime` using the local :class:"
"`~datetime.timezone`."

msgid "ftplib"
msgstr "ftplib"

msgid ""
":class:`ftplib.FTP` now accepts a ``source_address`` keyword argument to "
"specify the ``(host, port)`` to use as the source address in the bind call "
"when creating the outgoing socket.  (Contributed by Giampaolo Rodolà in :"
"issue:`8594`.)"
msgstr ""
":class:`ftplib.FTP` accepterar nu ett ``source_address`` nyckelordsargument "
"för att ange ``(host, port)`` att använda som källadress i bind-anropet när "
"man skapar den utgående sockeln.  (Bidrag från Giampaolo Rodolà i :issue:"
"`8594`.)"

msgid ""
"The :class:`~ftplib.FTP_TLS` class now provides a new :func:`~ftplib.FTP_TLS."
"ccc` function to revert control channel back to plaintext.  This can be "
"useful to take advantage of firewalls that know how to handle NAT with non-"
"secure FTP without opening fixed ports.  (Contributed by Giampaolo Rodolà "
"in :issue:`12139`.)"
msgstr ""
"Klassen :class:`~ftplib.FTP_TLS` tillhandahåller nu en ny :func:`~ftplib."
"FTP_TLS.ccc`-funktion för att återställa kontrollkanalen till klartext.  "
"Detta kan vara användbart för att dra nytta av brandväggar som vet hur man "
"hanterar NAT med icke-säker FTP utan att öppna fasta portar.  (Bidrag från "
"Giampaolo Rodolà i :issue:`12139`.)"

msgid ""
"Added :meth:`ftplib.FTP.mlsd` method which provides a parsable directory "
"listing format and deprecates :meth:`ftplib.FTP.nlst` and :meth:`ftplib.FTP."
"dir`.  (Contributed by Giampaolo Rodolà in :issue:`11072`.)"
msgstr ""
"Lagt till :meth:`ftplib.FTP.mlsd`-metoden som tillhandahåller ett "
"analyserbart kataloglistningsformat och tar bort :meth:`ftplib.FTP.nlst` "
"och :meth:`ftplib.FTP.dir`.  (Bidrag från Giampaolo Rodolà i :issue:`11072`.)"

msgid "functools"
msgstr "functools"

msgid ""
"The :func:`functools.lru_cache` decorator now accepts a ``typed`` keyword "
"argument (that defaults to ``False`` to ensure that it caches values of "
"different types that compare equal in separate cache slots.  (Contributed by "
"Raymond Hettinger in :issue:`13227`.)"
msgstr ""
"Dekoratorn :func:`functools.lru_cache` accepterar nu ett ``typed`` "
"nyckelordsargument (som standard är ``False`` för att säkerställa att den "
"cachar värden av olika typer som jämför lika i separata cacheplatser.  "
"(Bidrag från Raymond Hettinger i :issue:`13227`.)"

msgid "gc"
msgstr "gc"

msgid ""
"It is now possible to register callbacks invoked by the garbage collector "
"before and after collection using the new :data:`~gc.callbacks` list."
msgstr ""
"Det är nu möjligt att registrera callbacks som anropas av garbage collector "
"före och efter insamlingen med hjälp av den nya :data:`~gc.callbacks`-listan."

msgid "hmac"
msgstr "hmac"

msgid ""
"A new :func:`~hmac.compare_digest` function has been added to prevent side "
"channel attacks on digests through timing analysis.  (Contributed by Nick "
"Coghlan and Christian Heimes in :issue:`15061`.)"
msgstr ""
"En ny :func:`~hmac.compare_digest`-funktion har lagts till för att förhindra "
"sidokanalattacker på sammanställningar genom tidsanalys.  (Bidrag från Nick "
"Coghlan och Christian Heimes i :issue:`15061`.)"

msgid "http"
msgstr "http"

msgid ""
":class:`http.server.BaseHTTPRequestHandler` now buffers the headers and "
"writes them all at once when :meth:`~http.server.BaseHTTPRequestHandler."
"end_headers` is called.  A new method :meth:`~http.server."
"BaseHTTPRequestHandler.flush_headers` can be used to directly manage when "
"the accumulated headers are sent. (Contributed by Andrew Schaaf in :issue:"
"`3709`.)"
msgstr ""
":class:`http.server.BaseHTTPRequestHandler` buffrar nu headers och skriver "
"dem alla på en gång när :meth:`~http.server.BaseHTTPRequestHandler."
"end_headers` anropas.  En ny metod :meth:`~http.server."
"BaseHTTPRequestHandler.flush_headers` kan användas för att direkt hantera "
"när de ackumulerade headers skickas. (Bidrag från Andrew Schaaf i :issue:"
"`3709`.)"

msgid ""
":class:`http.server` now produces valid ``HTML 4.01 strict`` output. "
"(Contributed by Ezio Melotti in :issue:`13295`.)"
msgstr ""
":class:`http.server` producerar nu giltig ``HTML 4.01 strict`` utdata. "
"(Bidrag från Ezio Melotti i :issue:`13295`.)"

msgid ""
":class:`http.client.HTTPResponse` now has a :meth:`~http.client.HTTPResponse."
"readinto` method, which means it can be used as an :class:`io.RawIOBase` "
"class.  (Contributed by John Kuhn in :issue:`13464`.)"
msgstr ""
":class:`http.client.HTTPResponse` har nu en :meth:`~http.client.HTTPResponse."
"readinto`-metod, vilket innebär att den kan användas som en :class:`io."
"RawIOBase`-klass.  (Bidrag från John Kuhn i :issue:`13464`.)"

msgid "html"
msgstr "html"

msgid ""
":class:`html.parser.HTMLParser` is now able to parse broken markup without "
"raising errors, therefore the *strict* argument of the constructor and the :"
"exc:`~html.parser.HTMLParseError` exception are now deprecated. The ability "
"to parse broken markup is the result of a number of bug fixes that are also "
"available on the latest bug fix releases of Python 2.7/3.2. (Contributed by "
"Ezio Melotti in :issue:`15114`, and :issue:`14538`, :issue:`13993`, :issue:"
"`13960`, :issue:`13358`, :issue:`1745761`, :issue:`755670`, :issue:`13357`, :"
"issue:`12629`, :issue:`1200313`, :issue:`670664`, :issue:`13273`, :issue:"
"`12888`, :issue:`7311`.)"
msgstr ""
":class:`html.parser.HTMLParser` kan nu analysera trasig markup utan att "
"orsaka fel, därför är *strict*-argumentet i konstruktorn och :exc:`~html."
"parser.HTMLParseError`-undantaget nu föråldrade. Möjligheten att parsa "
"trasig markup är resultatet av ett antal buggfixar som också finns "
"tillgängliga i de senaste buggfixversionerna av Python 2.7/3.2. (Bidrag från "
"Ezio Melotti i :issue:`15114`, and :issue:`14538`, :issue:`13993`, :issue:"
"`13960`, :issue:`13358`, :issue:`1745761`, :issue:`755670`, :issue:`13357`, :"
"issue:`12629`, :issue:`1200313`, :issue:`670664`, :issue:`13273`, :issue:"
"`12888`, :issue:`7311`.)"

msgid ""
"A new :data:`~html.entities.html5` dictionary that maps HTML5 named "
"character references to the equivalent Unicode character(s) (e.g. "
"``html5['gt;'] == '>'``) has been added to the :mod:`html.entities` module.  "
"The dictionary is now also used by :class:`~html.parser.HTMLParser`.  "
"(Contributed by Ezio Melotti in :issue:`11113` and :issue:`15156`.)"
msgstr ""
"En ny :data:`~html.entities.html5`-ordbok som mappar HTML5 namngivna "
"teckenreferenser till motsvarande Unicode-tecken (t.ex. ``html5['gt;'] == "
"'>'``) har lagts till i modulen :mod:`html.entities`.  Ordboken används nu "
"även av :class:`~html.parser.HTMLParser`.  (Bidrag från Ezio Melotti i :"
"issue:`11113` och :issue:`15156`.)"

msgid "imaplib"
msgstr "imaplib"

msgid ""
"The :class:`~imaplib.IMAP4_SSL` constructor now accepts an SSLContext "
"parameter to control parameters of the secure channel."
msgstr ""
"Konstruktorn :class:`~imaplib.IMAP4_SSL` accepterar nu en SSLContext-"
"parameter för att styra parametrarna för den säkra kanalen."

msgid "(Contributed by Sijin Joseph in :issue:`8808`.)"
msgstr "(Bidrag från Sijin Joseph i :issue:`8808`.)"

msgid "inspect"
msgstr "inspektera"

msgid ""
"A new :func:`~inspect.getclosurevars` function has been added. This function "
"reports the current binding of all names referenced from the function body "
"and where those names were resolved, making it easier to verify correct "
"internal state when testing code that relies on stateful closures."
msgstr ""
"En ny :func:`~inspect.getclosurevars`-funktion har lagts till. Denna "
"funktion rapporterar den aktuella bindningen av alla namn som refereras från "
"funktionskroppen och var dessa namn löstes, vilket gör det lättare att "
"verifiera korrekt internt tillstånd när man testar kod som förlitar sig på "
"stateful closures."

msgid "(Contributed by Meador Inge and Nick Coghlan in :issue:`13062`.)"
msgstr "(Bidrag från Meador Inge och Nick Coghlan i :issue:`13062`.)"

msgid ""
"A new :func:`~inspect.getgeneratorlocals` function has been added. This "
"function reports the current binding of local variables in the generator's "
"stack frame, making it easier to verify correct internal state when testing "
"generators."
msgstr ""
"En ny :func:`~inspect.getgeneratorlocals`-funktion har lagts till. Denna "
"funktion rapporterar den aktuella bindningen av lokala variabler i "
"generatorns stackram, vilket gör det lättare att verifiera korrekt internt "
"tillstånd vid testning av generatorer."

msgid "(Contributed by Meador Inge in :issue:`15153`.)"
msgstr "(Bidrag från Meador Inge i :issue:`15153`.)"

msgid "io"
msgstr "io"

msgid ""
"The :func:`~io.open` function has a new ``'x'`` mode that can be used to "
"exclusively create a new file, and raise a :exc:`FileExistsError` if the "
"file already exists. It is based on the C11 'x' mode to fopen()."
msgstr ""
"Funktionen :func:`~io.open` har ett nytt ``'x'``-läge som kan användas för "
"att uteslutande skapa en ny fil, och ge upphov till ett :exc:"
"`FileExistsError` om filen redan finns. Det är baserat på C11 'x'-läget för "
"fopen()."

msgid "(Contributed by David Townshend in :issue:`12760`.)"
msgstr "(Bidrag från David Townshend i :issue:`12760`.)"

msgid ""
"The constructor of the :class:`~io.TextIOWrapper` class has a new "
"*write_through* optional argument. If *write_through* is ``True``, calls to :"
"meth:`~io.TextIOWrapper.write` are guaranteed not to be buffered: any data "
"written on the :class:`~io.TextIOWrapper` object is immediately handled to "
"its underlying binary buffer."
msgstr ""
"Konstruktorn för klassen :class:`~io.TextIOWrapper` har ett nytt "
"*write_through* valfritt argument. Om *write_through* är ``True`` garanteras "
"att anrop till :meth:`~io.TextIOWrapper.write` inte buffras: all data som "
"skrivs på :class:`~io.TextIOWrapper`-objektet hanteras omedelbart till dess "
"underliggande binära buffert."

msgid "itertools"
msgstr "itertools"

msgid ""
":func:`~itertools.accumulate` now takes an optional ``func`` argument for "
"providing a user-supplied binary function."
msgstr ""
":func:`~itertools.accumulate` tar nu ett valfritt ``func``-argument för att "
"tillhandahålla en binär funktion från användaren."

msgid "logging"
msgstr "loggning"

msgid ""
"The :func:`~logging.basicConfig` function now supports an optional "
"``handlers`` argument taking an iterable of handlers to be added to the root "
"logger."
msgstr ""
"Funktionen :func:`~logging.basicConfig` stöder nu ett valfritt ``handlers``-"
"argument som tar en iterabel av handläggare som ska läggas till rotloggaren."

msgid ""
"A class level attribute :attr:`~logging.handlers.SysLogHandler.append_nul` "
"has been added to :class:`~logging.handlers.SysLogHandler` to allow control "
"of the appending of the ``NUL`` (``\\000``) byte to syslog records, since "
"for some daemons it is required while for others it is passed through to the "
"log."
msgstr ""
"Ett klassnivåattribut :attr:`~logging.handlers.SysLogHandler.append_nul` har "
"lagts till i :class:`~logging.handlers.SysLogHandler` för att möjliggöra "
"kontroll av tillägget av byte ``NUL`` (``\\000``) till syslogposter, "
"eftersom det krävs för vissa daemoner medan det för andra skickas vidare "
"till loggen."

msgid "math"
msgstr "matematik"

msgid ""
"The :mod:`math` module has a new function, :func:`~math.log2`,  which "
"returns the base-2 logarithm of *x*."
msgstr ""
"Modulen :mod:`math` har en ny funktion, :func:`~math.log2`, som returnerar "
"bas-2-logaritmen för *x*."

msgid "(Written by Mark Dickinson in :issue:`11888`.)"
msgstr "(Skrivet av Mark Dickinson i :issue:`11888`.)"

msgid "mmap"
msgstr "mmap"

msgid ""
"The :meth:`~mmap.mmap.read` method is now more compatible with other file-"
"like objects: if the argument is omitted or specified as ``None``, it "
"returns the bytes from the current file position to the end of the mapping.  "
"(Contributed by Petri Lehtinen in :issue:`12021`.)"
msgstr ""
"Metoden :meth:`~mmap.mmap.read` är nu mer kompatibel med andra filliknande "
"objekt: om argumentet utelämnas eller anges som ``None`` returnerar den "
"bytena från den aktuella filpositionen till slutet av mappningen.  (Bidrag "
"från Petri Lehtinen i :issue:`12021`.)"

msgid "multiprocessing"
msgstr "multiprocessing"

msgid ""
"The new :func:`multiprocessing.connection.wait` function allows polling "
"multiple objects (such as connections, sockets and pipes) with a timeout. "
"(Contributed by Richard Oudkerk in :issue:`12328`.)"
msgstr ""
"Den nya funktionen :func:`multiprocessing.connection.wait` gör det möjligt "
"att polla flera objekt (t.ex. anslutningar, sockets och pipes) med en "
"timeout. (Bidrag från Richard Oudkerk i :issue:`12328`.)"

msgid ""
":class:`multiprocessing.Connection` objects can now be transferred over "
"multiprocessing connections. (Contributed by Richard Oudkerk in :issue:"
"`4892`.)"
msgstr ""
":class:`multiprocessing.Connection`-objekt kan nu överföras över "
"multiprocessing-anslutningar. (Bidrag från Richard Oudkerk i :issue:`4892`.)"

msgid ""
":class:`multiprocessing.Process` now accepts a ``daemon`` keyword argument "
"to override the default behavior of inheriting the ``daemon`` flag from the "
"parent process (:issue:`6064`)."
msgstr ""
":class:`multiprocessing.Process` accepterar nu ett ``daemon`` "
"nyckelordsargument för att åsidosätta standardbeteendet att ärva ``daemon`` "
"flaggan från den överordnade processen (:issue:`6064`)."

msgid ""
"New attribute :data:`multiprocessing.Process.sentinel` allows a program to "
"wait on multiple :class:`~multiprocessing.Process` objects at one time using "
"the appropriate OS primitives (for example, :mod:`select` on posix systems)."
msgstr ""
"Med det nya attributet :data:`multiprocessing.Process.sentinel` kan ett "
"program vänta på flera :class:`~multiprocessing.Process`-objekt samtidigt "
"med hjälp av lämpliga OS-primitiver (t.ex. :mod:`select` på posix-system)."

msgid ""
"New methods :meth:`multiprocessing.pool.Pool.starmap` and :meth:"
"`~multiprocessing.pool.Pool.starmap_async` provide :func:`itertools.starmap` "
"equivalents to the existing :meth:`multiprocessing.pool.Pool.map` and :meth:"
"`~multiprocessing.pool.Pool.map_async` functions.  (Contributed by Hynek "
"Schlawack in :issue:`12708`.)"
msgstr ""
"Nya metoder :meth:`multiprocessing.pool.Pool.starmap` och :meth:"
"`~multiprocessing.pool.Pool.starmap_async` ger :func:`itertools.starmap` "
"motsvarigheter till de befintliga funktionerna :meth:`multiprocessing.pool."
"Pool.map` och :meth:`~multiprocessing.pool.Pool.map_async`.  (Bidrag från "
"Hynek Schlawack i :issue:`12708`.)"

msgid "nntplib"
msgstr "nntplib"

msgid ""
"The :class:`!nntplib.NNTP` class now supports the context management "
"protocol to unconditionally consume :exc:`socket.error` exceptions and to "
"close the NNTP connection when done::"
msgstr ""
"Klassen :class:`!nntplib.NNTP` stöder nu kontexthanteringsprotokollet för "
"att ovillkorligen konsumera :exc:`socket.error` undantag och för att stänga "
"NNTP-anslutningen när den är klar::"

msgid ""
">>> from nntplib import NNTP\n"
">>> with NNTP('news.gmane.org') as n:\n"
"...     n.group('gmane.comp.python.committers')\n"
"...\n"
"('211 1755 1 1755 gmane.comp.python.committers', 1755, 1, 1755, 'gmane.comp."
"python.committers')\n"
">>>"
msgstr ""
">>> from nntplib import NNTP\n"
">>> with NNTP('news.gmane.org') as n:\n"
"...     n.group('gmane.comp.python.committers')\n"
"...\n"
"('211 1755 1 1755 gmane.comp.python.committers', 1755, 1, 1755, 'gmane.comp."
"python.committers')\n"
">>>"

msgid "(Contributed by Giampaolo Rodolà in :issue:`9795`.)"
msgstr "(Bidrag från Giampaolo Rodolà i :issue:`9795`.)"

msgid "os"
msgstr "os"

msgid ""
"The :mod:`os` module has a new :func:`~os.pipe2` function that makes it "
"possible to create a pipe with :const:`~os.O_CLOEXEC` or :const:`~os."
"O_NONBLOCK` flags set atomically. This is especially useful to avoid race "
"conditions in multi-threaded programs."
msgstr ""
"Modulen :mod:`os` har en ny funktion :func:`~os.pipe2` som gör det möjligt "
"att skapa en pipe med flaggorna :const:`~os.O_CLOEXEC` eller :const:`~os."
"O_NONBLOCK` atomiskt. Detta är särskilt användbart för att undvika "
"tävlingsförhållanden i flertrådade program."

msgid ""
"The :mod:`os` module has a new :func:`~os.sendfile` function which provides "
"an efficient \"zero-copy\" way for copying data from one file (or socket) "
"descriptor to another. The phrase \"zero-copy\" refers to the fact that all "
"of the copying of data between the two descriptors is done entirely by the "
"kernel, with no copying of data into userspace buffers. :func:`~os.sendfile` "
"can be used to efficiently copy data from a file on disk to a network "
"socket, e.g. for downloading a file."
msgstr ""
"Modulen :mod:`os` har en ny funktion :func:`~os.sendfile` som ger ett "
"effektivt \"zero-copy\"-sätt att kopiera data från en fil- (eller socket-) "
"deskriptor till en annan. Uttrycket \"zero-copy\" syftar på det faktum att "
"all kopiering av data mellan de två deskriptorerna görs helt av kärnan, utan "
"att data kopieras till buffertar i userspace. :func:`~os.sendfile` kan "
"användas för att effektivt kopiera data från en fil på disk till en "
"nätverkssocket, t.ex. för att ladda ner en fil."

msgid ""
"(Patch submitted by Ross Lagerwall and Giampaolo Rodolà in :issue:`10882`.)"
msgstr ""
"(Patch inlämnad av Ross Lagerwall och Giampaolo Rodolà i :issue:`10882`.)"

msgid ""
"To avoid race conditions like symlink attacks and issues with temporary "
"files and directories, it is more reliable (and also faster) to manipulate "
"file descriptors instead of file names. Python 3.3 enhances existing "
"functions and introduces new functions to work on file descriptors (:issue:"
"`4761`, :issue:`10755` and :issue:`14626`)."
msgstr ""
"För att undvika tävlingsförhållanden som symlänkattacker och problem med "
"temporära filer och kataloger är det mer tillförlitligt (och även snabbare) "
"att manipulera filbeskrivare istället för filnamn. Python 3.3 förbättrar "
"befintliga funktioner och introducerar nya funktioner för att arbeta med "
"filbeskrivare (:issue:`4761`, :issue:`10755` och :issue:`14626`)."

msgid ""
"The :mod:`os` module has a new :func:`~os.fwalk` function similar to :func:"
"`~os.walk` except that it also yields file descriptors referring to the "
"directories visited. This is especially useful to avoid symlink races."
msgstr ""
"Modulen :mod:`os` har en ny funktion :func:`~os.fwalk` som liknar :func:`~os."
"walk` förutom att den också ger filbeskrivningar som hänvisar till de "
"besökta katalogerna. Detta är speciellt användbart för att undvika symlink-"
"race."

msgid ""
"The following functions get new optional *dir_fd* (:ref:`paths relative to "
"directory descriptors <dir_fd>`) and/or *follow_symlinks* (:ref:`not "
"following symlinks <follow_symlinks>`): :func:`~os.access`, :func:`~os."
"chflags`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os.link`, :func:`~os."
"lstat`, :func:`~os.mkdir`, :func:`~os.mkfifo`, :func:`~os.mknod`, :func:`~os."
"open`, :func:`~os.readlink`, :func:`~os.remove`, :func:`~os.rename`, :func:"
"`~os.replace`, :func:`~os.rmdir`, :func:`~os.stat`, :func:`~os.symlink`, :"
"func:`~os.unlink`, :func:`~os.utime`.  Platform support for using these "
"parameters can be checked via the sets :data:`os.supports_dir_fd` and :data:"
"`os.supports_follows_symlinks`."
msgstr ""
"Följande funktioner får nya valfria *dir_fd* (:ref:`sökvägar i förhållande "
"till katalogbeskrivare <dir_fd>`) och/eller *follow_symlinks* (:ref:`följer "
"inte symlinks <follow_symlinks>`): :func:`~os.access`, :func:`~os.chflags`, :"
"func:`~os.chmod`, :func:`~os.chown`, :func:`~os.link`, :func:`~os.lstat`, :"
"func:`~os.mkdir`, :func:`~os.mkfifo`, :func:`~os.mknod`, :func:`~os.open`, :"
"func:`~os.readlink`, :func:`~os.remove`, :func:`~os.rename`, :func:`~os."
"replace`, :func:`~os.rmdir`, :func:`~os.stat`, :func:`~os.symlink`, :func:"
"`~os.unlink`, :func:`~os.utime`.  Plattformsstöd för användning av dessa "
"parametrar kan kontrolleras via uppsättningarna :data:`os.supports_dir_fd` "
"och :data:`os.supports_follows_symlinks`."

msgid ""
"The following functions now support a file descriptor for their path "
"argument: :func:`~os.chdir`, :func:`~os.chmod`, :func:`~os.chown`, :func:"
"`~os.execve`, :func:`~os.listdir`, :func:`~os.pathconf`, :func:`~os.path."
"exists`, :func:`~os.stat`, :func:`~os.statvfs`, :func:`~os.utime`.  Platform "
"support for this can be checked via the :data:`os.supports_fd` set."
msgstr ""
"Följande funktioner stöder nu en filbeskrivare för sitt path-argument: :func:"
"`~os.chdir`, :func:`~os.chmod`, :func:`~os.chown`, :func:`~os.execve`, :func:"
"`~os.listdir`, :func:`~os.pathconf`, :func:`~os.path.exists`, :func:`~os."
"stat`, :func:`~os.statvfs`, :func:`~os.utime`.  Plattformsstöd för detta kan "
"kontrolleras via uppsättningen :data:`os.supports_fd`."

msgid ""
":func:`~os.access` accepts an ``effective_ids`` keyword argument to turn on "
"using the effective uid/gid rather than the real uid/gid in the access "
"check. Platform support for this can be checked via the :data:`~os."
"supports_effective_ids` set."
msgstr ""
":func:`~os.access` accepterar ett ``effective_ids`` nyckelordsargument för "
"att aktivera användning av effektiv uid/gid istället för verklig uid/gid i "
"åtkomstkontrollen. Plattformsstöd för detta kan kontrolleras via "
"uppsättningen :data:`~os.supports_effective_ids`."

msgid ""
"The :mod:`os` module has two new functions: :func:`~os.getpriority` and :"
"func:`~os.setpriority`. They can be used to get or set process niceness/"
"priority in a fashion similar to :func:`os.nice` but extended to all "
"processes instead of just the current one."
msgstr ""
"Modulen :mod:`os` har två nya funktioner: :func:`~os.getpriority` och :func:"
"`~os.setpriority`. De kan användas för att hämta eller ställa in processens "
"niceness/prioritet på ett sätt som liknar :func:`os.nice` men utökat till "
"alla processer istället för bara den aktuella."

msgid "(Patch submitted by Giampaolo Rodolà in :issue:`10784`.)"
msgstr "(Patch inlämnad av Giampaolo Rodolà i :issue:`10784`.)"

msgid ""
"The new :func:`os.replace` function allows cross-platform renaming of a file "
"with overwriting the destination.  With :func:`os.rename`, an existing "
"destination file is overwritten under POSIX, but raises an error under "
"Windows. (Contributed by Antoine Pitrou in :issue:`8828`.)"
msgstr ""
"Den nya funktionen :func:`os.replace` gör det möjligt att byta namn på en "
"fil över flera plattformar med överskrivning av destinationsfilen.  Med :"
"func:`os.rename` skrivs en befintlig destinationsfil över under POSIX, men "
"ger upphov till ett fel under Windows. (Bidrag från Antoine Pitrou i :issue:"
"`8828`.)"

msgid ""
"The stat family of functions (:func:`~os.stat`, :func:`~os.fstat`, and :func:"
"`~os.lstat`) now support reading a file's timestamps with nanosecond "
"precision.  Symmetrically, :func:`~os.utime` can now write file timestamps "
"with nanosecond precision.  (Contributed by Larry Hastings in :issue:"
"`14127`.)"
msgstr ""
"Stat-familjen av funktioner (:func:`~os.stat`, :func:`~os.fstat` och :func:"
"`~os.lstat`) stöder nu läsning av en fils tidsstämplar med nanosekunders "
"precision.  Symmetriskt kan :func:`~os.utime` nu skriva filens tidsstämplar "
"med nanosekundsprecision.  (Bidrag från Larry Hastings i :issue:`14127`.)"

msgid ""
"The new :func:`os.get_terminal_size` function queries the size of the "
"terminal attached to a file descriptor. See also :func:`shutil."
"get_terminal_size`. (Contributed by Zbigniew Jędrzejewski-Szmek in :issue:"
"`13609`.)"
msgstr ""
"Den nya funktionen :func:`os.get_terminal_size` frågar efter storleken på "
"terminalen som är kopplad till en filbeskrivare. Se även :func:`shutil."
"get_terminal_size`. (Bidrag från Zbigniew Jędrzejewski-Szmek i :issue:"
"`13609`.)"

msgid ""
"New functions to support Linux extended attributes (:issue:`12720`): :func:"
"`~os.getxattr`, :func:`~os.listxattr`, :func:`~os.removexattr`, :func:`~os."
"setxattr`."
msgstr ""
"Nya funktioner för stöd för Linux utökade attribut (:issue:`12720`): :func:"
"`~os.getxattr`, :func:`~os.listxattr`, :func:`~os.removexattr`, :func:`~os."
"setxattr`."

msgid ""
"New interface to the scheduler. These functions control how a process is "
"allocated CPU time by the operating system. New functions: :func:`~os."
"sched_get_priority_max`, :func:`~os.sched_get_priority_min`, :func:`~os."
"sched_getaffinity`, :func:`~os.sched_getparam`, :func:`~os."
"sched_getscheduler`, :func:`~os.sched_rr_get_interval`, :func:`~os."
"sched_setaffinity`, :func:`~os.sched_setparam`, :func:`~os."
"sched_setscheduler`, :func:`~os.sched_yield`,"
msgstr ""
"Nytt gränssnitt till schemaläggaren. Dessa funktioner styr hur en process "
"tilldelas CPU-tid av operativsystemet. Nya funktioner: :func:`~os."
"sched_get_priority_max`, :func:`~os.sched_get_priority_min`, :func:`~os."
"sched_getaffinity`, :func:`~os.sched_getparam`, :func:`~os."
"sched_getscheduler`, :func:`~os.sched_rr_get_interval`, :func:`~os."
"sched_setaffinity`, :func:`~os.sched_setparam`, :func:`~os."
"sched_setscheduler`, :func:`~os.sched_yield`,"

msgid "New functions to control the file system:"
msgstr "Nya funktioner för att styra filsystemet:"

msgid ""
":func:`~os.posix_fadvise`: Announces an intention to access data in a "
"specific pattern thus allowing the kernel to make optimizations."
msgstr ""
":func:`~os.posix_fadvise`: Tillkännager en avsikt att komma åt data i ett "
"specifikt mönster vilket gör det möjligt för kärnan att göra optimeringar."

msgid ""
":func:`~os.posix_fallocate`: Ensures that enough disk space is allocated for "
"a file."
msgstr ""
":func:`~os.posix_fallocate`: Säkerställer att tillräckligt med diskutrymme "
"allokeras för en fil."

msgid ":func:`~os.sync`: Force write of everything to disk."
msgstr ":func:`~os.sync`: Tvinga fram skrivning av allt till disk."

msgid "Additional new  posix functions:"
msgstr "Ytterligare nya posix-funktioner:"

msgid ""
":func:`~os.lockf`: Apply, test or remove a POSIX lock on an open file "
"descriptor."
msgstr ""
":func:`~os.lockf`: Tillämpa, testa eller ta bort ett POSIX-lås på en öppen "
"filbeskrivare."

msgid ""
":func:`~os.pread`: Read from a file descriptor at an offset, the file offset "
"remains unchanged."
msgstr ""
":func:`~os.pread`: Läs från en filbeskrivare vid en offset, filens offset "
"förblir oförändrad."

msgid ""
":func:`~os.pwrite`: Write to a file descriptor from an offset, leaving the "
"file offset unchanged."
msgstr ""
":func:`~os.pwrite`: Skriv till en filbeskrivare från en offset, vilket "
"lämnar filoffseten oförändrad."

msgid ""
":func:`~os.readv`: Read from a file descriptor into a number of writable "
"buffers."
msgstr ""
":func:`~os.readv`: Läser från en filbeskrivare till ett antal skrivbara "
"buffertar."

msgid ""
":func:`~os.truncate`: Truncate the file corresponding to *path*, so that it "
"is at most *length* bytes in size."
msgstr ""
":func:`~os.truncate`: Trunkerar filen som motsvarar *sökväg*, så att den är "
"högst *längd* byte stor."

msgid ""
":func:`~os.waitid`: Wait for the completion of one or more child processes."
msgstr ""
":func:`~os.waitid`: Vänta på att en eller flera underordnade processer ska "
"slutföras."

msgid ""
":func:`~os.writev`: Write the contents of *buffers* to a file descriptor, "
"where *buffers* is an arbitrary sequence of buffers."
msgstr ""
":func:`~os.writev`: Skriv innehållet i *buffertar* till en filbeskrivare, "
"där *buffertar* är en godtycklig sekvens av buffertar."

msgid ""
":func:`~os.getgrouplist` (:issue:`9344`): Return list of group ids that "
"specified user belongs to."
msgstr ""
":func:`~os.getgrouplist` (:issue:`9344`): Returnerar en lista med grupp-ID:n "
"som den angivna användaren tillhör."

msgid ""
":func:`~os.times` and :func:`~os.uname`: Return type changed from a tuple to "
"a tuple-like object with named attributes."
msgstr ""
":func:`~os.times` och :func:`~os.uname`: Returtypen ändrad från en tupel "
"till ett tupelliknande objekt med namngivna attribut."

msgid ""
"Some platforms now support additional constants for the :func:`~os.lseek` "
"function, such as ``os.SEEK_HOLE`` and ``os.SEEK_DATA``."
msgstr ""
"Vissa plattformar stöder nu ytterligare konstanter för funktionen :func:`~os."
"lseek`, t.ex. ``os.SEEK_HOLE`` och ``os.SEEK_DATA``."

msgid ""
"New constants :const:`~os.RTLD_LAZY`, :const:`~os.RTLD_NOW`, :const:`~os."
"RTLD_GLOBAL`, :const:`~os.RTLD_LOCAL`, :const:`~os.RTLD_NODELETE`, :const:"
"`~os.RTLD_NOLOAD`, and :const:`~os.RTLD_DEEPBIND` are available on platforms "
"that support them.   These are for use with the :func:`sys.setdlopenflags` "
"function, and supersede the similar constants defined in :mod:`ctypes` and :"
"mod:`DLFCN`.  (Contributed by Victor Stinner in :issue:`13226`.)"
msgstr ""
"Nya konstanter :const:`~os.RTLD_LAZY`, :const:`~os.RTLD_NOW`, :const:`~os."
"RTLD_GLOBAL`, :const:`~os.RTLD_LOCAL`, :const:`~os.RTLD_NODELETE`, :const:"
"`~os.RTLD_NOLOAD` och :const:`~os.RTLD_DEEPBIND` finns tillgängliga på "
"plattformar som stöder dem.   Dessa är avsedda att användas med funktionen :"
"func:`sys.setdlopenflags` och ersätter de liknande konstanter som definieras "
"i :mod:`ctypes` och :mod:`DLFCN`.  (Bidrag från Victor Stinner i :issue:"
"`13226`.)"

msgid ""
":func:`os.symlink` now accepts (and ignores) the ``target_is_directory`` "
"keyword argument on non-Windows platforms, to ease cross-platform support."
msgstr ""
":func:`os.symlink` accepterar nu (och ignorerar) nyckelordsargumentet "
"``target_is_directory`` på icke-Windows-plattformar, för att underlätta stöd "
"för flera plattformar."

msgid "pdb"
msgstr "pdb"

msgid ""
"Tab-completion is now available not only for command names, but also their "
"arguments.  For example, for the ``break`` command, function and file names "
"are completed."
msgstr ""
"Tabbkomplettering är nu tillgänglig inte bara för kommandonamn utan även för "
"deras argument.  För kommandot ``break`` kompletteras t.ex. funktions- och "
"filnamn."

msgid "(Contributed by Georg Brandl in :issue:`14210`)"
msgstr "(Bidrag från Georg Brandl i :issue:`14210`)"

msgid "pickle"
msgstr "gurka"

msgid ""
":class:`pickle.Pickler` objects now have an optional :attr:`~pickle.Pickler."
"dispatch_table` attribute allowing per-pickler reduction functions to be set."
msgstr ""
":class:`pickle.Pickler`-objekt har nu ett valfritt :attr:`~pickle.Pickler."
"dispatch_table`-attribut som gör det möjligt att ställa in "
"reduktionsfunktioner för varje pickler."

msgid "(Contributed by Richard Oudkerk in :issue:`14166`.)"
msgstr "(Bidrag från Richard Oudkerk i :issue:`14166`.)"

msgid "pydoc"
msgstr "pydoc"

msgid ""
"The Tk GUI and the :func:`~pydoc.serve` function have been removed from the :"
"mod:`pydoc` module: ``pydoc -g`` and :func:`~pydoc.serve` have been "
"deprecated in Python 3.2."
msgstr ""
"Tk GUI och funktionen :func:`~pydoc.serve` har tagits bort från modulen :mod:"
"`pydoc`: ``pydoc -g`` och :func:`~pydoc.serve` har utgått i Python 3.2."

msgid "re"
msgstr "re"

msgid ""
":class:`str` regular expressions now support ``\\u`` and ``\\U`` escapes."
msgstr ":class:`str` reguljära uttryck stöder nu ``\\u`` och ``U`` escapes."

msgid "(Contributed by Serhiy Storchaka in :issue:`3665`.)"
msgstr "(Bidrag från Serhiy Storchaka i :issue:`3665`.)"

msgid "sched"
msgstr "schema"

msgid ""
":meth:`~sched.scheduler.run` now accepts a *blocking* parameter which when "
"set to false makes the method execute the scheduled events due to expire "
"soonest (if any) and then return immediately. This is useful in case you "
"want to use the :class:`~sched.scheduler` in non-blocking applications.  "
"(Contributed by Giampaolo Rodolà in :issue:`13449`.)"
msgstr ""
":meth:`~sched.scheduler.run` accepterar nu en *blockerande* parameter som "
"när den sätts till false gör att metoden kör de schemalagda händelser som "
"kommer att löpa ut tidigast (om det finns några) och sedan återgår "
"omedelbart. Detta är användbart om du vill använda :class:`~sched.scheduler` "
"i icke-blockerande applikationer.  (Bidrag från Giampaolo Rodolà i :issue:"
"`13449`.)"

msgid ""
":class:`~sched.scheduler` class can now be safely used in multi-threaded "
"environments.  (Contributed by Josiah Carlson and Giampaolo Rodolà in :issue:"
"`8684`.)"
msgstr ""
":class:`~sched.scheduler` kan nu användas på ett säkert sätt i flertrådade "
"miljöer.  (Bidrag från Josiah Carlson och Giampaolo Rodolà i :issue:`8684`.)"

msgid ""
"*timefunc* and *delayfunct* parameters of :class:`~sched.scheduler` class "
"constructor are now optional and defaults to :func:`time.time` and :func:"
"`time.sleep` respectively.  (Contributed by Chris Clark in :issue:`13245`.)"
msgstr ""
"*timefunc* och *delayfunct* parametrarna i :class:`~sched.scheduler` "
"klasskonstruktören är nu valfria och standardvärdena är :func:`time.time` "
"respektive :func:`time.sleep`.  (Bidrag från Chris Clark i :issue:`13245`.)"

msgid ""
":meth:`~sched.scheduler.enter` and :meth:`~sched.scheduler.enterabs` "
"*argument* parameter is now optional.  (Contributed by Chris Clark in :issue:"
"`13245`.)"
msgstr ""
":meth:`~sched.scheduler.enter` och :meth:`~sched.scheduler.enterabs` "
"*argument* parametern är nu valfri.  (Bidrag från Chris Clark i :issue:"
"`13245`.)"

msgid ""
":meth:`~sched.scheduler.enter` and :meth:`~sched.scheduler.enterabs` now "
"accept a *kwargs* parameter.  (Contributed by Chris Clark in :issue:`13245`.)"
msgstr ""
":meth:`~sched.scheduler.enter` och :meth:`~sched.scheduler.enterabs` "
"accepterar nu en *kwargs* parameter.  (Bidrag från Chris Clark i :issue:"
"`13245`.)"

msgid "select"
msgstr "välj"

msgid ""
"Solaris and derivative platforms have a new class :class:`select.devpoll` "
"for high performance asynchronous sockets via :file:`/dev/poll`. "
"(Contributed by Jesús Cea Avión in :issue:`6397`.)"
msgstr ""
"Solaris och avledda plattformar har en ny klass :class:`select.devpoll` för "
"högpresterande asynkrona sockets via :file:`/dev/poll`. (Bidrag från Jesús "
"Cea Avión i :issue:`6397`.)"

msgid "shlex"
msgstr "shlex"

msgid ""
"The previously undocumented helper function ``quote`` from the :mod:`!pipes` "
"modules has been moved to the :mod:`shlex` module and documented.  :func:"
"`~shlex.quote` properly escapes all characters in a string that might be "
"otherwise given special meaning by the shell."
msgstr ""
"Den tidigare odokumenterade hjälpfunktionen ``quote`` från :mod:`!pipes`-"
"modulerna har flyttats till :mod:`shlex`-modulen och dokumenterats. :func:"
"`~shlex.quote` undviker på rätt sätt alla tecken i en sträng som annars "
"skulle kunna ges en speciell betydelse av skalet."

msgid "shutil"
msgstr "shutil"

msgid "New functions:"
msgstr "Nya funktioner:"

msgid ""
":func:`~shutil.disk_usage`: provides total, used and free disk space "
"statistics.  (Contributed by Giampaolo Rodolà in :issue:`12442`.)"
msgstr ""
":func:`~shutil.disk_usage`: ger statistik över totalt, använt och ledigt "
"diskutrymme.  (Bidrag från Giampaolo Rodolà i :issue:`12442`.)"

msgid ""
":func:`~shutil.chown`: allows one to change user and/or group of the given "
"path also specifying the user/group names and not only their numeric ids.  "
"(Contributed by Sandro Tosi in :issue:`12191`.)"
msgstr ""
":func:`~shutil.chown`: gör det möjligt att ändra användare och/eller grupp "
"för den angivna sökvägen genom att ange användarens/gruppens namn och inte "
"bara deras numeriska id.  (Bidrag från Sandro Tosi i :issue:`12191`.)"

msgid ""
":func:`shutil.get_terminal_size`: returns the size of the terminal window to "
"which the interpreter is attached.  (Contributed by Zbigniew Jędrzejewski-"
"Szmek in :issue:`13609`.)"
msgstr ""
":func:`shutil.get_terminal_size`: returnerar storleken på terminalfönstret "
"som tolken är kopplad till.  (Bidrag från Zbigniew Jędrzejewski-Szmek i :"
"issue:`13609`.)"

msgid ""
":func:`~shutil.copy2` and :func:`~shutil.copystat` now preserve file "
"timestamps with nanosecond precision on platforms that support it. They also "
"preserve file \"extended attributes\" on Linux.  (Contributed by Larry "
"Hastings in :issue:`14127` and  :issue:`15238`.)"
msgstr ""
":func:`~shutil.copy2` och :func:`~shutil.copystat` bevarar nu filernas "
"tidsstämplar med nanosekundsprecision på plattformar som stöder detta. De "
"bevarar även filens \"utökade attribut\" på Linux.  (Bidrag från Larry "
"Hastings i :issue:`14127` och :issue:`15238`.)"

msgid ""
"Several functions now take an optional ``symlinks`` argument: when that "
"parameter is true, symlinks aren't dereferenced and the operation instead "
"acts on the symlink itself (or creates one, if relevant). (Contributed by "
"Hynek Schlawack in :issue:`12715`.)"
msgstr ""
"Flera funktioner tar nu ett valfritt ``symlinks``-argument: när den "
"parametern är sann, avrefereras inte symlinks och operationen agerar "
"istället på själva symlinken (eller skapar en, om relevant). (Bidrag från "
"Hynek Schlawack i :issue:`12715`.)"

msgid ""
"When copying files to a different file system, :func:`~shutil.move` now "
"handles symlinks the way the posix ``mv`` command does, recreating the "
"symlink rather than copying the target file contents.  (Contributed by "
"Jonathan Niehof in :issue:`9993`.)  :func:`~shutil.move` now also returns "
"the ``dst`` argument as its result."
msgstr ""
"Vid kopiering av filer till ett annat filsystem hanterar :func:`~shutil."
"move` nu symbollänkar på samma sätt som posix-kommandot ``mv`` gör, genom "
"att återskapa symbollänken istället för att kopiera innehållet i målfilen.  "
"(Bidrag från Jonathan Niehof i :issue:`9993`.) :func:`~shutil.move` "
"returnerar nu även argumentet ``dst`` som sitt resultat."

msgid ""
":func:`~shutil.rmtree` is now resistant to symlink attacks on platforms "
"which support the new ``dir_fd`` parameter in :func:`os.open` and :func:`os."
"unlink`.  (Contributed by Martin von Löwis and Hynek Schlawack in :issue:"
"`4489`.)"
msgstr ""
":func:`~shutil.rmtree` är nu resistent mot symlänk-attacker på plattformar "
"som stöder den nya ``dir_fd``-parametern i :func:`os.open` och :func:`os."
"unlink`.  (Bidrag från Martin von Löwis och Hynek Schlawack i :issue:`4489`.)"

msgid "signal"
msgstr "signal"

msgid "The :mod:`signal` module has new functions:"
msgstr "Modulen :mod:`signal` har fått nya funktioner:"

msgid ""
":func:`~signal.pthread_sigmask`: fetch and/or change the signal mask of the "
"calling thread (Contributed by Jean-Paul Calderone in :issue:`8407`);"
msgstr ""
":func:`~signal.pthread_sigmask`: hämta och/eller ändra signalmasken för den "
"anropande tråden (Bidrag från Jean-Paul Calderone i :issue:`8407`);"

msgid ":func:`~signal.pthread_kill`: send a signal to a thread;"
msgstr ":func:`~signal.pthread_kill`: skicka en signal till en tråd;"

msgid ":func:`~signal.sigpending`: examine pending functions;"
msgstr ":func:`~signal.sigpending`: undersöka väntande funktioner;"

msgid ":func:`~signal.sigwait`: wait a signal;"
msgstr ":func:`~signal.sigwait`: vänta på en signal;"

msgid ""
":func:`~signal.sigwaitinfo`: wait for a signal, returning detailed "
"information about it;"
msgstr ""
":func:`~signal.sigwaitinfo`: väntar på en signal och returnerar detaljerad "
"information om den;"

msgid ""
":func:`~signal.sigtimedwait`: like :func:`~signal.sigwaitinfo` but with a "
"timeout."
msgstr ""
":func:`~signal.sigtimedwait`: som :func:`~signal.sigwaitinfo` men med en "
"timeout."

msgid ""
"The signal handler writes the signal number as a single byte instead of a "
"nul byte into the wakeup file descriptor. So it is possible to wait more "
"than one signal and know which signals were raised."
msgstr ""
"Signalhanteraren skriver signalnumret som en enda byte i stället för en nul-"
"byte i wakeup-filens deskriptor. Det är alltså möjligt att vänta på mer än "
"en signal och veta vilka signaler som utlöstes."

msgid ""
":func:`signal.signal` and :func:`signal.siginterrupt` raise an OSError, "
"instead of a RuntimeError: OSError has an errno attribute."
msgstr ""
":func:`signal.signal` och :func:`signal.siginterrupt` ger upphov till ett "
"OSError, istället för ett RuntimeError: OSError har ett errno attribut."

msgid "smtpd"
msgstr "smtpd"

msgid ""
"The :mod:`!smtpd` module now supports :rfc:`5321` (extended SMTP) and :rfc:"
"`1870` (size extension).  Per the standard, these extensions are enabled if "
"and only if the client initiates the session with an ``EHLO`` command."
msgstr ""
"Modulen :mod:`!smtpd` stöder nu :rfc:`5321` (extended SMTP) och :rfc:`1870` "
"(size extension).  Enligt standarden aktiveras dessa tillägg om och endast "
"om klienten initierar sessionen med ett ``EHLO``-kommando."

msgid ""
"(Initial ``ELHO`` support by Alberto Trevino.  Size extension by Juhana "
"Jauhiainen.  Substantial additional work on the patch contributed by Michele "
"Orrù and Dan Boswell.  :issue:`8739`)"
msgstr ""
"(Initialt stöd för ``ELHO`` av Alberto Trevino.  Storleksutökning av Juhana "
"Jauhiainen.  Betydande ytterligare arbete på patchen bidragit av Michele "
"Orrù och Dan Boswell. :issue:`8739`)"

msgid "smtplib"
msgstr "smtplib"

msgid ""
"The :class:`~smtplib.SMTP`, :class:`~smtplib.SMTP_SSL`, and :class:`~smtplib."
"LMTP` classes now accept a ``source_address`` keyword argument to specify "
"the ``(host, port)`` to use as the source address in the bind call when "
"creating the outgoing socket.  (Contributed by Paulo Scardine in :issue:"
"`11281`.)"
msgstr ""
"Klasserna :class:`~smtplib.SMTP`, :class:`~smtplib.SMTP_SSL` och :class:"
"`~smtplib.LMTP` accepterar nu ett ```source_address`` nyckelordsargument för "
"att ange ``(host, port)`` att använda som källadress i bind-anropet när det "
"utgående uttaget skapas.  (Bidrag från Paulo Scardine i :issue:`11281`.)"

msgid ""
":class:`~smtplib.SMTP` now supports the context management protocol, "
"allowing an ``SMTP`` instance to be used in a ``with`` statement.  "
"(Contributed by Giampaolo Rodolà in :issue:`11289`.)"
msgstr ""
":class:`~smtplib.SMTP` har nu stöd för kontexthanteringsprotokollet, vilket "
"gör att en ``SMTP``-instans kan användas i en ``with``-sats.  (Bidrag från "
"Giampaolo Rodolà i :issue:`11289`.)"

msgid ""
"The :class:`~smtplib.SMTP_SSL` constructor and the :meth:`~smtplib.SMTP."
"starttls` method now accept an SSLContext parameter to control parameters of "
"the secure channel.  (Contributed by Kasun Herath in :issue:`8809`.)"
msgstr ""
"Konstruktorn :class:`~smtplib.SMTP_SSL` och metoden :meth:`~smtplib.SMTP."
"starttls` accepterar nu en SSLContext-parameter för att kontrollera "
"parametrarna för den säkra kanalen.  (Bidrag från Kasun Herath i :issue:"
"`8809`.)"

msgid "socket"
msgstr "kortplats"

msgid ""
"The :class:`~socket.socket` class now exposes additional methods to process "
"ancillary data when supported by the underlying platform:"
msgstr ""
"Klassen :class:`~socket.socket` innehåller nu ytterligare metoder för att "
"bearbeta tilläggsdata när detta stöds av den underliggande plattformen:"

msgid ":func:`~socket.socket.sendmsg`"
msgstr ":func:`~socket.socket.sendmsg`"

msgid ":func:`~socket.socket.recvmsg`"
msgstr ":func:`~socket.socket.recvmsg`"

msgid ":func:`~socket.socket.recvmsg_into`"
msgstr ":func:`~socket.socket.recvmsg_into`"

msgid ""
"(Contributed by David Watson in :issue:`6560`, based on an earlier patch by "
"Heiko Wundram)"
msgstr ""
"(Bidrag från David Watson i :issue:`6560`, baserat på en tidigare patch av "
"Heiko Wundram)"

msgid ""
"The :class:`~socket.socket` class now supports the PF_CAN protocol family "
"(https://en.wikipedia.org/wiki/Socketcan), on Linux (https://lwn.net/"
"Articles/253425)."
msgstr ""
"Klassen :class:`~socket.socket` har nu stöd för PF_CAN-protokollfamiljen "
"(https://en.wikipedia.org/wiki/Socketcan), på Linux (https://lwn.net/"
"Articles/253425)."

msgid ""
"(Contributed by Matthias Fuchs, updated by Tiago Gonçalves in :issue:"
"`10141`.)"
msgstr ""
"(Bidrag från Matthias Fuchs, uppdaterad av Tiago Gonçalves i :issue:`10141`.)"

msgid ""
"The :class:`~socket.socket` class now supports the PF_RDS protocol family "
"(https://en.wikipedia.org/wiki/Reliable_Datagram_Sockets and `https://oss."
"oracle.com/projects/rds <https://web.archive.org/web/20130115155505/https://"
"oss.oracle.com/projects/rds/>`__)."
msgstr ""
"Klassen :class:`~socket.socket` har nu stöd för PF_RDS-protokollfamiljen "
"(https://en.wikipedia.org/wiki/Reliable_Datagram_Sockets och `https://oss."
"oracle.com/projects/rds <https://web.archive.org/web/20130115155505/https://"
"oss.oracle.com/projects/rds/>`__)."

msgid ""
"The :class:`~socket.socket` class now supports the ``PF_SYSTEM`` protocol "
"family on OS X.  (Contributed by Michael Goderbauer in :issue:`13777`.)"
msgstr ""
"Klassen :class:`~socket.socket` har nu stöd för protokollfamiljen "
"``PF_SYSTEM`` på OS X. (Bidrag från Michael Goderbauer i :issue:`13777`.)"

msgid ""
"New function :func:`~socket.sethostname` allows the hostname to be set on "
"Unix systems if the calling process has sufficient privileges. (Contributed "
"by Ross Lagerwall in :issue:`10866`.)"
msgstr ""
"Den nya funktionen :func:`~socket.sethostname` gör det möjligt att ställa in "
"värdnamnet på Unix-system om den anropande processen har tillräckliga "
"privilegier. (Bidrag från Ross Lagerwall i :issue:`10866`.)"

msgid "socketserver"
msgstr "socketserver"

msgid ""
":class:`~socketserver.BaseServer` now has an overridable method :meth:"
"`~socketserver.BaseServer.service_actions` that is called by the :meth:"
"`~socketserver.BaseServer.serve_forever` method in the service loop. :class:"
"`~socketserver.ForkingMixIn` now uses this to clean up zombie child "
"processes.  (Contributed by Justin Warkentin in :issue:`11109`.)"
msgstr ""
":class:`~socketserver.BaseServer` har nu en åsidosättbar metod :meth:"
"`~socketserver.BaseServer.service_actions` som anropas av metoden :meth:"
"`~socketserver.BaseServer.serve_forever` i serviceslingan. :class:"
"`~socketserver.ForkingMixIn` använder nu detta för att rensa upp "
"zombiebarnprocesser.  (Bidrag från Justin Warkentin i :issue:`11109`.)"

msgid "sqlite3"
msgstr "sqlite3"

msgid ""
"New :class:`sqlite3.Connection` method :meth:`~sqlite3.Connection."
"set_trace_callback` can be used to capture a trace of all sql commands "
"processed by sqlite.  (Contributed by Torsten Landschoff in :issue:`11688`.)"
msgstr ""
"Ny :class:`sqlite3.Connection`-metod :meth:`~sqlite3.Connection."
"set_trace_callback` kan användas för att fånga en spårning av alla sql-"
"kommandon som bearbetas av sqlite.  (Bidrag från Torsten Landschoff i :issue:"
"`11688`.)"

msgid "ssl"
msgstr "ssl"

msgid "The :mod:`ssl` module has two new random generation functions:"
msgstr "Modulen :mod:`ssl` har två nya funktioner för slumpgenerering:"

msgid ""
":func:`~ssl.RAND_bytes`: generate cryptographically strong pseudo-random "
"bytes."
msgstr ""
":func:`~ssl.RAND_bytes`: genererar kryptografiskt starka pseudoslumpmässiga "
"bytes."

msgid ":func:`~ssl.RAND_pseudo_bytes`: generate pseudo-random bytes."
msgstr ":func:`~ssl.RAND_pseudo_bytes`: generera pseudoslumpmässiga byte."

msgid "(Contributed by Victor Stinner in :issue:`12049`.)"
msgstr "(Bidrag från Victor Stinner i :issue:`12049`.)"

msgid ""
"The :mod:`ssl` module now exposes a finer-grained exception hierarchy in "
"order to make it easier to inspect the various kinds of errors. (Contributed "
"by Antoine Pitrou in :issue:`11183`.)"
msgstr ""
"Modulen :mod:`ssl` visar nu en mer finfördelad undantagshierarki för att "
"göra det enklare att inspektera olika typer av fel. (Bidrag från Antoine "
"Pitrou i :issue:`11183`.)"

msgid ""
":meth:`~ssl.SSLContext.load_cert_chain` now accepts a *password* argument to "
"be used if the private key is encrypted. (Contributed by Adam Simpkins in :"
"issue:`12803`.)"
msgstr ""
":meth:`~ssl.SSLContext.load_cert_chain` accepterar nu ett *password*-"
"argument som ska användas om den privata nyckeln är krypterad. (Bidrag från "
"Adam Simpkins i :issue:`12803`.)"

msgid ""
"Diffie-Hellman key exchange, both regular and Elliptic Curve-based, is now "
"supported through the :meth:`~ssl.SSLContext.load_dh_params` and :meth:`~ssl."
"SSLContext.set_ecdh_curve` methods. (Contributed by Antoine Pitrou in :issue:"
"`13626` and :issue:`13627`.)"
msgstr ""
"Diffie-Hellman nyckelutbyte, både vanligt och Elliptic Curve-baserat, stöds "
"nu genom metoderna :meth:`~ssl.SSLContext.load_dh_params` och :meth:`~ssl."
"SSLContext.set_ecdh_curve`. (Bidrag från Antoine Pitrou i :issue:`13626` "
"och :issue:`13627`.)"

msgid ""
"SSL sockets have a new :meth:`~ssl.SSLSocket.get_channel_binding` method "
"allowing the implementation of certain authentication mechanisms such as "
"SCRAM-SHA-1-PLUS.  (Contributed by Jacek Konieczny in :issue:`12551`.)"
msgstr ""
"SSL-sockets har en ny :meth:`~ssl.SSLSocket.get_channel_binding`-metod som "
"gör det möjligt att implementera vissa autentiseringsmekanismer som SCRAM-"
"SHA-1-PLUS.  (Bidrag från Jacek Konieczny i :issue:`12551`.)"

msgid ""
"You can query the SSL compression algorithm used by an SSL socket, thanks to "
"its new :meth:`~ssl.SSLSocket.compression` method.  The new attribute :const:"
"`~ssl.OP_NO_COMPRESSION` can be used to disable compression. (Contributed by "
"Antoine Pitrou in :issue:`13634`.)"
msgstr ""
"Du kan fråga vilken SSL-komprimeringsalgoritm som används av en SSL-socket "
"tack vare den nya metoden :meth:`~ssl.SSLSocket.compression`.  Det nya "
"attributet :const:`~ssl.OP_NO_COMPRESSION` kan användas för att inaktivera "
"komprimering. (Bidrag från Antoine Pitrou i :issue:`13634`.)"

msgid ""
"Support has been added for the Next Protocol Negotiation extension using "
"the :meth:`ssl.SSLContext.set_npn_protocols` method. (Contributed by Colin "
"Marc in :issue:`14204`.)"
msgstr ""
"Stöd har lagts till för tillägget Next Protocol Negotiation med hjälp av "
"metoden :meth:`ssl.SSLContext.set_npn_protocols`. (Bidrag från Colin Marc i :"
"issue:`14204`.)"

msgid ""
"SSL errors can now be introspected more easily thanks to :attr:`~ssl."
"SSLError.library` and :attr:`~ssl.SSLError.reason` attributes. (Contributed "
"by Antoine Pitrou in :issue:`14837`.)"
msgstr ""
"SSL-fel kan nu introspekteras lättare tack vare attributen :attr:`~ssl."
"SSLError.library` och :attr:`~ssl.SSLError.reason`. (Bidrag från Antoine "
"Pitrou i :issue:`14837`.)"

msgid ""
"The :func:`~ssl.get_server_certificate` function now supports IPv6. "
"(Contributed by Charles-François Natali in :issue:`11811`.)"
msgstr ""
"Funktionen :func:`~ssl.get_server_certificate` har nu stöd för IPv6. (Bidrag "
"från Charles-François Natali i :issue:`11811`.)"

msgid ""
"New attribute :const:`~ssl.OP_CIPHER_SERVER_PREFERENCE` allows setting SSLv3 "
"server sockets to use the server's cipher ordering preference rather than "
"the client's (:issue:`13635`)."
msgstr ""
"Nytt attribut :const:`~ssl.OP_CIPHER_SERVER_PREFERENCE` tillåter inställning "
"av SSLv3-serveruttag för att använda serverns preferens för chifferordning "
"snarare än klientens (:issue:`13635`)."

msgid "stat"
msgstr "stat"

msgid ""
"The undocumented tarfile.filemode function has been moved to :func:`stat."
"filemode`. It can be used to convert a file's mode to a string of the form '-"
"rwxrwxrwx'."
msgstr ""
"Den odokumenterade funktionen tarfile.filemode har flyttats till :func:`stat."
"filemode`. Den kan användas för att konvertera en fils läge till en sträng "
"av formen '-rwxrwxrwx'."

msgid "(Contributed by Giampaolo Rodolà in :issue:`14807`.)"
msgstr "(Bidrag från Giampaolo Rodolà i :issue:`14807`.)"

msgid "struct"
msgstr "struktur"

msgid ""
"The :mod:`struct` module now supports :c:type:`ssize_t` and :c:type:`size_t` "
"via the new codes ``n`` and ``N``, respectively.  (Contributed by Antoine "
"Pitrou in :issue:`3163`.)"
msgstr ""
"Modulen :mod:`struct` stöder nu :c:type:`ssize_t` och :c:type:`size_t` via "
"de nya koderna ``n`` respektive ``N``.  (Bidrag från Antoine Pitrou i :issue:"
"`3163`.)"

msgid "subprocess"
msgstr "delprocess"

msgid ""
"Command strings can now be bytes objects on posix platforms.  (Contributed "
"by Victor Stinner in :issue:`8513`.)"
msgstr ""
"Kommandosträngar kan nu vara bytesobjekt på posix-plattformar.  (Bidrag från "
"Victor Stinner i :issue:`8513`.)"

msgid ""
"A new constant :const:`~subprocess.DEVNULL` allows suppressing output in a "
"platform-independent fashion.  (Contributed by Ross Lagerwall in :issue:"
"`5870`.)"
msgstr ""
"En ny konstant :const:`~subprocess.DEVNULL` gör det möjligt att undertrycka "
"utdata på ett plattformsoberoende sätt.  (Bidrag från Ross Lagerwall i :"
"issue:`5870`.)"

msgid "sys"
msgstr "system"

msgid ""
"The :mod:`sys` module has a new :data:`~sys.thread_info` :term:`named tuple` "
"holding information about the thread implementation (:issue:`11223`)."
msgstr ""
"Modulen :mod:`sys` har en ny :data:`~sys.thread_info` :term:`named tuple` "
"som innehåller information om trådimplementationen (:issue:`11223`)."

msgid "tarfile"
msgstr "tarfil"

msgid ""
":mod:`tarfile` now supports ``lzma`` encoding via the :mod:`lzma` module. "
"(Contributed by Lars Gustäbel in :issue:`5689`.)"
msgstr ""
":mod:`tarfile` stöder nu ``lzma``-kodning via modulen :mod:`lzma`. (Bidrag "
"från Lars Gustäbel i :issue:`5689`.)"

msgid "tempfile"
msgstr "tempfil"

msgid ""
":class:`tempfile.SpooledTemporaryFile`\\'s :meth:`~tempfile."
"SpooledTemporaryFile.truncate` method now accepts a ``size`` parameter.  "
"(Contributed by Ryan Kelly in :issue:`9957`.)"
msgstr ""
":class:`tempfile.SpooledTemporaryFile`'s :meth:`~tempfile."
"SpooledTemporaryFile.truncate` method accepterar nu en ``size`` parameter.  "
"(Bidrag från Ryan Kelly i :issue:`9957`.)"

msgid "textwrap"
msgstr "textbrytning"

msgid ""
"The :mod:`textwrap` module has a new :func:`~textwrap.indent` that makes it "
"straightforward to add a common prefix to selected lines in a block of text  "
"(:issue:`13857`)."
msgstr ""
"Modulen :mod:`textwrap` har fått en ny :func:`~textwrap.indent` som gör det "
"enkelt att lägga till ett gemensamt prefix till markerade rader i ett "
"textblock (:issue:`13857`)."

msgid "threading"
msgstr "gängning"

msgid ""
":class:`threading.Condition`, :class:`threading.Semaphore`, :class:"
"`threading.BoundedSemaphore`, :class:`threading.Event`, and :class:"
"`threading.Timer`, all of which used to be factory functions returning a "
"class instance, are now classes and may be subclassed.  (Contributed by Éric "
"Araujo in :issue:`10968`.)"
msgstr ""
":class:`threading.Condition`, :class:`threading.Semaphore`, :class:"
"`threading.BoundedSemaphore`, :class:`threading.Event`, och :class:"
"`threading.Timer`, som alla tidigare var fabriksfunktioner som returnerade "
"en klassinstans, är nu klasser och kan underklassas.  (Bidrag från Éric "
"Araujo i :issue:`10968`.)"

msgid ""
"The :class:`threading.Thread` constructor now accepts a ``daemon`` keyword "
"argument to override the default behavior of inheriting the ``daemon`` flag "
"value from the parent thread (:issue:`6064`)."
msgstr ""
"Konstruktorn :class:`threading.Thread` accepterar nu ett nyckelordsargument "
"``daemon`` för att åsidosätta standardbeteendet att ärva flaggvärdet "
"``daemon`` från den överordnade tråden (:issue:`6064`)."

msgid ""
"The formerly private function ``_thread.get_ident`` is now available as the "
"public function :func:`threading.get_ident`.  This eliminates several cases "
"of direct access to the ``_thread`` module in the stdlib.  Third party code "
"that used ``_thread.get_ident`` should likewise be changed to use the new "
"public interface."
msgstr ""
"Den tidigare privata funktionen ``_thread.get_ident`` är nu tillgänglig som "
"den publika funktionen :func:`threading.get_ident`.  Detta eliminerar flera "
"fall av direktåtkomst till ``_thread``-modulen i stdlib.  Tredjepartskod som "
"använde ``_thread.get_ident`` bör också ändras för att använda det nya "
"publika gränssnittet."

msgid "time"
msgstr "tid"

msgid "The :pep:`418` added new functions to the :mod:`time` module:"
msgstr "Med :pep:`418` lades nya funktioner till i modulen :mod:`time`:"

msgid ":func:`~time.get_clock_info`: Get information on a clock."
msgstr ":func:`~time.get_clock_info`: Hämta information om en klocka."

msgid ""
":func:`~time.monotonic`: Monotonic clock (cannot go backward), not affected "
"by system clock updates."
msgstr ""
":func:`~time.monotonic`: Monotonisk klocka (kan inte gå bakåt), påverkas "
"inte av uppdateringar av systemklockan."

msgid ""
":func:`~time.perf_counter`: Performance counter with the highest available "
"resolution to measure a short duration."
msgstr ""
":func:`~time.perf_counter`: Prestandaräknare med högsta tillgängliga "
"upplösning för att mäta en kort varaktighet."

msgid ""
":func:`~time.process_time`: Sum of the system and user CPU time of the "
"current process."
msgstr ""
":func:`~time.process_time`: Summan av systemets och användarens CPU-tid för "
"den aktuella processen."

msgid "Other new functions:"
msgstr "Andra nya funktioner:"

msgid ""
":func:`~time.clock_getres`, :func:`~time.clock_gettime` and :func:`~time."
"clock_settime` functions with :samp:`CLOCK_{xxx}` constants. (Contributed by "
"Victor Stinner in :issue:`10278`.)"
msgstr ""
":func:`~time.clock_getres`, :func:`~time.clock_gettime` och :func:`~time."
"clock_settime` funktioner med :samp:`CLOCK_{xxx}` konstanter. (Bidrag från "
"Victor Stinner i :issue:`10278`.)"

msgid ""
"To improve cross platform consistency, :func:`~time.sleep` now raises a :exc:"
"`ValueError` when passed a negative sleep value.  Previously this was an "
"error on posix, but produced an infinite sleep on Windows."
msgstr ""
"För att förbättra konsistensen mellan plattformar ger :func:`~time.sleep` nu "
"upphov till ett :exc:`ValueError` när ett negativt sömnvärde skickas.  "
"Tidigare var detta ett fel på posix, men producerade en oändlig sömn på "
"Windows."

msgid "types"
msgstr "typer"

msgid ""
"Add a new :class:`types.MappingProxyType` class: Read-only proxy of a "
"mapping. (:issue:`14386`)"
msgstr ""
"Lägg till en ny :class:`types.MappingProxyType`-klass: Skrivskyddad proxy "
"för en mappning. (:issue:`14386`)"

msgid ""
"The new functions :func:`types.new_class` and :func:`types.prepare_class` "
"provide support for :pep:`3115` compliant dynamic type creation. (:issue:"
"`14588`)"
msgstr ""
"De nya funktionerna :func:`types.new_class` och :func:`types.prepare_class` "
"ger stöd för dynamisk typskapning i enlighet med :pep:`3115`. (:issue:"
"`14588`)"

msgid "unittest"
msgstr "unittest"

msgid ""
":meth:`.assertRaises`, :meth:`.assertRaisesRegex`, :meth:`.assertWarns`, "
"and :meth:`.assertWarnsRegex` now accept a keyword argument *msg* when used "
"as context managers.  (Contributed by Ezio Melotti and Winston Ewert in :"
"issue:`10775`.)"
msgstr ""
":meth:`.assertRaises`, :meth:`.assertRaisesRegex`, :meth:`.assertWarns` och :"
"meth:`.assertWarnsRegex` accepterar nu ett nyckelordsargument *msg* när de "
"används som kontexthanterare.  (Bidrag från Ezio Melotti och Winston Ewert "
"i :issue:`10775`.)"

msgid ""
":meth:`unittest.TestCase.run` now returns the :class:`~unittest.TestResult` "
"object."
msgstr ""
":meth:`unittest.TestCase.run` returnerar nu :class:`~unittest.TestResult`-"
"objektet."

msgid "urllib"
msgstr "urllib"

msgid ""
"The :class:`~urllib.request.Request` class, now accepts a *method* argument "
"used by :meth:`~urllib.request.Request.get_method` to determine what HTTP "
"method should be used.  For example, this will send a ``'HEAD'`` request::"
msgstr ""
"Klassen :class:`~urllib.request.Request` accepterar nu ett *method*-argument "
"som används av :meth:`~urllib.request.Request.get_method` för att avgöra "
"vilken HTTP-metod som ska användas.  Till exempel kommer detta att skicka en "
"``'HEAD'`` begäran::"

msgid ">>> urlopen(Request('https://www.python.org', method='HEAD'))"
msgstr ">>> urlopen(Request('https://www.python.org', method='HEAD'))"

msgid "(:issue:`1673007`)"
msgstr "(:utgåva:`1673007`)"

msgid "webbrowser"
msgstr "webbläsare"

msgid ""
"The :mod:`webbrowser` module supports more \"browsers\": Google Chrome "
"(named :program:`chrome`, :program:`chromium`, :program:`chrome-browser` or :"
"program:`chromium-browser` depending on the version and operating system), "
"and the generic launchers :program:`xdg-open`, from the FreeDesktop.org "
"project, and :program:`gvfs-open`, which is the default URI handler for "
"GNOME 3.  (The former contributed by Arnaud Calmettes in :issue:`13620`, the "
"latter by Matthias Klose in :issue:`14493`.)"
msgstr ""
"Modulen :mod:`webbrowser` stöder fler \"webbläsare\": Google Chrome (med "
"namnen :program:`chrome`, :program:`chromium`, :program:`chrome-browser` "
"eller :program:`chromium-browser` beroende på version och operativsystem), "
"och de generiska startprogrammen :program:`xdg-open`, från FreeDesktop.org-"
"projektet, och :program:`gvfs-open`, som är standard URI-hanteraren för "
"GNOME 3. (Det förstnämnda bidraget kommer från Arnaud Calmettes i :issue:"
"`13620`, det sistnämnda från Matthias Klose i :issue:`14493`)"

msgid "xml.etree.ElementTree"
msgstr "xml.etree.ElementTree"

msgid ""
"The :mod:`xml.etree.ElementTree` module now imports its C accelerator by "
"default; there is no longer a need to explicitly import :mod:`xml.etree."
"cElementTree` (this module stays for backwards compatibility, but is now "
"deprecated).  In addition,  the ``iter`` family of methods of :class:`~xml."
"etree.ElementTree.Element` has been optimized (rewritten in C). The module's "
"documentation has also been greatly improved with added examples and a more "
"detailed reference."
msgstr ""
"Modulen :mod:`xml.etree.ElementTree` importerar nu sin C-accelerator som "
"standard; det finns inte längre något behov av att uttryckligen importera :"
"mod:`xml.etree.cElementTree` (denna modul finns kvar för "
"bakåtkompatibilitet, men är nu avskriven).  Dessutom har ``iter``-familjen "
"av metoder i :class:`~xml.etree.ElementTree.Element` optimerats (omskrivna i "
"C). Modulens dokumentation har också förbättrats avsevärt med fler exempel "
"och en mer detaljerad referens."

msgid "zlib"
msgstr "zlib"

msgid ""
"New attribute :attr:`zlib.Decompress.eof` makes it possible to distinguish "
"between a properly formed compressed stream and an incomplete or truncated "
"one. (Contributed by Nadeem Vawda in :issue:`12646`.)"
msgstr ""
"Det nya attributet :attr:`zlib.Decompress.eof` gör det möjligt att skilja "
"mellan en korrekt formad komprimerad ström och en ofullständig eller "
"avkortad ström. (Bidrag från Nadeem Vawda i :issue:`12646`.)"

msgid ""
"New attribute :const:`zlib.ZLIB_RUNTIME_VERSION` reports the version string "
"of the underlying ``zlib`` library that is loaded at runtime.  (Contributed "
"by Torsten Landschoff in :issue:`12306`.)"
msgstr ""
"Nytt attribut :const:`zlib.ZLIB_RUNTIME_VERSION` rapporterar "
"versionssträngen för det underliggande ``zlib``-biblioteket som laddas vid "
"körning.  (Bidrag från Torsten Landschoff i :issue:`12306`.)"

msgid "Optimizations"
msgstr "Optimeringar"

msgid "Major performance enhancements have been added:"
msgstr "Stora prestandaförbättringar har lagts till:"

msgid ""
"Thanks to :pep:`393`, some operations on Unicode strings have been optimized:"
msgstr ""
"Tack vare :pep:`393` har vissa operationer på Unicode-strängar optimerats:"

msgid "the memory footprint is divided by 2 to 4 depending on the text"
msgstr "minnesavtrycket delas med 2 till 4 beroende på texten"

msgid ""
"encode an ASCII string to UTF-8 doesn't need to encode characters anymore, "
"the UTF-8 representation is shared with the ASCII representation"
msgstr ""
"koda en ASCII-sträng till UTF-8 behöver inte koda tecken längre, UTF-8-"
"representationen delas med ASCII-representationen"

msgid "the UTF-8 encoder has been optimized"
msgstr "uTF-8-kodaren har optimerats"

msgid ""
"repeating a single ASCII letter and getting a substring of an ASCII string "
"is 4 times faster"
msgstr ""
"att upprepa en enda ASCII-bokstav och få en delsträng av en ASCII-sträng är "
"4 gånger snabbare"

msgid "UTF-8 is now 2x to 4x faster.  UTF-16 encoding is now up to 10x faster."
msgstr ""
"UTF-8 är nu 2x till 4x snabbare.  UTF-16-kodning är nu upp till 10x snabbare."

msgid ""
"(Contributed by Serhiy Storchaka, :issue:`14624`, :issue:`14738` and :issue:"
"`15026`.)"
msgstr ""
"(Bidrag från Serhiy Storchaka, :issue:`14624`, :issue:`14738` och :issue:"
"`15026`.)"

msgid "Build and C API Changes"
msgstr "Ändringar i Build och C API"

msgid "Changes to Python's build process and to the C API include:"
msgstr "Ändringar i Pythons byggprocess och i C API inkluderar:"

msgid "New :pep:`3118` related function:"
msgstr "Ny :pep:`3118` relaterad funktion:"

msgid ":c:func:`PyMemoryView_FromMemory`"
msgstr ":c:func:`PyMemoryView_FromMemory`"

msgid ":pep:`393` added new Unicode types, macros and functions:"
msgstr ":pep:`393` lade till nya Unicode-typer, makron och funktioner:"

msgid "High-level API:"
msgstr "API på hög nivå:"

msgid ":c:func:`PyUnicode_CopyCharacters`"
msgstr ":c:func:`PyUnicode_CopyCharacters`"

msgid ":c:func:`PyUnicode_FindChar`"
msgstr ":c:func:`PyUnicode_FindChar`"

msgid ":c:func:`PyUnicode_GetLength`, :c:macro:`PyUnicode_GET_LENGTH`"
msgstr ":c:func:`PyUnicode_GetLength`, :c:macro:`PyUnicode_GET_LENGTH`"

msgid ":c:func:`PyUnicode_New`"
msgstr ":c:func:`PyUnicode_New`"

msgid ":c:func:`PyUnicode_Substring`"
msgstr ":c:func:`PyUnicode_Substring`"

msgid ":c:func:`PyUnicode_ReadChar`, :c:func:`PyUnicode_WriteChar`"
msgstr ":c:func:`PyUnicode_ReadChar`, :c:func:`PyUnicode_WriteChar`"

msgid "Low-level API:"
msgstr "API på låg nivå:"

msgid ":c:type:`Py_UCS1`, :c:type:`Py_UCS2`, :c:type:`Py_UCS4` types"
msgstr ":c:type:`Py_UCS1`, :c:type:`Py_UCS2`, :c:type:`Py_UCS4` typer"

msgid ":c:type:`PyASCIIObject` and :c:type:`PyCompactUnicodeObject` structures"
msgstr ""
":c:type:`PyASCIIObject` och :c:type:`PyCompactUnicodeObject` strukturer"

msgid ":c:macro:`PyUnicode_READY`"
msgstr ":c:macro:`PyUnicode_READY`"

msgid ":c:func:`PyUnicode_FromKindAndData`"
msgstr ":c:func:`PyUnicode_FromKindAndData`"

msgid ":c:func:`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsUCS4Copy`"
msgstr ":c:func:`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsUCS4Copy`"

msgid ""
":c:macro:`PyUnicode_DATA`, :c:macro:`PyUnicode_1BYTE_DATA`, :c:macro:"
"`PyUnicode_2BYTE_DATA`, :c:macro:`PyUnicode_4BYTE_DATA`"
msgstr ""
":c:macro:`PyUnicode_DATA`, :c:macro:`PyUnicode_1BYTE_DATA`, :c:macro:"
"`PyUnicode_2BYTE_DATA`, :c:macro:`PyUnicode_4BYTE_DATA`"

msgid ""
":c:macro:`PyUnicode_KIND` with :c:enum:`PyUnicode_Kind` enum: :c:data:`!"
"PyUnicode_WCHAR_KIND`, :c:data:`PyUnicode_1BYTE_KIND`, :c:data:"
"`PyUnicode_2BYTE_KIND`, :c:data:`PyUnicode_4BYTE_KIND`"
msgstr ""
":c:macro:`PyUnicode_KIND` med :c:enum:`PyUnicode_Kind` enum: :c:data:`!"
"PyUnicode_WCHAR_KIND`, :c:data:`PyUnicode_1BYTE_KIND`, :c:data:"
"`PyUnicode_2BYTE_KIND`, :c:data:`PyUnicode_4BYTE_KIND`"

msgid ""
":c:macro:`PyUnicode_READ`, :c:macro:`PyUnicode_READ_CHAR`, :c:macro:"
"`PyUnicode_WRITE`"
msgstr ""
":c:macro:`PyUnicode_READ`, :c:macro:`PyUnicode_READ_CHAR`, :c:macro:"
"`PyUnicode_WRITE`"

msgid ":c:macro:`PyUnicode_MAX_CHAR_VALUE`"
msgstr ":c:macro:`PyUnicode_MAX_CHAR_VALUE`"

msgid ""
":c:macro:`PyArg_ParseTuple` now accepts a :class:`bytearray` for the ``c`` "
"format (:issue:`12380`)."
msgstr ""
":c:macro:`PyArg_ParseTuple` accepterar nu en :class:`bytearray` för ``c``-"
"formatet (:issue:`12380`)."

msgid "Deprecated"
msgstr "Föråldrat"

msgid "Unsupported Operating Systems"
msgstr "Operativsystem som inte stöds"

msgid "OS/2 and VMS are no longer supported due to the lack of a maintainer."
msgstr ""
"OS/2 och VMS stöds inte längre på grund av avsaknad av en underhållare."

msgid ""
"Windows 2000 and Windows platforms which set ``COMSPEC`` to ``command.com`` "
"are no longer supported due to maintenance burden."
msgstr ""
"Windows 2000 och Windows-plattformar som ställer in ``COMSPEC`` till "
"``command.com`` stöds inte längre på grund av underhållsbehov."

msgid "OSF support, which was deprecated in 3.2, has been completely removed."
msgstr "OSF-stödet, som inte längre var aktuellt i 3.2, har tagits bort helt."

msgid "Deprecated Python modules, functions and methods"
msgstr "Föråldrade Python-moduler, -funktioner och -metoder"

msgid ""
"Passing a non-empty string to ``object.__format__()`` is deprecated, and "
"will produce a :exc:`TypeError` in Python 3.4 (:issue:`9856`)."
msgstr ""
"Att skicka en icke-tom sträng till ``object.__format__()`` är föråldrat, och "
"kommer att producera en :exc:`TypeError` i Python 3.4 (:issue:`9856`)."

msgid ""
"The ``unicode_internal`` codec has been deprecated because of the :pep:"
"`393`, use UTF-8, UTF-16 (``utf-16-le`` or ``utf-16-be``), or UTF-32 "
"(``utf-32-le`` or ``utf-32-be``)"
msgstr ""
"Codec ``unicode_internal`` har utgått på grund av :pep:`393`, använd UTF-8, "
"UTF-16 (``utf-16-le`` eller ``utf-16-be``), eller UTF-32 (``utf-32-le`` "
"eller ``utf-32-be``)"

msgid ""
":meth:`ftplib.FTP.nlst` and :meth:`ftplib.FTP.dir`: use :meth:`ftplib.FTP."
"mlsd`"
msgstr ""
":meth:`ftplib.FTP.nlst` och :meth:`ftplib.FTP.dir`: använd :meth:`ftplib.FTP."
"mlsd`"

msgid ""
":func:`platform.popen`: use the :mod:`subprocess` module. Check especially "
"the :ref:`subprocess-replacements` section (:issue:`11377`)."
msgstr ""
":func:`platform.popen`: använd modulen :mod:`subprocess`. Kontrollera "
"särskilt :ref:`subprocess-replacements` avsnittet (:issue:`11377`)."

msgid ""
":issue:`13374`: The Windows bytes API has been deprecated in the :mod:`os` "
"module. Use Unicode filenames, instead of bytes filenames, to not depend on "
"the ANSI code page anymore and to support any filename."
msgstr ""
":issue:`13374`: Windows bytes API har utgått i modulen :mod:`os`. Använd "
"Unicode-filnamn i stället för bytes-filnamn för att inte längre vara "
"beroende av ANSI-kodsidan och för att stödja alla filnamn."

msgid ""
":issue:`13988`: The :mod:`xml.etree.cElementTree` module is deprecated.  The "
"accelerator is used automatically whenever available."
msgstr ""
":issue:`13988`: Modulen :mod:`xml.etree.cElementTree` är föråldrad.  "
"Acceleratorn används automatiskt när den är tillgänglig."

msgid ""
"The behaviour of :func:`time.clock` depends on the platform: use the new :"
"func:`time.perf_counter` or :func:`time.process_time` function instead, "
"depending on your requirements, to have a well defined behaviour."
msgstr ""
"Beteendet för :func:`time.clock` beror på plattformen: använd den nya "
"funktionen :func:`time.perf_counter` eller :func:`time.process_time` "
"istället, beroende på dina krav, för att få ett väldefinierat beteende."

msgid "The :func:`os.stat_float_times` function is deprecated."
msgstr "Funktionen :func:`os.stat_float_times` är föråldrad."

msgid ":mod:`abc` module:"
msgstr ":mod:`abc` modul:"

msgid ":mod:`importlib` package:"
msgstr ":mod:`importlib` paket:"

msgid ""
":meth:`importlib.abc.SourceLoader.path_mtime` is now deprecated in favour "
"of :meth:`importlib.abc.SourceLoader.path_stats` as bytecode files now store "
"both the modification time and size of the source file the bytecode file was "
"compiled from."
msgstr ""
":meth:`importlib.abc.SourceLoader.path_mtime` är nu föråldrad till förmån "
"för :meth:`importlib.abc.SourceLoader.path_stats` eftersom bytecode-filer nu "
"lagrar både modifieringstiden och storleken på källfilen som bytecode-filen "
"kompilerades från."

msgid "Deprecated functions and types of the C API"
msgstr "Föråldrade funktioner och typer i C API"

msgid ""
"The :c:type:`Py_UNICODE` has been deprecated by :pep:`393` and will be "
"removed in Python 4. All functions using this type are deprecated:"
msgstr ""
":c:type:`Py_UNICODE` har blivit föråldrad av :pep:`393` och kommer att tas "
"bort i Python 4. Alla funktioner som använder denna typ är föråldrade:"

msgid ""
"Unicode functions and methods using :c:type:`Py_UNICODE` and :c:expr:"
"`Py_UNICODE*` types:"
msgstr ""
"Unicode-funktioner och -metoder som använder typerna :c:type:`Py_UNICODE` "
"och :c:expr:`Py_UNICODE*`:"

msgid ""
":c:macro:`!PyUnicode_FromUnicode`: use :c:func:`PyUnicode_FromWideChar` or :"
"c:func:`PyUnicode_FromKindAndData`"
msgstr ""
":c:macro:`!PyUnicode_FromUnicode`: använd :c:func:`PyUnicode_FromWideChar` "
"eller :c:func:`PyUnicode_FromKindAndData`"

msgid ""
":c:macro:`!PyUnicode_AS_UNICODE`, :c:func:`!PyUnicode_AsUnicode`, :c:func:`!"
"PyUnicode_AsUnicodeAndSize`: use :c:func:`PyUnicode_AsWideCharString`"
msgstr ""
":c:macro:`!PyUnicode_AS_UNICODE`, :c:func:`!PyUnicode_AsUnicode`, :c:func:`!"
"PyUnicode_AsUnicodeAndSize`: använd :c:func:`PyUnicode_AsWideCharString`"

msgid ""
":c:macro:`!PyUnicode_AS_DATA`: use :c:macro:`PyUnicode_DATA` with :c:macro:"
"`PyUnicode_READ` and :c:macro:`PyUnicode_WRITE`"
msgstr ""
":c:macro:`!PyUnicode_AS_DATA`: använd :c:macro:`PyUnicode_DATA` med :c:macro:"
"`PyUnicode_READ` och :c:macro:`PyUnicode_WRITE`"

msgid ""
":c:macro:`!PyUnicode_GET_SIZE`, :c:func:`!PyUnicode_GetSize`: use :c:macro:"
"`PyUnicode_GET_LENGTH` or :c:func:`PyUnicode_GetLength`"
msgstr ""
":c:macro:`!PyUnicode_GET_SIZE`, :c:func:`!PyUnicode_GetSize`: använd :c:"
"macro:`PyUnicode_GET_LENGTH` eller :c:func:`PyUnicode_GetLength`"

msgid ""
":c:macro:`!PyUnicode_GET_DATA_SIZE`: use ``PyUnicode_GET_LENGTH(str) * "
"PyUnicode_KIND(str)`` (only work on ready strings)"
msgstr ""
":c:macro:`!PyUnicode_GET_DATA_SIZE`: använd ``PyUnicode_GET_LENGTH(str) * "
"PyUnicode_KIND(str)`` (fungerar bara på färdiga strängar)"

msgid ""
":c:func:`!PyUnicode_AsUnicodeCopy`: use :c:func:`PyUnicode_AsUCS4Copy` or :c:"
"func:`PyUnicode_AsWideCharString`"
msgstr ""
":c:func:`!PyUnicode_AsUnicodeCopy`: använd :c:func:`PyUnicode_AsUCS4Copy` "
"eller :c:func:`PyUnicode_AsWideCharString`"

msgid ":c:func:`!PyUnicode_GetMax`"
msgstr ":c:func:`!PyUnicode_GetMax`"

msgid "Functions and macros manipulating Py_UNICODE* strings:"
msgstr "Funktioner och makron som manipulerar Py_UNICODE*-strängar:"

msgid ""
":c:macro:`!Py_UNICODE_strlen()`: use :c:func:`PyUnicode_GetLength` or :c:"
"macro:`PyUnicode_GET_LENGTH`"
msgstr ""
":c:macro:`!Py_UNICODE_strlen()`: använd :c:func:`PyUnicode_GetLength` eller :"
"c:macro:`PyUnicode_GET_LENGTH`"

msgid ""
":c:macro:`!Py_UNICODE_strcat()`: use :c:func:`PyUnicode_CopyCharacters` or :"
"c:func:`PyUnicode_FromFormat`"
msgstr ""
":c:macro:`!Py_UNICODE_strcat()`: använd :c:func:`PyUnicode_CopyCharacters` "
"eller :c:func:`PyUnicode_FromFormat`"

msgid ""
":c:macro:`!Py_UNICODE_strcpy()`, :c:macro:`!Py_UNICODE_strncpy()`, :c:macro:"
"`!Py_UNICODE_COPY()`: use :c:func:`PyUnicode_CopyCharacters` or :c:func:"
"`PyUnicode_Substring`"
msgstr ""
":c:macro:`!Py_UNICODE_strcpy()`, :c:macro:`!Py_UNICODE_strncpy()`, :c:macro:"
"`!Py_UNICODE_COPY()`: använd :c:func:`PyUnicode_CopyCharacters` eller :c:"
"func:`PyUnicode_Substring`"

msgid ":c:macro:`!Py_UNICODE_strcmp()`: use :c:func:`PyUnicode_Compare`"
msgstr ":c:macro:`!Py_UNICODE_strcmp()`: använd :c:func:`PyUnicode_Compare`"

msgid ":c:macro:`!Py_UNICODE_strncmp()`: use :c:func:`PyUnicode_Tailmatch`"
msgstr ":c:macro:`!Py_UNICODE_strncmp()`: använd :c:func:`PyUnicode_Tailmatch`"

msgid ""
":c:macro:`!Py_UNICODE_strchr()`, :c:macro:`!Py_UNICODE_strrchr()`: use :c:"
"func:`PyUnicode_FindChar`"
msgstr ""
":c:macro:`!Py_UNICODE_strchr()`, :c:macro:`!Py_UNICODE_strrchr()`: use :c:"
"func:`PyUnicode_FindChar`"

msgid ":c:macro:`!Py_UNICODE_FILL()`: use :c:func:`PyUnicode_Fill`"
msgstr ":c:macro:`!Py_UNICODE_FILL()`: use :c:func:`PyUnicode_Fill`"

msgid ":c:macro:`!Py_UNICODE_MATCH`"
msgstr ":c:macro:`!Py_UNICODE_MATCH`"

msgid "Encoders:"
msgstr "Kodare:"

msgid ":c:func:`!PyUnicode_Encode`: use :c:func:`!PyUnicode_AsEncodedObject`"
msgstr ""
":c:func:`!PyUnicode_Encode`: använd :c:func:`!PyUnicode_AsEncodedObject`"

msgid ":c:func:`!PyUnicode_EncodeUTF7`"
msgstr ":c:func:`!PyUnicode_EncodeUTF7`"

msgid ""
":c:func:`!PyUnicode_EncodeUTF8`: use :c:func:`PyUnicode_AsUTF8` or :c:func:"
"`PyUnicode_AsUTF8String`"
msgstr ""
":c:func:`!PyUnicode_EncodeUTF8`: använd :c:func:`PyUnicode_AsUTF8` eller :c:"
"func:`PyUnicode_AsUTF8String`"

msgid ":c:func:`!PyUnicode_EncodeUTF32`"
msgstr ":c:func:`!PyUnicode_EncodeUTF32`"

msgid ":c:func:`!PyUnicode_EncodeUTF16`"
msgstr ":c:func:`!PyUnicode_EncodeUTF16`"

msgid ""
":c:func:`!PyUnicode_EncodeUnicodeEscape` use :c:func:"
"`PyUnicode_AsUnicodeEscapeString`"
msgstr ""
":c:func:`!PyUnicode_EncodeUnicodeEscape` use :c:func:"
"`PyUnicode_AsUnicodeEscapeString`"

msgid ""
":c:func:`!PyUnicode_EncodeRawUnicodeEscape` use :c:func:"
"`PyUnicode_AsRawUnicodeEscapeString`"
msgstr ""
":c:func:`!PyUnicode_EncodeRawUnicodeEscape` use :c:func:"
"`PyUnicode_AsRawUnicodeEscapeString`"

msgid ""
":c:func:`!PyUnicode_EncodeLatin1`: use :c:func:`PyUnicode_AsLatin1String`"
msgstr ""
":c:func:`!PyUnicode_EncodeLatin1`: använd :c:func:`PyUnicode_AsLatin1String`"

msgid ":c:func:`!PyUnicode_EncodeASCII`: use :c:func:`PyUnicode_AsASCIIString`"
msgstr ""
":c:func:`!PyUnicode_EncodeASCII`: använd :c:func:`PyUnicode_AsASCIIString`"

msgid ":c:func:`!PyUnicode_EncodeCharmap`"
msgstr ":c:func:`!PyUnicode_EncodeCharmap`"

msgid ":c:func:`!PyUnicode_TranslateCharmap`"
msgstr ":c:func:`!PyUnicode_TranslateCharmap`"

msgid ""
":c:func:`!PyUnicode_EncodeMBCS`: use :c:func:`PyUnicode_AsMBCSString` or :c:"
"func:`PyUnicode_EncodeCodePage` (with ``CP_ACP`` code_page)"
msgstr ""
":c:func:`!PyUnicode_EncodeMBCS`: använd :c:func:`PyUnicode_AsMBCSString` "
"eller :c:func:`PyUnicode_EncodeCodePage` (med kodsidan ``CP_ACP``)"

msgid ""
":c:func:`!PyUnicode_EncodeDecimal`, :c:func:`!"
"PyUnicode_TransformDecimalToASCII`"
msgstr ""
":c:func:`!PyUnicode_EncodeDecimal`, :c:func:`!"
"PyUnicode_TransformDecimalToASCII`"

msgid "Deprecated features"
msgstr "Föråldrade funktioner"

msgid ""
"The :mod:`array` module's ``'u'`` format code is now deprecated and will be "
"removed in Python 4 together with the rest of the (:c:type:`Py_UNICODE`) API."
msgstr ""
"Modulen :mod:`array` ``'u'`` formatkod är nu föråldrad och kommer att tas "
"bort i Python 4 tillsammans med resten av (:c:type:`Py_UNICODE`) API."

msgid "Porting to Python 3.3"
msgstr "Portning till Python 3.3"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"I det här avsnittet listas tidigare beskrivna ändringar och andra buggfixar "
"som kan kräva ändringar i din kod."

msgid "Porting Python code"
msgstr "Portning av Python-kod"

msgid ""
"Hash randomization is enabled by default. Set the :envvar:`PYTHONHASHSEED` "
"environment variable to ``0`` to disable hash randomization. See also the :"
"meth:`object.__hash__` method."
msgstr ""
"Randomisering av hash är aktiverat som standard. Ställ in miljövariabeln :"
"envvar:`PYTHONHASHSEED` till ``0`` för att inaktivera hashslumpning. Se även "
"metoden :meth:`object.__hash__`."

msgid ""
":issue:`12326`: On Linux, sys.platform doesn't contain the major version "
"anymore. It is now always 'linux', instead of 'linux2' or 'linux3' depending "
"on the Linux version used to build Python. Replace sys.platform == 'linux2' "
"with sys.platform.startswith('linux'), or directly sys.platform == 'linux' "
"if you don't need to support older Python versions."
msgstr ""
":problem:`12326`: På Linux innehåller sys.platform inte längre "
"huvudversionen. Den är nu alltid 'linux', istället för 'linux2' eller "
"'linux3' beroende på vilken Linux-version som används för att bygga Python. "
"Ersätt sys.platform == 'linux2' med sys.platform.startswith('linux'), eller "
"direkt sys.platform == 'linux' om du inte behöver stödja äldre Python-"
"versioner."

msgid ""
":issue:`13847`, :issue:`14180`: :mod:`time` and :mod:`datetime`: :exc:"
"`OverflowError` is now raised instead of :exc:`ValueError` if a timestamp is "
"out of range. :exc:`OSError` is now raised if C functions :c:func:`gmtime` "
"or :c:func:`localtime` failed."
msgstr ""
":issue:`13847`, :issue:`14180`: :mod:`time` och :mod:`datetime`: :exc:"
"`OverflowError` visas nu istället för :exc:`ValueError` om en tidsmarkör är "
"utanför intervallet. :exc:`OSError` visas nu om C-funktionerna :c:func:"
"`gmtime` eller :c:func:`localtime` misslyckades."

msgid ""
"The default finders used by import now utilize a cache of what is contained "
"within a specific directory. If you create a Python source file or "
"sourceless bytecode file, make sure to call :func:`importlib."
"invalidate_caches` to clear out the cache for the finders to notice the new "
"file."
msgstr ""
"De standardsökare som används av import använder nu en cache av vad som "
"finns i en specifik katalog. Om du skapar en Python-källfil eller en "
"bytecode-fil utan källa, se till att anropa :func:`importlib."
"invalidate_caches` för att rensa cacheminnet så att sökarna märker den nya "
"filen."

msgid ""
":exc:`ImportError` now uses the full name of the module that was attempted "
"to be imported. Doctests that check ImportErrors' message will need to be "
"updated to use the full name of the module instead of just the tail of the "
"name."
msgstr ""
":exc:`ImportError` använder nu det fullständiga namnet på modulen som man "
"försökte importera. Doctests som kontrollerar ImportErrors meddelande måste "
"uppdateras för att använda modulens fullständiga namn istället för bara "
"svansen av namnet."

msgid ""
"The *index* argument to :func:`__import__` now defaults to 0 instead of -1 "
"and no longer support negative values. It was an oversight when :pep:`328` "
"was implemented that the default value remained -1. If you need to continue "
"to perform a relative import followed by an absolute import, then perform "
"the relative import using an index of 1, followed by another import using an "
"index of 0. It is preferred, though, that you use :func:`importlib."
"import_module` rather than call :func:`__import__` directly."
msgstr ""
"Argumentet *index* till :func:`__import__` har nu standardvärdet 0 istället "
"för -1 och stöder inte längre negativa värden. Det var ett förbiseende när :"
"pep:`328` implementerades att standardvärdet förblev -1. Om du behöver "
"fortsätta att utföra en relativ import följt av en absolut import, utför då "
"den relativa importen med ett index på 1, följt av en annan import med ett "
"index på 0. Det är dock att föredra att du använder :func:`importlib."
"import_module` snarare än att anropa :func:`__import__` direkt."

msgid ""
":func:`__import__` no longer allows one to use an index value other than 0 "
"for top-level modules. E.g. ``__import__('sys', level=1)`` is now an error."
msgstr ""
":func:`__import__` tillåter inte längre att man använder ett annat "
"indexvärde än 0 för moduler på högsta nivån. T.ex. ```__import__('sys', "
"level=1)`` är nu ett fel."

msgid ""
"Because :data:`sys.meta_path` and :data:`sys.path_hooks` now have finders on "
"them by default, you will most likely want to use :meth:`list.insert` "
"instead of :meth:`list.append` to add to those lists."
msgstr ""
"Eftersom :data:`sys.meta_path` och :data:`sys.path_hooks` nu har sökare som "
"standard kommer du troligen att vilja använda :meth:`list.insert` i stället "
"för :meth:`list.append` för att lägga till i dessa listor."

msgid ""
"Because ``None`` is now inserted into :data:`sys.path_importer_cache`, if "
"you are clearing out entries in the dictionary of paths that do not have a "
"finder, you will need to remove keys paired with values of ``None`` **and** :"
"class:`!imp.NullImporter` to be backwards-compatible. This will lead to "
"extra overhead on older versions of Python that re-insert ``None`` into :"
"data:`sys.path_importer_cache` where it represents the use of implicit "
"finders, but semantically it should not change anything."
msgstr ""
"Eftersom ``None`` nu är infogad i :data:`sys.path_importer_cache`, om du "
"rensar ut poster i ordlistan över sökvägar som inte har en sökare, måste du "
"ta bort nycklar som är parade med värden av ``None`` **och** :class:`!imp."
"NullImporter` för att vara bakåtkompatibel. Detta kommer att leda till extra "
"overhead på äldre versioner av Python som återinför ``None`` i :data:`sys."
"path_importer_cache` där det representerar användningen av implicita sökare, "
"men semantiskt bör det inte ändra någonting."

msgid ""
":class:`!importlib.abc.Finder` no longer specifies a ``find_module()`` "
"abstract method that must be implemented. If you were relying on subclasses "
"to implement that method, make sure to check for the method's existence "
"first. You will probably want to check for ``find_loader()`` first, though, "
"in the case of working with :term:`path entry finders <path entry finder>`."
msgstr ""
":class:`!importlib.abc.Finder` anger inte längre en abstrakt metod "
"``find_module()`` som måste implementeras. Om du förlitade dig på att "
"underklasser skulle implementera den metoden, se till att kontrollera att "
"metoden finns först. Du kommer förmodligen att vilja kontrollera för "
"``find_loader()`` först, dock, i fallet med att arbeta med :term:`path entry "
"finders <path entry finder>`."

msgid ""
":mod:`pkgutil` has been converted to use :mod:`importlib` internally. This "
"eliminates many edge cases where the old behaviour of the :pep:`302` import "
"emulation failed to match the behaviour of the real import system. The "
"import emulation itself is still present, but is now deprecated. The :func:"
"`pkgutil.iter_importers` and :func:`pkgutil.walk_packages` functions special "
"case the standard import hooks so they are still supported even though they "
"do not provide the non-standard ``iter_modules()`` method."
msgstr ""
":mod:`pkgutil` har konverterats till att använda :mod:`importlib` internt. "
"Detta eliminerar många kantfall där det gamla beteendet hos :pep:`302` "
"import-emuleringen inte stämde överens med beteendet hos det riktiga "
"importsystemet. Själva import-emuleringen finns fortfarande kvar, men är nu "
"föråldrad. Funktionerna :func:`pkgutil.iter_importers` och :func:`pkgutil."
"walk_packages` är specialfall för standardimportkrokarna så de stöds "
"fortfarande även om de inte tillhandahåller den icke-standardiserade metoden "
"``iter_modules()``."

msgid ""
"A longstanding RFC-compliance bug (:issue:`1079`) in the parsing done by :"
"func:`email.header.decode_header` has been fixed.  Code that uses the "
"standard idiom to convert encoded headers into unicode "
"(``str(make_header(decode_header(h))``) will see no change, but code that "
"looks at the individual tuples returned by decode_header will see that "
"whitespace that precedes or follows ``ASCII`` sections is now included in "
"the ``ASCII`` section.  Code that builds headers using ``make_header`` "
"should also continue to work without change, since ``make_header`` continues "
"to add whitespace between ``ASCII`` and non-``ASCII`` sections if it is not "
"already present in the input strings."
msgstr ""
"Ett långvarigt RFC-kompatibilitetsfel (:issue:`1079`) i parsningen som görs "
"av :func:`email.header.decode_header` har åtgärdats.  Kod som använder "
"standardidiomet för att konvertera kodade headers till unicode "
"(``str(make_header(decode_header(h))``) kommer inte att märka någon "
"förändring, men kod som tittar på de enskilda tuples som returneras av "
"decode_header kommer att se att blanksteg som föregår eller följer ``ASCII``-"
"avsnitt nu ingår i ``ASCII``-avsnittet.  Kod som bygger rubriker med hjälp "
"av ``make_header`` bör också fortsätta att fungera utan ändringar, eftersom "
"``make_header`` fortsätter att lägga till blanksteg mellan ``ASCII`` och "
"icke-`ASCII``-avsnitt om det inte redan finns i indatasträngarna."

msgid ""
":func:`email.utils.formataddr` now does the correct content transfer "
"encoding when passed non-``ASCII`` display names.  Any code that depended on "
"the previous buggy behavior that preserved the non-``ASCII`` unicode in the "
"formatted output string will need to be changed (:issue:`1690608`)."
msgstr ""
":func:`email.utils.formataddr` gör nu rätt innehållsöverföringskodning när "
"den skickas till displaynamn som inte är ``ASCII``.  All kod som var "
"beroende av det tidigare buggiga beteendet som bevarade unicode som inte var "
"``ASCII`` i den formaterade utdatasträngen måste ändras (:issue:`1690608`)."

msgid ""
":meth:`poplib.POP3.quit` may now raise protocol errors like all other "
"``poplib`` methods.  Code that assumes ``quit`` does not raise :exc:`poplib."
"error_proto` errors may need to be changed if errors on ``quit`` are "
"encountered by a particular application (:issue:`11291`)."
msgstr ""
":meth:`poplib.POP3.quit` kan nu ge upphov till protokollfel som alla andra "
"``poplib``-metoder.  Kod som förutsätter att ``quit`` inte ger upphov till :"
"exc:`poplib.error_proto`-fel kan behöva ändras om fel vid ``quit`` uppstår i "
"ett visst program (:issue:`11291``)."

msgid ""
"The ``strict`` argument to :class:`email.parser.Parser`, deprecated since "
"Python 2.4, has finally been removed."
msgstr ""
"Argumentet ``strict`` till :class:`email.parser.Parser`, föråldrat sedan "
"Python 2.4, har slutligen tagits bort."

msgid ""
"The deprecated method ``unittest.TestCase.assertSameElements`` has been "
"removed."
msgstr ""
"Den föråldrade metoden ``unittest.TestCase.assertSameElements`` har tagits "
"bort."

msgid "The deprecated variable ``time.accept2dyear`` has been removed."
msgstr "Den föråldrade variabeln ``time.accept2dyear`` har tagits bort."

msgid ""
"The deprecated ``Context._clamp`` attribute has been removed from the :mod:"
"`decimal` module.  It was previously replaced by the public attribute :attr:"
"`~decimal.Context.clamp`.  (See :issue:`8540`.)"
msgstr ""
"Det föråldrade attributet ``Context._clamp`` har tagits bort från modulen :"
"mod:`decimal`.  Det ersattes tidigare av det publika attributet :attr:"
"`~decimal.Context.clamp`.  (Se :issue:`8540`.)"

msgid ""
"The undocumented internal helper class ``SSLFakeFile`` has been removed "
"from :mod:`smtplib`, since its functionality has long been provided directly "
"by :meth:`socket.socket.makefile`."
msgstr ""
"Den odokumenterade interna hjälpklassen ``SSLFakeFile`` har tagits bort "
"från :mod:`smtplib`, eftersom dess funktionalitet sedan länge tillhandahålls "
"direkt av :meth:`socket.socket.makefile`."

msgid ""
"Passing a negative value to :func:`time.sleep` on Windows now raises an "
"error instead of sleeping forever.  It has always raised an error on posix."
msgstr ""
"Att skicka ett negativt värde till :func:`time.sleep` på Windows ger nu "
"upphov till ett fel istället för att sova för evigt.  Det har alltid gett "
"ett felmeddelande på posix."

msgid ""
"The ``ast.__version__`` constant has been removed.  If you need to make "
"decisions affected by the AST version, use :data:`sys.version_info` to make "
"the decision."
msgstr ""
"Konstanten ``ast.__version__`` har tagits bort.  Om du behöver fatta beslut "
"som påverkas av AST-versionen, använd :data:`sys.version_info` för att fatta "
"beslutet."

msgid ""
"Code that used to work around the fact that the :mod:`threading` module used "
"factory functions by subclassing the private classes will need to change to "
"subclass the now-public classes."
msgstr ""
"Kod som brukade kringgå det faktum att modulen :mod:`threading` använde "
"fabriksfunktioner genom att underklassa de privata klasserna måste ändras "
"till att underklassa de nu offentliga klasserna."

msgid ""
"The undocumented debugging machinery in the threading module has been "
"removed, simplifying the code.  This should have no effect on production "
"code, but is mentioned here in case any application debug frameworks were "
"interacting with it (:issue:`13550`)."
msgstr ""
"Det odokumenterade felsökningsmaskineriet i threading-modulen har tagits "
"bort, vilket förenklar koden.  Detta bör inte ha någon effekt på "
"produktionskoden, men nämns här ifall något ramverk för felsökning av "
"applikationer interagerar med den (:issue:`13550`)."

msgid "Porting C code"
msgstr "Portning av C-kod"

msgid ""
"In the course of changes to the buffer API the undocumented :c:member:`!"
"smalltable` member of the :c:type:`Py_buffer` structure has been removed and "
"the layout of the :c:type:`PyMemoryViewObject` has changed."
msgstr ""
"I samband med ändringar i buffert-API:et har den odokumenterade :c:member:`!"
"smalltable`-medlemmen i :c:type:`Py_buffer`-strukturen tagits bort och "
"layouten för :c:type:`PyMemoryViewObject` har ändrats."

msgid ""
"All extensions relying on the relevant parts in ``memoryobject.h`` or "
"``object.h`` must be rebuilt."
msgstr ""
"Alla tillägg som förlitar sig på de relevanta delarna i ``memoryobject.h`` "
"eller ``object.h`` måste byggas om."

msgid ""
"Due to :ref:`PEP 393 <pep-393>`, the :c:type:`Py_UNICODE` type and all "
"functions using this type are deprecated (but will stay available for at "
"least five years).  If you were using low-level Unicode APIs to construct "
"and access unicode objects and you want to benefit of the memory footprint "
"reduction provided by :pep:`393`, you have to convert your code to the new :"
"doc:`Unicode API <../c-api/unicode>`."
msgstr ""
"På grund av :ref:`PEP 393 <pep-393>`, är typen :c:type:`Py_UNICODE` och alla "
"funktioner som använder denna typ föråldrade (men kommer att vara "
"tillgängliga i minst fem år).  Om du använder Unicode API:er på låg nivå för "
"att konstruera och komma åt Unicode-objekt och du vill dra nytta av den "
"minskning av minnesavtrycket som :pep:`393` ger, måste du konvertera din kod "
"till den nya :doc:`Unicode API &lt;../c-api/unicode&gt;`."

msgid ""
"However, if you only have been using high-level functions such as :c:func:"
"`PyUnicode_Concat()`, :c:func:`PyUnicode_Join` or :c:func:"
"`PyUnicode_FromFormat()`, your code will automatically take advantage of the "
"new unicode representations."
msgstr ""
"Men om du bara har använt högnivåfunktioner som :c:func:"
"`PyUnicode_Concat()`, :c:func:`PyUnicode_Join` eller :c:func:"
"`PyUnicode_FromFormat()`, kommer din kod automatiskt att dra nytta av de nya "
"unicode-representationerna."

msgid ":c:func:`PyImport_GetMagicNumber` now returns ``-1`` upon failure."
msgstr ":c:func:`PyImport_GetMagicNumber` returnerar nu ``-1`` vid fel."

msgid ""
"As a negative value for the *level* argument to :func:`__import__` is no "
"longer valid, the same now holds for :c:func:`PyImport_ImportModuleLevel`. "
"This also means that the value of *level* used by :c:func:"
"`PyImport_ImportModuleEx` is now ``0`` instead of ``-1``."
msgstr ""
"Eftersom ett negativt värde för *level*-argumentet till :func:`__import__` "
"inte längre är giltigt, gäller nu samma sak för :c:func:"
"`PyImport_ImportModuleLevel`. Detta innebär också att värdet för *level* som "
"används av :c:func:`PyImport_ImportModuleEx` nu är ``0`` istället för ``-1``."

msgid "Building C extensions"
msgstr "Tillbyggnad av byggnad C"

msgid ""
"The range of possible file names for C extensions has been narrowed. Very "
"rarely used spellings have been suppressed: under POSIX, files named "
"``xxxmodule.so``, ``xxxmodule.abi3.so`` and ``xxxmodule.cpython-*.so`` are "
"no longer recognized as implementing the ``xxx`` module.  If you had been "
"generating such files, you have to switch to the other spellings (i.e., "
"remove the ``module`` string from the file names)."
msgstr ""
"Utbudet av möjliga filnamn för C-tillägg har minskats. Mycket sällan använda "
"stavningar har undertryckts: under POSIX erkänns inte längre filer med "
"namnen ``xxxmodule.so``, ``xxxmodule.abi3.so`` och ``xxxmodule.cpython-*."
"so`` som implementeringar av ``xxx``-modulen.  Om du har genererat sådana "
"filer måste du byta till de andra stavningarna (dvs. ta bort strängen "
"``module`` från filnamnen)."

msgid "(implemented in :issue:`14040`.)"
msgstr "(implementerad i :issue:`14040`.)"

msgid "Command Line Switch Changes"
msgstr "Ändringar i kommandoradsväxeln"

msgid ""
"The -Q command-line flag and related artifacts have been removed.  Code "
"checking sys.flags.division_warning will need updating."
msgstr ""
"Kommandoradsflaggan -Q och relaterade artefakter har tagits bort.  Kod som "
"kontrollerar sys.flags.division_warning behöver uppdateras."

msgid "(:issue:`10998`, contributed by Éric Araujo.)"
msgstr "(:issue:`10998`, bidrag från Éric Araujo.)"

msgid ""
"When :program:`python` is started with :option:`-S`, ``import site`` will no "
"longer add site-specific paths to the module search paths.  In previous "
"versions, it did."
msgstr ""
"När :program:`python` startas med :option:`-S`, kommer ``import site`` inte "
"längre att lägga till platsspecifika sökvägar till modulens sökvägar.  I "
"tidigare versioner gjorde den det."

msgid ""
"(:issue:`11591`, contributed by Carl Meyer with editions by Éric Araujo.)"
msgstr ""
"(:issue:`11591`, bidrag från Carl Meyer med redigering av Éric Araujo.)"

msgid "yield"
msgstr "avkastning"

msgid "yield from (in What's New)"
msgstr "avkastning från (i Vad är nytt)"
