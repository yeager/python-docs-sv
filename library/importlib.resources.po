# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ""
":mod:`!importlib.resources` -- Package resource reading, opening and access"
msgstr ""
":mod:`!importlib.resources` -- Läsning, öppning och åtkomst av paketresurser"

msgid "**Source code:** :source:`Lib/importlib/resources/__init__.py`"
msgstr "**Källkod:** :källa:`Lib/importlib/resources/__init__.py`"

msgid ""
"This module leverages Python's import system to provide access to "
"*resources* within *packages*."
msgstr ""
"Denna modul utnyttjar Pythons importsystem för att ge tillgång till "
"*resurser* inom *paket*."

msgid ""
"\"Resources\" are file-like resources associated with a module or package in "
"Python. The resources may be contained directly in a package, within a "
"subdirectory contained in that package, or adjacent to modules outside a "
"package. Resources may be text or binary. As a result, Python module sources "
"(.py) of a package and compilation artifacts (pycache) are technically de-"
"facto resources of that package. In practice, however, resources are "
"primarily those non-Python artifacts exposed specifically by the package "
"author."
msgstr ""
"\"Resurser\" är filliknande resurser som är associerade med en modul eller "
"ett paket i Python. Resurserna kan finnas direkt i ett paket, i en "
"underkatalog som ingår i paketet eller i anslutning till moduler utanför "
"paketet. Resurserna kan vara text eller binära. Som ett resultat är Python-"
"modulkällor (.py) för ett paket och kompileringsartefakter (pycache) "
"tekniskt de facto-resurser för det paketet. I praktiken är dock resurser "
"främst de artefakter som inte är Python-artefakter och som exponeras "
"specifikt av paketets författare."

msgid "Resources can be opened or read in either binary or text mode."
msgstr "Resurser kan öppnas eller läsas i antingen binärt eller textläge."

msgid ""
"Resources are roughly akin to files inside directories, though it's "
"important to keep in mind that this is just a metaphor.  Resources and "
"packages **do not** have to exist as physical files and directories on the "
"file system: for example, a package and its resources can be imported from a "
"zip file using :py:mod:`zipimport`."
msgstr ""
"Resurser är ungefär som filer i kataloger, men det är viktigt att komma ihåg "
"att detta bara är en metafor.  Resurser och paket **behöver** inte existera "
"som fysiska filer och kataloger i filsystemet: ett paket och dess resurser "
"kan till exempel importeras från en zip-fil med :py:mod:`zipimport`."

msgid ""
"This module provides functionality similar to `pkg_resources <https://"
"setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic Resource "
"Access <https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ without the performance overhead of that package.  This "
"makes reading resources included in packages easier, with more stable and "
"consistent semantics."
msgstr ""
"Den här modulen tillhandahåller funktionalitet som liknar `pkg_resources "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic "
"Resource Access <https://setuptools.readthedocs.io/en/latest/pkg_resources."
"html#basic-resource-access>`_ utan prestandakostnaderna för det paketet.  "
"Detta gör det enklare att läsa resurser som ingår i paket, med en stabilare "
"och mer konsekvent semantik."

msgid ""
"The standalone backport of this module provides more information on `using "
"importlib.resources <https://importlib-resources.readthedocs.io/en/latest/"
"using.html>`_ and `migrating from pkg_resources to importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."
msgstr ""
"I den fristående bakrapporten för den här modulen finns mer information om "
"`använda importlib.resources <https://importlib-resources.readthedocs.io/en/"
"latest/using.html>`_ och `flytta från pkg_resources till importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."

msgid ""
":class:`Loaders <importlib.abc.Loader>` that wish to support resource "
"reading should implement a ``get_resource_reader(fullname)`` method as "
"specified by :class:`importlib.resources.abc.ResourceReader`."
msgstr ""
":class:`Loaders <importlib.abc.Loader>` som vill stödja resursläsning bör "
"implementera en ``get_resource_reader(fullname)``-metod som specificeras av :"
"class:`importlib.resources.abc.ResourceReader`."

msgid ""
"Represents an anchor for resources, either a :class:`module object <types."
"ModuleType>` or a module name as a string. Defined as ``Union[str, "
"ModuleType]``."
msgstr ""
"Representerar ett ankare för resurser, antingen en :class:`modulobjekt "
"<types.ModuleType>` eller ett modulnamn som en sträng. Definierad som "
"``Union[str, ModuleType]``."

msgid ""
"Returns a :class:`~importlib.resources.abc.Traversable` object representing "
"the resource container (think directory) and its resources (think files). A "
"Traversable may contain other containers (think subdirectories)."
msgstr ""
"Returnerar ett :class:`~importlib.resources.abc.Traversable`-objekt som "
"representerar resursbehållaren (tänk katalog) och dess resurser (tänk "
"filer). En Traversable kan innehålla andra behållare (tänk underkataloger)."

msgid ""
"*anchor* is an optional :class:`Anchor`. If the anchor is a package, "
"resources are resolved from that package. If a module, resources are "
"resolved adjacent to that module (in the same package or the package root). "
"If the anchor is omitted, the caller's module is used."
msgstr ""
"*anchor* är en valfri :class:`Anchor`. Om ankaret är ett paket, löses "
"resurser från det paketet. Om det är en modul löses resurserna i anslutning "
"till den modulen (i samma paket eller i paketroten). Om ankaret utelämnas "
"används den anropande modulen."

msgid ""
"*package* parameter was renamed to *anchor*. *anchor* can now be a non-"
"package module and if omitted will default to the caller's module. *package* "
"is still accepted for compatibility but will raise a :exc:"
"`DeprecationWarning`. Consider passing the anchor positionally or using "
"``importlib_resources >= 5.10`` for a compatible interface on older Pythons."
msgstr ""
"*package*-parametern har bytt namn till *anchor*. *anchor* kan nu vara en "
"icke-paketmodul och om den utelämnas kommer den att standardiseras till den "
"anropande modulen. *package* accepteras fortfarande av kompatibilitetsskäl "
"men kommer att ge upphov till en :exc:`DeprecationWarning`. Överväg att "
"skicka ankaret positionellt eller använd ``importlib_resources >= 5.10`` för "
"ett kompatibelt gränssnitt på äldre Pythons."

msgid ""
"Given a :class:`~importlib.resources.abc.Traversable` object representing a "
"file or directory, typically from :func:`importlib.resources.files`, return "
"a context manager for use in a :keyword:`with` statement. The context "
"manager provides a :class:`pathlib.Path` object."
msgstr ""
"Givet ett :class:`~importlib.resources.abc.Traversable`-objekt som "
"representerar en fil eller katalog, typiskt från :func:`importlib.resources."
"files`, returnera en kontexthanterare för användning i en :keyword:`with`-"
"sats. Kontexthanteraren tillhandahåller ett :class:`pathlib.Path`-objekt."

msgid ""
"Exiting the context manager cleans up any temporary file or directory "
"created when the resource was extracted from e.g. a zip file."
msgstr ""
"När du avslutar kontexthanteraren rensas alla temporära filer eller "
"kataloger som skapades när resursen extraherades från t.ex. en zip-fil."

msgid ""
"Use ``as_file`` when the Traversable methods (``read_text``, etc) are "
"insufficient and an actual file or directory on the file system is required."
msgstr ""
"Använd ``as_file`` när Traversable-metoderna (``read_text``, etc) inte "
"räcker till och en faktisk fil eller katalog i filsystemet krävs."

msgid "Added support for *traversable* representing a directory."
msgstr "Lagt till stöd för *traversable* som representerar en katalog."

msgid "Functional API"
msgstr "Funktionellt API"

msgid ""
"A set of simplified, backwards-compatible helpers is available. These allow "
"common operations in a single function call."
msgstr ""
"En uppsättning förenklade, bakåtkompatibla hjälpfunktioner finns "
"tillgängliga. Dessa tillåter vanliga operationer i ett enda funktionsanrop."

msgid "For all the following functions:"
msgstr "För alla följande funktioner:"

msgid ""
"*anchor* is an :class:`~importlib.resources.Anchor`, as in :func:`~importlib."
"resources.files`. Unlike in ``files``, it may not be omitted."
msgstr ""
"*anchor* är en :class:`~importlib.resources.Anchor`, som i :func:`~importlib."
"resources.files`. Till skillnad från i ``files`` kan det inte utelämnas."

msgid ""
"*path_names* are components of a resource's path name, relative to the "
"anchor. For example, to get the text of resource named ``info.txt``, use::"
msgstr ""
"*path_names* är komponenter i en resurs sökvägsnamn, i förhållande till "
"ankaret. Om du t.ex. vill få fram texten i en resurs med namnet ``info.txt`` "
"använder du::"

msgid "importlib.resources.read_text(my_module, \"info.txt\")"
msgstr "importlib.resources.read_text(min_modul, \"info.txt\")"

msgid ""
"Like :meth:`Traversable.joinpath <importlib.resources.abc.Traversable>`, The "
"individual components should use forward slashes (``/``) as path separators. "
"For example, the following are equivalent::"
msgstr ""
"Som :meth:`Traversable.joinpath <importlib.resources.abc.Traversable>`, De "
"enskilda komponenterna bör använda snedstreck (``/``) som sökvägsavgränsare. "
"Till exempel är följande likvärdigt::"

msgid ""
"importlib.resources.read_binary(my_module, \"pics/painting.png\")\n"
"importlib.resources.read_binary(my_module, \"pics\", \"painting.png\")"
msgstr ""
"importlib.resources.read_binary(my_module, \"pics/painting.png\")\n"
"importlib.resources.read_binary(my_module, \"pics\", \"painting.png\")"

msgid ""
"For backward compatibility reasons, functions that read text require an "
"explicit *encoding* argument if multiple *path_names* are given. For "
"example, to get the text of ``info/chapter1.txt``, use::"
msgstr ""
"Av bakåtkompatibilitetsskäl kräver funktioner som läser text ett explicit "
"*encoding*-argument om flera *path_names* anges. Om du till exempel vill "
"hämta texten i ``info/chapter1.txt`` använder du::"

msgid ""
"importlib.resources.read_text(my_module, \"info\", \"chapter1.txt\",\n"
"                              encoding='utf-8')"
msgstr ""
"importlib.resources.read_text(min_modul, \"info\", \"chapter1.txt\",\n"
"                              kodning='utf-8')"

msgid "Open the named resource for binary reading."
msgstr "Öppna den namngivna resursen för binär läsning."

msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details on "
"*anchor* and *path_names*."
msgstr ""
"Se :ref:`inledningen <importlib_resources_functional>` för detaljer om "
"*anchor* och *path_names*."

msgid ""
"This function returns a :class:`~typing.BinaryIO` object, that is, a binary "
"stream open for reading."
msgstr ""
"Denna funktion returnerar ett :class:`~typing.BinaryIO`-objekt, det vill "
"säga en binär ström som är öppen för läsning."

msgid "This function is roughly equivalent to::"
msgstr "Denna funktion är ungefär likvärdig med::"

msgid "files(anchor).joinpath(*path_names).open('rb')"
msgstr "files(anchor).joinpath(*path_names).open('rb')"

msgid "Multiple *path_names* are accepted."
msgstr "Flera *väg_namn* accepteras."

msgid ""
"Open the named resource for text reading. By default, the contents are read "
"as strict UTF-8."
msgstr ""
"Öppna den angivna resursen för textläsning. Som standard läses innehållet "
"som strikt UTF-8."

msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details on "
"*anchor* and *path_names*. *encoding* and *errors* have the same meaning as "
"in built-in :func:`open`."
msgstr ""
"Se :ref:``introduktionen <importlib_resources_functional>` för detaljer om "
"*anchor* och *path_names*. *encoding* och *errors* har samma betydelse som i "
"inbyggda :func:`open`."

msgid ""
"For backward compatibility reasons, the *encoding* argument must be given "
"explicitly if there are multiple *path_names*. This limitation is scheduled "
"to be removed in Python 3.15."
msgstr ""
"Av bakåtkompatibilitetsskäl måste argumentet *encoding* anges explicit om "
"det finns flera *path_names*. Denna begränsning kommer enligt planerna att "
"tas bort i Python 3.15."

msgid ""
"This function returns a :class:`~typing.TextIO` object, that is, a text "
"stream open for reading."
msgstr ""
"Denna funktion returnerar ett :class:`~typing.TextIO`-objekt, det vill säga "
"en textström som är öppen för läsning."

msgid "files(anchor).joinpath(*path_names).open('r', encoding=encoding)"
msgstr "files(anchor).joinpath(*path_names).open('r', encoding=kodning)"

msgid ""
"Multiple *path_names* are accepted. *encoding* and *errors* must be given as "
"keyword arguments."
msgstr ""
"Flera *path_names* accepteras. *encoding* och *errors* måste anges som "
"nyckelordsargument."

msgid "Read and return the contents of the named resource as :class:`bytes`."
msgstr ""
"Läser och returnerar innehållet i den angivna resursen som :class:`bytes`."

msgid "files(anchor).joinpath(*path_names).read_bytes()"
msgstr "files(anchor).joinpath(*path_names).read_bytes()"

msgid ""
"Read and return the contents of the named resource as :class:`str`. By "
"default, the contents are read as strict UTF-8."
msgstr ""
"Läser och returnerar innehållet i den angivna resursen som :class:`str`. Som "
"standard läses innehållet som strikt UTF-8."

msgid "files(anchor).joinpath(*path_names).read_text(encoding=encoding)"
msgstr "files(anchor).joinpath(*path_names).read_text(encoding=kodning)"

msgid ""
"Provides the path to the *resource* as an actual file system path.  This "
"function returns a context manager for use in a :keyword:`with` statement. "
"The context manager provides a :class:`pathlib.Path` object."
msgstr ""
"Ger sökvägen till *resursen* som en faktisk filsystemssökväg.  Denna "
"funktion returnerar en kontexthanterare för användning i en :keyword:`with`-"
"sats. Kontexthanteraren tillhandahåller ett :class:`pathlib.Path`-objekt."

msgid ""
"Exiting the context manager cleans up any temporary files created, e.g. when "
"the resource needs to be extracted from a zip file."
msgstr ""
"När du avslutar kontexthanteraren rensas eventuella temporära filer som "
"skapats, t.ex. när resursen måste extraheras från en zip-fil."

msgid ""
"For example, the :meth:`~pathlib.Path.stat` method requires an actual file "
"system path; it can be used like this::"
msgstr ""
"Exempelvis kräver metoden :meth:`~pathlib.Path.stat` en faktisk sökväg till "
"filsystemet; den kan användas så här::"

msgid ""
"with importlib.resources.path(anchor, \"resource.txt\") as fspath:\n"
"    result = fspath.stat()"
msgstr ""
"med importlib.resources.path(anchor, \"resource.txt\") som fspath:\n"
"    resultat = fspath.stat()"

msgid "as_file(files(anchor).joinpath(*path_names))"
msgstr "as_file(files(anchor).joinpath(*path_names))"

msgid ""
"Return ``True`` if the named resource exists, otherwise ``False``. This "
"function does not consider directories to be resources."
msgstr ""
"Returnerar ``True`` om den namngivna resursen finns, annars ``False``. Denna "
"funktion betraktar inte kataloger som resurser."

msgid "files(anchor).joinpath(*path_names).is_file()"
msgstr "files(anchor).joinpath(*path_names).is_file()"

msgid ""
"Return an iterable over the named items within the package or path. The "
"iterable returns names of resources (e.g. files) and non-resources (e.g. "
"directories) as :class:`str`. The iterable does not recurse into "
"subdirectories."
msgstr ""
"Returnerar en iterabel över de namngivna objekten i paketet eller sökvägen. "
"Iterabeln returnerar namn på resurser (t.ex. filer) och icke-resurser (t.ex. "
"kataloger) som :class:`str`. Iterabeln rekurserar inte i underkataloger."

msgid ""
"for resource in files(anchor).joinpath(*path_names).iterdir():\n"
"    yield resource.name"
msgstr ""
"för resurs i files(anchor).joinpath(*path_names).iterdir():\n"
"    ger resurs.namn"

msgid ""
"Prefer ``iterdir()`` as above, which offers more control over the results "
"and richer functionality."
msgstr ""
"Föredrar ``iterdir()`` som ovan, vilket ger mer kontroll över resultaten och "
"rikare funktionalitet."
