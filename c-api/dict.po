# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Dictionary Objects"
msgstr "Ordboksobjekt"

msgid ""
"This subtype of :c:type:`PyObject` represents a Python dictionary object."
msgstr ""
"Denna subtyp av :c:type:`PyObject` representerar ett Python-ordboksobjekt."

msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python dictionary "
"type.  This is the same object as :class:`dict` in the Python layer."
msgstr ""
"Denna instans av :c:type:`PyTypeObject` representerar Pythons ordbokstyp.  "
"Detta är samma objekt som :class:`dict` i Python-lagret."

msgid ""
"Return true if *p* is a dict object or an instance of a subtype of the dict "
"type.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett dict-objekt eller en instans av en subtyp av "
"dict-typen.  Denna funktion lyckas alltid."

msgid ""
"Return true if *p* is a dict object, but not an instance of a subtype of the "
"dict type.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett dict-objekt, men inte en instans av en subtyp "
"av dict-typen.  Denna funktion lyckas alltid."

msgid "Return a new empty dictionary, or ``NULL`` on failure."
msgstr "Returnerar en ny tom ordbok, eller ``NULL`` om den misslyckas."

msgid ""
"Return a :class:`types.MappingProxyType` object for a mapping which enforces "
"read-only behavior.  This is normally used to create a view to prevent "
"modification of the dictionary for non-dynamic class types."
msgstr ""
"Returnerar ett :class:`types.MappingProxyType`-objekt för en mappning som "
"kräver skrivskyddad läsning.  Detta används normalt för att skapa en vy som "
"förhindrar ändring av ordlistan för icke-dynamiska klasstyper."

msgid "Empty an existing dictionary of all key-value pairs."
msgstr "Tömmer en befintlig ordbok på alla nyckel-värde-par."

msgid ""
"Determine if dictionary *p* contains *key*.  If an item in *p* is matches "
"*key*, return ``1``, otherwise return ``0``.  On error, return ``-1``. This "
"is equivalent to the Python expression ``key in p``."
msgstr ""
"Bestäm om ordlistan *p* innehåller *nyckel*.  Om ett objekt i *p* matchar "
"*nyckel*, returneras ``1``, annars returneras ``0``.  Vid fel returneras "
"``-1``. Detta motsvarar Python-uttrycket ``key in p``."

msgid ""
"This is the same as :c:func:`PyDict_Contains`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyDict_Contains`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för ett :c:expr:"
"`PyObject*`."

msgid "Return a new dictionary that contains the same key-value pairs as *p*."
msgstr ""
"Returnerar en ny dictionary som innehåller samma nyckel-värde-par som *p*."

msgid ""
"Insert *val* into the dictionary *p* with a key of *key*.  *key* must be :"
"term:`hashable`; if it isn't, :exc:`TypeError` will be raised. Return ``0`` "
"on success or ``-1`` on failure.  This function *does not* steal a reference "
"to *val*."
msgstr ""
"Infogar *val* i ordlistan *p* med nyckeln *key*.  *key* måste vara :term:"
"`hashable`; om den inte är det kommer :exc:`TypeError` att returneras. "
"Returnerar ``0`` vid framgång eller ``-1`` vid misslyckande.  Denna funktion "
"*stjäl* inte en referens till *val*."

msgid ""
"This is the same as :c:func:`PyDict_SetItem`, but *key* is specified as a :c:"
"expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyDict_SetItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"Remove the entry in dictionary *p* with key *key*. *key* must be :term:"
"`hashable`; if it isn't, :exc:`TypeError` is raised. If *key* is not in the "
"dictionary, :exc:`KeyError` is raised. Return ``0`` on success or ``-1`` on "
"failure."
msgstr ""
"Tar bort posten i ordlistan *p* med nyckeln *key*. *key* måste vara :term:"
"`hashable`; om den inte är det, :exc:`TypeError`. Om *key* inte finns i "
"ordlistan, :exc:`KeyError`. Returnerar ``0`` vid framgång eller ``-1`` vid "
"misslyckande."

msgid ""
"This is the same as :c:func:`PyDict_DelItem`, but *key* is specified as a :c:"
"expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyDict_DelItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, istället för en :c:expr:"
"`PyObject*`."

msgid ""
"Return a new :term:`strong reference` to the object from dictionary *p* "
"which has a key *key*:"
msgstr ""
"Returnerar en ny :term:`strong referens` till det objekt från ordlistan *p* "
"som har nyckeln *key*:"

msgid ""
"If the key is present, set *\\*result* to a new :term:`strong reference` to "
"the value and return ``1``."
msgstr ""
"Om nyckeln finns, sätt *\\*result* till en ny :term:`strong referens` till "
"värdet och returnera ``1``."

msgid "If the key is missing, set *\\*result* to ``NULL`` and return ``0``."
msgstr "Om nyckeln saknas, sätt *\\*result* till ``NULL`` och returnera ``0``."

msgid "On error, raise an exception and return ``-1``."
msgstr "Vid fel, skapa ett undantag och returnera ``-1``."

msgid "See also the :c:func:`PyObject_GetItem` function."
msgstr "Se även funktionen :c:func:`PyObject_GetItem`."

msgid ""
"Return a :term:`borrowed reference` to the object from dictionary *p* which "
"has a key *key*.  Return ``NULL`` if the key *key* is missing *without* "
"setting an exception."
msgstr ""
"Returnerar en :term:`lånad referens` till det objekt från ordlistan *p* som "
"har nyckeln *key*.  Returnerar ``NULL`` om nyckeln *key* saknas *utan* att "
"ett undantag anges."

msgid ""
"Exceptions that occur while this calls :meth:`~object.__hash__` and :meth:"
"`~object.__eq__` methods are silently ignored. Prefer the :c:func:"
"`PyDict_GetItemWithError` function instead."
msgstr ""
"Undantag som inträffar när detta anropar metoderna :meth:`~object.__hash__` "
"och :meth:`~object.__eq__` ignoreras tyst. Föredra funktionen :c:func:"
"`PyDict_GetItemWithError` istället."

msgid ""
"Calling this API without an :term:`attached thread state` had been allowed "
"for historical reason. It is no longer allowed."
msgstr ""
"Att anropa detta API utan en :term:`attached thread state` hade varit "
"tillåtet av historiska skäl. Det är inte längre tillåtet."

msgid ""
"Variant of :c:func:`PyDict_GetItem` that does not suppress exceptions. "
"Return ``NULL`` **with** an exception set if an exception occurred.  Return "
"``NULL`` **without** an exception set if the key wasn't present."
msgstr ""
"Variant av :c:func:`PyDict_GetItem` som inte undertrycker undantag. "
"Returnerar ``NULL`` **med** en undantagsuppsättning om ett undantag "
"inträffade.  Returnerar ``NULL`` **utan** en undantagsuppsättning om nyckeln "
"inte fanns."

msgid ""
"This is the same as :c:func:`PyDict_GetItem`, but *key* is specified as a :c:"
"expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyDict_GetItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"Exceptions that occur while this calls :meth:`~object.__hash__` and :meth:"
"`~object.__eq__` methods or while creating the temporary :class:`str` object "
"are silently ignored. Prefer using the :c:func:`PyDict_GetItemWithError` "
"function with your own :c:func:`PyUnicode_FromString` *key* instead."
msgstr ""
"Undantag som inträffar när detta anropar metoderna :meth:`~object.__hash__` "
"och :meth:`~object.__eq__` eller när det tillfälliga :class:`str`-objektet "
"skapas ignoreras i tysthet. Använd hellre funktionen :c:func:"
"`PyDict_GetItemWithError` med din egen :c:func:`PyUnicode_FromString` *key* "
"istället."

msgid ""
"Similar to :c:func:`PyDict_GetItemRef`, but *key* is specified as a :c:expr:"
"`const char*` UTF-8 encoded bytes string, rather than a :c:expr:`PyObject*`."
msgstr ""
"Liknar :c:func:`PyDict_GetItemRef`, men *key* anges som en :c:expr:`const "
"char*` UTF-8-kodad bytessträng, i stället för en :c:expr:`PyObject*`."

msgid ""
"This is the same as the Python-level :meth:`dict.setdefault`.  If present, "
"it returns the value corresponding to *key* from the dictionary *p*.  If the "
"key is not in the dict, it is inserted with value *defaultobj* and "
"*defaultobj* is returned.  This function evaluates the hash function of "
"*key* only once, instead of evaluating it independently for the lookup and "
"the insertion."
msgstr ""
"Detta är samma sak som Python-nivå :meth:`dict.setdefault`.  Om den finns "
"returnerar den värdet som motsvarar *key* från ordlistan *p*.  Om nyckeln "
"inte finns i dict, infogas den med värdet *defaultobj* och *defaultobj* "
"returneras.  Denna funktion utvärderar hashfunktionen för *key* endast en "
"gång, i stället för att utvärdera den oberoende av varandra för uppslagning "
"och infogning."

msgid ""
"Inserts *default_value* into the dictionary *p* with a key of *key* if the "
"key is not already present in the dictionary. If *result* is not ``NULL``, "
"then *\\*result* is set to a :term:`strong reference` to either "
"*default_value*, if the key was not present, or the existing value, if *key* "
"was already present in the dictionary. Returns ``1`` if the key was present "
"and *default_value* was not inserted, or ``0`` if the key was not present "
"and *default_value* was inserted. On failure, returns ``-1``, sets an "
"exception, and sets ``*result`` to ``NULL``."
msgstr ""
"Lägger till *default_value* i ordlistan *p* med nyckeln *key* om nyckeln "
"inte redan finns i ordlistan. Om *result* inte är ``NULL``, sätts "
"*\\*result* till en :term:`strong referens` till antingen *default_value*, "
"om nyckeln inte fanns, eller det befintliga värdet, om *key* redan fanns i "
"ordlistan. Returnerar ``1`` om nyckeln fanns och *default_value* inte "
"infogades, eller ``0`` om nyckeln inte fanns och *default_value* infogades. "
"Vid misslyckande returneras ``-1``, ett undantag skapas och ``*result`` "
"sätts till ``NULL``."

msgid ""
"For clarity: if you have a strong reference to *default_value* before "
"calling this function, then after it returns, you hold a strong reference to "
"both *default_value* and *\\*result* (if it's not ``NULL``). These may refer "
"to the same object: in that case you hold two separate references to it."
msgstr ""
"För tydlighetens skull: om du har en stark referens till *default_value* "
"innan du anropar den här funktionen, så har du en stark referens till både "
"*default_value* och *\\*result* (om det inte är ``NULL``) efter att den har "
"returnerat. Dessa kan referera till samma objekt: i så fall har du två "
"separata referenser till det."

msgid ""
"Remove *key* from dictionary *p* and optionally return the removed value. Do "
"not raise :exc:`KeyError` if the key missing."
msgstr ""
"Tar bort *nyckel* från ordlistan *p* och returnerar eventuellt det borttagna "
"värdet. Ge inte :exc:`KeyError` om nyckeln saknas."

msgid ""
"If the key is present, set *\\*result* to a new reference to the removed "
"value if *result* is not ``NULL``, and return ``1``."
msgstr ""
"Om nyckeln finns, sätt *\\*result* till en ny referens till det borttagna "
"värdet om *result* inte är ``NULL``, och returnera ``1``."

msgid ""
"If the key is missing, set *\\*result* to ``NULL`` if *result* is not "
"``NULL``, and return ``0``."
msgstr ""
"Om nyckeln saknas, sätt *\\*result* till ``NULL`` om *result* inte är "
"``NULL``, och returnera ``0``."

msgid ""
"Similar to :meth:`dict.pop`, but without the default value and not raising :"
"exc:`KeyError` if the key missing."
msgstr ""
"Liknar :meth:`dict.pop`, men utan standardvärde och utan att ge upphov till :"
"exc:`KeyError` om nyckeln saknas."

msgid ""
"Similar to :c:func:`PyDict_Pop`, but *key* is specified as a :c:expr:`const "
"char*` UTF-8 encoded bytes string, rather than a :c:expr:`PyObject*`."
msgstr ""
"Liknar :c:func:`PyDict_Pop`, men *key* anges som en :c:expr:`const char*` "
"UTF-8-kodad bytessträng, i stället för ett :c:expr:`PyObject*`."

msgid ""
"Return a :c:type:`PyListObject` containing all the items from the dictionary."
msgstr ""
"Returnerar ett :c:type:`PyListObject` som innehåller alla objekt från "
"ordlistan."

msgid ""
"Return a :c:type:`PyListObject` containing all the keys from the dictionary."
msgstr ""
"Returnerar ett :c:type:`PyListObject` som innehåller alla nycklar från "
"ordlistan."

msgid ""
"Return a :c:type:`PyListObject` containing all the values from the "
"dictionary *p*."
msgstr ""
"Returnerar ett :c:type:`PyListObject` som innehåller alla värden från "
"ordlistan *p*."

msgid ""
"Return the number of items in the dictionary.  This is equivalent to "
"``len(p)`` on a dictionary."
msgstr ""
"Returnerar antalet objekt i ordlistan.  Detta är likvärdigt med ``len(p)`` "
"för en ordbok."

msgid ""
"Iterate over all key-value pairs in the dictionary *p*.  The :c:type:"
"`Py_ssize_t` referred to by *ppos* must be initialized to ``0`` prior to the "
"first call to this function to start the iteration; the function returns "
"true for each pair in the dictionary, and false once all pairs have been "
"reported.  The parameters *pkey* and *pvalue* should either point to :c:expr:"
"`PyObject*` variables that will be filled in with each key and value, "
"respectively, or may be ``NULL``.  Any references returned through them are "
"borrowed.  *ppos* should not be altered during iteration. Its value "
"represents offsets within the internal dictionary structure, and since the "
"structure is sparse, the offsets are not consecutive."
msgstr ""
"Iterera över alla nyckel-värde-par i ordlistan *p*.  Den :c:type:"
"`Py_ssize_t` som hänvisas till av *ppos* måste initialiseras till ``0`` före "
"det första anropet till denna funktion för att starta iterationen; "
"funktionen returnerar true för varje par i ordlistan och false när alla par "
"har rapporterats.  Parametrarna *pkey* och *pvalue* ska antingen peka på :c:"
"expr:`PyObject*`-variabler som kommer att fyllas i med varje nyckel "
"respektive värde, eller vara ``NULL``.  Alla referenser som returneras genom "
"dem lånas.  *ppos* bör inte ändras under iterationen. Dess värde "
"representerar offsets inom den interna ordboksstrukturen, och eftersom "
"strukturen är gles är offseten inte konsekutiva."

msgid "For example::"
msgstr "Till exempel::"

msgid ""
"PyObject *key, *value;\n"
"Py_ssize_t pos = 0;\n"
"\n"
"while (PyDict_Next(self->dict, &pos, &key, &value)) {\n"
"    /* do something interesting with the values... */\n"
"    ...\n"
"}"
msgstr ""
"PyObject *nyckel, *värde;\n"
"Py_ssize_t pos = 0;\n"
"\n"
"while (PyDict_Next(self->dict, &pos, &key, &value)) {\n"
"    /* gör något intressant med värdena... */\n"
"    ...\n"
"}"

msgid ""
"The dictionary *p* should not be mutated during iteration.  It is safe to "
"modify the values of the keys as you iterate over the dictionary, but only "
"so long as the set of keys does not change.  For example::"
msgstr ""
"Ordboken *p* ska inte ändras under iterationen.  Det är säkert att ändra "
"värdena på nycklarna när du itererar över ordlistan, men bara så länge som "
"uppsättningen nycklar inte ändras.  Till exempel::"

msgid ""
"PyObject *key, *value;\n"
"Py_ssize_t pos = 0;\n"
"\n"
"while (PyDict_Next(self->dict, &pos, &key, &value)) {\n"
"    long i = PyLong_AsLong(value);\n"
"    if (i == -1 && PyErr_Occurred()) {\n"
"        return -1;\n"
"    }\n"
"    PyObject *o = PyLong_FromLong(i + 1);\n"
"    if (o == NULL)\n"
"        return -1;\n"
"    if (PyDict_SetItem(self->dict, key, o) < 0) {\n"
"        Py_DECREF(o);\n"
"        return -1;\n"
"    }\n"
"    Py_DECREF(o);\n"
"}"
msgstr ""
"PyObject *nyckel, *värde;\n"
"Py_ssize_t pos = 0;\n"
"\n"
"while (PyDict_Next(self->dict, &pos, &key, &value)) {\n"
"    long i = PyLong_AsLong(värde);\n"
"    if (i == -1 && PyErr_Occurred()) {\n"
"        return -1;\n"
"    }\n"
"    PyObject *o = PyLong_FromLong(i + 1);\n"
"    om (o == NULL)\n"
"        returnera -1;\n"
"    if (PyDict_SetItem(self->dict, key, o) < 0) {\n"
"        Py_DECREF(o);\n"
"        returnera -1;\n"
"    }\n"
"    Py_DECREF(o);\n"
"}"

msgid ""
"The function is not thread-safe in the :term:`free-threaded <free "
"threading>` build without external synchronization.  You can use :c:macro:"
"`Py_BEGIN_CRITICAL_SECTION` to lock the dictionary while iterating over it::"
msgstr ""
"Funktionen är inte trådsäker i :term:``free-threaded <free threading>`-"
"byggnaden utan extern synkronisering.  Du kan använda :c:macro:"
"`Py_BEGIN_CRITICAL_SECTION` för att låsa ordlistan medan du itererar över "
"den::"

msgid ""
"Py_BEGIN_CRITICAL_SECTION(self->dict);\n"
"while (PyDict_Next(self->dict, &pos, &key, &value)) {\n"
"    ...\n"
"}\n"
"Py_END_CRITICAL_SECTION();"
msgstr ""
"Py_BEGIN_CRITICAL_SECTION(själv>dict);\n"
"while (PyDict_Next(self->dict, &pos, &key, &value)) {\n"
"    ...\n"
"}\n"
"Py_END_CRITICAL_SECTION();"

msgid ""
"Iterate over mapping object *b* adding key-value pairs to dictionary *a*. "
"*b* may be a dictionary, or any object supporting :c:func:`PyMapping_Keys` "
"and :c:func:`PyObject_GetItem`. If *override* is true, existing pairs in *a* "
"will be replaced if a matching key is found in *b*, otherwise pairs will "
"only be added if there is not a matching key in *a*. Return ``0`` on success "
"or ``-1`` if an exception was raised."
msgstr ""
"Iterera över mappningsobjektet *b* och lägg till nyckel-värdepar i ordboken "
"*a*. *b* kan vara en ordbok eller ett objekt som stöder :c:func:"
"`PyMapping_Keys` och :c:func:`PyObject_GetItem`. Om *override* är true "
"kommer befintliga par i *a* att ersättas om en matchande nyckel hittas i "
"*b*, annars kommer par endast att läggas till om det inte finns någon "
"matchande nyckel i *a*. Returnerar ``0`` vid framgång eller ``-1`` om ett "
"undantag har uppstått."

msgid ""
"This is the same as ``PyDict_Merge(a, b, 1)`` in C, and is similar to ``a."
"update(b)`` in Python except that :c:func:`PyDict_Update` doesn't fall back "
"to the iterating over a sequence of key value pairs if the second argument "
"has no \"keys\" attribute.  Return ``0`` on success or ``-1`` if an "
"exception was raised."
msgstr ""
"Detta är samma sak som ``PyDict_Merge(a, b, 1)`` i C, och liknar ``a."
"update(b)`` i Python förutom att :c:func:`PyDict_Update` inte faller "
"tillbaka till att iterera över en sekvens av nyckel-värde-par om det andra "
"argumentet inte har något \"keys\"-attribut.  Returnerar ``0`` vid framgång "
"eller ``-1`` om ett undantag uppstod."

msgid ""
"Update or merge into dictionary *a*, from the key-value pairs in *seq2*. "
"*seq2* must be an iterable object producing iterable objects of length 2, "
"viewed as key-value pairs.  In case of duplicate keys, the last wins if "
"*override* is true, else the first wins. Return ``0`` on success or ``-1`` "
"if an exception was raised. Equivalent Python (except for the return value)::"
msgstr ""
"Uppdatera eller sammanfoga till ordboken *a*, från nyckelvärdeparen i "
"*seq2*. *seq2* måste vara ett itererbart objekt som producerar itererbara "
"objekt med längden 2, betraktade som nyckel-värdepar.  Vid duplicerade "
"nycklar vinner den sista om *override* är sant, annars vinner den första. "
"Returnerar ``0`` vid framgång eller ``-1`` om ett undantag uppstod. "
"Motsvarande Python (förutom returvärdet)::"

msgid ""
"def PyDict_MergeFromSeq2(a, seq2, override):\n"
"    for key, value in seq2:\n"
"        if override or key not in a:\n"
"            a[key] = value"
msgstr ""
"def PyDict_MergeFromSeq2(a, seq2, override):\n"
"    för nyckel, värde i seq2:\n"
"        om override eller key inte finns i a:\n"
"            a[nyckel] = värde"

msgid ""
"Register *callback* as a dictionary watcher. Return a non-negative integer "
"id which must be passed to future calls to :c:func:`PyDict_Watch`. In case "
"of error (e.g. no more watcher IDs available), return ``-1`` and set an "
"exception."
msgstr ""
"Registrera *callback* som en dictionary watcher. Returnera ett icke-negativt "
"heltals-id som måste skickas till framtida anrop till :c:func:"
"`PyDict_Watch`. I händelse av fel (t.ex. inga fler bevaknings-IDs "
"tillgängliga), returnera ``-1`` och sätt ett undantag."

msgid ""
"Clear watcher identified by *watcher_id* previously returned from :c:func:"
"`PyDict_AddWatcher`. Return ``0`` on success, ``-1`` on error (e.g. if the "
"given *watcher_id* was never registered.)"
msgstr ""
"Rensa bevakare identifierad av *watcher_id* som tidigare returnerats från :c:"
"func:`PyDict_AddWatcher`. Returnerar ``0`` vid framgång, ``-1`` vid fel (t."
"ex. om det givna *watcher_id* aldrig registrerades)"

msgid ""
"Mark dictionary *dict* as watched. The callback granted *watcher_id* by :c:"
"func:`PyDict_AddWatcher` will be called when *dict* is modified or "
"deallocated. Return ``0`` on success or ``-1`` on error."
msgstr ""
"Markera ordboken *dict* som bevakad. Återkallelsen som tilldelats "
"*watcher_id* av :c:func:`PyDict_AddWatcher` kommer att anropas när *dict* "
"ändras eller avallokeras. Returnerar ``0`` vid framgång eller ``-1`` vid fel."

msgid ""
"Mark dictionary *dict* as no longer watched. The callback granted "
"*watcher_id* by :c:func:`PyDict_AddWatcher` will no longer be called when "
"*dict* is modified or deallocated. The dict must previously have been "
"watched by this watcher. Return ``0`` on success or ``-1`` on error."
msgstr ""
"Markera ordboken *dict* som inte längre bevakad. Återkallelsen som "
"tilldelades *watcher_id* av :c:func:`PyDict_AddWatcher` kommer inte längre "
"att anropas när *dict* ändras eller avallokeras. Dict måste tidigare ha "
"bevakats av denna bevakare. Returnerar ``0`` vid framgång eller ``-1`` vid "
"fel."

msgid ""
"Enumeration of possible dictionary watcher events: ``PyDict_EVENT_ADDED``, "
"``PyDict_EVENT_MODIFIED``, ``PyDict_EVENT_DELETED``, "
"``PyDict_EVENT_CLONED``, ``PyDict_EVENT_CLEARED``, or "
"``PyDict_EVENT_DEALLOCATED``."
msgstr ""
"Uppräkning av möjliga händelser för ordboksövervakare: "
"``PyDict_EVENT_ADDED``, ``PyDict_EVENT_MODIFIED``, ``PyDict_EVENT_DELETED``, "
"``PyDict_EVENT_CLONED``, ``PyDict_EVENT_CLEARED`` eller "
"``PyDict_EVENT_DEALLOCATED``."

msgid "Type of a dict watcher callback function."
msgstr "Typ av återuppringningsfunktion för en dict watcher."

msgid ""
"If *event* is ``PyDict_EVENT_CLEARED`` or ``PyDict_EVENT_DEALLOCATED``, both "
"*key* and *new_value* will be ``NULL``. If *event* is ``PyDict_EVENT_ADDED`` "
"or ``PyDict_EVENT_MODIFIED``, *new_value* will be the new value for *key*. "
"If *event* is ``PyDict_EVENT_DELETED``, *key* is being deleted from the "
"dictionary and *new_value* will be ``NULL``."
msgstr ""
"Om *event* är ``PyDict_EVENT_CLEARED`` eller ``PyDict_EVENT_DEALLOCATED`` "
"kommer både *key* och *new_value* att vara ``NULL``. Om *event* är "
"``PyDict_EVENT_ADDED`` eller ``PyDict_EVENT_MODIFIED``, kommer *new_value* "
"att vara det nya värdet för *key*. Om *event* är ``PyDict_EVENT_DELETED`` "
"raderas *key* från ordlistan och *new_value* blir ``NULL``."

msgid ""
"``PyDict_EVENT_CLONED`` occurs when *dict* was previously empty and another "
"dict is merged into it. To maintain efficiency of this operation, per-key "
"``PyDict_EVENT_ADDED`` events are not issued in this case; instead a single "
"``PyDict_EVENT_CLONED`` is issued, and *key* will be the source dictionary."
msgstr ""
"``PyDict_EVENT_CLONED`` inträffar när *dict* tidigare var tom och en annan "
"dict slås samman med den. För att bibehålla effektiviteten i denna operation "
"utfärdas inte ``PyDict_EVENT_ADDED``-händelser per nyckel i detta fall; "
"istället utfärdas en enda ``PyDict_EVENT_CLONED`` och *key* kommer att vara "
"källordboken."

msgid ""
"The callback may inspect but must not modify *dict*; doing so could have "
"unpredictable effects, including infinite recursion. Do not trigger Python "
"code execution in the callback, as it could modify the dict as a side effect."
msgstr ""
"Callbacken kan inspektera men får inte modifiera *dict*; att göra det kan få "
"oförutsägbara effekter, inklusive oändlig rekursion. Utlös inte exekvering "
"av Python-kod i återuppringningen, eftersom det kan ändra dict som en "
"bieffekt."

msgid ""
"If *event* is ``PyDict_EVENT_DEALLOCATED``, taking a new reference in the "
"callback to the about-to-be-destroyed dictionary will resurrect it and "
"prevent it from being freed at this time. When the resurrected object is "
"destroyed later, any watcher callbacks active at that time will be called "
"again."
msgstr ""
"Om *event* är ``PyDict_EVENT_DEALLOCATED`` kommer en ny referens i "
"återuppringningen till den ordbok som ska förstöras att återuppliva den och "
"förhindra att den frigörs vid den här tidpunkten. När det återupplivade "
"objektet förstörs senare, kommer alla watchers callbacks som är aktiva vid "
"den tidpunkten att anropas igen."

msgid ""
"Callbacks occur before the notified modification to *dict* takes place, so "
"the prior state of *dict* can be inspected."
msgstr ""
"Återkallelser sker innan den aviserade modifieringen av *dict* äger rum, så "
"att *dict*s tidigare tillstånd kan inspekteras."

msgid ""
"If the callback sets an exception, it must return ``-1``; this exception "
"will be printed as an unraisable exception using :c:func:"
"`PyErr_WriteUnraisable`. Otherwise it should return ``0``."
msgstr ""
"Om callbacken anger ett undantag måste den returnera ``-1``; detta undantag "
"kommer att skrivas ut som ett undantag som inte kan bedömas med :c:func:"
"`PyErr_WriteUnraisable`. Annars bör det returnera ``0``."

msgid ""
"There may already be a pending exception set on entry to the callback. In "
"this case, the callback should return ``0`` with the same exception still "
"set. This means the callback may not call any other API that can set an "
"exception unless it saves and clears the exception state first, and restores "
"it before returning."
msgstr ""
"Det kan redan finnas ett väntande undantag inställt vid ingången till "
"återuppringningen. I detta fall bör återuppringningen returnera ``0`` med "
"samma undantag fortfarande inställt. Detta innebär att återuppringningen "
"inte får anropa något annat API som kan ställa in ett undantag om det inte "
"sparar och rensar undantagstillståndet först och återställer det innan det "
"returneras."

msgid "object"
msgstr "objekt"

msgid "dictionary"
msgstr "ordbok"

msgid "built-in function"
msgstr "inbyggd funktion"

msgid "len"
msgstr "len"
