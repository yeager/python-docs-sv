# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Tuple Objects"
msgstr "Tuple-objekt"

msgid "This subtype of :c:type:`PyObject` represents a Python tuple object."
msgstr ""
"Denna subtyp av :c:type:`PyObject` representerar ett Python tuple-objekt."

msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python tuple type; it "
"is the same object as :class:`tuple` in the Python layer."
msgstr ""
"Denna instans av :c:type:`PyTypeObject` representerar Pythons tupeltyp; det "
"är samma objekt som :class:`tuple` i Python-lagret."

msgid ""
"Return true if *p* is a tuple object or an instance of a subtype of the "
"tuple type.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett tuple-objekt eller en instans av en subtyp av "
"tuple-typen.  Denna funktion lyckas alltid."

msgid ""
"Return true if *p* is a tuple object, but not an instance of a subtype of "
"the tuple type.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett tuple-objekt, men inte en instans av en subtyp "
"av tuple-typen.  Denna funktion lyckas alltid."

msgid ""
"Return a new tuple object of size *len*, or ``NULL`` with an exception set "
"on failure."
msgstr ""
"Returnerar ett nytt tuple-objekt av storleken *len*, eller ``NULL`` med en "
"undantagsuppsättning vid fel."

msgid ""
"Return a new tuple object of size *n*, or ``NULL`` with an exception set on "
"failure. The tuple values are initialized to the subsequent *n* C arguments "
"pointing to Python objects. ``PyTuple_Pack(2, a, b)`` is equivalent to "
"``Py_BuildValue(\"(OO)\", a, b)``."
msgstr ""
"Returnerar ett nytt tuple-objekt av storlek *n*, eller ``NULL`` med en "
"exception set vid misslyckande. Tupelvärdena initialiseras till de "
"efterföljande *n* C-argumenten som pekar på Python-objekt. ``PyTuple_Pack(2, "
"a, b)`` är ekvivalent med ``Py_BuildValue(\"(OO)\", a, b)``."

msgid ""
"Take a pointer to a tuple object, and return the size of that tuple. On "
"error, return ``-1`` and with an exception set."
msgstr ""
"Ta en pekare till ett tuple-objekt och returnera storleken på tupeln. Vid "
"fel returneras ``-1`` och med en undantagsuppsättning."

msgid "Like :c:func:`PyTuple_Size`, but without error checking."
msgstr "Som :c:func:`PyTuple_Size`, men utan felkontroll."

msgid ""
"Return the object at position *pos* in the tuple pointed to by *p*.  If "
"*pos* is negative or out of bounds, return ``NULL`` and set an :exc:"
"`IndexError` exception."
msgstr ""
"Returnerar objektet på position *pos* i den tupel som *p* pekar på.  Om "
"*pos* är negativ eller utanför gränserna, returneras ``NULL`` och ett :exc:"
"`IndexError` undantag anges."

msgid ""
"The returned reference is borrowed from the tuple *p* (that is: it is only "
"valid as long as you hold a reference to *p*). To get a :term:`strong "
"reference`, use :c:func:`Py_NewRef(PyTuple_GetItem(...)) <Py_NewRef>` or :c:"
"func:`PySequence_GetItem`."
msgstr ""
"Den returnerade referensen är lånad från tupeln *p* (det vill säga: den är "
"bara giltig så länge du har en referens till *p*). För att få en :term:"
"`strong referens`, använd :c:func:`Py_NewRef(PyTuple_GetItem(...)) "
"<Py_NewRef>` eller :c:func:`PySequence_GetItem`."

msgid "Like :c:func:`PyTuple_GetItem`, but does no checking of its arguments."
msgstr "Som :c:func:`PyTuple_GetItem`, men gör ingen kontroll av argumenten."

msgid ""
"Return the slice of the tuple pointed to by *p* between *low* and *high*, or "
"``NULL`` with an exception set on failure."
msgstr ""
"Returnerar den del av tupeln som pekas ut av *p* mellan *low* och *high*, "
"eller ``NULL`` med en undantagsuppsättning vid fel."

msgid ""
"This is the equivalent of the Python expression ``p[low:high]``. Indexing "
"from the end of the tuple is not supported."
msgstr ""
"Detta är motsvarigheten till Python-uttrycket ``p[low:high]``. Indexering "
"från slutet av tupeln stöds inte."

msgid ""
"Insert a reference to object *o* at position *pos* of the tuple pointed to "
"by *p*.  Return ``0`` on success.  If *pos* is out of bounds, return ``-1`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"Infoga en referens till objektet *o* på position *pos* i den tupel som *p* "
"pekar på.  Returnerar ``0`` vid framgång.  Om *pos* är utanför gränserna, "
"returneras ``-1`` och ett :exc:`IndexError` undantag anges."

msgid ""
"This function \"steals\" a reference to *o* and discards a reference to an "
"item already in the tuple at the affected position."
msgstr ""
"Denna funktion \"stjäl\" en referens till *o* och kastar bort en referens "
"till ett objekt som redan finns i tupeln på den berörda positionen."

msgid ""
"Like :c:func:`PyTuple_SetItem`, but does no error checking, and should "
"*only* be used to fill in brand new tuples."
msgstr ""
"Som :c:func:`PyTuple_SetItem`, men gör ingen felkontroll och bör *endast* "
"användas för att fylla i helt nya tupler."

msgid ""
"Bounds checking is performed as an assertion if Python is built in :ref:"
"`debug mode <debug-build>` or :option:`with assertions <--with-assertions>`."
msgstr ""
"Gränskontroll utförs som ett påstående om Python är byggt i :ref:`debugläge "
"<debug-build>` eller :option:`med påstående <--with-assertions>`."

msgid ""
"This function \"steals\" a reference to *o*, and, unlike :c:func:"
"`PyTuple_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in the tuple at position *pos* will be leaked."
msgstr ""
"Denna funktion \"stjäl\" en referens till *o* och, till skillnad från :c:"
"func:`PyTuple_SetItem`, förkastar den *inte* en referens till något objekt "
"som ersätts; alla referenser i tupeln på position *pos* läcker ut."

msgid ""
"This macro should *only* be used on tuples that are newly created. Using "
"this macro on a tuple that is already in use (or in other words, has a "
"refcount > 1) could lead to undefined behavior."
msgstr ""
"Detta makro ska *endast* användas på tuples som är nyskapade. Om du använder "
"detta makro på en tupel som redan används (eller med andra ord har ett "
"refcount > 1) kan det leda till ett odefinierat beteende."

msgid ""
"Can be used to resize a tuple.  *newsize* will be the new length of the "
"tuple. Because tuples are *supposed* to be immutable, this should only be "
"used if there is only one reference to the object.  Do *not* use this if the "
"tuple may already be known to some other part of the code.  The tuple will "
"always grow or shrink at the end.  Think of this as destroying the old tuple "
"and creating a new one, only more efficiently.  Returns ``0`` on success. "
"Client code should never assume that the resulting value of ``*p`` will be "
"the same as before calling this function. If the object referenced by ``*p`` "
"is replaced, the original ``*p`` is destroyed.  On failure, returns ``-1`` "
"and sets ``*p`` to ``NULL``, and raises :exc:`MemoryError` or :exc:"
"`SystemError`."
msgstr ""
"Kan användas för att ändra storlek på en tupel.  *newsize* kommer att vara "
"den nya längden på tupeln. Eftersom tuplar *förutsätts* vara oföränderliga "
"bör detta endast användas om det bara finns en referens till objektet.  "
"Använd *inte* detta om tupeln redan kan vara känd av någon annan del av "
"koden.  Tupeln kommer alltid att växa eller krympa i slutet.  Tänk på detta "
"som att förstöra den gamla tupeln och skapa en ny, fast mer effektivt.  "
"Returnerar ``0`` vid framgång. Klientkoden bör aldrig anta att det "
"resulterande värdet av ``*p`` kommer att vara detsamma som innan funktionen "
"anropades. Om objektet som refereras till av ``*p`` ersätts, förstörs det "
"ursprungliga ``*p``.  Om funktionen misslyckas, returneras ``-1`` och ``*p`` "
"sätts till ``NULL``, och ger upphov till :exc:`MemoryError` eller :exc:"
"`SystemError`."

msgid "Struct Sequence Objects"
msgstr "Struct Sequence Objects"

msgid ""
"Struct sequence objects are the C equivalent of :func:`~collections."
"namedtuple` objects, i.e. a sequence whose items can also be accessed "
"through attributes. To create a struct sequence, you first have to create a "
"specific struct sequence type."
msgstr ""
"Struct sequence-objekt är C-motsvarigheten till :func:`~collections."
"namedtuple`-objekt, dvs. en sekvens vars objekt också kan nås via attribut. "
"För att skapa en struct-sekvens måste du först skapa en specifik struct-"
"sekvenstyp."

msgid ""
"Create a new struct sequence type from the data in *desc*, described below. "
"Instances of the resulting type can be created with :c:func:"
"`PyStructSequence_New`."
msgstr ""
"Skapar en ny struct sequence-typ från data i *desc*, enligt beskrivningen "
"nedan. Instanser av den resulterande typen kan skapas med :c:func:"
"`PyStructSequence_New`."

msgid "Return ``NULL`` with an exception set on failure."
msgstr "Returnerar ``NULL`` med en exceptionell uppsättning vid fel."

msgid "Initializes a struct sequence type *type* from *desc* in place."
msgstr "Initialiserar en struct-sekvens typ *type* från *desc* på plats."

msgid ""
"Like :c:func:`PyStructSequence_InitType`, but returns ``0`` on success and "
"``-1`` with an exception set on failure."
msgstr ""
"Som :c:func:`PyStructSequence_InitType`, men returnerar ``0`` vid framgång "
"och ``-1`` med en exception set vid misslyckande."

msgid "Contains the meta information of a struct sequence type to create."
msgstr "Innehåller metainformationen för en struct-sekvenstyp som ska skapas."

msgid ""
"Fully qualified name of the type; null-terminated UTF-8 encoded. The name "
"must contain the module name."
msgstr ""
"Fullständigt kvalificerat namn på typen; nollavslutad UTF-8-kodad. Namnet "
"måste innehålla modulnamnet."

msgid "Pointer to docstring for the type or ``NULL`` to omit."
msgstr "Pekare till docstring för typen eller ``NULL`` för att utelämna."

msgid "Pointer to ``NULL``-terminated array with field names of the new type."
msgstr "Pekare till en ``NULL``-avslutad array med fältnamn av den nya typen."

msgid "Number of fields visible to the Python side (if used as tuple)."
msgstr "Antal fält som är synliga för Python-sidan (om de används som tuple)."

msgid ""
"Describes a field of a struct sequence. As a struct sequence is modeled as a "
"tuple, all fields are typed as :c:expr:`PyObject*`.  The index in the :c:"
"member:`~PyStructSequence_Desc.fields` array of the :c:type:"
"`PyStructSequence_Desc` determines which field of the struct sequence is "
"described."
msgstr ""
"Beskriver ett fält i en struct sequence. Eftersom en struct sequence är "
"modellerad som en tupel, är alla fält typade som :c:expr:`PyObject*`.  "
"Indexet i :c:member:`~PyStructSequence_Desc.fields`-arrayen i :c:type:"
"`PyStructSequence_Desc` avgör vilket fält i struct-sekvensen som beskrivs."

msgid ""
"Name for the field or ``NULL`` to end the list of named fields, set to :c:"
"data:`PyStructSequence_UnnamedField` to leave unnamed."
msgstr ""
"Namn på fältet eller ``NULL`` för att avsluta listan över namngivna fält, "
"inställt på :c:data:`PyStructSequence_UnnamedField` för att lämna fältet "
"utan namn."

msgid "Field docstring or ``NULL`` to omit."
msgstr "Fältets dokumentsträng eller ``NULL`` för att utelämna."

msgid "Special value for a field name to leave it unnamed."
msgstr "Specialvärde för ett fältnamn för att lämna det namnlöst."

msgid "The type was changed from ``char *``."
msgstr "Typen ändrades från ``char *``."

msgid ""
"Creates an instance of *type*, which must have been created with :c:func:"
"`PyStructSequence_NewType`."
msgstr ""
"Skapar en instans av *typ*, som måste ha skapats med :c:func:"
"`PyStructSequence_NewType`."

msgid ""
"Return the object at position *pos* in the struct sequence pointed to by *p*."
msgstr ""
"Returnerar objektet på position *pos* i struct-sekvensen som pekas ut av *p*."

msgid "Alias to :c:func:`PyStructSequence_GetItem`."
msgstr "Alias till :c:func:`PyStructSequence_GetItem`."

msgid "Now implemented as an alias to :c:func:`PyStructSequence_GetItem`."
msgstr ""
"Nu implementerad som ett alias till :c:func:`PyStructSequence_GetItem`."

msgid ""
"Sets the field at index *pos* of the struct sequence *p* to value *o*.  "
"Like :c:func:`PyTuple_SET_ITEM`, this should only be used to fill in brand "
"new instances."
msgstr ""
"Ställer in fältet vid index *pos* i struct-sekvensen *p* till värdet *o*.  "
"Precis som :c:func:`PyTuple_SET_ITEM` bör detta endast användas för att "
"fylla i helt nya instanser."

msgid "This function \"steals\" a reference to *o*."
msgstr "Denna funktion \"stjäl\" en referens till *o*."

msgid "Alias to :c:func:`PyStructSequence_SetItem`."
msgstr "Alias till :c:func:`PyStructSequence_SetItem`."

msgid "Now implemented as an alias to :c:func:`PyStructSequence_SetItem`."
msgstr ""
"Nu implementerad som ett alias till :c:func:`PyStructSequence_SetItem`."

msgid "object"
msgstr "objekt"

msgid "tuple"
msgstr "tupel"
