# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Virtual Environments and Packages"
msgstr "Virtuella miljöer och paket"

msgid "Introduction"
msgstr "Introduktion"

msgid ""
"Python applications will often use packages and modules that don't come as "
"part of the standard library.  Applications will sometimes need a specific "
"version of a library, because the application may require that a particular "
"bug has been fixed or the application may be written using an obsolete "
"version of the library's interface."
msgstr ""
"Python-applikationer använder ofta paket och moduler som inte ingår i "
"standardbiblioteket.  Applikationer behöver ibland en specifik version av "
"ett bibliotek, eftersom applikationen kan kräva att en viss bugg har "
"åtgärdats eller applikationen kan vara skriven med en föråldrad version av "
"bibliotekets gränssnitt."

msgid ""
"This means it may not be possible for one Python installation to meet the "
"requirements of every application.  If application A needs version 1.0 of a "
"particular module but application B needs version 2.0, then the requirements "
"are in conflict and installing either version 1.0 or 2.0 will leave one "
"application unable to run."
msgstr ""
"Detta innebär att det kanske inte är möjligt för en Python-installation att "
"uppfylla kraven för alla applikationer.  Om program A behöver version 1.0 av "
"en viss modul men program B behöver version 2.0, så står kraven i konflikt "
"med varandra och om man installerar antingen version 1.0 eller 2.0 kommer "
"ett program inte att kunna köras."

msgid ""
"The solution for this problem is to create a :term:`virtual environment`, a "
"self-contained directory tree that contains a Python installation for a "
"particular version of Python, plus a number of additional packages."
msgstr ""
"Lösningen på det här problemet är att skapa en :term:`virtuell miljö`, ett "
"fristående katalogträd som innehåller en Python-installation för en viss "
"version av Python, plus ett antal ytterligare paket."

msgid ""
"Different applications can then use different virtual environments. To "
"resolve the earlier example of conflicting requirements, application A can "
"have its own virtual environment with version 1.0 installed while "
"application B has another virtual environment with version 2.0. If "
"application B requires a library be upgraded to version 3.0, this will not "
"affect application A's environment."
msgstr ""
"Olika applikationer kan då använda olika virtuella miljöer. För att lösa det "
"tidigare exemplet med motstridiga krav kan applikation A ha en egen virtuell "
"miljö med version 1.0 installerad medan applikation B har en annan virtuell "
"miljö med version 2.0. Om applikation B kräver att ett bibliotek ska "
"uppgraderas till version 3.0 påverkar detta inte applikation A:s miljö."

msgid "Creating Virtual Environments"
msgstr "Skapa virtuella miljöer"

msgid ""
"The module used to create and manage virtual environments is called :mod:"
"`venv`.  :mod:`venv` will install the Python version from which the command "
"was run (as reported by the :option:`--version` option). For instance, "
"executing the command with ``python3.12`` will install version 3.12."
msgstr ""
"Modulen som används för att skapa och hantera virtuella miljöer heter :mod:"
"`venv`. :mod:`venv` installerar den Python-version som kommandot kördes från "
"(vilket rapporteras av alternativet :option:`--version`). Om du till exempel "
"kör kommandot med ``python3.12`` installeras version 3.12."

msgid ""
"To create a virtual environment, decide upon a directory where you want to "
"place it, and run the :mod:`venv` module as a script with the directory "
"path::"
msgstr ""
"För att skapa en virtuell miljö bestämmer du en katalog där du vill placera "
"den och kör modulen :mod:`venv` som ett skript med katalogsökvägen::"

msgid "python -m venv tutorial-env"
msgstr "python -m venv tutorial-env"

msgid ""
"This will create the ``tutorial-env`` directory if it doesn't exist, and "
"also create directories inside it containing a copy of the Python "
"interpreter and various supporting files."
msgstr ""
"Detta skapar katalogen ``tutorial-env`` om den inte redan finns, och skapar "
"även kataloger i den som innehåller en kopia av Python-tolken och olika "
"stödfiler."

msgid ""
"A common directory location for a virtual environment is ``.venv``. This "
"name keeps the directory typically hidden in your shell and thus out of the "
"way while giving it a name that explains why the directory exists. It also "
"prevents clashing with ``.env`` environment variable definition files that "
"some tooling supports."
msgstr ""
"En vanlig katalogplats för en virtuell miljö är ``.venv``. Det här namnet "
"gör att katalogen vanligtvis är dold i ditt skal och därmed inte är i vägen "
"samtidigt som den får ett namn som förklarar varför katalogen finns. Det "
"förhindrar också krockar med ``.env`` definitionsfiler för miljövariabler "
"som vissa verktyg stöder."

msgid "Once you've created a virtual environment, you may activate it."
msgstr "När du har skapat en virtuell miljö kan du aktivera den."

msgid "On Windows, run::"
msgstr "I Windows kör du::"

msgid "tutorial-env\\Scripts\\activate"
msgstr "tutorial-env\\Scripts\\activate"

msgid "On Unix or MacOS, run::"
msgstr "På Unix eller MacOS kör du::"

msgid "source tutorial-env/bin/activate"
msgstr "source tutorial-env/bin/activate"

msgid ""
"(This script is written for the bash shell.  If you use the :program:`csh` "
"or :program:`fish` shells, there are alternate ``activate.csh`` and "
"``activate.fish`` scripts you should use instead.)"
msgstr ""
"(Det här skriptet är skrivet för bash-skalet.  Om du använder skalen :"
"program:`csh` eller :program:`fish` finns det alternativa skript ``activate."
"csh`` och ``activate.fish`` som du bör använda istället)"

msgid ""
"Activating the virtual environment will change your shell's prompt to show "
"what virtual environment you're using, and modify the environment so that "
"running ``python`` will get you that particular version and installation of "
"Python. For example:"
msgstr ""
"Om du aktiverar den virtuella miljön ändras skalets prompt så att den visar "
"vilken virtuell miljö du använder och miljön ändras så att du får den "
"specifika versionen och installationen av Python om du kör ``python``. Ett "
"exempel:"

msgid ""
"$ source ~/envs/tutorial-env/bin/activate\n"
"(tutorial-env) $ python\n"
"Python 3.5.1 (default, May  6 2016, 10:59:36)\n"
"  ...\n"
">>> import sys\n"
">>> sys.path\n"
"['', '/usr/local/lib/python35.zip', ...,\n"
"'~/envs/tutorial-env/lib/python3.5/site-packages']\n"
">>>"
msgstr ""
"$ source ~/envs/tutorial-env/bin/activate\n"
"(tutorial-env) $ python\n"
"Python 3.5.1 (default, May  6 2016, 10:59:36)\n"
"  ...\n"
">>> import sys\n"
">>> sys.path\n"
"['', '/usr/local/lib/python35.zip', ...,\n"
"'~/envs/tutorial-env/lib/python3.5/site-packages']\n"
">>>"

msgid "To deactivate a virtual environment, type::"
msgstr "Om du vill inaktivera en virtuell miljö skriver du::"

msgid "deactivate"
msgstr "deactivate"

msgid "into the terminal."
msgstr "in i terminalen."

msgid "Managing Packages with pip"
msgstr "Hantera paket med pip"

msgid ""
"You can install, upgrade, and remove packages using a program called :"
"program:`pip`.  By default ``pip`` will install packages from the `Python "
"Package Index <https://pypi.org>`_.  You can browse the Python Package Index "
"by going to it in your web browser."
msgstr ""
"Du kan installera, uppgradera och ta bort paket med hjälp av ett program som "
"heter :program:`pip`.  Som standard installerar ``pip`` paket från `Python "
"Package Index <https://pypi.org>`_.  Du kan bläddra i Python Package Index "
"genom att gå till det i din webbläsare."

msgid ""
"``pip`` has a number of subcommands: \"install\", \"uninstall\", \"freeze\", "
"etc.  (Consult the :ref:`installing-index` guide for complete documentation "
"for ``pip``.)"
msgstr ""
"``pip`` har ett antal underkommandon: \"install\", \"uninstall\", "
"\"freeze\", etc. (Se guiden :ref:`installing-index` för fullständig "
"dokumentation för ``pip``)"

msgid ""
"You can install the latest version of a package by specifying a package's "
"name:"
msgstr ""
"Du kan installera den senaste versionen av ett paket genom att ange paketets "
"namn:"

msgid ""
"(tutorial-env) $ python -m pip install novas\n"
"Collecting novas\n"
"  Downloading novas-3.1.1.3.tar.gz (136kB)\n"
"Installing collected packages: novas\n"
"  Running setup.py install for novas\n"
"Successfully installed novas-3.1.1.3"
msgstr ""
"(tutorial-env) $ python -m pip installera novas\n"
"Samla in novas\n"
"  Hämtar novas-3.1.1.3.tar.gz (136kB)\n"
"Installera insamlade paket: novas\n"
"  Kör setup.py install för novas\n"
"Installerade framgångsrikt novas-3.1.1.3"

msgid ""
"You can also install a specific version of a package by giving the package "
"name  followed by ``==`` and the version number:"
msgstr ""
"Du kan också installera en specifik version av ett paket genom att ange "
"paketnamnet följt av ``==`` och versionsnumret:"

msgid ""
"(tutorial-env) $ python -m pip install requests==2.6.0\n"
"Collecting requests==2.6.0\n"
"  Using cached requests-2.6.0-py2.py3-none-any.whl\n"
"Installing collected packages: requests\n"
"Successfully installed requests-2.6.0"
msgstr ""
"(tutorial-env) $ python -m pip install requests==2.6.0\n"
"Samla in förfrågningar==2.6.0\n"
"  Använda cachelagrade requests-2.6.0-py2.py3-none-any.whl\n"
"Installerar insamlade paket: requests\n"
"Installerade framgångsrikt requests-2.6.0"

msgid ""
"If you re-run this command, ``pip`` will notice that the requested version "
"is already installed and do nothing.  You can supply a different version "
"number to get that version, or you can run ``python -m pip install --"
"upgrade`` to upgrade the package to the latest version:"
msgstr ""
"Om du kör det här kommandot igen kommer ``pip`` att märka att den begärda "
"versionen redan är installerad och inte göra någonting.  Du kan ange ett "
"annat versionsnummer för att hämta den versionen, eller så kan du köra "
"``python -m pip install --upgrade`` för att uppgradera paketet till den "
"senaste versionen:"

msgid ""
"(tutorial-env) $ python -m pip install --upgrade requests\n"
"Collecting requests\n"
"Installing collected packages: requests\n"
"  Found existing installation: requests 2.6.0\n"
"    Uninstalling requests-2.6.0:\n"
"      Successfully uninstalled requests-2.6.0\n"
"Successfully installed requests-2.7.0"
msgstr ""
"(tutorial-env) $ python -m pip install --upgrade förfrågningar\n"
"Samla in förfrågningar\n"
"Installerar insamlade paket: requests\n"
"  Hittade befintlig installation: requests 2.6.0\n"
"    Avinstallation av requests-2.6.0:\n"
"      Framgångsrikt avinstallerat requests-2.6.0\n"
"Installerade framgångsrikt requests-2.7.0"

msgid ""
"``python -m pip uninstall`` followed by one or more package names will "
"remove the packages from the virtual environment."
msgstr ""
"``python -m pip uninstall`` följt av ett eller flera paketnamn tar bort "
"paketen från den virtuella miljön."

msgid ""
"``python -m pip show`` will display information about a particular package:"
msgstr "``python -m pip show`` visar information om ett visst paket:"

msgid ""
"(tutorial-env) $ python -m pip show requests\n"
"---\n"
"Metadata-Version: 2.0\n"
"Name: requests\n"
"Version: 2.7.0\n"
"Summary: Python HTTP for Humans.\n"
"Home-page: http://python-requests.org\n"
"Author: Kenneth Reitz\n"
"Author-email: me@kennethreitz.com\n"
"License: Apache 2.0\n"
"Location: /Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages\n"
"Requires:"
msgstr ""
"(tutorial-env) $ python -m pip visa förfrågningar\n"
"---\n"
"Metadata-version: 2.0\n"
"Namn: förfrågningar\n"
"Version: 2.7.0\n"
"Sammanfattning: Python HTTP för människor.\n"
"Hemsida: http://python-requests.org\n"
"Författare:: Kenneth Reitz\n"
"E-post för författare: me@kennethreitz.com\n"
"Licens: Apache 2.0 Apache 2.0\n"
"Plats: /Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages\n"
"Kräver:"

msgid ""
"``python -m pip list`` will display all of the packages installed in the "
"virtual environment:"
msgstr ""
"``python -m pip list`` visar alla paket som är installerade i den virtuella "
"miljön:"

msgid ""
"(tutorial-env) $ python -m pip list\n"
"novas (3.1.1.3)\n"
"numpy (1.9.2)\n"
"pip (7.0.3)\n"
"requests (2.7.0)\n"
"setuptools (16.0)"
msgstr ""
"(tutorial-env) $ python -m pip lista\n"
"novas (3.1.1.3)\n"
"numpy (1.9.2)\n"
"pip (7.0.3)\n"
"förfrågningar (2.7.0)\n"
"setuptools (16.0)"

msgid ""
"``python -m pip freeze`` will produce a similar list of the installed "
"packages, but the output uses the format that ``python -m pip install`` "
"expects. A common convention is to put this list in a ``requirements.txt`` "
"file:"
msgstr ""
"``python -m pip freeze`` kommer att producera en liknande lista över de "
"installerade paketen, men utdata använder det format som ``python -m pip "
"install`` förväntar sig. En vanlig konvention är att lägga den här listan i "
"filen ``requirements.txt``:"

msgid ""
"(tutorial-env) $ python -m pip freeze > requirements.txt\n"
"(tutorial-env) $ cat requirements.txt\n"
"novas==3.1.1.3\n"
"numpy==1.9.2\n"
"requests==2.7.0"
msgstr ""
"(handledning-env) $ python -m pip freeze > krav.txt\n"
"(handledning-env) $ cat krav.txt\n"
"novas==3.1.1.3\n"
"numpy==1.9.2\n"
"förfrågningar==2.7.0"

msgid ""
"The ``requirements.txt`` can then be committed to version control and "
"shipped as part of an application.  Users can then install all the necessary "
"packages with ``install -r``:"
msgstr ""
"``requirements.txt`` kan sedan överföras till versionskontroll och levereras "
"som en del av en applikation.  Användare kan sedan installera alla "
"nödvändiga paket med ``install -r``:"

msgid ""
"(tutorial-env) $ python -m pip install -r requirements.txt\n"
"Collecting novas==3.1.1.3 (from -r requirements.txt (line 1))\n"
"  ...\n"
"Collecting numpy==1.9.2 (from -r requirements.txt (line 2))\n"
"  ...\n"
"Collecting requests==2.7.0 (from -r requirements.txt (line 3))\n"
"  ...\n"
"Installing collected packages: novas, numpy, requests\n"
"  Running setup.py install for novas\n"
"Successfully installed novas-3.1.1.3 numpy-1.9.2 requests-2.7.0"
msgstr ""
"(tutorial-env) $ python -m pip install -r requirements.txt\n"
"Samlar in novas==3.1.1.3 (från -r requirements.txt (rad 1))\n"
"  ...\n"
"Samlar numpy==1.9.2 (från -r requirements.txt (rad 2))\n"
"  ...\n"
"Samlar in requests==2.7.0 (från -r requirements.txt (rad 3))\n"
"  ...\n"
"Installerar insamlade paket: novas, numpy, requests\n"
"  Kör setup.py install för novas\n"
"Installerade framgångsrikt novas-3.1.1.3 numpy-1.9.2 requests-2.7.0"

msgid ""
"``pip`` has many more options.  Consult the :ref:`installing-index` guide "
"for complete documentation for ``pip``.  When you've written a package and "
"want to make it available on the Python Package Index, consult the `Python "
"packaging user guide`_."
msgstr ""
"``pip`` har många fler alternativ.  Se guiden :ref:`installing-index` för "
"fullständig dokumentation för ``pip``.  När du har skrivit ett paket och "
"vill göra det tillgängligt på Python Package Index, se `Python packaging "
"user guide`_."
