# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!reprlib` --- Alternate :func:`repr` implementation"
msgstr ":mod:`!reprlib` --- Alternativ :func:`repr` implementation"

msgid "**Source code:** :source:`Lib/reprlib.py`"
msgstr "**Källkod:** :source:`Lib/reprlib.py`"

msgid ""
"The :mod:`!reprlib` module provides a means for producing object "
"representations with limits on the size of the resulting strings. This is "
"used in the Python debugger and may be useful in other contexts as well."
msgstr ""
"Modulen :mod:`!reprlib` ger möjlighet att producera objektrepresentationer "
"med begränsningar av storleken på de strängar som blir resultatet. Detta "
"används i Pythons felsökare och kan vara användbart även i andra sammanhang."

msgid "This module provides a class, an instance, and a function:"
msgstr "Denna modul tillhandahåller en klass, en instans och en funktion:"

msgid ""
"Class which provides formatting services useful in implementing functions "
"similar to the built-in :func:`repr`; size limits for  different object "
"types are added to avoid the generation of representations which are "
"excessively long."
msgstr ""
"Klass som tillhandahåller formateringstjänster som är användbara vid "
"implementering av funktioner som liknar den inbyggda :func:`repr`; "
"storleksgränser för olika objekttyper har lagts till för att undvika att "
"representationer genereras som är alltför långa."

msgid ""
"The keyword arguments of the constructor can be used as a shortcut to set "
"the attributes of the :class:`Repr` instance. Which means that the following "
"initialization::"
msgstr ""
"Nyckelordsargumenten i konstruktorn kan användas som en genväg för att "
"ställa in attributen för :class:`Repr`-instansen. Vilket innebär att "
"följande initialisering::"

msgid "aRepr = reprlib.Repr(maxlevel=3)"
msgstr "aRepr = reprlib.Repr(maxlevel=3)"

msgid "Is equivalent to::"
msgstr "Är likvärdig med::"

msgid ""
"aRepr = reprlib.Repr()\n"
"aRepr.maxlevel = 3"
msgstr ""
"aRepr = reprlib.Repr()\n"
"aRepr.maxlevel = 3"

msgid ""
"See section `Repr Objects`_ for more information about :class:`Repr` "
"attributes."
msgstr ""
"Se avsnittet `Repr Objects`_ för mer information om :class:`Repr`-attribut."

msgid "Allow attributes to be set via keyword arguments."
msgstr "Tillåt att attribut ställs in via nyckelordsargument."

msgid ""
"This is an instance of :class:`Repr` which is used to provide the :func:`."
"repr` function described below.  Changing the attributes of this object will "
"affect the size limits used by :func:`.repr` and the Python debugger."
msgstr ""
"Detta är en instans av :class:`Repr` som används för att tillhandahålla "
"funktionen :func:`.repr` som beskrivs nedan.  Om du ändrar attributen för "
"detta objekt påverkas de storleksgränser som används av :func:`.repr` och "
"Pythons debugger."

msgid ""
"This is the :meth:`~Repr.repr` method of ``aRepr``.  It returns a string "
"similar to that returned by the built-in function of the same name, but with "
"limits on most sizes."
msgstr ""
"Detta är :meth:`~Repr.repr`-metoden för ``aRepr``.  Den returnerar en sträng "
"som liknar den som returneras av den inbyggda funktionen med samma namn, men "
"med begränsningar för de flesta storlekar."

msgid ""
"In addition to size-limiting tools, the module also provides a decorator for "
"detecting recursive calls to :meth:`~object.__repr__` and substituting a "
"placeholder string instead."
msgstr ""
"Förutom verktyg för storleksbegränsning innehåller modulen också en "
"dekorator för att upptäcka rekursiva anrop till :meth:`~object.__repr__` och "
"ersätta dem med en platshållarsträng."

msgid ""
"Decorator for :meth:`~object.__repr__` methods to detect recursive calls "
"within the same thread.  If a recursive call is made, the *fillvalue* is "
"returned, otherwise, the usual :meth:`!__repr__` call is made.  For example:"
msgstr ""
"Dekorator för :meth:`~object.__repr__` metoder för att upptäcka rekursiva "
"anrop inom samma tråd.  Om ett rekursivt anrop görs returneras *fillvärdet*, "
"annars görs det vanliga :meth:`!__repr__`-anropet.  Ett exempel:"

msgid ""
">>> from reprlib import recursive_repr\n"
">>> class MyList(list):\n"
"...     @recursive_repr()\n"
"...     def __repr__(self):\n"
"...         return '<' + '|'.join(map(repr, self)) + '>'\n"
"...\n"
">>> m = MyList('abc')\n"
">>> m.append(m)\n"
">>> m.append('x')\n"
">>> print(m)\n"
"<'a'|'b'|'c'|...|'x'>"
msgstr ""
">>> from reprlib import recursive_repr\n"
">>> class MyList(list):\n"
"...     @recursive_repr()\n"
"...     def __repr__(self):\n"
"...         return '<' + '|'.join(map(repr, self)) + '>'\n"
"...\n"
">>> m = MyList('abc')\n"
">>> m.append(m)\n"
">>> m.append('x')\n"
">>> print(m)\n"
"<'a'|'b'|'c'|...|'x'>"

msgid "Repr Objects"
msgstr "Repr-objekt"

msgid ""
":class:`Repr` instances provide several attributes which can be used to "
"provide size limits for the representations of different object types,  and "
"methods which format specific object types."
msgstr ""
":class:`Repr`-instanser innehåller flera attribut som kan användas för att "
"ange storleksgränser för representationer av olika objekttyper och metoder "
"som formaterar specifika objekttyper."

msgid ""
"This string is displayed for recursive references. It defaults to ``...``."
msgstr ""
"Denna sträng visas för rekursiva referenser. Standardvärdet är ``...``."

msgid ""
"Depth limit on the creation of recursive representations.  The default is "
"``6``."
msgstr ""
"Djupgräns för skapandet av rekursiva representationer.  Standardvärdet är "
"``6``."

msgid ""
"Limits on the number of entries represented for the named object type.  The "
"default is ``4`` for :attr:`maxdict`, ``5`` for :attr:`maxarray`, and  ``6`` "
"for the others."
msgstr ""
"Begränsar antalet poster som representeras för den angivna objekttypen.  "
"Standardvärdet är ``4`` för :attr:`maxdict`, ``5`` för :attr:`maxarray` och "
"``6`` för de övriga."

msgid ""
"Maximum number of characters in the representation for an integer.  Digits "
"are dropped from the middle.  The default is ``40``."
msgstr ""
"Maximalt antal tecken i representationen för ett heltal.  Siffrorna tas bort "
"från mitten.  Standardvärdet är ``40``."

msgid ""
"Limit on the number of characters in the representation of the string.  Note "
"that the \"normal\" representation of the string is used as the character "
"source: if escape sequences are needed in the representation, these may be "
"mangled when the representation is shortened.  The default is ``30``."
msgstr ""
"Begränsning av antalet tecken i representationen av strängen.  Observera att "
"den \"normala\" representationen av strängen används som teckenkälla: om "
"escape-sekvenser behövs i representationen kan dessa manglas när "
"representationen förkortas.  Standardvärdet är ``30``."

msgid ""
"This limit is used to control the size of object types for which no specific "
"formatting method is available on the :class:`Repr` object. It is applied in "
"a similar manner as :attr:`maxstring`.  The default is ``20``."
msgstr ""
"Denna gräns används för att kontrollera storleken på objekttyper för vilka "
"ingen specifik formateringsmetod är tillgänglig på :class:`Repr`-objektet. "
"Den tillämpas på liknande sätt som :attr:`maxstring`.  Standardvärdet är "
"``20``."

msgid ""
"If this attribute is set to ``None`` (the default), the output is formatted "
"with no line breaks or indentation, like the standard :func:`repr`. For "
"example:"
msgstr ""
"Om detta attribut är inställt på ``None`` (standard) formateras utdata utan "
"radbrytning eller indragning, som standard :func:`repr`. Ett exempel:"

msgid ""
">>> example = [\n"
"...     1, 'spam', {'a': 2, 'b': 'spam eggs', 'c': {3: 4.5, 6: []}}, 'ham']\n"
">>> import reprlib\n"
">>> aRepr = reprlib.Repr()\n"
">>> print(aRepr.repr(example))\n"
"[1, 'spam', {'a': 2, 'b': 'spam eggs', 'c': {3: 4.5, 6: []}}, 'ham']"
msgstr ""
">>> example = [\n"
"...     1, 'spam', {'a': 2, 'b': 'spam eggs', 'c': {3: 4.5, 6: []}}, 'ham']\n"
">>> import reprlib\n"
">>> aRepr = reprlib.Repr()\n"
">>> print(aRepr.repr(example))\n"
"[1, 'spam', {'a': 2, 'b': 'spam eggs', 'c': {3: 4.5, 6: []}}, 'ham']"

msgid ""
"If :attr:`~Repr.indent` is set to a string, each recursion level is placed "
"on its own line, indented by that string:"
msgstr ""
"Om :attr:`~Repr.indent` är satt till en sträng placeras varje rekursionsnivå "
"på en egen rad, indragen med strängen:"

msgid ""
">>> aRepr.indent = '-->'\n"
">>> print(aRepr.repr(example))\n"
"[\n"
"-->1,\n"
"-->'spam',\n"
"-->{\n"
"-->-->'a': 2,\n"
"-->-->'b': 'spam eggs',\n"
"-->-->'c': {\n"
"-->-->-->3: 4.5,\n"
"-->-->-->6: [],\n"
"-->-->},\n"
"-->},\n"
"-->'ham',\n"
"]"
msgstr ""
">>> aRepr.indent = '-->'\n"
">>> print(aRepr.repr(example))\n"
"[\n"
"-->1,\n"
"-->'spam',\n"
"-->{\n"
"-->-->'a': 2,\n"
"-->-->'b': 'spam eggs',\n"
"-->-->'c': {\n"
"-->-->-->3: 4.5,\n"
"-->-->-->6: [],\n"
"-->-->},\n"
"-->},\n"
"-->'ham',\n"
"]"

msgid ""
"Setting :attr:`~Repr.indent` to a positive integer value behaves as if it "
"was set to a string with that number of spaces:"
msgstr ""
"Om du anger ett positivt heltalsvärde för :attr:`~Repr.indent` fungerar det "
"som om det hade angetts för en sträng med det antalet mellanslag:"

msgid ""
">>> aRepr.indent = 4\n"
">>> print(aRepr.repr(example))\n"
"[\n"
"    1,\n"
"    'spam',\n"
"    {\n"
"        'a': 2,\n"
"        'b': 'spam eggs',\n"
"        'c': {\n"
"            3: 4.5,\n"
"            6: [],\n"
"        },\n"
"    },\n"
"    'ham',\n"
"]"
msgstr ""
">>> aRepr.indent = 4\n"
">>> print(aRepr.repr(example))\n"
"[\n"
"    1,\n"
"    'spam',\n"
"    {\n"
"        'a': 2,\n"
"        'b': 'spam eggs',\n"
"        'c': {\n"
"            3: 4.5,\n"
"            6: [],\n"
"        },\n"
"    },\n"
"    'ham',\n"
"]"

msgid ""
"The equivalent to the built-in :func:`repr` that uses the formatting imposed "
"by the instance."
msgstr ""
"Motsvarigheten till den inbyggda :func:`repr` som använder den formatering "
"som instansen föreskriver."

msgid ""
"Recursive implementation used by :meth:`.repr`.  This uses the type of *obj* "
"to determine which formatting method to call, passing it *obj* and *level*.  "
"The type-specific methods should call :meth:`repr1` to perform recursive "
"formatting, with ``level - 1`` for the value of *level* in the recursive  "
"call."
msgstr ""
"Rekursiv implementering som används av :meth:`.repr`.  Den använder typen av "
"*obj* för att avgöra vilken formateringsmetod som ska anropas, och skickar "
"*obj* och *level* till den.  De typspecifika metoderna bör anropa :meth:"
"`repr1` för att utföra rekursiv formatering, med ``level - 1`` för värdet på "
"*level* i det rekursiva anropet."

msgid ""
"Formatting methods for specific types are implemented as methods with a name "
"based on the type name.  In the method name, **TYPE** is replaced by ``'_'."
"join(type(obj).__name__.split())``. Dispatch to these methods is handled by :"
"meth:`repr1`. Type-specific methods which need to recursively format a value "
"should call ``self.repr1(subobj, level - 1)``."
msgstr ""
"Formateringsmetoder för specifika typer implementeras som metoder med ett "
"namn som baseras på typnamnet.  I metodnamnet ersätts **TYPE** med ``'_'."
"join(type(obj).__name__.split())``. Dispatch till dessa metoder hanteras av :"
"meth:`repr1`. Typspecifika metoder som behöver formatera ett värde rekursivt "
"bör anropa ``self.repr1(subobj, level - 1)``."

msgid "Subclassing Repr Objects"
msgstr "Underklassificering av Repr-objekt"

msgid ""
"The use of dynamic dispatching by :meth:`Repr.repr1` allows subclasses of :"
"class:`Repr` to add support for additional built-in object types or to "
"modify the handling of types already supported. This example shows how "
"special support for file objects could be added:"
msgstr ""
"Användningen av dynamisk dispatching av :meth:`Repr.repr1` gör det möjligt "
"för subklasser av :class:`Repr` att lägga till stöd för ytterligare inbyggda "
"objekttyper eller att modifiera hanteringen av typer som redan stöds. Detta "
"exempel visar hur specialstöd för filobjekt kan läggas till:"

msgid ""
"import reprlib\n"
"import sys\n"
"\n"
"class MyRepr(reprlib.Repr):\n"
"\n"
"    def repr_TextIOWrapper(self, obj, level):\n"
"        if obj.name in {'<stdin>', '<stdout>', '<stderr>'}:\n"
"            return obj.name\n"
"        return repr(obj)\n"
"\n"
"aRepr = MyRepr()\n"
"print(aRepr.repr(sys.stdin))         # prints '<stdin>'"
msgstr ""
"import reprlib\n"
"import sys\n"
"\n"
"class MyRepr(reprlib.Repr):\n"
"\n"
"    def repr_TextIOWrapper(self, obj, level):\n"
"        if obj.name in {'<stdin>', '<stdout>', '<stderr>'}:\n"
"            return obj.name\n"
"        return repr(obj)\n"
"\n"
"aRepr = MyRepr()\n"
"print(aRepr.repr(sys.stdin))         # prints '<stdin>'"

msgid "<stdin>"
msgstr "<stdin>"

msgid "..."
msgstr "..."

msgid "placeholder"
msgstr "platshållare"
