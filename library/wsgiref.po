# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!wsgiref` --- WSGI Utilities and Reference Implementation"
msgstr ":mod:`!wsgiref` --- WSGI-verktyg och referensimplementering"

msgid "**Source code:** :source:`Lib/wsgiref`"
msgstr "**Källkod:** :source:`Lib/wsgiref`"

msgid ""
"The Web Server Gateway Interface (WSGI) is a standard interface between web "
"server software and web applications written in Python. Having a standard "
"interface makes it easy to use an application that supports WSGI with a "
"number of different web servers."
msgstr ""
"Web Server Gateway Interface (WSGI) är ett standardgränssnitt mellan "
"webbserverprogramvara och webbapplikationer skrivna i Python. Ett "
"standardgränssnitt gör det enkelt att använda en applikation som stöder WSGI "
"med ett antal olika webbservrar."

msgid ""
"Only authors of web servers and programming frameworks need to know every "
"detail and corner case of the WSGI design.  You don't need to understand "
"every detail of WSGI just to install a WSGI application or to write a web "
"application using an existing framework."
msgstr ""
"Endast författare av webbservrar och programmeringsramverk behöver känna "
"till varje detalj och hörnfall i WSGI-designen.  Du behöver inte förstå "
"varje detalj i WSGI bara för att installera en WSGI-applikation eller för "
"att skriva en webbapplikation med hjälp av ett befintligt ramverk."

msgid ""
":mod:`wsgiref` is a reference implementation of the WSGI specification that "
"can be used to add WSGI support to a web server or framework.  It provides "
"utilities for manipulating WSGI environment variables and response headers, "
"base classes for implementing WSGI servers, a demo HTTP server that serves "
"WSGI applications, types for static type checking, and a validation tool "
"that checks WSGI servers and applications for conformance to the WSGI "
"specification (:pep:`3333`)."
msgstr ""
":mod:`wsgiref` är en referensimplementering av WSGI-specifikationen som kan "
"användas för att lägga till WSGI-stöd i en webbserver eller ett ramverk.  "
"Den innehåller verktyg för att manipulera WSGI-miljövariabler och "
"svarshuvuden, basklasser för att implementera WSGI-servrar, en demo-HTTP-"
"server som betjänar WSGI-applikationer, typer för statisk typkontroll och "
"ett valideringsverktyg som kontrollerar att WSGI-servrar och applikationer "
"överensstämmer med WSGI-specifikationen (:pep:`3333`)."

msgid ""
"See `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ for more "
"information about WSGI, and links to tutorials and other resources."
msgstr ""
"Se `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ för mer information "
"om WSGI och länkar till handledningar och andra resurser."

msgid ":mod:`wsgiref.util` -- WSGI environment utilities"
msgstr ":mod:`wsgiref.util` -- Verktyg för WSGI-miljön"

msgid ""
"This module provides a variety of utility functions for working with WSGI "
"environments.  A WSGI environment is a dictionary containing HTTP request "
"variables as described in :pep:`3333`.  All of the functions taking an "
"*environ* parameter expect a WSGI-compliant dictionary to be supplied; "
"please see :pep:`3333` for a detailed specification and :data:`~wsgiref."
"types.WSGIEnvironment` for a type alias that can be used in type annotations."
msgstr ""
"Denna modul innehåller en mängd olika funktioner för att arbeta med WSGI-"
"miljöer.  En WSGI-miljö är en ordbok som innehåller HTTP-begärandevariabler "
"enligt beskrivningen i :pep:`3333`.  Alla funktioner som tar en *environ*-"
"parameter förväntar sig att en WSGI-kompatibel ordbok ska levereras; se :pep:"
"`3333` för en detaljerad specifikation och :data:`~wsgiref.types."
"WSGIEnvironment` för ett typalias som kan användas i typannoteringar."

msgid ""
"Return a guess for whether ``wsgi.url_scheme`` should be \"http\" or "
"\"https\", by checking for a ``HTTPS`` environment variable in the *environ* "
"dictionary.  The return value is a string."
msgstr ""
"Returnerar en gissning om huruvida ``wsgi.url_scheme`` ska vara \"http\" "
"eller \"https\", genom att kontrollera om det finns en miljövariabel "
"``HTTPS`` i ordlistan *environ*.  Returvärdet är en sträng."

msgid ""
"This function is useful when creating a gateway that wraps CGI or a CGI-like "
"protocol such as FastCGI.  Typically, servers providing such protocols will "
"include a ``HTTPS`` variable with a value of \"1\", \"yes\", or \"on\" when "
"a request is received via SSL.  So, this function returns \"https\" if such "
"a value is found, and \"http\" otherwise."
msgstr ""
"Denna funktion är användbar när du skapar en gateway som omsluter CGI eller "
"ett CGI-liknande protokoll som FastCGI.  Servrar som tillhandahåller sådana "
"protokoll innehåller vanligtvis en variabel ``HTTPS`` med värdet \"1\", "
"\"yes\" eller \"on\" när en begäran tas emot via SSL.  Den här funktionen "
"returnerar alltså \"https\" om ett sådant värde hittas och \"http\" annars."

msgid ""
"Return the full request URI, optionally including the query string, using "
"the algorithm found in the \"URL Reconstruction\" section of :pep:`3333`.  "
"If *include_query* is false, the query string is not included in the "
"resulting URI."
msgstr ""
"Returnerar den fullständiga URI:n för begäran, eventuellt inklusive "
"frågesträngen, med hjälp av algoritmen i avsnittet \"URL Reconstruction\" i :"
"pep:`3333`.  Om *include_query* är false inkluderas inte frågesträngen i den "
"resulterande URI:n."

msgid ""
"Similar to :func:`request_uri`, except that the ``PATH_INFO`` and "
"``QUERY_STRING`` variables are ignored.  The result is the base URI of the "
"application object addressed by the request."
msgstr ""
"Liknar :func:`request_uri`, förutom att variablerna ``PATH_INFO`` och "
"``QUERY_STRING`` ignoreras.  Resultatet är bas-URI:n för det "
"applikationsobjekt som adresseras av begäran."

msgid ""
"Shift a single name from ``PATH_INFO`` to ``SCRIPT_NAME`` and return the "
"name. The *environ* dictionary is *modified* in-place; use a copy if you "
"need to keep the original ``PATH_INFO`` or ``SCRIPT_NAME`` intact."
msgstr ""
"Flytta ett enskilt namn från ``PATH_INFO`` till ``SCRIPT_NAME`` och "
"returnera namnet. Ordboken *environ* är *modifierad* på plats; använd en "
"kopia om du behöver behålla den ursprungliga ``PATH_INFO`` eller "
"``SCRIPT_NAME`` intakt."

msgid ""
"If there are no remaining path segments in ``PATH_INFO``, ``None`` is "
"returned."
msgstr ""
"Om det inte finns några återstående sökvägssegment i ``PATH_INFO`` "
"returneras ``None``."

msgid ""
"Typically, this routine is used to process each portion of a request URI "
"path, for example to treat the path as a series of dictionary keys. This "
"routine modifies the passed-in environment to make it suitable for invoking "
"another WSGI application that is located at the target URI. For example, if "
"there is a WSGI application at ``/foo``, and the request URI path is ``/foo/"
"bar/baz``, and the WSGI application at ``/foo`` calls :func:"
"`shift_path_info`, it will receive the string \"bar\", and the environment "
"will be updated to be suitable for passing to a WSGI application at ``/foo/"
"bar``.  That is, ``SCRIPT_NAME`` will change from ``/foo`` to ``/foo/bar``, "
"and ``PATH_INFO`` will change from ``/bar/baz`` to ``/baz``."
msgstr ""
"Vanligtvis används denna rutin för att bearbeta varje del av en sökväg till "
"en begärd URI, t.ex. för att behandla sökvägen som en serie ordboksnycklar. "
"Den här rutinen modifierar den överlämnade miljön så att den lämpar sig för "
"att anropa en annan WSGI-applikation som finns på mål-URI:n. Till exempel, "
"om det finns en WSGI-applikation på ``/foo``, och sökvägen till request URI "
"är ``/foo/bar/baz``, och WSGI-applikationen på ``/foo`` anropar :func:"
"`shift_path_info`, kommer den att ta emot strängen \"bar\", och miljön "
"kommer att uppdateras så att den passar för att skickas till en WSGI-"
"applikation på ``/foo/bar``.  Det vill säga, ``SCRIPT_NAME`` ändras från ``/"
"foo`` till ``/foo/bar``, och ``PATH_INFO`` ändras från ``/bar/baz`` till ``/"
"baz``."

msgid ""
"When ``PATH_INFO`` is just a \"/\", this routine returns an empty string and "
"appends a trailing slash to ``SCRIPT_NAME``, even though empty path segments "
"are normally ignored, and ``SCRIPT_NAME`` doesn't normally end in a slash.  "
"This is intentional behavior, to ensure that an application can tell the "
"difference between URIs ending in ``/x`` from ones ending in ``/x/`` when "
"using this routine to do object traversal."
msgstr ""
"När ``PATH_INFO`` bara är ett \"/\" returnerar den här rutinen en tom sträng "
"och lägger till ett efterföljande snedstreck till ``SCRIPT_NAME``, även om "
"tomma sökvägssegment normalt ignoreras och ``SCRIPT_NAME`` normalt inte "
"slutar med ett snedstreck.  Detta är ett avsiktligt beteende för att "
"säkerställa att ett program kan skilja mellan URI:er som slutar på ``/x`` "
"och sådana som slutar på ``/x/`` när den här rutinen används för "
"objekttraversering."

msgid "Update *environ* with trivial defaults for testing purposes."
msgstr "Uppdatera *environ* med triviala standardvärden för teständamål."

msgid ""
"This routine adds various parameters required for WSGI, including "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO``, and all of the :pep:`3333`\\ -defined ``wsgi."
"*`` variables.  It only supplies default values, and does not replace any "
"existing settings for these variables."
msgstr ""
"Denna rutin lägger till olika parametrar som krävs för WSGI, inklusive "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO`` och alla :pep:`3333`'-definierade ``wsgi.*``-"
"variabler.  Den tillhandahåller endast standardvärden och ersätter inte "
"befintliga inställningar för dessa variabler."

msgid ""
"This routine is intended to make it easier for unit tests of WSGI servers "
"and applications to set up dummy environments.  It should NOT be used by "
"actual WSGI servers or applications, since the data is fake!"
msgstr ""
"Denna rutin är avsedd att göra det enklare för enhetstester av WSGI-servrar "
"och applikationer att skapa dummy-miljöer.  Den ska INTE användas av "
"faktiska WSGI-servrar eller applikationer, eftersom data är falska!"

msgid ""
"Example usage (see also :func:`~wsgiref.simple_server.demo_app` for another "
"example)::"
msgstr ""
"Exempel på användning (se även :func:`~wsgiref.simple_server.demo_app` för "
"ett annat exempel)::"

msgid ""
"from wsgiref.util import setup_testing_defaults\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"# A relatively simple WSGI application. It's going to print out the\n"
"# environment dictionary after being updated by setup_testing_defaults\n"
"def simple_app(environ, start_response):\n"
"    setup_testing_defaults(environ)\n"
"\n"
"    status = '200 OK'\n"
"    headers = [('Content-type', 'text/plain; charset=utf-8')]\n"
"\n"
"    start_response(status, headers)\n"
"\n"
"    ret = [(\"%s: %s\\n\" % (key, value)).encode(\"utf-8\")\n"
"           for key, value in environ.items()]\n"
"    return ret\n"
"\n"
"with make_server('', 8000, simple_app) as httpd:\n"
"    print(\"Serving on port 8000...\")\n"
"    httpd.serve_forever()"
msgstr ""
"from wsgiref.util import setup_testing_defaults\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"# A relatively simple WSGI application. It's going to print out the\n"
"# environment dictionary after being updated by setup_testing_defaults\n"
"def simple_app(environ, start_response):\n"
"    setup_testing_defaults(environ)\n"
"\n"
"    status = '200 OK'\n"
"    headers = [('Content-type', 'text/plain; charset=utf-8')]\n"
"\n"
"    start_response(status, headers)\n"
"\n"
"    ret = [(\"%s: %s\\n\" % (key, value)).encode(\"utf-8\")\n"
"           for key, value in environ.items()]\n"
"    return ret\n"
"\n"
"with make_server('', 8000, simple_app) as httpd:\n"
"    print(\"Serving on port 8000...\")\n"
"    httpd.serve_forever()"

msgid ""
"In addition to the environment functions above, the :mod:`wsgiref.util` "
"module also provides these miscellaneous utilities:"
msgstr ""
"Förutom miljöfunktionerna ovan tillhandahåller modulen :mod:`wsgiref.util` "
"även dessa olika verktyg:"

msgid ""
"Return ``True`` if 'header_name' is an HTTP/1.1 \"Hop-by-Hop\" header, as "
"defined by :rfc:`2616`."
msgstr ""
"Returnerar ``True`` om 'header_name' är en HTTP/1.1 \"Hop-by-Hop\" header, "
"enligt definitionen i :rfc:`2616`."

msgid ""
"A concrete implementation of the :class:`wsgiref.types.FileWrapper` protocol "
"used to convert a file-like object to an :term:`iterator`. The resulting "
"objects are :term:`iterable`\\ s. As the object is iterated over, the "
"optional *blksize* parameter will be repeatedly passed to the *filelike* "
"object's :meth:`read` method to obtain bytestrings to yield.  When :meth:"
"`read` returns an empty bytestring, iteration is ended and is not resumable."
msgstr ""
"En konkret implementering av protokollet :class:`wsgiref.types.FileWrapper` "
"som används för att konvertera ett filliknande objekt till en :term:"
"`iterator`. De resulterande objekten är :term:`iterable`\\ s. När objektet "
"itereras över kommer den valfria parametern *blksize* upprepade gånger att "
"skickas till det *filliknande* objektets :meth:`read`-metod för att få "
"bytestrings att ge.  När :meth:`read` returnerar en tom bytestring är "
"iterationen avslutad och kan inte återupptas."

msgid ""
"If *filelike* has a :meth:`close` method, the returned object will also have "
"a :meth:`close` method, and it will invoke the *filelike* object's :meth:"
"`close` method when called."
msgstr ""
"Om *filelike* har en :meth:`close`-metod kommer det returnerade objektet "
"också att ha en :meth:`close`-metod, och det kommer att anropa *filelike*-"
"objektets :meth:`close`-metod när den anropas."

msgid "Example usage::"
msgstr "Exempel på användning::"

msgid ""
"from io import StringIO\n"
"from wsgiref.util import FileWrapper\n"
"\n"
"# We're using a StringIO-buffer for as the file-like object\n"
"filelike = StringIO(\"This is an example file-like object\"*10)\n"
"wrapper = FileWrapper(filelike, blksize=5)\n"
"\n"
"for chunk in wrapper:\n"
"    print(chunk)"
msgstr ""
"from io import StringIO\n"
"from wsgiref.util import FileWrapper\n"
"\n"
"# We're using a StringIO-buffer for as the file-like object\n"
"filelike = StringIO(\"This is an example file-like object\"*10)\n"
"wrapper = FileWrapper(filelike, blksize=5)\n"
"\n"
"for chunk in wrapper:\n"
"    print(chunk)"

msgid "Support for :meth:`~object.__getitem__` method has been removed."
msgstr "Stöd för metoden :meth:`~object.__getitem__` har tagits bort."

msgid ":mod:`wsgiref.headers` -- WSGI response header tools"
msgstr ":mod:`wsgiref.headers` -- Verktyg för WSGI-svarshuvuden"

msgid ""
"This module provides a single class, :class:`Headers`, for convenient "
"manipulation of WSGI response headers using a mapping-like interface."
msgstr ""
"Denna modul tillhandahåller en enda klass, :class:`Headers`, för bekväm "
"manipulation av WSGI-svarshuvuden med hjälp av ett mappningsliknande "
"gränssnitt."

msgid ""
"Create a mapping-like object wrapping *headers*, which must be a list of "
"header name/value tuples as described in :pep:`3333`. The default value of "
"*headers* is an empty list."
msgstr ""
"Skapa ett mappningsliknande objekt som omsluter *headers*, som måste vara en "
"lista med headernamn/värde-tupler enligt beskrivningen i :pep:`3333`. "
"Standardvärdet för *headers* är en tom lista."

msgid ""
":class:`Headers` objects support typical mapping operations including :meth:"
"`~object.__getitem__`, :meth:`~dict.get`, :meth:`~object.__setitem__`, :meth:"
"`~dict.setdefault`, :meth:`~object.__delitem__` and :meth:`~object."
"__contains__`.  For each of these methods, the key is the header name "
"(treated case-insensitively), and the value is the first value associated "
"with that header name.  Setting a header deletes any existing values for "
"that header, then adds a new value at the end of the wrapped header list.  "
"Headers' existing order is generally maintained, with new headers added to "
"the end of the wrapped list."
msgstr ""
":class:`Headers`-objekt stöder typiska mappningsoperationer inklusive :meth:"
"`~object.__getitem__`, :meth:`~dict.get`, :meth:`~object.__setitem__`, :meth:"
"`~dict.setdefault`, :meth:`~object.__delitem__` och :meth:`~object."
"__contains__`.  För var och en av dessa metoder är nyckeln rubriknamnet "
"(behandlas utan hänsyn till skiftlägesskillnader) och värdet är det första "
"värdet som associeras med rubriknamnet.  När en header ställs in raderas "
"alla befintliga värden för denna header, och ett nytt värde läggs till i "
"slutet av listan över omslutna headers.  Den befintliga ordningen på "
"rubrikerna bibehålls i allmänhet, och nya rubriker läggs till i slutet av "
"den omslutna listan."

msgid ""
"Unlike a dictionary, :class:`Headers` objects do not raise an error when you "
"try to get or delete a key that isn't in the wrapped header list. Getting a "
"nonexistent header just returns ``None``, and deleting a nonexistent header "
"does nothing."
msgstr ""
"Till skillnad från en ordbok ger :class:`Headers`-objekt inte upphov till "
"något fel när du försöker hämta eller ta bort en nyckel som inte finns i den "
"omslutna headerlistan. Att hämta en icke-existerande header returnerar bara "
"``None``, och att ta bort en icke-existerande header gör ingenting."

msgid ""
":class:`Headers` objects also support :meth:`keys`, :meth:`values`, and :"
"meth:`items` methods.  The lists returned by :meth:`keys` and :meth:`items` "
"can include the same key more than once if there is a multi-valued header.  "
"The ``len()`` of a :class:`Headers` object is the same as the length of its :"
"meth:`items`, which is the same as the length of the wrapped header list.  "
"In fact, the :meth:`items` method just returns a copy of the wrapped header "
"list."
msgstr ""
":class:`Headers`-objekt stöder också metoderna :meth:`keys`, :meth:`values` "
"och :meth:`items`.  Listorna som returneras av :meth:`keys` och :meth:"
"`items` kan innehålla samma nyckel mer än en gång om det finns en header med "
"flera värden.  ``len()`` för ett :class:`Headers`-objekt är samma som "
"längden på dess :meth:`items`, som är samma som längden på den omslutna "
"header-listan.  Faktum är att metoden :meth:`items` bara returnerar en kopia "
"av den omslutna header-listan."

msgid ""
"Calling ``bytes()`` on a :class:`Headers` object returns a formatted "
"bytestring suitable for transmission as HTTP response headers.  Each header "
"is placed on a line with its value, separated by a colon and a space. Each "
"line is terminated by a carriage return and line feed, and the bytestring is "
"terminated with a blank line."
msgstr ""
"Anrop av ``bytes()`` på ett :class:`Headers`-objekt returnerar en formaterad "
"bytestring som lämpar sig för överföring som HTTP-svarshuvuden.  Varje "
"header placeras på en rad med sitt värde, åtskilda av ett kolon och ett "
"mellanslag. Varje rad avslutas med en vagnsretur och radmatning, och "
"bytestringen avslutas med en blankrad."

msgid ""
"In addition to their mapping interface and formatting features, :class:"
"`Headers` objects also have the following methods for querying and adding "
"multi-valued headers, and for adding headers with MIME parameters:"
msgstr ""
"Förutom mappningsgränssnittet och formateringsfunktionerna har :class:"
"`Headers`-objekten även följande metoder för att fråga efter och lägga till "
"flervärdiga rubriker och för att lägga till rubriker med MIME-parametrar:"

msgid "Return a list of all the values for the named header."
msgstr "Returnerar en lista med alla värden för den angivna rubriken."

msgid ""
"The returned list will be sorted in the order they appeared in the original "
"header list or were added to this instance, and may contain duplicates.  Any "
"fields deleted and re-inserted are always appended to the header list.  If "
"no fields exist with the given name, returns an empty list."
msgstr ""
"Den returnerade listan kommer att sorteras i den ordning som de förekom i "
"den ursprungliga huvudlistan eller lades till i denna instans, och kan "
"innehålla dubbletter.  Fält som tas bort och läggs till på nytt läggs alltid "
"till i huvudlistan.  Om det inte finns några fält med det angivna namnet "
"returneras en tom lista."

msgid ""
"Add a (possibly multi-valued) header, with optional MIME parameters "
"specified via keyword arguments."
msgstr ""
"Lägg till ett (eventuellt flervärdigt) huvud med valfria MIME-parametrar som "
"anges via nyckelordsargument."

msgid ""
"*name* is the header field to add.  Keyword arguments can be used to set "
"MIME parameters for the header field.  Each parameter must be a string or "
"``None``. Underscores in parameter names are converted to dashes, since "
"dashes are illegal in Python identifiers, but many MIME parameter names "
"include dashes.  If the parameter value is a string, it is added to the "
"header value parameters in the form ``name=\"value\"``. If it is ``None``, "
"only the parameter name is added. (This is used for MIME parameters without "
"a value.)  Example usage::"
msgstr ""
"*name* är rubrikfältet som ska läggas till.  Keyword-argument kan användas "
"för att ange MIME-parametrar för rubrikfältet.  Varje parameter måste vara "
"en sträng eller ``None``. Underscores i parameternamn konverteras till "
"bindestreck, eftersom bindestreck är olagliga i Python-identifierare, men "
"många MIME-parameternamn innehåller bindestreck.  Om parametervärdet är en "
"sträng läggs det till i rubrikens värdeparametrar i formen "
"``name=\"value\"``. Om det är ``None`` läggs endast parameternamnet till. "
"(Detta används för MIME-parametrar utan värde.) Exempel på användning::"

msgid "h.add_header('content-disposition', 'attachment', filename='bud.gif')"
msgstr "h.add_header('content-disposition', 'attachment', filnamn='bud.gif')"

msgid "The above will add a header that looks like this::"
msgstr "Ovanstående kommer att lägga till en rubrik som ser ut så här::"

msgid "Content-Disposition: attachment; filename=\"bud.gif\""
msgstr "Innehåll-Disposition: attachment; filnamn=\"bud.gif\""

msgid "*headers* parameter is optional."
msgstr "*parametern headers* är valfri."

msgid ":mod:`wsgiref.simple_server` -- a simple WSGI HTTP server"
msgstr ":mod:`wsgiref.simple_server` -- en enkel WSGI HTTP-server"

msgid ""
"This module implements a simple HTTP server (based on :mod:`http.server`) "
"that serves WSGI applications.  Each server instance serves a single WSGI "
"application on a given host and port.  If you want to serve multiple "
"applications on a single host and port, you should create a WSGI application "
"that parses ``PATH_INFO`` to select which application to invoke for each "
"request.  (E.g., using the :func:`shift_path_info` function from :mod:"
"`wsgiref.util`.)"
msgstr ""
"Denna modul implementerar en enkel HTTP-server (baserad på :mod:`http."
"server`) som betjänar WSGI-applikationer.  Varje serverinstans betjänar en "
"enda WSGI-applikation på en given värd och port.  Om du vill betjäna flera "
"program på en enda värd och port bör du skapa ett WSGI-program som "
"analyserar ``PATH_INFO`` för att välja vilket program som ska anropas för "
"varje begäran.  (T.ex. med hjälp av funktionen :func:`shift_path_info` från :"
"mod:`wsgiref.util`.)"

msgid ""
"Create a new WSGI server listening on *host* and *port*, accepting "
"connections for *app*.  The return value is an instance of the supplied "
"*server_class*, and will process requests using the specified "
"*handler_class*.  *app* must be a WSGI application object, as defined by :"
"pep:`3333`."
msgstr ""
"Skapa en ny WSGI-server som lyssnar på *host* och *port* och accepterar "
"anslutningar för *app*.  Returvärdet är en instans av den medföljande "
"*server_class*, och kommer att behandla förfrågningar med hjälp av den "
"angivna *handler_class*.  *app* måste vara ett WSGI-applikationsobjekt, "
"enligt definitionen i :pep:`3333`."

msgid ""
"from wsgiref.simple_server import make_server, demo_app\n"
"\n"
"with make_server('', 8000, demo_app) as httpd:\n"
"    print(\"Serving HTTP on port 8000...\")\n"
"\n"
"    # Respond to requests until process is killed\n"
"    httpd.serve_forever()\n"
"\n"
"    # Alternative: serve one request, then exit\n"
"    httpd.handle_request()"
msgstr ""
"from wsgiref.simple_server import make_server, demo_app\n"
"\n"
"with make_server('', 8000, demo_app) as httpd:\n"
"    print(\"Serving HTTP on port 8000...\")\n"
"\n"
"    # Respond to requests until process is killed\n"
"    httpd.serve_forever()\n"
"\n"
"    # Alternative: serve one request, then exit\n"
"    httpd.handle_request()"

msgid ""
"This function is a small but complete WSGI application that returns a text "
"page containing the message \"Hello world!\" and a list of the key/value "
"pairs provided in the *environ* parameter.  It's useful for verifying that a "
"WSGI server (such as :mod:`wsgiref.simple_server`) is able to run a simple "
"WSGI application correctly."
msgstr ""
"Denna funktion är en liten men komplett WSGI-applikation som returnerar en "
"textsida som innehåller meddelandet \"Hello world!\" och en lista över de "
"nyckel/värde-par som anges i parametern *environ*.  Den är användbar för att "
"verifiera att en WSGI-server (t.ex. :mod:`wsgiref.simple_server`) kan köra "
"en enkel WSGI-applikation korrekt."

msgid ""
"The *start_response* callable should follow the :class:`.StartResponse` "
"protocol."
msgstr ""
"Anropsbarheten *start_response* bör följa protokollet :class:`."
"StartResponse`."

msgid ""
"Create a :class:`WSGIServer` instance.  *server_address* should be a ``(host,"
"port)`` tuple, and *RequestHandlerClass* should be the subclass of :class:"
"`http.server.BaseHTTPRequestHandler` that will be used to process requests."
msgstr ""
"Skapa en instans av :class:`WSGIServer`.  *server_address* ska vara en "
"``(host,port)`` tupel, och *RequestHandlerClass* ska vara underklassen till :"
"class:`http.server.BaseHTTPRequestHandler` som kommer att användas för att "
"behandla förfrågningar."

msgid ""
"You do not normally need to call this constructor, as the :func:"
"`make_server` function can handle all the details for you."
msgstr ""
"Du behöver normalt inte anropa den här konstruktören, eftersom funktionen :"
"func:`make_server` kan hantera alla detaljer åt dig."

msgid ""
":class:`WSGIServer` is a subclass of :class:`http.server.HTTPServer`, so all "
"of its methods (such as :meth:`serve_forever` and :meth:`handle_request`) "
"are available. :class:`WSGIServer` also provides these WSGI-specific methods:"
msgstr ""
":class:`WSGIServer` är en underklass till :class:`http.server.HTTPServer`, "
"så alla dess metoder (som :meth:`serve_forever` och :meth:`handle_request`) "
"är tillgängliga. :class:`WSGIServer` tillhandahåller även dessa WSGI-"
"specifika metoder:"

msgid ""
"Sets the callable *application* as the WSGI application that will receive "
"requests."
msgstr ""
"Ställer in den anropsbara *application* som den WSGI-applikation som ska ta "
"emot förfrågningar."

msgid "Returns the currently set application callable."
msgstr "Returnerar den aktuella inställda applikationskallelsen."

msgid ""
"Normally, however, you do not need to use these additional methods, as :meth:"
"`set_app` is normally called by :func:`make_server`, and the :meth:`get_app` "
"exists mainly for the benefit of request handler instances."
msgstr ""
"Normalt behöver du dock inte använda dessa ytterligare metoder, eftersom :"
"meth:`set_app` normalt anropas av :func:`make_server`, och :meth:`get_app` "
"främst är till för request handler-instanser."

msgid ""
"Create an HTTP handler for the given *request* (i.e. a socket), "
"*client_address* (a ``(host,port)`` tuple), and *server* (:class:"
"`WSGIServer` instance)."
msgstr ""
"Skapa en HTTP-hanterare för den angivna *request* (dvs. en socket), "
"*client_address* (en ``(host,port)``-tupel) och *server* (:class:"
"`WSGIServer`-instans)."

msgid ""
"You do not need to create instances of this class directly; they are "
"automatically created as needed by :class:`WSGIServer` objects.  You can, "
"however, subclass this class and supply it as a *handler_class* to the :func:"
"`make_server` function.  Some possibly relevant methods for overriding in "
"subclasses:"
msgstr ""
"Du behöver inte skapa instanser av den här klassen direkt; de skapas "
"automatiskt vid behov av :class:`WSGIServer`-objekt.  Du kan dock subklassa "
"den här klassen och tillhandahålla den som en *handler_class* till "
"funktionen :func:`make_server`.  Några eventuellt relevanta metoder för "
"åsidosättande i underklasser:"

msgid ""
"Return a :data:`~wsgiref.types.WSGIEnvironment` dictionary for a request.  "
"The default implementation copies the contents of the :class:`WSGIServer` "
"object's :attr:`base_environ` dictionary attribute and then adds various "
"headers derived from the HTTP request.  Each call to this method should "
"return a new dictionary containing all of the relevant CGI environment "
"variables as specified in :pep:`3333`."
msgstr ""
"Returnerar en :data:`~wsgiref.types.WSGIEnvironment`-ordbok för en begäran.  "
"Standardimplementeringen kopierar innehållet i :class:`WSGIServer`-"
"objektets :attr:`base_environ`-ordboksattribut och lägger sedan till olika "
"rubriker som härrör från HTTP-begäran.  Varje anrop till denna metod bör "
"returnera en ny dictionary som innehåller alla relevanta CGI-miljövariabler "
"enligt specifikationen i :pep:`3333`."

msgid ""
"Return the object that should be used as the ``wsgi.errors`` stream. The "
"default implementation just returns ``sys.stderr``."
msgstr ""
"Returnerar det objekt som ska användas som ``wsgi.errors`` ström. "
"Standardimplementeringen returnerar bara ``sys.stderr``."

msgid ""
"Process the HTTP request.  The default implementation creates a handler "
"instance using a :mod:`wsgiref.handlers` class to implement the actual WSGI "
"application interface."
msgstr ""
"Behandlar HTTP-begäran.  Standardimplementeringen skapar en hanterarinstans "
"med hjälp av en :mod:`wsgiref.handlers`-klass för att implementera det "
"faktiska WSGI-applikationsgränssnittet."

msgid ":mod:`wsgiref.validate` --- WSGI conformance checker"
msgstr ":mod:`wsgiref.validate` --- WSGI-kontroll av överensstämmelse"

msgid ""
"When creating new WSGI application objects, frameworks, servers, or "
"middleware, it can be useful to validate the new code's conformance using :"
"mod:`wsgiref.validate`.  This module provides a function that creates WSGI "
"application objects that validate communications between a WSGI server or "
"gateway and a WSGI application object, to check both sides for protocol "
"conformance."
msgstr ""
"När du skapar nya WSGI-applikationsobjekt, ramverk, servrar eller "
"mellanprogram kan det vara användbart att validera den nya kodens "
"överensstämmelse med :mod:`wsgiref.validate`.  Denna modul tillhandahåller "
"en funktion som skapar WSGI-applikationsobjekt som validerar kommunikation "
"mellan en WSGI-server eller gateway och ett WSGI-applikationsobjekt, för att "
"kontrollera båda sidors protokollkonformitet."

msgid ""
"Note that this utility does not guarantee complete :pep:`3333` compliance; "
"an absence of errors from this module does not necessarily mean that errors "
"do not exist.  However, if this module does produce an error, then it is "
"virtually certain that either the server or application is not 100% "
"compliant."
msgstr ""
"Observera att det här verktyget inte garanterar fullständig :pep:`3333`-"
"kompatibilitet; om den här modulen inte ger några fel betyder det inte "
"nödvändigtvis att det inte finns några fel.  Men om den här modulen ger ett "
"fel är det så gott som säkert att antingen servern eller programmet inte är "
"100% compliant."

msgid ""
"This module is based on the :mod:`paste.lint` module from Ian Bicking's "
"\"Python Paste\" library."
msgstr ""
"Denna modul är baserad på :mod:`paste.lint`-modulen från Ian Bikings "
"\"Python Paste\"-bibliotek."

msgid ""
"Wrap *application* and return a new WSGI application object.  The returned "
"application will forward all requests to the original *application*, and "
"will check that both the *application* and the server invoking it are "
"conforming to the WSGI specification and to :rfc:`2616`."
msgstr ""
"Omslut *applikation* och returnera ett nytt WSGI-applikationsobjekt.  Den "
"returnerade applikationen kommer att vidarebefordra alla förfrågningar till "
"den ursprungliga *applikationen*, och kommer att kontrollera att både "
"*applikationen* och servern som anropar den överensstämmer med WSGI-"
"specifikationen och :rfc:`2616`."

msgid ""
"Any detected nonconformance results in an :exc:`AssertionError` being "
"raised; note, however, that how these errors are handled is server-"
"dependent.  For example, :mod:`wsgiref.simple_server` and other servers "
"based on :mod:`wsgiref.handlers` (that don't override the error handling "
"methods to do something else) will simply output a message that an error has "
"occurred, and dump the traceback to ``sys.stderr`` or some other error "
"stream."
msgstr ""
"Alla upptäckta avvikelser resulterar i att ett :exc:`AssertionError` "
"uppstår; observera dock att hur dessa fel hanteras är serverberoende.  Till "
"exempel kommer :mod:`wsgiref.simple_server` och andra servrar baserade på :"
"mod:`wsgiref.handlers` (som inte åsidosätter felhanteringsmetoderna för att "
"göra något annat) helt enkelt att mata ut ett meddelande om att ett fel har "
"inträffat och dumpa spårningen till ``sys.stderr`` eller någon annan "
"felström."

msgid ""
"This wrapper may also generate output using the :mod:`warnings` module to "
"indicate behaviors that are questionable but which may not actually be "
"prohibited by :pep:`3333`.  Unless they are suppressed using Python command-"
"line options or the :mod:`warnings` API, any such warnings will be written "
"to ``sys.stderr`` (*not* ``wsgi.errors``, unless they happen to be the same "
"object)."
msgstr ""
"Denna wrapper kan också generera utdata med modulen :mod:`warnings` för att "
"indikera beteenden som kan ifrågasättas men som kanske inte egentligen är "
"förbjudna av :pep:`3333`.  Om de inte undertrycks med Pythons "
"kommandoradsalternativ eller :mod:`warnings` API, kommer alla sådana "
"varningar att skrivas till ``sys.stderr`` (*inte* ``wsgi.errors``, såvida de "
"inte råkar vara samma objekt)."

msgid ""
"from wsgiref.validate import validator\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"# Our callable object which is intentionally not compliant to the\n"
"# standard, so the validator is going to break\n"
"def simple_app(environ, start_response):\n"
"    status = '200 OK'  # HTTP Status\n"
"    headers = [('Content-type', 'text/plain')]  # HTTP Headers\n"
"    start_response(status, headers)\n"
"\n"
"    # This is going to break because we need to return a list, and\n"
"    # the validator is going to inform us\n"
"    return b\"Hello World\"\n"
"\n"
"# This is the application wrapped in a validator\n"
"validator_app = validator(simple_app)\n"
"\n"
"with make_server('', 8000, validator_app) as httpd:\n"
"    print(\"Listening on port 8000....\")\n"
"    httpd.serve_forever()"
msgstr ""
"from wsgiref.validate import validator\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"# Our callable object which is intentionally not compliant to the\n"
"# standard, so the validator is going to break\n"
"def simple_app(environ, start_response):\n"
"    status = '200 OK'  # HTTP Status\n"
"    headers = [('Content-type', 'text/plain')]  # HTTP Headers\n"
"    start_response(status, headers)\n"
"\n"
"    # This is going to break because we need to return a list, and\n"
"    # the validator is going to inform us\n"
"    return b\"Hello World\"\n"
"\n"
"# This is the application wrapped in a validator\n"
"validator_app = validator(simple_app)\n"
"\n"
"with make_server('', 8000, validator_app) as httpd:\n"
"    print(\"Listening on port 8000....\")\n"
"    httpd.serve_forever()"

msgid ":mod:`wsgiref.handlers` -- server/gateway base classes"
msgstr ":mod:`wsgiref.handlers` -- basklasser för server/gateway"

msgid ""
"This module provides base handler classes for implementing WSGI servers and "
"gateways.  These base classes handle most of the work of communicating with "
"a WSGI application, as long as they are given a CGI-like environment, along "
"with input, output, and error streams."
msgstr ""
"Den här modulen innehåller basklasser för hantering av WSGI-servrar och "
"gateways.  Dessa basklasser hanterar det mesta av arbetet med att "
"kommunicera med en WSGI-applikation, så länge som de får en CGI-liknande "
"miljö, tillsammans med inmatnings-, utmatnings- och felströmmar."

msgid ""
"CGI-based invocation via ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` and "
"``os.environ``.  This is useful when you have a WSGI application and want to "
"run it as a CGI script.  Simply invoke ``CGIHandler().run(app)``, where "
"``app`` is the WSGI application object you wish to invoke."
msgstr ""
"CGI-baserad anropning via ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` och "
"``os.environ``.  Detta är användbart när du har en WSGI-applikation och vill "
"köra den som ett CGI-skript.  Anropa helt enkelt ``CGIHandler().run(app)``, "
"där ``app`` är det WSGI-applikationsobjekt som du vill anropa."

msgid ""
"This class is a subclass of :class:`BaseCGIHandler` that sets ``wsgi."
"run_once`` to true, ``wsgi.multithread`` to false, and ``wsgi.multiprocess`` "
"to true, and always uses :mod:`sys` and :mod:`os` to obtain the necessary "
"CGI streams and environment."
msgstr ""
"Den här klassen är en underklass till :class:`BaseCGIHandler` som sätter "
"``wsgi.run_once`` till true, ``wsgi.multithread`` till false och ``wsgi."
"multiprocess`` till true, och alltid använder :mod:`sys` och :mod:`os` för "
"att få de nödvändiga CGI-strömmarna och miljön."

msgid ""
"A specialized alternative to :class:`CGIHandler`, for use when deploying on "
"Microsoft's IIS web server, without having set the config allowPathInfo "
"option (IIS>=7) or metabase allowPathInfoForScriptMappings (IIS<7)."
msgstr ""
"Ett specialiserat alternativ till :class:`CGIHandler`, för användning vid "
"distribution på Microsofts IIS-webbserver, utan att ha ställt in config "
"allowPathInfo-alternativet (IIS>=7) eller metabasen "
"allowPathInfoForScriptMappings (IIS<7)."

msgid ""
"By default, IIS gives a ``PATH_INFO`` that duplicates the ``SCRIPT_NAME`` at "
"the front, causing problems for WSGI applications that wish to implement "
"routing. This handler strips any such duplicated path."
msgstr ""
"Som standard ger IIS en ``PATH_INFO`` som duplicerar ``SCRIPT_NAME`` längst "
"fram, vilket orsakar problem för WSGI-program som vill implementera routing. "
"Denna hanterare tar bort alla sådana duplicerade sökvägar."

msgid ""
"IIS can be configured to pass the correct ``PATH_INFO``, but this causes "
"another bug where ``PATH_TRANSLATED`` is wrong. Luckily this variable is "
"rarely used and is not guaranteed by WSGI. On IIS<7, though, the setting can "
"only be made on a vhost level, affecting all other script mappings, many of "
"which break when exposed to the ``PATH_TRANSLATED`` bug. For this reason "
"IIS<7 is almost never deployed with the fix (Even IIS7 rarely uses it "
"because there is still no UI for it.)."
msgstr ""
"IIS kan konfigureras att skicka rätt ``PATH_INFO``, men detta orsakar en "
"annan bugg där ``PATH_TRANSLATED`` är fel. Lyckligtvis används den här "
"variabeln sällan och garanteras inte av WSGI. På IIS<7 kan inställningen "
"dock bara göras på vhost-nivå, vilket påverkar alla andra skriptmappningar, "
"varav många går sönder när de utsätts för ``PATH_TRANSLATED``-buggen. Av "
"denna anledning distribueras IIS<7 nästan aldrig med korrigeringen (även "
"IIS7 använder den sällan eftersom det fortfarande inte finns något "
"användargränssnitt för den)."

msgid ""
"There is no way for CGI code to tell whether the option was set, so a "
"separate handler class is provided.  It is used in the same way as :class:"
"`CGIHandler`, i.e., by calling ``IISCGIHandler().run(app)``, where ``app`` "
"is the WSGI application object you wish to invoke."
msgstr ""
"Det finns inget sätt för CGI-koden att avgöra om alternativet har ställts "
"in, så en separat hanterarklass tillhandahålls.  Den används på samma sätt "
"som :class:`CGIHandler`, d.v.s. genom att anropa ``IISCGIHandler()."
"run(app)``, där ``app`` är det WSGI-applikationsobjekt som du vill anropa."

msgid ""
"Similar to :class:`CGIHandler`, but instead of using the :mod:`sys` and :mod:"
"`os` modules, the CGI environment and I/O streams are specified explicitly. "
"The *multithread* and *multiprocess* values are used to set the ``wsgi."
"multithread`` and ``wsgi.multiprocess`` flags for any applications run by "
"the handler instance."
msgstr ""
"Liknar :class:`CGIHandler`, men istället för att använda modulerna :mod:"
"`sys` och :mod:`os` anges CGI-miljön och I/O-strömmarna explicit. Värdena "
"*multithread* och *multiprocess* används för att ange flaggorna ``wsgi."
"multithread`` och ``wsgi.multiprocess`` för alla program som körs av "
"hanterarinstansen."

msgid ""
"This class is a subclass of :class:`SimpleHandler` intended for use with "
"software other than HTTP \"origin servers\".  If you are writing a gateway "
"protocol implementation (such as CGI, FastCGI, SCGI, etc.) that uses a "
"``Status:`` header to send an HTTP status, you probably want to subclass "
"this instead of :class:`SimpleHandler`."
msgstr ""
"Denna klass är en subklass av :class:`SimpleHandler` avsedd för användning "
"med annan programvara än HTTP \"origin servers\".  Om du skriver en "
"implementering av ett gateway-protokoll (t.ex. CGI, FastCGI, SCGI, etc.) som "
"använder en ``Status:`` header för att skicka en HTTP-status, vill du "
"förmodligen underordna dig denna istället för :class:`SimpleHandler`."

msgid ""
"Similar to :class:`BaseCGIHandler`, but designed for use with HTTP origin "
"servers.  If you are writing an HTTP server implementation, you will "
"probably want to subclass this instead of :class:`BaseCGIHandler`."
msgstr ""
"Liknar :class:`BaseCGIHandler`, men är utformad för användning med HTTP-"
"ursprungsmottagare.  Om du skriver en HTTP-serverimplementation kommer du "
"förmodligen att vilja underklassa denna istället för :class:`BaseCGIHandler`."

msgid ""
"This class is a subclass of :class:`BaseHandler`.  It overrides the :meth:`!"
"__init__`, :meth:`~BaseHandler.get_stdin`, :meth:`~BaseHandler.get_stderr`, :"
"meth:`~BaseHandler.add_cgi_vars`, :meth:`~BaseHandler._write`, and :meth:"
"`~BaseHandler._flush` methods to support explicitly setting the environment "
"and streams via the constructor.  The supplied environment and streams are "
"stored in the :attr:`stdin`, :attr:`stdout`, :attr:`stderr`, and :attr:"
"`environ` attributes."
msgstr ""
"Denna klass är en underklass till :class:`BaseHandler`.  Den åsidosätter "
"metoderna :meth:`!__init__`, :meth:`~BaseHandler.get_stdin`, :meth:"
"`~BaseHandler.get_stderr`, :meth:`~BaseHandler.add_cgi_vars`, :meth:"
"`~BaseHandler._write`, och :meth:`~BaseHandler._flush` för att stödja "
"explicit inställning av miljö och strömmar via konstruktorn.  Den miljö och "
"de strömmar som anges lagras i attributen :attr:`stdin`, :attr:`stdout`, :"
"attr:`stderr` och :attr:`environ`."

msgid ""
"The :meth:`~io.BufferedIOBase.write` method of *stdout* should write each "
"chunk in full, like :class:`io.BufferedIOBase`."
msgstr ""
"Metoden :meth:`~io.BufferedIOBase.write` för *stdout* bör skriva varje del i "
"sin helhet, som :class:`io.BufferedIOBase`."

msgid ""
"This is an abstract base class for running WSGI applications.  Each instance "
"will handle a single HTTP request, although in principle you could create a "
"subclass that was reusable for multiple requests."
msgstr ""
"Detta är en abstrakt basklass för att köra WSGI-applikationer.  Varje "
"instans hanterar en enda HTTP-begäran, men i princip kan du skapa en "
"underklass som kan återanvändas för flera begäranden."

msgid ""
":class:`BaseHandler` instances have only one method intended for external "
"use:"
msgstr ""
":class:`BaseHandler`-instanser har endast en metod avsedd för extern "
"användning:"

msgid "Run the specified WSGI application, *app*."
msgstr "Kör den angivna WSGI-applikationen, *app*."

msgid ""
"All of the other :class:`BaseHandler` methods are invoked by this method in "
"the process of running the application, and thus exist primarily to allow "
"customizing the process."
msgstr ""
"Alla andra :class:`BaseHandler`-metoder anropas av den här metoden när "
"applikationen körs och finns därför främst till för att göra det möjligt att "
"anpassa processen."

msgid "The following methods MUST be overridden in a subclass:"
msgstr "Följande metoder MÅSTE åsidosättas i en subklass:"

msgid ""
"Buffer the bytes *data* for transmission to the client.  It's okay if this "
"method actually transmits the data; :class:`BaseHandler` just separates "
"write and flush operations for greater efficiency when the underlying system "
"actually has such a distinction."
msgstr ""
"Buffra byte *data* för överföring till klienten.  Det är okej om den här "
"metoden faktiskt överför data; :class:`BaseHandler` separerar bara write och "
"flush operationer för ökad effektivitet när det underliggande systemet "
"faktiskt har en sådan distinktion."

msgid ""
"Force buffered data to be transmitted to the client.  It's okay if this "
"method is a no-op (i.e., if :meth:`_write` actually sends the data)."
msgstr ""
"Tvinga buffrade data att överföras till klienten.  Det är okej om den här "
"metoden är en no-op (dvs. om :meth:`_write` faktiskt skickar data)."

msgid ""
"Return an object compatible with :class:`~wsgiref.types.InputStream` "
"suitable for use as the ``wsgi.input`` of the request currently being "
"processed."
msgstr ""
"Returnerar ett objekt som är kompatibelt med :class:`~wsgiref.types."
"InputStream` och som kan användas som ``wsgi.input`` för den begäran som för "
"närvarande behandlas."

msgid ""
"Return an object compatible with :class:`~wsgiref.types.ErrorStream` "
"suitable for use as the ``wsgi.errors`` of the request currently being "
"processed."
msgstr ""
"Returnerar ett objekt som är kompatibelt med :class:`~wsgiref.types."
"ErrorStream` och som kan användas som ``wsgi.errors`` för den begäran som "
"för närvarande behandlas."

msgid ""
"Insert CGI variables for the current request into the :attr:`environ` "
"attribute."
msgstr ""
"Infoga CGI-variabler för den aktuella begäran i attributet :attr:`environ`."

msgid ""
"Here are some other methods and attributes you may wish to override. This "
"list is only a summary, however, and does not include every method that can "
"be overridden.  You should consult the docstrings and source code for "
"additional information before attempting to create a customized :class:"
"`BaseHandler` subclass."
msgstr ""
"Här är några andra metoder och attribut som du kanske vill åsidosätta. Den "
"här listan är dock bara en sammanfattning och innehåller inte alla metoder "
"som kan åsidosättas.  Du bör konsultera dokumentationen och källkoden för "
"ytterligare information innan du försöker skapa en anpassad :class:"
"`BaseHandler`-underklass."

msgid "Attributes and methods for customizing the WSGI environment:"
msgstr "Attribut och metoder för att anpassa WSGI-miljön:"

msgid ""
"The value to be used for the ``wsgi.multithread`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"Det värde som ska användas för miljövariabeln ``wsgi.multithread``.  "
"Standardvärdet är true i :class:`BaseHandler`, men kan ha ett annat "
"standardvärde (eller ställas in av konstruktören) i de andra underklasserna."

msgid ""
"The value to be used for the ``wsgi.multiprocess`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"Det värde som ska användas för miljövariabeln ``wsgi.multiprocess``.  "
"Standardvärdet är true i :class:`BaseHandler`, men kan ha ett annat "
"standardvärde (eller ställas in av konstruktören) i de andra underklasserna."

msgid ""
"The value to be used for the ``wsgi.run_once`` environment variable.  It "
"defaults to false in :class:`BaseHandler`, but :class:`CGIHandler` sets it "
"to true by default."
msgstr ""
"Det värde som ska användas för miljövariabeln ``wsgi.run_once``.  Den är som "
"standard false i :class:`BaseHandler`, men :class:`CGIHandler` sätter den "
"till true som standard."

msgid ""
"The default environment variables to be included in every request's WSGI "
"environment.  By default, this is a copy of ``os.environ`` at the time that :"
"mod:`wsgiref.handlers` was imported, but subclasses can either create their "
"own at the class or instance level.  Note that the dictionary should be "
"considered read-only, since the default value is shared between multiple "
"classes and instances."
msgstr ""
"Standardmiljövariablerna som ska inkluderas i varje begärandes WSGI-miljö.  "
"Som standard är detta en kopia av ``os.environ`` vid den tidpunkt då :mod:"
"`wsgiref.handlers` importerades, men underklasser kan antingen skapa sina "
"egna på klass- eller instansnivå.  Observera att ordlistan bör betraktas som "
"skrivskyddad, eftersom standardvärdet delas mellan flera klasser och "
"instanser."

msgid ""
"If the :attr:`origin_server` attribute is set, this attribute's value is "
"used to set the default ``SERVER_SOFTWARE`` WSGI environment variable, and "
"also to set a default ``Server:`` header in HTTP responses.  It is ignored "
"for handlers (such as :class:`BaseCGIHandler` and :class:`CGIHandler`) that "
"are not HTTP origin servers."
msgstr ""
"Om attributet :attr:`origin_server` är inställt, används detta attributs "
"värde för att ställa in standard WSGI-miljövariabeln ``SERVER_SOFTWARE``, "
"och även för att ställa in en standard ``Server:`` header i HTTP-svar.  Det "
"ignoreras för hanterare (såsom :class:`BaseCGIHandler` och :class:"
"`CGIHandler`) som inte är HTTP-ursprungsmottagare."

msgid ""
"The term \"Python\" is replaced with implementation specific term like "
"\"CPython\", \"Jython\" etc."
msgstr ""
"Termen \"Python\" ersätts med implementationsspecifika termer som "
"\"CPython\", \"Jython\" etc."

msgid ""
"Return the URL scheme being used for the current request.  The default "
"implementation uses the :func:`guess_scheme` function from :mod:`wsgiref."
"util` to guess whether the scheme should be \"http\" or \"https\", based on "
"the current request's :attr:`environ` variables."
msgstr ""
"Returnerar det URL-schema som används för den aktuella begäran.  "
"Standardimplementeringen använder funktionen :func:`guess_scheme` från :mod:"
"`wsgiref.util` för att gissa om schemat ska vara \"http\" eller \"https\", "
"baserat på den aktuella begärans :attr:`environ`-variabler."

msgid ""
"Set the :attr:`environ` attribute to a fully populated WSGI environment.  "
"The default implementation uses all of the above methods and attributes, "
"plus the :meth:`get_stdin`, :meth:`get_stderr`, and :meth:`add_cgi_vars` "
"methods and the :attr:`wsgi_file_wrapper` attribute.  It also inserts a "
"``SERVER_SOFTWARE`` key if not present, as long as the :attr:`origin_server` "
"attribute is a true value and the :attr:`server_software` attribute is set."
msgstr ""
"Ställ in attributet :attr:`environ` till en fullt ifylld WSGI-miljö.  "
"Standardimplementeringen använder alla ovanstående metoder och attribut, "
"plus metoderna :meth:`get_stdin`, :meth:`get_stderr`, och :meth:"
"`add_cgi_vars` och attributet :attr:`wsgi_file_wrapper`.  Den infogar också "
"nyckeln ``SERVER_SOFTWARE`` om den inte finns, så länge attributet :attr:"
"`origin_server`` är ett sant värde och attributet :attr:`server_software`` "
"är angivet."

msgid "Methods and attributes for customizing exception handling:"
msgstr "Metoder och attribut för att anpassa undantagshanteringen:"

msgid ""
"Log the *exc_info* tuple in the server log.  *exc_info* is a ``(type, value, "
"traceback)`` tuple.  The default implementation simply writes the traceback "
"to the request's ``wsgi.errors`` stream and flushes it.  Subclasses can "
"override this method to change the format or retarget the output, mail the "
"traceback to an administrator, or whatever other action may be deemed "
"suitable."
msgstr ""
"Loggar *exc_info*-tupeln i serverloggen.  *exc_info* är en ``(typ, värde, "
"spårning)`` tupel.  Standardimplementeringen skriver helt enkelt spårningen "
"till begärandets ``wsgi.errors``-ström och rensar den.  Underklasser kan "
"åsidosätta den här metoden för att ändra formatet eller rikta om utdata, "
"skicka spårningen till en administratör eller någon annan åtgärd som kan "
"anses lämplig."

msgid ""
"The maximum number of frames to include in tracebacks output by the default :"
"meth:`log_exception` method.  If ``None``, all frames are included."
msgstr ""
"Det maximala antalet bildrutor som ska inkluderas i spårningar som matas ut "
"av standardmetoden :meth:`log_exception`.  Om ``None`` inkluderas alla ramar."

msgid ""
"This method is a WSGI application to generate an error page for the user.  "
"It is only invoked if an error occurs before headers are sent to the client."
msgstr ""
"Denna metod är en WSGI-applikation som genererar en felsida för användaren.  "
"Den anropas endast om ett fel inträffar innan rubrikerna skickas till "
"klienten."

msgid ""
"This method can access the current error using ``sys.exception()``, and "
"should pass that information to *start_response* when calling it (as "
"described in the \"Error Handling\" section of :pep:`3333`). In particular, "
"the *start_response* callable should follow the :class:`.StartResponse` "
"protocol."
msgstr ""
"Den här metoden kan komma åt det aktuella felet med hjälp av ``sys."
"exception()``, och bör skicka den informationen till *start_response* när "
"den anropas (enligt beskrivningen i avsnittet \"Error Handling\" i :pep:"
"`3333`). I synnerhet bör den anropbara *start_response* följa :class:`."
"StartResponse`-protokollet."

msgid ""
"The default implementation just uses the :attr:`error_status`, :attr:"
"`error_headers`, and :attr:`error_body` attributes to generate an output "
"page.  Subclasses can override this to produce more dynamic error output."
msgstr ""
"Standardimplementeringen använder bara attributen :attr:`error_status`, :"
"attr:`error_headers` och :attr:`error_body` för att generera en utdatasida.  "
"Subklasser kan åsidosätta detta för att producera mer dynamisk felutmatning."

msgid ""
"Note, however, that it's not recommended from a security perspective to spit "
"out diagnostics to any old user; ideally, you should have to do something "
"special to enable diagnostic output, which is why the default implementation "
"doesn't include any."
msgstr ""
"Observera dock att det inte är rekommenderat ur ett säkerhetsperspektiv att "
"spotta ut diagnostik till vilken användare som helst; helst bör du behöva "
"göra något speciellt för att aktivera diagnostisk utmatning, vilket är "
"anledningen till att standardimplementeringen inte innehåller någon."

msgid ""
"The HTTP status used for error responses.  This should be a status string as "
"defined in :pep:`3333`; it defaults to a 500 code and message."
msgstr ""
"Den HTTP-status som används för felsvar.  Detta bör vara en statussträng "
"enligt definitionen i :pep:`3333`; standardvärdet är en 500-kod och ett 500-"
"meddelande."

msgid ""
"The HTTP headers used for error responses.  This should be a list of WSGI "
"response headers (``(name, value)`` tuples), as described in :pep:`3333`.  "
"The default list just sets the content type to ``text/plain``."
msgstr ""
"De HTTP-rubriker som används för felsvar.  Detta bör vara en lista över WSGI-"
"svarshuvuden (``(namn, värde)``-tupler), enligt beskrivningen i :pep:"
"`3333`.  Standardlistan sätter bara innehållstypen till ``text/plain``."

msgid ""
"The error response body.  This should be an HTTP response body bytestring. "
"It defaults to the plain text, \"A server error occurred.  Please contact "
"the administrator.\""
msgstr ""
"Felmeddelandets kropp.  Detta bör vara en bytestring för HTTP-svarstext. "
"Standardvärdet är klartext, \"Ett serverfel inträffade.  Vänligen kontakta "
"administratören.\""

msgid ""
"Methods and attributes for :pep:`3333`'s \"Optional Platform-Specific File "
"Handling\" feature:"
msgstr ""
"Metoder och attribut för :pep:`3333`:s funktion \"Optional Platform-Specific "
"File Handling\":"

msgid ""
"A ``wsgi.file_wrapper`` factory, compatible with :class:`wsgiref.types."
"FileWrapper`, or ``None``.  The default value of this attribute is the :"
"class:`wsgiref.util.FileWrapper` class."
msgstr ""
"En ``wsgi.file_wrapper``-fabrik, kompatibel med :class:`wsgiref.types."
"FileWrapper`, eller ``None``.  Standardvärdet för detta attribut är klassen :"
"class:`wsgiref.util.FileWrapper`."

msgid ""
"Override to implement platform-specific file transmission.  This method is "
"called only if the application's return value is an instance of the class "
"specified by the :attr:`wsgi_file_wrapper` attribute.  It should return a "
"true value if it was able to successfully transmit the file, so that the "
"default transmission code will not be executed. The default implementation "
"of this method just returns a false value."
msgstr ""
"Åsidosättande för att implementera plattformsspecifik filöverföring.  Denna "
"metod anropas endast om programmets returvärde är en instans av den klass "
"som anges av attributet :attr:`wsgi_file_wrapper`.  Den bör returnera ett "
"sant värde om den lyckades överföra filen, så att standardöverföringskoden "
"inte körs. Standardimplementeringen av denna metod returnerar bara ett "
"falskt värde."

msgid "Miscellaneous methods and attributes:"
msgstr "Diverse metoder och attribut:"

msgid ""
"This attribute should be set to a true value if the handler's :meth:`_write` "
"and :meth:`_flush` are being used to communicate directly to the client, "
"rather than via a CGI-like gateway protocol that wants the HTTP status in a "
"special ``Status:`` header."
msgstr ""
"Detta attribut bör sättas till ett sant värde om hanterarens :meth:`_write` "
"och :meth:`_flush` används för att kommunicera direkt till klienten, snarare "
"än via ett CGI-liknande gateway-protokoll som vill ha HTTP-statusen i en "
"speciell ``Status:`` header."

msgid ""
"This attribute's default value is true in :class:`BaseHandler`, but false "
"in :class:`BaseCGIHandler` and :class:`CGIHandler`."
msgstr ""
"Detta attributs standardvärde är true i :class:`BaseHandler`, men false i :"
"class:`BaseCGIHandler` och :class:`CGIHandler`."

msgid ""
"If :attr:`origin_server` is true, this string attribute is used to set the "
"HTTP version of the response set to the client.  It defaults to ``\"1.0\"``."
msgstr ""
"Om :attr:`origin_server` är true används detta strängattribut för att ange "
"HTTP-versionen av det svar som skickas till klienten.  Standardvärdet är "
"``\"1.0\"``."

msgid ""
"Transcode CGI variables from ``os.environ`` to :pep:`3333` \"bytes in "
"unicode\" strings, returning a new dictionary.  This function is used by :"
"class:`CGIHandler` and :class:`IISCGIHandler` in place of directly using "
"``os.environ``, which is not necessarily WSGI-compliant on all platforms and "
"web servers using Python 3 -- specifically, ones where the OS's actual "
"environment is Unicode (i.e. Windows), or ones where the environment is "
"bytes, but the system encoding used by Python to decode it is anything other "
"than ISO-8859-1 (e.g. Unix systems using UTF-8)."
msgstr ""
"Transcode CGI-variabler från ``os.environ`` till :pep:`3333` \"bytes in "
"unicode\"-strängar, returnerar en ny ordbok.  Denna funktion används av :"
"class:`CGIHandler` och :class:`IISCGIHandler` i stället för att direkt "
"använda ``os.environ``, som inte nödvändigtvis är WSGI-kompatibel på alla "
"plattformar och webbservrar som använder Python 3 -- särskilt sådana där "
"operativsystemets faktiska miljö är Unicode (dvs.windows), eller sådana där "
"miljön är bytes, men systemkodningen som Python använder för att avkoda den "
"är något annat än ISO-8859-1 (t.ex. Unix-system som använder UTF-8)."

msgid ""
"If you are implementing a CGI-based handler of your own, you probably want "
"to use this routine instead of just copying values out of ``os.environ`` "
"directly."
msgstr ""
"Om du implementerar en egen CGI-baserad hanterare vill du förmodligen "
"använda den här rutinen i stället för att bara kopiera värden direkt från "
"``os.environ``."

msgid ":mod:`wsgiref.types` -- WSGI types for static type checking"
msgstr ":mod:`wsgiref.types` -- WSGI-typer för statisk typkontroll"

msgid ""
"This module provides various types for static type checking as described in :"
"pep:`3333`."
msgstr ""
"Denna modul tillhandahåller olika typer för statisk typkontroll enligt "
"beskrivningen i :pep:`3333`."

msgid ""
"A :class:`typing.Protocol` describing :pep:`start_response() <3333#the-start-"
"response-callable>` callables (:pep:`3333`)."
msgstr ""
"En :class:`typing.Protocol` som beskriver :pep:`start_response() <3333#the-"
"start-response-callable>` anropbara (:pep:`3333`)."

msgid "A type alias describing a WSGI environment dictionary."
msgstr "Ett typalias som beskriver en WSGI-miljöordbok."

msgid "A type alias describing a WSGI application callable."
msgstr "Ett typalias som beskriver en WSGI-applikation som kan anropas."

msgid ""
"A :class:`typing.Protocol` describing a :pep:`WSGI Input Stream <3333#input-"
"and-error-streams>`."
msgstr ""
"En :class:`typing.Protocol` som beskriver en :pep:`WSGI Input Stream "
"<3333#input-and-error-streams>`."

msgid ""
"A :class:`typing.Protocol` describing a :pep:`WSGI Error Stream <3333#input-"
"and-error-streams>`."
msgstr ""
"En :class:`typing.Protocol` som beskriver en :pep:`WSGI Error Stream "
"<3333#input-and-error-streams>`."

msgid ""
"A :class:`typing.Protocol` describing a :pep:`file wrapper <3333#optional-"
"platform-specific-file-handling>`. See :class:`wsgiref.util.FileWrapper` for "
"a concrete implementation of this protocol."
msgstr ""
"Ett :class:`typing.Protocol` som beskriver en :pep:`filomslag <3333#optional-"
"platform-specific-file-handling>`. Se :class:`wsgiref.util.FileWrapper` för "
"en konkret implementation av detta protokoll."

msgid "Examples"
msgstr "Exempel"

msgid ""
"This is a working \"Hello World\" WSGI application, where the "
"*start_response* callable should follow the :class:`.StartResponse` "
"protocol::"
msgstr ""
"Detta är en fungerande \"Hello World\" WSGI applikation, där "
"*start_response* callable ska följa :class:`.StartResponse` protokollet::"

msgid ""
"\"\"\"\n"
"Every WSGI application must have an application object - a callable\n"
"object that accepts two arguments. For that purpose, we're going to\n"
"use a function (note that you're not limited to a function, you can\n"
"use a class for example). The first argument passed to the function\n"
"is a dictionary containing CGI-style environment variables and the\n"
"second variable is the callable object.\n"
"\"\"\"\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"\n"
"def hello_world_app(environ, start_response):\n"
"    status = \"200 OK\"  # HTTP Status\n"
"    headers = [(\"Content-type\", \"text/plain; charset=utf-8\")]  # HTTP "
"Headers\n"
"    start_response(status, headers)\n"
"\n"
"    # The returned object is going to be printed\n"
"    return [b\"Hello World\"]\n"
"\n"
"with make_server(\"\", 8000, hello_world_app) as httpd:\n"
"    print(\"Serving on port 8000...\")\n"
"\n"
"    # Serve until process is killed\n"
"    httpd.serve_forever()"
msgstr ""
"\"\"\"\n"
"Every WSGI application must have an application object - a callable\n"
"object that accepts two arguments. For that purpose, we're going to\n"
"use a function (note that you're not limited to a function, you can\n"
"use a class for example). The first argument passed to the function\n"
"is a dictionary containing CGI-style environment variables and the\n"
"second variable is the callable object.\n"
"\"\"\"\n"
"from wsgiref.simple_server import make_server\n"
"\n"
"\n"
"def hello_world_app(environ, start_response):\n"
"    status = \"200 OK\"  # HTTP Status\n"
"    headers = [(\"Content-type\", \"text/plain; charset=utf-8\")]  # HTTP "
"Headers\n"
"    start_response(status, headers)\n"
"\n"
"    # The returned object is going to be printed\n"
"    return [b\"Hello World\"]\n"
"\n"
"with make_server(\"\", 8000, hello_world_app) as httpd:\n"
"    print(\"Serving on port 8000...\")\n"
"\n"
"    # Serve until process is killed\n"
"    httpd.serve_forever()"

msgid ""
"Example of a WSGI application serving the current directory, accept optional "
"directory and port number (default: 8000) on the command line::"
msgstr ""
"Exempel på en WSGI-applikation som betjänar den aktuella katalogen, "
"acceptera valfri katalog och portnummer (standard: 8000) på kommandoraden::"

msgid ""
"\"\"\"\n"
"Small wsgiref based web server. Takes a path to serve from and an\n"
"optional port number (defaults to 8000), then tries to serve files.\n"
"MIME types are guessed from the file names, 404 errors are raised\n"
"if the file is not found.\n"
"\"\"\"\n"
"import mimetypes\n"
"import os\n"
"import sys\n"
"from wsgiref import simple_server, util\n"
"\n"
"\n"
"def app(environ, respond):\n"
"    # Get the file name and MIME type\n"
"    fn = os.path.join(path, environ[\"PATH_INFO\"][1:])\n"
"    if \".\" not in fn.split(os.path.sep)[-1]:\n"
"        fn = os.path.join(fn, \"index.html\")\n"
"    mime_type = mimetypes.guess_file_type(fn)[0]\n"
"\n"
"    # Return 200 OK if file exists, otherwise 404 Not Found\n"
"    if os.path.exists(fn):\n"
"        respond(\"200 OK\", [(\"Content-Type\", mime_type)])\n"
"        return util.FileWrapper(open(fn, \"rb\"))\n"
"    else:\n"
"        respond(\"404 Not Found\", [(\"Content-Type\", \"text/plain\")])\n"
"        return [b\"not found\"]\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    # Get the path and port from command-line arguments\n"
"    path = sys.argv[1] if len(sys.argv) > 1 else os.getcwd()\n"
"    port = int(sys.argv[2]) if len(sys.argv) > 2 else 8000\n"
"\n"
"    # Make and start the server until control-c\n"
"    httpd = simple_server.make_server(\"\", port, app)\n"
"    print(f\"Serving {path} on port {port}, control-C to stop\")\n"
"    try:\n"
"        httpd.serve_forever()\n"
"    except KeyboardInterrupt:\n"
"        print(\"Shutting down.\")\n"
"        httpd.server_close()"
msgstr ""
"\"\"\"\n"
"Small wsgiref based web server. Takes a path to serve from and an\n"
"optional port number (defaults to 8000), then tries to serve files.\n"
"MIME types are guessed from the file names, 404 errors are raised\n"
"if the file is not found.\n"
"\"\"\"\n"
"import mimetypes\n"
"import os\n"
"import sys\n"
"from wsgiref import simple_server, util\n"
"\n"
"\n"
"def app(environ, respond):\n"
"    # Get the file name and MIME type\n"
"    fn = os.path.join(path, environ[\"PATH_INFO\"][1:])\n"
"    if \".\" not in fn.split(os.path.sep)[-1]:\n"
"        fn = os.path.join(fn, \"index.html\")\n"
"    mime_type = mimetypes.guess_file_type(fn)[0]\n"
"\n"
"    # Return 200 OK if file exists, otherwise 404 Not Found\n"
"    if os.path.exists(fn):\n"
"        respond(\"200 OK\", [(\"Content-Type\", mime_type)])\n"
"        return util.FileWrapper(open(fn, \"rb\"))\n"
"    else:\n"
"        respond(\"404 Not Found\", [(\"Content-Type\", \"text/plain\")])\n"
"        return [b\"not found\"]\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    # Get the path and port from command-line arguments\n"
"    path = sys.argv[1] if len(sys.argv) > 1 else os.getcwd()\n"
"    port = int(sys.argv[2]) if len(sys.argv) > 2 else 8000\n"
"\n"
"    # Make and start the server until control-c\n"
"    httpd = simple_server.make_server(\"\", port, app)\n"
"    print(f\"Serving {path} on port {port}, control-C to stop\")\n"
"    try:\n"
"        httpd.serve_forever()\n"
"    except KeyboardInterrupt:\n"
"        print(\"Shutting down.\")\n"
"        httpd.server_close()"
