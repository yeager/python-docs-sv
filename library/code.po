# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!code` --- Interpreter base classes"
msgstr ":mod:`!code` --- Tolkens basklasser"

msgid "**Source code:** :source:`Lib/code.py`"
msgstr "**Källkod:** :källa:`Lib/code.py`"

msgid ""
"The ``code`` module provides facilities to implement read-eval-print loops "
"in Python.  Two classes and convenience functions are included which can be "
"used to build applications which provide an interactive interpreter prompt."
msgstr ""
"Modulen ``code`` ger möjlighet att implementera read-eval-print-loopar i "
"Python.  Två klasser och bekvämlighetsfunktioner ingår som kan användas för "
"att bygga applikationer som ger en interaktiv tolkprompt."

msgid ""
"This class deals with parsing and interpreter state (the user's namespace); "
"it does not deal with input buffering or prompting or input file naming (the "
"filename is always passed in explicitly). The optional *locals* argument "
"specifies a mapping to use as the namespace in which code will be executed; "
"it defaults to a newly created dictionary with key ``'__name__'`` set to "
"``'__console__'`` and key ``'__doc__'`` set to ``None``."
msgstr ""
"Den här klassen hanterar parsning och tolkens tillstånd (användarens "
"namnrymd); den hanterar inte buffring eller promptning av indata eller "
"namngivning av indatafiler (filnamnet anges alltid explicit). Det valfria "
"argumentet *locals* anger en mappning som ska användas som det namnområde "
"där koden ska exekveras; standard är en nyskapad ordbok med nyckeln "
"``'__name__'' satt till ``'__console__'' och nyckeln ``'__doc__'' satt till "
"``None`'."

msgid ""
"Note that functions and classes objects created under an :class:`!"
"InteractiveInterpreter` instance will belong to the namespace specified by "
"*locals*. They are only pickleable if *locals* is the namespace of an "
"existing module."
msgstr ""
"Observera att funktioner och klassobjekt som skapas under en :class:`!"
"InteractiveInterpreter'-instans kommer att tillhöra det namnområde som anges "
"av *locals*. De är endast plockbara om *locals* är namnrymden för en "
"befintlig modul."

msgid ""
"Closely emulate the behavior of the interactive Python interpreter. This "
"class builds on :class:`InteractiveInterpreter` and adds prompting using the "
"familiar ``sys.ps1`` and ``sys.ps2``, and input buffering. If *local_exit* "
"is true, ``exit()`` and ``quit()`` in the console will not raise :exc:"
"`SystemExit`, but instead return to the calling code."
msgstr ""
"Emulerar nära beteendet hos den interaktiva Python-tolken. Denna klass "
"bygger på :class:`InteractiveInterpreter` och lägger till prompter med hjälp "
"av de välkända ``sys.ps1`` och ``sys.ps2``, samt buffring av indata. Om "
"*local_exit* är true, kommer ``exit()`` och ``quit()`` i konsolen inte att "
"ge upphov till :exc:`SystemExit`, utan istället återgå till den anropande "
"koden."

msgid "Added *local_exit* parameter."
msgstr "Lagt till parametern *local_exit*."

msgid ""
"Convenience function to run a read-eval-print loop.  This creates a new "
"instance of :class:`InteractiveConsole` and sets *readfunc* to be used as "
"the :meth:`InteractiveConsole.raw_input` method, if provided.  If *local* is "
"provided, it is passed to the :class:`InteractiveConsole` constructor for "
"use as the default namespace for the interpreter loop.  If *local_exit* is "
"provided, it is passed to the :class:`InteractiveConsole` constructor.  The :"
"meth:`~InteractiveConsole.interact` method of the instance is then run with "
"*banner* and *exitmsg* passed as the banner and exit message to use, if "
"provided.  The console object is discarded after use."
msgstr ""
"Bekvämlighetsfunktion för att köra en read-eval-print-loop.  Detta skapar en "
"ny instans av :class:`InteractiveConsole` och anger att *readfunc* ska "
"användas som :meth:`InteractiveConsole.raw_input`-metoden, om den anges.  Om "
"*local* anges, skickas det till :class:`InteractiveConsole`-konstruktören "
"för användning som standardnamnrymd för tolkningsloopen.  Om *local_exit* "
"anges, skickas den till konstruktören för :class:`InteractiveConsole`.  "
"Metoden :meth:`~InteractiveConsole.interact` för instansen körs sedan med "
"*banner* och *exitmsg* som banner och avslutningsmeddelande, om sådana har "
"angetts.  Konsolobjektet kasseras efter användning."

msgid "Added *exitmsg* parameter."
msgstr "Parametern *exitmsg* har lagts till."

msgid ""
"This function is useful for programs that want to emulate Python's "
"interpreter main loop (a.k.a. the read-eval-print loop).  The tricky part is "
"to determine when the user has entered an incomplete command that can be "
"completed by entering more text (as opposed to a complete command or a "
"syntax error).  This function *almost* always makes the same decision as the "
"real interpreter main loop."
msgstr ""
"Den här funktionen är användbar för program som vill emulera Pythons "
"tolknings huvudloop (även kallad read-eval-print-loopen).  Det svåra är att "
"avgöra när användaren har angett ett ofullständigt kommando som kan "
"kompletteras genom att ange mer text (i motsats till ett fullständigt "
"kommando eller ett syntaxfel).  Den här funktionen fattar *nästan* alltid "
"samma beslut som den riktiga tolkens huvudslinga."

msgid ""
"*source* is the source string; *filename* is the optional filename from "
"which source was read, defaulting to ``'<input>'``; and *symbol* is the "
"optional grammar start symbol, which should be ``'single'`` (the default), "
"``'eval'`` or ``'exec'``."
msgstr ""
"*source* är källsträngen; *filename* är det valfria filnamnet som källan "
"lästes från, med standardvärdet ``'<input>'``; och *symbol* är den valfria "
"grammatikstartsymbolen, som bör vara ``'single'`` (standardvärdet), "
"``'eval'`` eller ``'exec'``."

msgid ""
"Returns a code object (the same as ``compile(source, filename, symbol)``) if "
"the command is complete and valid; ``None`` if the command is incomplete; "
"raises :exc:`SyntaxError` if the command is complete and contains a syntax "
"error, or raises :exc:`OverflowError` or :exc:`ValueError` if the command "
"contains an invalid literal."
msgstr ""
"Returnerar ett kodobjekt (samma som ``compile(source, filename, symbol)``) "
"om kommandot är fullständigt och giltigt; ``None`` om kommandot är "
"ofullständigt; ger upphov till :exc:`SyntaxError` om kommandot är "
"fullständigt och innehåller ett syntaxfel, eller ger upphov till :exc:"
"`OverflowError` eller :exc:`ValueError` om kommandot innehåller en ogiltig "
"bokstav."

msgid "Interactive Interpreter Objects"
msgstr "Interaktiva tolkningsobjekt"

msgid ""
"Compile and run some source in the interpreter. Arguments are the same as "
"for :func:`compile_command`; the default for *filename* is ``'<input>'``, "
"and for *symbol* is ``'single'``.  One of several things can happen:"
msgstr ""
"Kompilera och kör en källkod i tolken. Argumenten är desamma som för :func:"
"`compile_command`; standardvärdet för *filnamn* är ``'<input>'``, och för "
"*symbol* är ``'single'``.  En av flera saker kan hända:"

msgid ""
"The input is incorrect; :func:`compile_command` raised an exception (:exc:"
"`SyntaxError` or :exc:`OverflowError`).  A syntax traceback will be printed "
"by calling the :meth:`showsyntaxerror` method.  :meth:`runsource` returns "
"``False``."
msgstr ""
"Indata är felaktig; :func:`compile_command` gav upphov till ett undantag (:"
"exc:`SyntaxError` eller :exc:`OverflowError`).  En syntaxspårning kommer att "
"skrivas ut genom att anropa metoden :meth:`showsyntaxerror`. :meth:"
"`runsource` returnerar ``False``."

msgid ""
"The input is incomplete, and more input is required; :func:`compile_command` "
"returned ``None``. :meth:`runsource` returns ``True``."
msgstr ""
"Indata är ofullständig och mer indata krävs; :func:`compile_command` "
"returnerade ``None``. :meth:`runsource` returnerar ``True``."

msgid ""
"The input is complete; :func:`compile_command` returned a code object.  The "
"code is executed by calling the :meth:`runcode` (which also handles run-time "
"exceptions, except for :exc:`SystemExit`). :meth:`runsource` returns "
"``False``."
msgstr ""
"Inmatningen är klar; :func:`compile_command` returnerade ett kodobjekt.  "
"Koden exekveras genom att anropa :meth:`runcode` (som också hanterar "
"körtidsundantag, förutom :exc:`SystemExit`). :meth:`runsource` returnerar "
"``False``."

msgid ""
"The return value can be used to decide whether to use ``sys.ps1`` or ``sys."
"ps2`` to prompt the next line."
msgstr ""
"Returvärdet kan användas för att avgöra om ``sys.ps1`` eller ``sys.ps2`` ska "
"användas för att fråga efter nästa rad."

msgid ""
"Execute a code object. When an exception occurs, :meth:`showtraceback` is "
"called to display a traceback.  All exceptions are caught except :exc:"
"`SystemExit`, which is allowed to propagate."
msgstr ""
"Exekvera ett kodobjekt. När ett undantag inträffar anropas :meth:"
"`showtraceback` för att visa en spårning.  Alla undantag fångas upp utom :"
"exc:`SystemExit`, som tillåts fortplanta sig."

msgid ""
"A note about :exc:`KeyboardInterrupt`: this exception may occur elsewhere in "
"this code, and may not always be caught.  The caller should be prepared to "
"deal with it."
msgstr ""
"En anmärkning om :exc:`KeyboardInterrupt`: detta undantag kan förekomma på "
"andra ställen i denna kod, och kanske inte alltid fångas upp.  Den som "
"anropar bör vara beredd att hantera det."

msgid ""
"Display the syntax error that just occurred.  This does not display a stack "
"trace because there isn't one for syntax errors. If *filename* is given, it "
"is stuffed into the exception instead of the default filename provided by "
"Python's parser, because it always uses ``'<string>'`` when reading from a "
"string. The output is written by the :meth:`write` method."
msgstr ""
"Visar det syntaxfel som just inträffade.  Detta visar inte en stack trace "
"eftersom det inte finns någon för syntaxfel. Om *filnamn* anges, stoppas det "
"in i undantaget istället för standardfilnamnet som tillhandahålls av Pythons "
"parser, eftersom den alltid använder ``'<string>'`` när den läser från en "
"sträng. Utdata skrivs med metoden :meth:`write`."

msgid ""
"Display the exception that just occurred.  We remove the first stack item "
"because it is within the interpreter object implementation. The output is "
"written by the :meth:`write` method."
msgstr ""
"Visa det undantag som just inträffade.  Vi tar bort det första stackobjektet "
"eftersom det ligger inom tolkobjektets implementation. Utdata skrivs med "
"metoden :meth:`write`."

msgid ""
"The full chained traceback is displayed instead of just the primary "
"traceback."
msgstr ""
"Hela den kedjade spårningen visas i stället för bara den primära spårningen."

msgid ""
"Write a string to the standard error stream (``sys.stderr``). Derived "
"classes should override this to provide the appropriate output handling as "
"needed."
msgstr ""
"Skriv en sträng till standardfelströmmen (``sys.stderr``). Härledda klasser "
"bör åsidosätta detta för att tillhandahålla lämplig utdatahantering efter "
"behov."

msgid "Interactive Console Objects"
msgstr "Interaktiva konsolobjekt"

msgid ""
"The :class:`InteractiveConsole` class is a subclass of :class:"
"`InteractiveInterpreter`, and so offers all the methods of the interpreter "
"objects as well as the following additions."
msgstr ""
"Klassen :class:`InteractiveConsole` är en underklass till :class:"
"`InteractiveInterpreter` och erbjuder därför alla metoder som finns i "
"tolkningsobjekten samt följande tillägg."

msgid ""
"Closely emulate the interactive Python console. The optional *banner* "
"argument specify the banner to print before the first interaction; by "
"default it prints a banner similar to the one printed by the standard Python "
"interpreter, followed by the class name of the console object in parentheses "
"(so as not to confuse this with the real interpreter -- since it's so "
"close!)."
msgstr ""
"Emulerar nära den interaktiva Python-konsolen. Det valfria argumentet "
"*banner* anger den banner som ska skrivas ut före den första interaktionen; "
"som standard skrivs en banner ut som liknar den som skrivs ut av Pythons "
"standardtolk, följt av klassnamnet på konsolobjektet inom parentes (för att "
"inte förväxla detta med den riktiga tolken - eftersom det är så nära!)"

msgid ""
"The optional *exitmsg* argument specifies an exit message printed when "
"exiting. Pass the empty string to suppress the exit message. If *exitmsg* is "
"not given or ``None``, a default message is printed."
msgstr ""
"Det valfria argumentet *exitmsg* anger ett avslutningsmeddelande som skrivs "
"ut vid avslutning. Skicka den tomma strängen för att undertrycka "
"avslutningsmeddelandet. Om *exitmsg* inte anges eller om ``None``, skrivs "
"ett standardmeddelande ut."

msgid "To suppress printing any banner, pass an empty string."
msgstr "Om du inte vill att någon banner ska skrivas ut, skicka en tom sträng."

msgid "Print an exit message when exiting."
msgstr "Skriv ut ett avslutningsmeddelande när du avslutar."

msgid ""
"Push a line of source text to the interpreter. The line should not have a "
"trailing newline; it may have internal newlines.  The line is appended to a "
"buffer and the interpreter's :meth:`~InteractiveInterpreter.runsource` "
"method is called with the concatenated contents of the buffer as source.  If "
"this indicates that the command was executed or invalid, the buffer is "
"reset; otherwise, the command is incomplete, and the buffer is left as it "
"was after the line was appended.  The return value is ``True`` if more input "
"is required, ``False`` if the line was dealt with in some way (this is the "
"same as :meth:`!runsource`)."
msgstr ""
"Skicka en rad med källtext till tolken. Raden bör inte ha någon "
"efterföljande ny rad; den kan ha interna nya rader.  Raden läggs till i en "
"buffert och tolkens :meth:`~InteractiveInterpreter.runsource`-metod anropas "
"med det sammanfogade innehållet i bufferten som källa.  Om detta indikerar "
"att kommandot utfördes eller var ogiltigt, återställs bufferten; i annat "
"fall är kommandot ofullständigt och bufferten lämnas som den var efter att "
"raden hade lagts till.  Returvärdet är ``True`` om mer indata krävs, "
"``False`` om raden hanterades på något sätt (detta är samma sak som :meth:`!"
"runsource`)."

msgid "Remove any unhandled source text from the input buffer."
msgstr "Ta bort eventuell ohanterad källtext från inmatningsbufferten."

msgid ""
"Write a prompt and read a line.  The returned line does not include the "
"trailing newline.  When the user enters the EOF key sequence, :exc:"
"`EOFError` is raised. The base implementation reads from ``sys.stdin``; a "
"subclass may replace this with a different implementation."
msgstr ""
"Skriv en prompt och läs en rad.  Den returnerade raden innehåller inte den "
"efterföljande nya raden.  När användaren anger EOF-tangentsekvensen "
"genereras :exc:`EOFError`. Basimplementeringen läser från ``sys.stdin``; en "
"underklass kan ersätta detta med en annan implementering."
