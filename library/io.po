# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!io` --- Core tools for working with streams"
msgstr ":mod:`!io` --- Kärnverktyg för att arbeta med strömmar"

msgid "**Source code:** :source:`Lib/io.py`"
msgstr "**Källkod:** :source:`Lib/io.py`"

msgid "Overview"
msgstr "Översikt"

msgid ""
"The :mod:`io` module provides Python's main facilities for dealing with "
"various types of I/O.  There are three main types of I/O: *text I/O*, "
"*binary I/O* and *raw I/O*.  These are generic categories, and various "
"backing stores can be used for each of them.  A concrete object belonging to "
"any of these categories is called a :term:`file object`.  Other common terms "
"are *stream* and *file-like object*."
msgstr ""
"Modulen :mod:`io` tillhandahåller Pythons viktigaste funktioner för att "
"hantera olika typer av I/O.  Det finns tre huvudtyper av I/O: *text-I/O*, "
"*binär-I/O* och *raw-I/O*.  Dessa är generiska kategorier, och olika backing "
"stores kan användas för var och en av dem.  Ett konkret objekt som tillhör "
"någon av dessa kategorier kallas för ett :term:`filobjekt`.  Andra vanliga "
"termer är *stream* och *filliknande objekt*."

msgid ""
"Independent of its category, each concrete stream object will also have "
"various capabilities: it can be read-only, write-only, or read-write. It can "
"also allow arbitrary random access (seeking forwards or backwards to any "
"location), or only sequential access (for example in the case of a socket or "
"pipe)."
msgstr ""
"Oberoende av sin kategori kommer varje konkret strömobjekt också att ha "
"olika funktioner: det kan vara skrivskyddat, skrivskyddat eller "
"skrivskyddat. Det kan också tillåta godtycklig slumpmässig åtkomst (sökning "
"framåt eller bakåt till valfri plats), eller endast sekventiell åtkomst "
"(till exempel i fallet med en socket eller pipe)."

msgid ""
"All streams are careful about the type of data you give to them.  For "
"example giving a :class:`str` object to the :meth:`!write` method of a "
"binary stream will raise a :exc:`TypeError`.  So will giving a :class:"
"`bytes` object to the :meth:`!write` method of a text stream."
msgstr ""
"Alla strömmar är försiktiga med vilken typ av data du ger till dem.  Om du "
"till exempel ger ett :class:`str`-objekt till :meth:`!write`-metoden för en "
"binär ström kommer ett :exc:`TypeError` att uppstå.  Detsamma gäller om man "
"ger ett :class:`bytes`-objekt till :meth:`!write`-metoden för en textström."

msgid ""
"Operations that used to raise :exc:`IOError` now raise :exc:`OSError`, "
"since :exc:`IOError` is now an alias of :exc:`OSError`."
msgstr ""
"Operationer som tidigare gav upphov till :exc:`IOError` ger nu upphov till :"
"exc:`OSError`, eftersom :exc:`IOError` nu är ett alias för :exc:`OSError`."

msgid "Text I/O"
msgstr "Text I/O"

msgid ""
"Text I/O expects and produces :class:`str` objects.  This means that "
"whenever the backing store is natively made of bytes (such as in the case of "
"a file), encoding and decoding of data is made transparently as well as "
"optional translation of platform-specific newline characters."
msgstr ""
"Text-I/O förväntar sig och producerar :class:`str`-objekt.  Detta innebär "
"att när backing-lagret är uppbyggt av bytes (som i fallet med en fil), sker "
"kodning och avkodning av data på ett transparent sätt, liksom valfri "
"översättning av plattformsspecifika newline-tecken."

msgid ""
"The easiest way to create a text stream is with :meth:`open`, optionally "
"specifying an encoding::"
msgstr ""
"Det enklaste sättet att skapa en textström är med :meth:`open`, med "
"möjlighet att ange en kodning::"

msgid "f = open(\"myfile.txt\", \"r\", encoding=\"utf-8\")"
msgstr "f = open(\"myfile.txt\", \"r\", encoding=\"utf-8\")"

msgid ""
"In-memory text streams are also available as :class:`StringIO` objects::"
msgstr ""
"Textflöden i minnet finns också tillgängliga som :class:`StringIO`-objekt::"

msgid "f = io.StringIO(\"some initial text data\")"
msgstr "f = io.StringIO(\"några inledande textdata\")"

msgid ""
"When working with a non-blocking stream, be aware that read operations on "
"text I/O objects might raise a :exc:`BlockingIOError` if the stream cannot "
"perform the operation immediately."
msgstr ""
"När du arbetar med en icke-blockerande ström bör du vara medveten om att "
"läsoperationer på text-I/O-objekt kan ge upphov till ett :exc:"
"`BlockingIOError` om strömmen inte kan utföra operationen omedelbart."

msgid ""
"The text stream API is described in detail in the documentation of :class:"
"`TextIOBase`."
msgstr ""
"API:et för textströmmar beskrivs i detalj i dokumentationen för :class:"
"`TextIOBase`."

msgid "Binary I/O"
msgstr "Binär I/O"

msgid ""
"Binary I/O (also called *buffered I/O*) expects :term:`bytes-like objects "
"<bytes-like object>` and produces :class:`bytes` objects.  No encoding, "
"decoding, or newline translation is performed.  This category of streams can "
"be used for all kinds of non-text data, and also when manual control over "
"the handling of text data is desired."
msgstr ""
"Binär I/O (även kallad *buffrad I/O*) förväntar sig :term:`bytesliknande "
"objekt <bytes-like object>` och producerar :class:`bytes`-objekt.  Ingen "
"kodning, avkodning eller översättning av nya rader utförs.  Denna kategori "
"av strömmar kan användas för alla typer av data som inte är textdata och "
"även när manuell kontroll över hanteringen av textdata önskas."

msgid ""
"The easiest way to create a binary stream is with :meth:`open` with ``'b'`` "
"in the mode string::"
msgstr ""
"Det enklaste sättet att skapa en binär ström är med :meth:`open` med ``'b'`` "
"i läget string::"

msgid "f = open(\"myfile.jpg\", \"rb\")"
msgstr "f = open(\"minfil.jpg\", \"rb\")"

msgid ""
"In-memory binary streams are also available as :class:`BytesIO` objects::"
msgstr ""
"Binära strömmar i minnet finns också tillgängliga som :class:`BytesIO`-"
"objekt::"

msgid "f = io.BytesIO(b\"some initial binary data: \\x00\\x01\")"
msgstr "f = io.BytesIO(b\"några inledande binära data: \\x00\\x01\")"

msgid ""
"The binary stream API is described in detail in the docs of :class:"
"`BufferedIOBase`."
msgstr ""
"API:et för binära strömmar beskrivs i detalj i dokumentationen för :class:"
"`BufferedIOBase`."

msgid ""
"Other library modules may provide additional ways to create text or binary "
"streams.  See :meth:`socket.socket.makefile` for example."
msgstr ""
"Andra biblioteksmoduler kan tillhandahålla ytterligare sätt att skapa text- "
"eller binärströmmar.  Se :meth:`socket.socket.makefile` för exempel."

msgid "Raw I/O"
msgstr "Rå I/O"

msgid ""
"Raw I/O (also called *unbuffered I/O*) is generally used as a low-level "
"building-block for binary and text streams; it is rarely useful to directly "
"manipulate a raw stream from user code.  Nevertheless, you can create a raw "
"stream by opening a file in binary mode with buffering disabled::"
msgstr ""
"Raw I/O (även kallat *obuffrad I/O*) används i allmänhet som en "
"lågnivåbyggsten för binära strömmar och textströmmar; det är sällan "
"användbart att direkt manipulera en raw stream från användarkod.  Du kan "
"dock skapa en rå ström genom att öppna en fil i binärt läge med buffring "
"inaktiverad::"

msgid "f = open(\"myfile.jpg\", \"rb\", buffering=0)"
msgstr "f = open(\"myfile.jpg\", \"rb\", buffring=0)"

msgid ""
"The raw stream API is described in detail in the docs of :class:`RawIOBase`."
msgstr ""
"API:et för råa strömmar beskrivs i detalj i dokumentationen för :class:"
"`RawIOBase`."

msgid "Text Encoding"
msgstr "Teckenuppsättning"

msgid ""
"The default encoding of :class:`TextIOWrapper` and :func:`open` is locale-"
"specific (:func:`locale.getencoding`)."
msgstr ""
"Standardkodningen för :class:`TextIOWrapper` och :func:`open` är "
"lokalspecifik (:func:`locale.getencoding`)."

msgid ""
"However, many developers forget to specify the encoding when opening text "
"files encoded in UTF-8 (e.g. JSON, TOML, Markdown, etc...) since most Unix "
"platforms use UTF-8 locale by default. This causes bugs because the locale "
"encoding is not UTF-8 for most Windows users. For example::"
msgstr ""
"Många utvecklare glömmer dock att ange kodningen när de öppnar textfiler som "
"är kodade i UTF-8 (t.ex. JSON, TOML, Markdown, etc...) eftersom de flesta "
"Unix-plattformar använder UTF-8 locale som standard. Detta orsakar buggar "
"eftersom lokalkodningen inte är UTF-8 för de flesta Windows-användare. Till "
"exempel::"

msgid ""
"# May not work on Windows when non-ASCII characters in the file.\n"
"with open(\"README.md\") as f:\n"
"    long_description = f.read()"
msgstr ""
"# Fungerar kanske inte på Windows om det finns icke-ASCII-tecken i filen.\n"
"med open(\"README.md\") som f:\n"
"    long_description = f.read()"

msgid ""
"Accordingly, it is highly recommended that you specify the encoding "
"explicitly when opening text files. If you want to use UTF-8, pass "
"``encoding=\"utf-8\"``. To use the current locale encoding, "
"``encoding=\"locale\"`` is supported since Python 3.10."
msgstr ""
"Därför rekommenderar vi starkt att du anger kodningen explicit när du öppnar "
"textfiler. Om du vill använda UTF-8, skicka ``encoding=\"utf-8\"``. För att "
"använda den aktuella locale-kodningen stöds ``encoding=\"locale\"`` sedan "
"Python 3.10."

msgid ":ref:`utf8-mode`"
msgstr ":ref:`utf8-mode`"

msgid ""
"Python UTF-8 Mode can be used to change the default encoding to UTF-8 from "
"locale-specific encoding."
msgstr ""
"Python UTF-8 Mode kan användas för att ändra standardkodningen till UTF-8 "
"från lokalspecifik kodning."

msgid ":pep:`686`"
msgstr ":pep:`686``"

msgid "Python 3.15 will make :ref:`utf8-mode` default."
msgstr "Python 3.15 kommer att göra :ref:`utf8-mode` till standard."

msgid "Opt-in EncodingWarning"
msgstr "Opt-in-kodningVarning"

msgid "See :pep:`597` for more details."
msgstr "Se :pep:`597` för mer information."

msgid ""
"To find where the default locale encoding is used, you can enable the :"
"option:`-X warn_default_encoding <-X>` command line option or set the :"
"envvar:`PYTHONWARNDEFAULTENCODING` environment variable, which will emit an :"
"exc:`EncodingWarning` when the default encoding is used."
msgstr ""
"Om du vill veta var standardkodningen för lokala används kan du aktivera "
"kommandoradsalternativet :option:`-X warn_default_encoding <-X>` eller ange "
"miljövariabeln :envvar:`PYTHONWARNDEFAULTENCODING`, som skickar ut en :exc:"
"`EncodingWarning` när standardkodningen används."

msgid ""
"If you are providing an API that uses :func:`open` or :class:`TextIOWrapper` "
"and passes ``encoding=None`` as a parameter, you can use :func:"
"`text_encoding` so that callers of the API will emit an :exc:"
"`EncodingWarning` if they don't pass an ``encoding``. However, please "
"consider using UTF-8 by default (i.e. ``encoding=\"utf-8\"``) for new APIs."
msgstr ""
"Om du tillhandahåller ett API som använder :func:`open` eller :class:"
"`TextIOWrapper` och skickar ``encoding=None`` som en parameter, kan du "
"använda :func:`text_encoding` så att anropare av API:et skickar en :exc:"
"`EncodingWarning` om de inte skickar en ``encoding``. Överväg dock att "
"använda UTF-8 som standard (d.v.s. ``encoding=\"utf-8\"``) för nya API:er."

msgid "High-level Module Interface"
msgstr "Modulgränssnitt på hög nivå"

msgid ""
"An int containing the default buffer size used by the module's buffered I/O "
"classes.  :func:`open` uses the file's blksize (as obtained by :func:`os."
"stat`) if possible."
msgstr ""
"Ett int som innehåller den standardbuffertstorlek som används av modulens "
"buffrade I/O-klasser. :func:`open` använder filens blksize (som erhålls av :"
"func:`os.stat`) om möjligt."

msgid "This is an alias for the builtin :func:`open` function."
msgstr "Detta är ett alias för den inbyggda funktionen :func:`open`."

msgid ""
"This function raises an :ref:`auditing event <auditing>` ``open`` with "
"arguments *path*, *mode* and *flags*. The *mode* and *flags* arguments may "
"have been modified or inferred from the original call."
msgstr ""
"Den här funktionen startar en :ref:`auditing event <auditing>``open`` med "
"argumenten *path*, *mode* och *flags*. Argumenten *mode* och *flags* kan ha "
"ändrats eller härletts från det ursprungliga anropet."

msgid ""
"Opens the provided file with mode ``'rb'``. This function should be used "
"when the intent is to treat the contents as executable code."
msgstr ""
"Öppnar den angivna filen med läget ``'rb'``. Denna funktion bör användas när "
"avsikten är att behandla innehållet som körbar kod."

msgid "*path* should be a :class:`str` and an absolute path."
msgstr "*path* ska vara en :class:`str` och en absolut sökväg."

msgid ""
"The behavior of this function may be overridden by an earlier call to the :c:"
"func:`PyFile_SetOpenCodeHook`. However, assuming that *path* is a :class:"
"`str` and an absolute path, ``open_code(path)`` should always behave the "
"same as ``open(path, 'rb')``. Overriding the behavior is intended for "
"additional validation or preprocessing of the file."
msgstr ""
"Den här funktionens beteende kan åsidosättas av ett tidigare anrop till :c:"
"func:`PyFile_SetOpenCodeHook`. Men om man antar att *path* är en :class:"
"`str` och en absolut sökväg, bör ``open_code(path)`` alltid bete sig på "
"samma sätt som ``open(path, 'rb')``. Åsidosättande av beteendet är avsett "
"för ytterligare validering eller förbehandling av filen."

msgid ""
"This is a helper function for callables that use :func:`open` or :class:"
"`TextIOWrapper` and have an ``encoding=None`` parameter."
msgstr ""
"Detta är en hjälpfunktion för anropsbara filer som använder :func:`open` "
"eller :class:`TextIOWrapper` och som har en ``encoding=None`` parameter."

msgid ""
"This function returns *encoding* if it is not ``None``. Otherwise, it "
"returns ``\"locale\"`` or ``\"utf-8\"`` depending on :ref:`UTF-8 Mode <utf8-"
"mode>`."
msgstr ""
"Denna funktion returnerar *encoding* om den inte är ``None``. Annars "
"returnerar den ``\"locale\"`` eller ``\"utf-8\"`` beroende på :ref:`UTF-8 "
"Mode <utf8-mode>``."

msgid ""
"This function emits an :class:`EncodingWarning` if :data:`sys.flags."
"warn_default_encoding <sys.flags>` is true and *encoding* is ``None``. "
"*stacklevel* specifies where the warning is emitted. For example::"
msgstr ""
"Denna funktion skickar ut en :class:`EncodingWarning` om :data:`sys.flags."
"warn_default_encoding <sys.flags>` är true och *encoding* är ``None``. "
"*stacklevel* anger varifrån varningen skickas. Till exempel::"

msgid ""
"def read_text(path, encoding=None):\n"
"    encoding = io.text_encoding(encoding)  # stacklevel=2\n"
"    with open(path, encoding) as f:\n"
"        return f.read()"
msgstr ""
"def läs_text(sökväg, kodning=None):\n"
"    encoding = io.text_encoding(encoding) # stacklevel=2\n"
"    med open(sökväg, kodning) som f:\n"
"        return f.read()"

msgid ""
"In this example, an :class:`EncodingWarning` is emitted for the caller of "
"``read_text()``."
msgstr ""
"I det här exemplet skickas en :class:`EncodingWarning` ut till den som "
"anropar ``read_text()``."

msgid "See :ref:`io-text-encoding` for more information."
msgstr "Se :ref:`io-text-encoding` för mer information."

msgid ""
":func:`text_encoding` returns \"utf-8\" when UTF-8 mode is enabled and "
"*encoding* is ``None``."
msgstr ""
":func:`text_encoding` returnerar \"utf-8\" när UTF-8-läget är aktiverat och "
"*encoding* är ``None``."

msgid ""
"This is a compatibility alias for the builtin :exc:`BlockingIOError` "
"exception."
msgstr ""
"Detta är ett kompatibilitetsalias för det inbyggda undantaget :exc:"
"`BlockingIOError`."

msgid ""
"An exception inheriting :exc:`OSError` and :exc:`ValueError` that is raised "
"when an unsupported operation is called on a stream."
msgstr ""
"Ett undantag som ärver :exc:`OSError` och :exc:`ValueError` och som uppstår "
"när en operation som inte stöds anropas på en stream."

msgid ":mod:`sys`"
msgstr ":mod:`sys`"

msgid ""
"contains the standard IO streams: :data:`sys.stdin`, :data:`sys.stdout`, "
"and :data:`sys.stderr`."
msgstr ""
"innehåller de vanliga IO-strömmarna: :data:`sys.stdin`, :data:`sys.stdout` "
"och :data:`sys.stderr`."

msgid "Class hierarchy"
msgstr "Klasshierarki"

msgid ""
"The implementation of I/O streams is organized as a hierarchy of classes.  "
"First :term:`abstract base classes <abstract base class>` (ABCs), which are "
"used to specify the various categories of streams, then concrete classes "
"providing the standard stream implementations."
msgstr ""
"Implementeringen av I/O-strömmar är organiserad som en hierarki av klasser.  "
"Först :term:``abstrakta basklasser <abstract base class>` (ABC), som används "
"för att specificera de olika kategorierna av strömmar, sedan konkreta "
"klasser som tillhandahåller standardimplementeringarna av strömmar."

msgid ""
"The abstract base classes also provide default implementations of some "
"methods in order to help implementation of concrete stream classes.  For "
"example, :class:`BufferedIOBase` provides unoptimized implementations of :"
"meth:`!readinto` and :meth:`!readline`."
msgstr ""
"De abstrakta basklasserna tillhandahåller också standardimplementeringar av "
"vissa metoder för att underlätta implementeringen av konkreta strömklasser.  "
"Till exempel ger :class:`BufferedIOBase` ooptimerade implementationer av :"
"meth:`!readinto` och :meth:`!readline`."

msgid ""
"At the top of the I/O hierarchy is the abstract base class :class:`IOBase`.  "
"It defines the basic interface to a stream.  Note, however, that there is no "
"separation between reading and writing to streams; implementations are "
"allowed to raise :exc:`UnsupportedOperation` if they do not support a given "
"operation."
msgstr ""
"Överst i I/O-hierarkin finns den abstrakta basklassen :class:`IOBase`.  Den "
"definierar det grundläggande gränssnittet till en stream.  Observera dock "
"att det inte finns någon åtskillnad mellan att läsa och skriva till "
"strömmar; implementationer får höja :exc:`UnsupportedOperation` om de inte "
"stöder en viss operation."

msgid ""
"The :class:`RawIOBase` ABC extends :class:`IOBase`.  It deals with the "
"reading and writing of bytes to a stream.  :class:`FileIO` subclasses :class:"
"`RawIOBase` to provide an interface to files in the machine's file system."
msgstr ""
"ABC:n :class:`RawIOBase` utökar :class:`IOBase`.  Den hanterar läsning och "
"skrivning av bytes till en ström. :class:`FileIO` subklassar :class:"
"`RawIOBase` för att tillhandahålla ett gränssnitt till filer i maskinens "
"filsystem."

msgid ""
"The :class:`BufferedIOBase` ABC extends :class:`IOBase`.  It deals with "
"buffering on a raw binary stream (:class:`RawIOBase`).  Its subclasses, :"
"class:`BufferedWriter`, :class:`BufferedReader`, and :class:`BufferedRWPair` "
"buffer raw binary streams that are writable, readable, and both readable and "
"writable, respectively. :class:`BufferedRandom` provides a buffered "
"interface to seekable streams. Another :class:`BufferedIOBase` subclass, :"
"class:`BytesIO`, is a stream of in-memory bytes."
msgstr ""
"ABC för :class:`BufferedIOBase` utökar :class:`IOBase`.  Den hanterar "
"buffring på en rå binär ström (:class:`RawIOBase`).  Dess underklasser :"
"class:`BufferedWriter`, :class:`BufferedReader` och :class:`BufferedRWPair` "
"buffrar råa binära strömmar som är skrivbara, läsbara respektive både "
"läsbara och skrivbara. :class:`BufferedRandom` ger ett buffrat gränssnitt "
"till sökbara strömmar. En annan underklass till :class:`BufferedIOBase`, :"
"class:`BytesIO`, är en ström av bytes i minnet."

msgid ""
"The :class:`TextIOBase` ABC extends :class:`IOBase`.  It deals with streams "
"whose bytes represent text, and handles encoding and decoding to and from "
"strings.  :class:`TextIOWrapper`, which extends :class:`TextIOBase`, is a "
"buffered text interface to a buffered raw stream (:class:`BufferedIOBase`).  "
"Finally, :class:`StringIO` is an in-memory stream for text."
msgstr ""
"ABC:s :class:`TextIOBase` utökar :class:`IOBase`.  Den hanterar strömmar "
"vars bytes representerar text och hanterar kodning och avkodning till och "
"från strängar. :class:`TextIOWrapper`, som utökar :class:`TextIOBase`, är "
"ett buffrat textgränssnitt till en buffrad råström (:class:"
"`BufferedIOBase`).  Slutligen är :class:`StringIO` en minnesbaserad ström "
"för text."

msgid ""
"Argument names are not part of the specification, and only the arguments of :"
"func:`open` are intended to be used as keyword arguments."
msgstr ""
"Argumentnamn är inte en del av specifikationen, och endast argumenten i :"
"func:`open` är avsedda att användas som nyckelordsargument."

msgid ""
"The following table summarizes the ABCs provided by the :mod:`io` module:"
msgstr ""
"I följande tabell sammanfattas de ABC-kunskaper som tillhandahålls av "
"modulen :mod:`io`:"

msgid "ABC"
msgstr "ABC"

msgid "Inherits"
msgstr "Ärver"

msgid "Stub Methods"
msgstr "Stubbmetoder"

msgid "Mixin Methods and Properties"
msgstr "Mixin-metoder och -egenskaper"

msgid ":class:`IOBase`"
msgstr ":class:`IOBase`"

msgid "``fileno``, ``seek``, and ``truncate``"
msgstr "``fileno``, ``seek`` och ``truncate``"

msgid ""
"``close``, ``closed``, ``__enter__``, ``__exit__``, ``flush``, ``isatty``, "
"``__iter__``, ``__next__``, ``readable``, ``readline``, ``readlines``, "
"``seekable``, ``tell``, ``writable``, and ``writelines``"
msgstr ""
"``close``, ``closed``, ``__enter__``, ``__exit__``, ``flush``, ``isatty``, "
"``__iter__``, ``__next__``, ``readable``, ``readline``, ``readlines``, "
"``seekable``, ``tell``, ``writable`` och ``writelines``"

msgid ":class:`RawIOBase`"
msgstr ":class:`RawIOBase`"

msgid "``readinto`` and ``write``"
msgstr "\"läsa in i\" och \"skriva in i"

msgid "Inherited :class:`IOBase` methods, ``read``, and ``readall``"
msgstr "Ärvde :class:`IOBase`-metoder, ``read`` och ``readall``"

msgid ":class:`BufferedIOBase`"
msgstr ":class:`BufferedIOBase`"

msgid "``detach``, ``read``, ``read1``, and ``write``"
msgstr "``detach``, ``read``, ``read1`` och ``write``"

msgid "Inherited :class:`IOBase` methods, ``readinto``, and ``readinto1``"
msgstr "Ärvda :class:`IOBase`-metoder, ``readinto`` och ``readinto1``"

msgid ":class:`TextIOBase`"
msgstr ":class:`TextIOBase`"

msgid "``detach``, ``read``, ``readline``, and ``write``"
msgstr "``detach``, ``read``, ``readline`` och ``write``"

msgid ""
"Inherited :class:`IOBase` methods, ``encoding``, ``errors``, and ``newlines``"
msgstr ""
"Ärvde :class:`IOBase` metoder, ``encoding``, ``errors`` och ``newlines``"

msgid "I/O Base Classes"
msgstr "I/O-basklasser"

msgid "The abstract base class for all I/O classes."
msgstr "Den abstrakta basklassen för alla I/O-klasser."

msgid ""
"This class provides empty abstract implementations for many methods that "
"derived classes can override selectively; the default implementations "
"represent a file that cannot be read, written or seeked."
msgstr ""
"Denna klass tillhandahåller tomma abstrakta implementeringar för många "
"metoder som härledda klasser kan åsidosätta selektivt; "
"standardimplementeringarna representerar en fil som inte kan läsas, skrivas "
"eller sökas."

msgid ""
"Even though :class:`IOBase` does not declare :meth:`!read` or :meth:`!write` "
"because their signatures will vary, implementations and clients should "
"consider those methods part of the interface.  Also, implementations may "
"raise a :exc:`ValueError` (or :exc:`UnsupportedOperation`) when operations "
"they do not support are called."
msgstr ""
"Även om :class:`IOBase` inte deklarerar :meth:`!read` eller :meth:`!write` "
"eftersom deras signaturer kommer att variera, bör implementationer och "
"klienter betrakta dessa metoder som en del av gränssnittet.  "
"Implementationer kan också ge upphov till ett :exc:`ValueError` (eller :exc:"
"`UnsupportedOperation`) när operationer som de inte stöder anropas."

msgid ""
"The basic type used for binary data read from or written to a file is :class:"
"`bytes`.  Other :term:`bytes-like objects <bytes-like object>` are accepted "
"as method arguments too.  Text I/O classes work with :class:`str` data."
msgstr ""
"Den grundläggande typen som används för binära data som läses från eller "
"skrivs till en fil är :class:`bytes`.  Andra :term:`bytes-liknande objekt "
"<bytes-like object>` accepteras också som metodargument.  Text-I/O-klasser "
"arbetar med :class:`str`-data."

msgid ""
"Note that calling any method (even inquiries) on a closed stream is "
"undefined.  Implementations may raise :exc:`ValueError` in this case."
msgstr ""
"Observera att anrop av någon metod (även förfrågningar) på en stängd ström "
"är odefinierat.  Implementationer kan ge upphov till :exc:`ValueError` i "
"detta fall."

msgid ""
":class:`IOBase` (and its subclasses) supports the iterator protocol, meaning "
"that an :class:`IOBase` object can be iterated over yielding the lines in a "
"stream.  Lines are defined slightly differently depending on whether the "
"stream is a binary stream (yielding bytes), or a text stream (yielding "
"character strings).  See :meth:`~IOBase.readline` below."
msgstr ""
":class:`IOBase` (och dess underklasser) stöder iteratorprotokollet, vilket "
"innebär att ett :class:`IOBase`-objekt kan itereras över, vilket ger raderna "
"i en ström.  Rader definieras något olika beroende på om strömmen är en "
"binär ström (ger bytes) eller en textström (ger teckensträngar).  Se :meth:"
"`~IOBase.readline` nedan."

msgid ""
":class:`IOBase` is also a context manager and therefore supports the :"
"keyword:`with` statement.  In this example, *file* is closed after the :"
"keyword:`!with` statement's suite is finished---even if an exception occurs::"
msgstr ""
":class:`IOBase` är också en kontexthanterare och stöder därför :keyword:"
"`with`-satsen.  I det här exemplet stängs *fil* efter att :keyword:`!with`-"
"satsens svit är klar - även om ett undantag inträffar::"

msgid ""
"with open('spam.txt', 'w') as file:\n"
"    file.write('Spam and eggs!')"
msgstr ""
"med open('spam.txt', 'w') som fil:\n"
"    file.write(\"Skräppost och ägg!\")"

msgid ":class:`IOBase` provides these data attributes and methods:"
msgstr ":class:`IOBase` tillhandahåller dessa dataattribut och metoder:"

msgid ""
"Flush and close this stream. This method has no effect if the file is "
"already closed. Once the file is closed, any operation on the file (e.g. "
"reading or writing) will raise a :exc:`ValueError`."
msgstr ""
"Spola och stäng denna ström. Denna metod har ingen effekt om filen redan är "
"stängd. När filen är stängd kommer alla operationer på filen (t.ex. läsning "
"eller skrivning) att ge upphov till ett :exc:`ValueError`."

msgid ""
"As a convenience, it is allowed to call this method more than once; only the "
"first call, however, will have an effect."
msgstr ""
"Som en bekvämlighet är det tillåtet att anropa denna metod mer än en gång; "
"endast det första anropet kommer dock att ha en effekt."

msgid "``True`` if the stream is closed."
msgstr "``True`` om strömmen är stängd."

msgid ""
"Return the underlying file descriptor (an integer) of the stream if it "
"exists.  An :exc:`OSError` is raised if the IO object does not use a file "
"descriptor."
msgstr ""
"Returnerar den underliggande filbeskrivaren (ett heltal) för strömmen om den "
"finns.  Ett :exc:`OSError` uppstår om IO-objektet inte använder en "
"fildeskriptor."

msgid ""
"Flush the write buffers of the stream if applicable.  This does nothing for "
"read-only and non-blocking streams."
msgstr ""
"Töm skrivbuffertarna i strömmen om tillämpligt.  Detta gör ingenting för "
"skrivskyddade och icke-blockerande strömmar."

msgid ""
"Return ``True`` if the stream is interactive (i.e., connected to a terminal/"
"tty device)."
msgstr ""
"Returnerar ``True`` om strömmen är interaktiv (d.v.s. ansluten till en "
"terminal/tty-enhet)."

msgid ""
"Return ``True`` if the stream can be read from. If ``False``, :meth:`!read` "
"will raise :exc:`OSError`."
msgstr ""
"Returnerar ``True`` om strömmen kan läsas från. Om ``False``, kommer :meth:`!"
"read` att ge upphov till :exc:`OSError`."

msgid ""
"Read and return one line from the stream.  If *size* is specified, at most "
"*size* bytes will be read."
msgstr ""
"Läser och returnerar en rad från strömmen.  Om *size* anges kommer högst "
"*size* byte att läsas."

msgid ""
"The line terminator is always ``b'\\n'`` for binary files; for text files, "
"the *newline* argument to :func:`open` can be used to select the line "
"terminator(s) recognized."
msgstr ""
"Radavslutaren är alltid ``b'\\n'`` för binära filer; för textfiler kan "
"argumentet *newline* till :func:`open` användas för att välja den eller de "
"radavslutare som ska identifieras."

msgid ""
"Read and return a list of lines from the stream.  *hint* can be specified to "
"control the number of lines read: no more lines will be read if the total "
"size (in bytes/characters) of all lines so far exceeds *hint*."
msgstr ""
"Läser och returnerar en lista med rader från strömmen.  *hint* kan anges för "
"att styra antalet rader som läses: inga fler rader läses om den totala "
"storleken (i byte/tecken) på alla rader hittills överstiger *hint*."

msgid ""
"*hint* values of ``0`` or less, as well as ``None``, are treated as no hint."
msgstr ""
"*hint*-värden på ``0`` eller mindre, liksom ``None``, behandlas som ingen "
"hint."

msgid ""
"Note that it's already possible to iterate on file objects using ``for line "
"in file: ...`` without calling :meth:`!file.readlines`."
msgstr ""
"Observera att det redan är möjligt att iterera på filobjekt med ``for line "
"in file: ...`` utan att anropa :meth:`!file.readlines`."

msgid ""
"Change the stream position to the given byte *offset*, interpreted relative "
"to the position indicated by *whence*, and return the new absolute position. "
"Values for *whence* are:"
msgstr ""
"Ändra strömpositionen till den angivna byten *offset*, tolkad relativt den "
"position som anges av *whence*, och returnera den nya absoluta positionen. "
"Värden för *whence* är:"

msgid ""
":data:`os.SEEK_SET` or ``0`` -- start of the stream (the default); *offset* "
"should be zero or positive"
msgstr ""
":data:`os.SEEK_SET` eller ``0`` -- början på strömmen (standard); *offset* "
"ska vara noll eller positiv"

msgid ""
":data:`os.SEEK_CUR` or ``1`` -- current stream position; *offset* may be "
"negative"
msgstr ""
":data:`os.SEEK_CUR` eller ``1`` -- aktuell strömposition; *offset* kan vara "
"negativ"

msgid ""
":data:`os.SEEK_END` or ``2`` -- end of the stream; *offset* is usually "
"negative"
msgstr ""
":data:`os.SEEK_END` eller ``2`` -- slutet på strömmen; *offset* är "
"vanligtvis negativ"

msgid "The :data:`!SEEK_*` constants."
msgstr "Konstanterna :data:`!SEEK_*`."

msgid ""
"Some operating systems could support additional values, like :const:`os."
"SEEK_HOLE` or :const:`os.SEEK_DATA`. The valid values for a file could "
"depend on it being open in text or binary mode."
msgstr ""
"Vissa operativsystem kan stödja ytterligare värden, t.ex. :const:`os."
"SEEK_HOLE` eller :const:`os.SEEK_DATA`. Vilka värden som är giltiga för en "
"fil kan bero på om den öppnas i text- eller binärläge."

msgid ""
"Return ``True`` if the stream supports random access.  If ``False``, :meth:"
"`seek`, :meth:`tell` and :meth:`truncate` will raise :exc:`OSError`."
msgstr ""
"Returnerar ``True`` om strömmen stöder slumpmässig åtkomst.  Om ``False``, "
"kommer :meth:`seek`, :meth:`tell` och :meth:`truncate` att ge upphov till :"
"exc:`OSError`."

msgid "Return the current stream position."
msgstr "Returnerar den aktuella positionen för strömmen."

msgid ""
"Resize the stream to the given *size* in bytes (or the current position if "
"*size* is not specified).  The current stream position isn't changed. This "
"resizing can extend or reduce the current file size.  In case of extension, "
"the contents of the new file area depend on the platform (on most systems, "
"additional bytes are zero-filled).  The new file size is returned."
msgstr ""
"Ändra storlek på strömmen till den angivna *storleken* i byte (eller den "
"aktuella positionen om *storleken* inte anges).  Den aktuella "
"strömpositionen ändras inte. Denna storleksändring kan utöka eller minska "
"den aktuella filstorleken.  Vid utökning beror innehållet i det nya "
"filområdet på plattformen (på de flesta system är ytterligare byte "
"nollfyllda).  Den nya filstorleken returneras."

msgid "Windows will now zero-fill files when extending."
msgstr "Windows nollfyller nu filer vid förlängning."

msgid ""
"Return ``True`` if the stream supports writing.  If ``False``, :meth:`!"
"write` and :meth:`truncate` will raise :exc:`OSError`."
msgstr ""
"Returnerar ``True`` om strömmen stöder skrivning.  Om ``False``, kommer :"
"meth:`!write` och :meth:`truncate` att ge upphov till :exc:`OSError`."

msgid ""
"Write a list of lines to the stream.  Line separators are not added, so it "
"is usual for each of the lines provided to have a line separator at the end."
msgstr ""
"Skriv en lista med rader till strömmen.  Radavgränsare läggs inte till, så "
"det är vanligt att varje rad som tillhandahålls har en radavgränsare i "
"slutet."

msgid ""
"Prepare for object destruction. :class:`IOBase` provides a default "
"implementation of this method that calls the instance's :meth:`~IOBase."
"close` method."
msgstr ""
"Förbered för destruktion av objektet. :class:`IOBase` tillhandahåller en "
"standardimplementering av denna metod som anropar instansens :meth:`~IOBase."
"close`-metod."

msgid "Base class for raw binary streams.  It inherits from :class:`IOBase`."
msgstr "Basklass för råa binära strömmar.  Den ärver från :class:`IOBase`."

msgid ""
"Raw binary streams typically provide low-level access to an underlying OS "
"device or API, and do not try to encapsulate it in high-level primitives "
"(this functionality is done at a higher-level in buffered binary streams and "
"text streams, described later in this page)."
msgstr ""
"Råa binära strömmar ger vanligtvis åtkomst på låg nivå till en underliggande "
"OS-enhet eller API och försöker inte kapsla in den i primitiver på hög nivå "
"(denna funktionalitet görs på en högre nivå i buffrade binära strömmar och "
"textströmmar, som beskrivs senare på den här sidan)."

msgid ""
":class:`RawIOBase` provides these methods in addition to those from :class:"
"`IOBase`:"
msgstr ""
":class:`RawIOBase` tillhandahåller dessa metoder utöver dem från :class:"
"`IOBase`:"

msgid ""
"Read up to *size* bytes from the object and return them.  As a convenience, "
"if *size* is unspecified or -1, all bytes until EOF are returned. Otherwise, "
"only one system call is ever made.  Fewer than *size* bytes may be returned "
"if the operating system call returns fewer than *size* bytes."
msgstr ""
"Läser upp till *size* bytes från objektet och returnerar dem.  Om *size* är "
"ospecificerad eller -1 returneras alla byte fram till EOF, som en "
"bekvämlighetsåtgärd. I annat fall görs bara ett enda systemanrop.  Färre än "
"*size* byte kan returneras om operativsystemets anrop returnerar färre än "
"*size* byte."

msgid ""
"If 0 bytes are returned, and *size* was not 0, this indicates end of file. "
"If the object is in non-blocking mode and no bytes are available, ``None`` "
"is returned."
msgstr ""
"Om 0 byte returneras och *size* inte var 0, indikerar detta slutet på filen. "
"Om objektet är i icke-blockerande läge och inga byte är tillgängliga "
"returneras ``None``."

msgid ""
"The default implementation defers to :meth:`readall` and :meth:`readinto`."
msgstr ""
"Standardimplementeringen hänvisar till :meth:`readall` och :meth:`readinto`."

msgid ""
"Read and return all the bytes from the stream until EOF, using multiple "
"calls to the stream if necessary."
msgstr ""
"Läs och returnera alla bytes från strömmen till EOF, med flera anrop till "
"strömmen om det behövs."

msgid ""
"Read bytes into a pre-allocated, writable :term:`bytes-like object` *b*, and "
"return the number of bytes read.  For example, *b* might be a :class:"
"`bytearray`. If the object is in non-blocking mode and no bytes are "
"available, ``None`` is returned."
msgstr ""
"Läser in byte i ett förallokerat, skrivbart :term:`bytesliknande objekt` "
"*b*, och returnerar antalet lästa byte.  Till exempel kan *b* vara en :class:"
"`bytearray`. Om objektet är i icke-blockerande läge och inga bytes är "
"tillgängliga returneras ``None``."

msgid ""
"Write the given :term:`bytes-like object`, *b*, to the underlying raw "
"stream, and return the number of bytes written.  This can be less than the "
"length of *b* in bytes, depending on specifics of the underlying raw stream, "
"and especially if it is in non-blocking mode.  ``None`` is returned if the "
"raw stream is set not to block and no single byte could be readily written "
"to it.  The caller may release or mutate *b* after this method returns, so "
"the implementation should only access *b* during the method call."
msgstr ""
"Skriver det angivna :term:`bytesliknande objektet`, *b*, till den "
"underliggande råströmmen och returnerar antalet bytes som skrivits.  Detta "
"kan vara mindre än längden på *b* i byte, beroende på detaljerna i den "
"underliggande råströmmen, och särskilt om den är i icke-blockerande läge.  "
"``None`` returneras om råströmmen är inställd på att inte blockera och ingen "
"enskild byte lätt kan skrivas till den.  Den som anropar kan frigöra eller "
"mutera *b* efter att denna metod returnerats, så implementationen bör endast "
"komma åt *b* under metodanropet."

msgid ""
"Base class for binary streams that support some kind of buffering. It "
"inherits from :class:`IOBase`."
msgstr ""
"Basklass för binära strömmar som stöder någon form av buffring. Den ärver "
"från :class:`IOBase`."

msgid ""
"The main difference with :class:`RawIOBase` is that methods :meth:`read`, :"
"meth:`readinto` and :meth:`write` will try (respectively) to read as much "
"input as requested or to emit all provided data."
msgstr ""
"Den största skillnaden med :class:`RawIOBase` är att metoderna :meth:"
"`read`, :meth:`readinto` och :meth:`write` försöker (respektive) läsa så "
"mycket indata som begärs eller att skicka ut all data som tillhandahålls."

msgid ""
"In addition, if the underlying raw stream is in non-blocking mode, when the "
"system returns would block :meth:`write` will raise :exc:`BlockingIOError` "
"with :attr:`BlockingIOError.characters_written` and :meth:`read` will return "
"data read so far or ``None`` if no data is available."
msgstr ""
"Dessutom, om den underliggande råströmmen är i icke-blockerande läge, när "
"systemet återgår skulle blockera :meth:`write` kommer att ge upphov till :"
"exc:`BlockingIOError` med :attr:`BlockingIOError.characters_written` och :"
"meth:`read` kommer att returnera data som lästs hittills eller ``None`` om "
"inga data finns tillgängliga."

msgid ""
"Besides, the :meth:`read` method does not have a default implementation that "
"defers to :meth:`readinto`."
msgstr ""
"Dessutom har metoden :meth:`read` inte någon standardimplementering som "
"hänvisar till :meth:`readinto`."

msgid ""
"A typical :class:`BufferedIOBase` implementation should not inherit from a :"
"class:`RawIOBase` implementation, but wrap one, like :class:`BufferedWriter` "
"and :class:`BufferedReader` do."
msgstr ""
"En typisk :class:`BufferedIOBase`-implementation bör inte ärva från en :"
"class:`RawIOBase`-implementation, utan omsluta en sådan, som :class:"
"`BufferedWriter` och :class:`BufferedReader` gör."

msgid ""
":class:`BufferedIOBase` provides or overrides these data attributes and "
"methods in addition to those from :class:`IOBase`:"
msgstr ""
":class:`BufferedIOBase` tillhandahåller eller åsidosätter dessa dataattribut "
"och metoder utöver dem från :class:`IOBase`:"

msgid ""
"The underlying raw stream (a :class:`RawIOBase` instance) that :class:"
"`BufferedIOBase` deals with.  This is not part of the :class:"
"`BufferedIOBase` API and may not exist on some implementations."
msgstr ""
"Den underliggande råströmmen (en :class:`RawIOBase`-instans) som :class:"
"`BufferedIOBase` hanterar.  Detta är inte en del av :class:`BufferedIOBase` "
"API och kanske inte existerar i vissa implementationer."

msgid "Separate the underlying raw stream from the buffer and return it."
msgstr ""
"Separera den underliggande råströmmen från bufferten och returnera den."

msgid ""
"After the raw stream has been detached, the buffer is in an unusable state."
msgstr ""
"Efter att råströmmen har kopplats bort är bufferten i ett oanvändbart "
"tillstånd."

msgid ""
"Some buffers, like :class:`BytesIO`, do not have the concept of a single raw "
"stream to return from this method.  They raise :exc:`UnsupportedOperation`."
msgstr ""
"Vissa buffertar, som :class:`BytesIO`, har inte konceptet med en enda rå "
"ström att returnera från den här metoden.  De ger upphov till :exc:"
"`UnsupportedOperation`."

msgid ""
"Read and return up to *size* bytes. If the argument is omitted, ``None``, or "
"negative read as much as possible."
msgstr ""
"Läser och returnerar upp till *size* bytes. Om argumentet utelämnas, "
"``None``, eller negativ läs så mycket som möjligt."

msgid ""
"Fewer bytes may be returned than requested. An empty :class:`bytes` object "
"is returned if the stream is already at EOF. More than one read may be made "
"and calls may be retried if specific errors are encountered, see :meth:`os."
"read` and :pep:`475` for more details. Less than size bytes being returned "
"does not imply that EOF is imminent."
msgstr ""
"Färre bytes kan returneras än vad som begärts. Ett tomt :class:`bytes`-"
"objekt returneras om strömmen redan är vid EOF. Mer än en läsning kan göras "
"och anrop kan göras om om specifika fel påträffas, se :meth:`os.read` och :"
"pep:`475` för mer information. Att mindre än en byte returneras betyder inte "
"att EOF är nära förestående."

msgid ""
"When reading as much as possible the default implementation will use ``raw."
"readall`` if available (which should implement :meth:`RawIOBase.readall`), "
"otherwise will read in a loop until read returns ``None``, an empty :class:"
"`bytes`, or a non-retryable error. For most streams this is to EOF, but for "
"non-blocking streams more data may become available."
msgstr ""
"När man läser så mycket som möjligt kommer standardimplementationen att "
"använda ``raw.readall`` om det finns tillgängligt (vilket bör implementera :"
"meth:`RawIOBase.readall``), annars kommer den att läsa i en loop tills read "
"returnerar ``None``, en tom :class:`bytes`, eller ett fel som inte kan "
"retireras. För de flesta flöden är detta till EOF, men för icke-blockerande "
"flöden kan mer data bli tillgänglig."

msgid ""
"When the underlying raw stream is non-blocking, implementations may either "
"raise :exc:`BlockingIOError` or return ``None`` if no data is available. :"
"mod:`io` implementations return ``None``."
msgstr ""
"När den underliggande råströmmen är icke-blockerande kan implementationer "
"antingen ge upphov till :exc:`BlockingIOError` eller returnera ``None`` om "
"inga data finns tillgängliga. :mod:`io`-implementationer returnerar ``None``."

msgid ""
"Read and return up to *size* bytes, calling :meth:`~RawIOBase.readinto` "
"which may retry if :py:const:`~errno.EINTR` is encountered per :pep:`475`. "
"If *size* is ``-1`` or not provided, the implementation will choose an "
"arbitrary value for *size*."
msgstr ""
"Läser och returnerar upp till *size* bytes, anropar :meth:`~RawIOBase."
"readinto` som kan försöka igen om :py:const:`~errno.EINTR` påträffas enligt :"
"pep:`475`. Om *size* är ``-1`` eller inte tillhandahålls, kommer "
"implementationen att välja ett godtyckligt värde för *size*."

msgid ""
"Read bytes into a pre-allocated, writable :term:`bytes-like object` *b* and "
"return the number of bytes read. For example, *b* might be a :class:"
"`bytearray`."
msgstr ""
"Läser in bytes i ett förallokerat, skrivbart :term:`bytesliknande objekt` "
"*b* och returnerar antalet lästa bytes. Till exempel kan *b* vara en :class:"
"`bytearray`."

msgid ""
"Like :meth:`read`, multiple reads may be issued to the underlying raw "
"stream, unless the latter is interactive."
msgstr ""
"Liksom :meth:`read` kan flera läsningar göras av den underliggande "
"råströmmen, såvida inte den senare är interaktiv."

msgid ""
"A :exc:`BlockingIOError` is raised if the underlying raw stream is in non "
"blocking-mode, and has no data available at the moment."
msgstr ""
"Ett :exc:`BlockingIOError` uppstår om den underliggande råströmmen är i icke-"
"blockerande läge och inte har några data tillgängliga för tillfället."

msgid ""
"Read bytes into a pre-allocated, writable :term:`bytes-like object` *b*, "
"using at most one call to the underlying raw stream's :meth:`~RawIOBase."
"read` (or :meth:`~RawIOBase.readinto`) method. Return the number of bytes "
"read."
msgstr ""
"Läser in bytes i ett förallokerat, skrivbart :term:`bytesliknande objekt` "
"*b*, med högst ett anrop till den underliggande råströmmens :meth:"
"`~RawIOBase.read` (eller :meth:`~RawIOBase.readinto`) metod. Returnerar "
"antalet lästa byte."

msgid ""
"Write the given :term:`bytes-like object`, *b*, and return the number of "
"bytes written (always equal to the length of *b* in bytes, since if the "
"write fails an :exc:`OSError` will be raised).  Depending on the actual "
"implementation, these bytes may be readily written to the underlying stream, "
"or held in a buffer for performance and latency reasons."
msgstr ""
"Skriv det angivna :term:`bytesliknande objektet`, *b*, och returnera antalet "
"skrivna bytes (alltid lika med längden på *b* i bytes, eftersom om "
"skrivningen misslyckas kommer ett :exc:`OSError` att uppstå).  Beroende på "
"den faktiska implementationen kan dessa byte skrivas direkt till den "
"underliggande strömmen eller hållas i en buffert av prestanda- och "
"latensskäl."

msgid ""
"When in non-blocking mode, a :exc:`BlockingIOError` is raised if the data "
"needed to be written to the raw stream but it couldn't accept all the data "
"without blocking."
msgstr ""
"I icke-blockerande läge uppstår ett :exc:`BlockingIOError` om data behöver "
"skrivas till råströmmen men den inte kan ta emot all data utan att blockera."

msgid ""
"The caller may release or mutate *b* after this method returns, so the "
"implementation should only access *b* during the method call."
msgstr ""
"Anroparen kan frigöra eller mutera *b* efter att denna metod har "
"returnerats, så implementationen bör endast komma åt *b* under metodanropet."

msgid "Raw File I/O"
msgstr "I/O för rå fil"

msgid ""
"A raw binary stream representing an OS-level file containing bytes data.  It "
"inherits from :class:`RawIOBase`."
msgstr ""
"En rå binär ström som representerar en fil på OS-nivå som innehåller "
"bytesdata.  Den ärver från :class:`RawIOBase`."

msgid "The *name* can be one of two things:"
msgstr "*Namnet* kan vara en av två saker:"

msgid ""
"a character string or :class:`bytes` object representing the path to the "
"file which will be opened. In this case closefd must be ``True`` (the "
"default) otherwise an error will be raised."
msgstr ""
"en teckensträng eller ett :class:`bytes`-objekt som representerar sökvägen "
"till den fil som ska öppnas. I detta fall måste closefd vara ``True`` "
"(standard) annars kommer ett fel att uppstå."

msgid ""
"an integer representing the number of an existing OS-level file descriptor "
"to which the resulting :class:`FileIO` object will give access. When the "
"FileIO object is closed this fd will be closed as well, unless *closefd* is "
"set to ``False``."
msgstr ""
"ett heltal som representerar numret på en befintlig filbeskrivare på OS-nivå "
"som det resulterande :class:`FileIO`-objektet kommer att ge tillgång till. "
"När FileIO-objektet stängs kommer även denna fd att stängas, såvida inte "
"*closefd* är satt till ``False``."

msgid ""
"The *mode* can be ``'r'``, ``'w'``, ``'x'`` or ``'a'`` for reading "
"(default), writing, exclusive creation or appending. The file will be "
"created if it doesn't exist when opened for writing or appending; it will be "
"truncated when opened for writing. :exc:`FileExistsError` will be raised if "
"it already exists when opened for creating. Opening a file for creating "
"implies writing, so this mode behaves in a similar way to ``'w'``. Add a "
"``'+'`` to the mode to allow simultaneous reading and writing."
msgstr ""
"*mode* kan vara ``'r'``, ``'w'``, ``'x'`` eller ``'a'`` för läsning "
"(standard), skrivning, exklusivt skapande eller appending. Filen kommer att "
"skapas om den inte existerar när den öppnas för att skrivas eller läggas "
"till; den kommer att avkortas när den öppnas för att skrivas. :exc:"
"`FileExistsError` kommer att uppstå om den redan existerar när den öppnas "
"för att skapas. Att öppna en fil för skapande innebär skrivning, så detta "
"läge beter sig på ett liknande sätt som ``'w'``. Lägg till ett ``'+'`` till "
"läget för att tillåta samtidig läsning och skrivning."

msgid ""
"The :meth:`~RawIOBase.read` (when called with a positive argument), :meth:"
"`~RawIOBase.readinto` and :meth:`~RawIOBase.write` methods on this class "
"will only make one system call."
msgstr ""
"Metoderna :meth:`~RawIOBase.read` (när de anropas med ett positivt "
"argument), :meth:`~RawIOBase.readinto` och :meth:`~RawIOBase.write` för "
"denna klass kommer endast att göra ett systemanrop."

msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*name*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"En anpassad öppnare kan användas genom att skicka en callable som *opener*. "
"Den underliggande filbeskrivaren för filobjektet erhålls sedan genom att "
"anropa *opener* med (*name*, *flags*). *opener* måste returnera en öppen "
"filbeskrivare (att skicka :mod:`os.open` som *opener* resulterar i "
"funktionalitet som liknar att skicka ``None``)."

msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "Den nyskapade filen är :ref:`icke-ärftlig <fd_inheritance>`."

msgid ""
"See the :func:`open` built-in function for examples on using the *opener* "
"parameter."
msgstr ""
"Se den inbyggda funktionen :func:`open` för exempel på hur parametern "
"*opener* kan användas."

msgid "The *opener* parameter was added. The ``'x'`` mode was added."
msgstr "Parametern *opener* lades till. Läget ``'x'`` lades till."

msgid "The file is now non-inheritable."
msgstr "Filen är nu inte ärftlig."

msgid ""
":class:`FileIO` provides these data attributes in addition to those from :"
"class:`RawIOBase` and :class:`IOBase`:"
msgstr ""
":class:`FileIO` tillhandahåller dessa dataattribut i tillägg till dem från :"
"class:`RawIOBase` och :class:`IOBase`:"

msgid "The mode as given in the constructor."
msgstr "Det läge som anges i konstruktören."

msgid ""
"The file name.  This is the file descriptor of the file when no name is "
"given in the constructor."
msgstr ""
"Filens namn.  Detta är filbeskrivningen för filen om inget namn anges i "
"konstruktorn."

msgid "Buffered Streams"
msgstr "Buffrade vattendrag"

msgid ""
"Buffered I/O streams provide a higher-level interface to an I/O device than "
"raw I/O does."
msgstr ""
"Buffrade I/O-strömmar ger ett gränssnitt på högre nivå till en I/O-enhet än "
"vad rå I/O gör."

msgid ""
"A binary stream using an in-memory bytes buffer.  It inherits from :class:"
"`BufferedIOBase`.  The buffer is discarded when the :meth:`~IOBase.close` "
"method is called."
msgstr ""
"En binär ström som använder en bytesbuffert i minnet.  Den ärver från :class:"
"`BufferedIOBase`.  Bufferten kasseras när metoden :meth:`~IOBase.close` "
"anropas."

msgid ""
"The optional argument *initial_bytes* is a :term:`bytes-like object` that "
"contains initial data."
msgstr ""
"Det valfria argumentet *initial_bytes* är ett :term:`bytesliknande objekt` "
"som innehåller initialdata."

msgid ""
":class:`BytesIO` provides or overrides these methods in addition to those "
"from :class:`BufferedIOBase` and :class:`IOBase`:"
msgstr ""
":class:`BytesIO` tillhandahåller eller åsidosätter dessa metoder utöver dem "
"från :class:`BufferedIOBase` och :class:`IOBase`:"

msgid ""
"Return a readable and writable view over the contents of the buffer without "
"copying them.  Also, mutating the view will transparently update the "
"contents of the buffer::"
msgstr ""
"Returnerar en läsbar och skrivbar vy över innehållet i bufferten utan att "
"kopiera det.  Om du ändrar vyn kommer du också att uppdatera innehållet i "
"bufferten på ett transparent sätt::"

msgid ""
">>> b = io.BytesIO(b\"abcdef\")\n"
">>> view = b.getbuffer()\n"
">>> view[2:4] = b\"56\"\n"
">>> b.getvalue()\n"
"b'ab56ef'"
msgstr ""
">>> b = io.BytesIO(b\"abcdef\")\n"
">>> vy = b.hämta buffert()\n"
">>> vy[2:4] = b\"56\"\n"
">>> b.getvalue()\n"
"b'ab56ef'"

msgid ""
"As long as the view exists, the :class:`BytesIO` object cannot be resized or "
"closed."
msgstr ""
"Så länge vyn finns kan objektet :class:`BytesIO` inte ändras i storlek eller "
"stängas."

msgid "Return :class:`bytes` containing the entire contents of the buffer."
msgstr "Returnerar :class:`bytes` som innehåller hela innehållet i bufferten."

msgid "In :class:`BytesIO`, this is the same as :meth:`~BufferedIOBase.read`."
msgstr ""
"I :class:`BytesIO` är detta samma sak som :meth:`~BufferedIOBase.read`."

msgid "The *size* argument is now optional."
msgstr "Argumentet *size* är nu valfritt."

msgid ""
"In :class:`BytesIO`, this is the same as :meth:`~BufferedIOBase.readinto`."
msgstr ""
"I :class:`BytesIO` är detta samma sak som :meth:`~BufferedIOBase.readinto`."

msgid ""
"A buffered binary stream providing higher-level access to a readable, non "
"seekable :class:`RawIOBase` raw binary stream.  It inherits from :class:"
"`BufferedIOBase`."
msgstr ""
"En buffrad binär ström som ger tillgång på högre nivå till en läsbar, icke "
"sökbar :class:`RawIOBase` rå binär ström.  Den ärver från :class:"
"`BufferedIOBase`."

msgid ""
"When reading data from this object, a larger amount of data may be requested "
"from the underlying raw stream, and kept in an internal buffer. The buffered "
"data can then be returned directly on subsequent reads."
msgstr ""
"När data läses från detta objekt kan en större mängd data begäras från den "
"underliggande råströmmen och förvaras i en intern buffert. Den buffrade "
"datan kan sedan returneras direkt vid efterföljande läsningar."

msgid ""
"The constructor creates a :class:`BufferedReader` for the given readable "
"*raw* stream and *buffer_size*.  If *buffer_size* is omitted, :data:"
"`DEFAULT_BUFFER_SIZE` is used."
msgstr ""
"Konstruktorn skapar en :class:`BufferedReader` för den givna läsbara *raw*-"
"strömmen och *buffer_size*.  Om *buffer_size* utelämnas används :data:"
"`DEFAULT_BUFFER_SIZE`."

msgid ""
":class:`BufferedReader` provides or overrides these methods in addition to "
"those from :class:`BufferedIOBase` and :class:`IOBase`:"
msgstr ""
":class:`BufferedReader` tillhandahåller eller åsidosätter dessa metoder "
"utöver dem från :class:`BufferedIOBase` och :class:`IOBase`:"

msgid ""
"Return bytes from the stream without advancing the position. The number of "
"bytes returned may be less or more than requested. If the underlying raw "
"stream is non-blocking and the operation would block, returns empty bytes."
msgstr ""
"Returnerar byte från strömmen utan att flytta fram positionen. Antalet bytes "
"som returneras kan vara färre eller fler än vad som begärts. Om den "
"underliggande råströmmen är icke-blockerande och operationen skulle "
"blockera, returneras tomma bytes."

msgid ""
"In :class:`BufferedReader` this is the same as :meth:`io.BufferedIOBase.read`"
msgstr ""
"I :class:`BufferedReader` är detta samma sak som :meth:`io.BufferedIOBase."
"read`"

msgid ""
"In :class:`BufferedReader` this is the same as :meth:`io.BufferedIOBase."
"read1`"
msgstr ""
"I :class:`BufferedReader` är detta samma sak som :meth:`io.BufferedIOBase."
"read1`"

msgid ""
"A buffered binary stream providing higher-level access to a writeable, non "
"seekable :class:`RawIOBase` raw binary stream.  It inherits from :class:"
"`BufferedIOBase`."
msgstr ""
"En buffrad binär ström som ger tillgång på högre nivå till en skrivbar, icke "
"sökbar :class:`RawIOBase` rå binär ström.  Den ärver från :class:"
"`BufferedIOBase`."

msgid ""
"When writing to this object, data is normally placed into an internal "
"buffer.  The buffer will be written out to the underlying :class:`RawIOBase` "
"object under various conditions, including:"
msgstr ""
"När man skriver till detta objekt placeras data normalt i en intern "
"buffert.  Bufferten kommer att skrivas ut till det underliggande :class:"
"`RawIOBase`-objektet under olika förhållanden, inklusive:"

msgid "when the buffer gets too small for all pending data;"
msgstr "när bufferten blir för liten för alla väntande data;"

msgid "when :meth:`flush` is called;"
msgstr "när :meth:`flush` anropas;"

msgid ""
"when a :meth:`~IOBase.seek` is requested (for :class:`BufferedRandom` "
"objects);"
msgstr ""
"när en :meth:`~IOBase.seek` begärs (för :class:`BufferedRandom`-objekt);"

msgid "when the :class:`BufferedWriter` object is closed or destroyed."
msgstr "när :class:`BufferedWriter`-objektet stängs eller förstörs."

msgid ""
"The constructor creates a :class:`BufferedWriter` for the given writeable "
"*raw* stream.  If the *buffer_size* is not given, it defaults to :data:"
"`DEFAULT_BUFFER_SIZE`."
msgstr ""
"Konstruktorn skapar en :class:`BufferedWriter` för den givna skrivbara *raw*-"
"strömmen.  Om *buffer_size* inte anges är standardvärdet :data:"
"`DEFAULT_BUFFER_SIZE`."

msgid ""
":class:`BufferedWriter` provides or overrides these methods in addition to "
"those from :class:`BufferedIOBase` and :class:`IOBase`:"
msgstr ""
":class:`BufferedWriter` tillhandahåller eller åsidosätter dessa metoder "
"utöver dem från :class:`BufferedIOBase` och :class:`IOBase`:"

msgid ""
"Force bytes held in the buffer into the raw stream.  A :exc:"
"`BlockingIOError` should be raised if the raw stream blocks."
msgstr ""
"Tvingar byte som finns i bufferten in i råströmmen.  Ett :exc:"
"`BlockingIOError` bör uppstå om den råa strömmen blockeras."

msgid ""
"Write the :term:`bytes-like object`, *b*, and return the number of bytes "
"written.  When in non-blocking mode, a :exc:`BlockingIOError` with :attr:"
"`BlockingIOError.characters_written` set is raised if the buffer needs to be "
"written out but the raw stream blocks."
msgstr ""
"Skriv det :term:`bytesliknande objektet`, *b*, och returnera antalet skrivna "
"byte.  I icke-blockerande läge uppstår ett :exc:`BlockingIOError` med :attr:"
"`BlockingIOError.characters_written` inställt om bufferten behöver skrivas "
"ut men råströmmen blockerar."

msgid ""
"A buffered binary stream providing higher-level access to a seekable :class:"
"`RawIOBase` raw binary stream.  It inherits from :class:`BufferedReader` "
"and :class:`BufferedWriter`."
msgstr ""
"En buffrad binär ström som ger tillgång på högre nivå till en sökbar :class:"
"`RawIOBase` rå binär ström.  Den ärver från :class:`BufferedReader` och :"
"class:`BufferedWriter`."

msgid ""
"The constructor creates a reader and writer for a seekable raw stream, given "
"in the first argument.  If the *buffer_size* is omitted it defaults to :data:"
"`DEFAULT_BUFFER_SIZE`."
msgstr ""
"Konstruktorn skapar en läsare och skrivare för en sökbar råström, som anges "
"i det första argumentet.  Om *buffer_size* utelämnas är standardvärdet :data:"
"`DEFAULT_BUFFER_SIZE`."

msgid ""
":class:`BufferedRandom` is capable of anything :class:`BufferedReader` or :"
"class:`BufferedWriter` can do.  In addition, :meth:`~IOBase.seek` and :meth:"
"`~IOBase.tell` are guaranteed to be implemented."
msgstr ""
":class:`BufferedRandom` kan göra allt som :class:`BufferedReader` eller :"
"class:`BufferedWriter` kan göra.  Dessutom är :meth:`~IOBase.seek` och :meth:"
"`~IOBase.tell` garanterat implementerade."

msgid ""
"A buffered binary stream providing higher-level access to two non seekable :"
"class:`RawIOBase` raw binary streams---one readable, the other writeable. It "
"inherits from :class:`BufferedIOBase`."
msgstr ""
"En buffrad binär ström som ger tillgång på högre nivå till två icke sökbara :"
"class:`RawIOBase` råa binära strömmar---den ena läsbar, den andra skrivbar. "
"Den ärver från :class:`BufferedIOBase`."

msgid ""
"*reader* and *writer* are :class:`RawIOBase` objects that are readable and "
"writeable respectively.  If the *buffer_size* is omitted it defaults to :"
"data:`DEFAULT_BUFFER_SIZE`."
msgstr ""
"*reader* och *writer* är :class:`RawIOBase`-objekt som är läsbara respektive "
"skrivbara.  Om *buffer_size* utelämnas är standardvärdet :data:"
"`DEFAULT_BUFFER_SIZE`."

msgid ""
":class:`BufferedRWPair` implements all of :class:`BufferedIOBase`\\'s "
"methods except for :meth:`~BufferedIOBase.detach`, which raises :exc:"
"`UnsupportedOperation`."
msgstr ""
":class:`BufferedRWPair` implementerar alla :class:`BufferedIOBase`:s metoder "
"utom :meth:`~BufferedIOBase.detach`, som ger upphov till :exc:"
"`UnsupportedOperation`."

msgid ""
":class:`BufferedRWPair` does not attempt to synchronize accesses to its "
"underlying raw streams.  You should not pass it the same object as reader "
"and writer; use :class:`BufferedRandom` instead."
msgstr ""
":class:`BufferedRWPair` försöker inte synkronisera åtkomst till sina "
"underliggande råströmmar.  Du bör inte skicka samma objekt till den som "
"läsare och skrivare; använd :class:`BufferedRandom` istället."

msgid ""
"Base class for text streams.  This class provides a character and line based "
"interface to stream I/O.  It inherits from :class:`IOBase`."
msgstr ""
"Basklass för textströmmar.  Denna klass ger ett tecken- och radbaserat "
"gränssnitt för strömmens I/O.  Den ärver från :class:`IOBase`."

msgid ""
":class:`TextIOBase` provides or overrides these data attributes and methods "
"in addition to those from :class:`IOBase`:"
msgstr ""
":class:`TextIOBase` tillhandahåller eller åsidosätter dessa dataattribut och "
"metoder utöver dem från :class:`IOBase`:"

msgid ""
"The name of the encoding used to decode the stream's bytes into strings, and "
"to encode strings into bytes."
msgstr ""
"Namnet på den kodning som används för att avkoda strömmens bytes till "
"strängar och för att koda strängar till bytes."

msgid "The error setting of the decoder or encoder."
msgstr "Felinställningen för avkodaren eller kodaren."

msgid ""
"A string, a tuple of strings, or ``None``, indicating the newlines "
"translated so far.  Depending on the implementation and the initial "
"constructor flags, this may not be available."
msgstr ""
"En sträng, en tupel av strängar eller ``None``, som anger de nya linjer som "
"hittills översatts.  Beroende på implementationen och de initiala "
"konstruktörsflaggorna kanske detta inte är tillgängligt."

msgid ""
"The underlying binary buffer (a :class:`BufferedIOBase` or :class:"
"`RawIOBase` instance) that :class:`TextIOBase` deals with. This is not part "
"of the :class:`TextIOBase` API and may not exist in some implementations."
msgstr ""
"Den underliggande binära bufferten (en :class:`BufferedIOBase` eller :class:"
"`RawIOBase` instans) som :class:`TextIOBase` hanterar. Detta är inte en del "
"av :class:`TextIOBase` API och kanske inte finns i vissa implementationer."

msgid ""
"Separate the underlying binary buffer from the :class:`TextIOBase` and "
"return it."
msgstr ""
"Separera den underliggande binära bufferten från :class:`TextIOBase` och "
"returnera den."

msgid ""
"After the underlying buffer has been detached, the :class:`TextIOBase` is in "
"an unusable state."
msgstr ""
"Efter att den underliggande bufferten har tagits bort är :class:`TextIOBase` "
"i ett oanvändbart tillstånd."

msgid ""
"Some :class:`TextIOBase` implementations, like :class:`StringIO`, may not "
"have the concept of an underlying buffer and calling this method will raise :"
"exc:`UnsupportedOperation`."
msgstr ""
"Vissa :class:`TextIOBase` implementationer, som :class:`StringIO`, kanske "
"inte har konceptet med en underliggande buffert och att anropa denna metod "
"kommer att ge upphov till :exc:`UnsupportedOperation`."

msgid ""
"Read and return at most *size* characters from the stream as a single :class:"
"`str`.  If *size* is negative or ``None``, reads until EOF."
msgstr ""
"Läser och returnerar högst *storlek* tecken från strömmen som en enda :class:"
"`str`.  Om *storlek* är negativ eller ``None``, läses till EOF."

msgid ""
"Read until newline or EOF and return a single :class:`str`.  If the stream "
"is already at EOF, an empty string is returned."
msgstr ""
"Läser till newline eller EOF och returnerar en enda :class:`str`.  Om "
"strömmen redan är vid EOF returneras en tom sträng."

msgid "If *size* is specified, at most *size* characters will be read."
msgstr "Om *size* anges kommer högst *size* tecken att läsas."

msgid ""
"Change the stream position to the given *offset*.  Behaviour depends on the "
"*whence* parameter.  The default value for *whence* is :data:`!SEEK_SET`."
msgstr ""
"Ändra strömpositionen till den angivna *offset*.  Beteendet beror på "
"parametern *whence*.  Standardvärdet för *whence* är :data:`!SEEK_SET`."

msgid ""
":data:`!SEEK_SET` or ``0``: seek from the start of the stream (the default); "
"*offset* must either be a number returned by :meth:`TextIOBase.tell`, or "
"zero.  Any other *offset* value produces undefined behaviour."
msgstr ""
":data:`!SEEK_SET` eller ``0``: söker från början av strömmen (standard); "
"*offset* måste antingen vara ett tal som returneras av :meth:`TextIOBase."
"tell`, eller noll.  Alla andra *offset*-värden ger ett odefinierat beteende."

msgid ""
":data:`!SEEK_CUR` or ``1``: \"seek\" to the current position; *offset* must "
"be zero, which is a no-operation (all other values are unsupported)."
msgstr ""
":data:`!SEEK_CUR` eller ``1``: \"Sök\" till den aktuella positionen; "
"*offset* måste vara noll, vilket är en no-operation (alla andra värden stöds "
"inte)."

msgid ""
":data:`!SEEK_END` or ``2``: seek to the end of the stream; *offset* must be "
"zero (all other values are unsupported)."
msgstr ""
":data:`!SEEK_END` eller ``2``: sök till slutet av strömmen; *offset* måste "
"vara noll (alla andra värden stöds inte)."

msgid "Return the new absolute position as an opaque number."
msgstr "Returnerar den nya absoluta positionen som ett opakt tal."

msgid ""
"Return the current stream position as an opaque number.  The number does not "
"usually represent a number of bytes in the underlying binary storage."
msgstr ""
"Returnerar den aktuella strömpositionen som ett ogenomskinligt tal.  Numret "
"representerar vanligtvis inte ett antal byte i den underliggande binära "
"lagringen."

msgid ""
"Write the string *s* to the stream and return the number of characters "
"written."
msgstr ""
"Skriv strängen *s* till strömmen och returnera antalet tecken som skrivits."

msgid ""
"A buffered text stream providing higher-level access to a :class:"
"`BufferedIOBase` buffered binary stream.  It inherits from :class:"
"`TextIOBase`."
msgstr ""
"En buffrad textström som ger tillgång på högre nivå till en buffrad binär "
"ström av typen :class:`BufferedIOBase`.  Den ärver från :class:`TextIOBase`."

msgid ""
"*encoding* gives the name of the encoding that the stream will be decoded or "
"encoded with.  In :ref:`UTF-8 Mode <utf8-mode>`, this defaults to UTF-8. "
"Otherwise, it defaults to :func:`locale.getencoding`. "
"``encoding=\"locale\"`` can be used to specify the current locale's encoding "
"explicitly. See :ref:`io-text-encoding` for more information."
msgstr ""
"*encoding* anger namnet på den kodning som strömmen ska avkodas eller kodas "
"med.  I :ref:`UTF-8 Mode <utf8-mode>` är standardvärdet UTF-8. Annars är "
"standardvärdet :func:`locale.getencoding`. ``encoding=\"locale\"`` kan "
"användas för att ange den aktuella lokalens kodning explicit. Se :ref:`io-"
"text-encoding` för mer information."

msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled.  Pass ``'strict'`` to raise a :exc:`ValueError` "
"exception if there is an encoding error (the default of ``None`` has the "
"same effect), or pass ``'ignore'`` to ignore errors.  (Note that ignoring "
"encoding errors can lead to data loss.)  ``'replace'`` causes a replacement "
"marker (such as ``'?'``) to be inserted where there is malformed data. "
"``'backslashreplace'`` causes malformed data to be replaced by a backslashed "
"escape sequence.  When writing, ``'xmlcharrefreplace'`` (replace with the "
"appropriate XML character reference)  or ``'namereplace'`` (replace with "
"``\\N{...}`` escape sequences) can be used.  Any other error handling name "
"that has been registered with :func:`codecs.register_error` is also valid."
msgstr ""
"*errors* är en valfri sträng som anger hur kodnings- och avkodningsfel ska "
"hanteras.  Ange ``'strict'`` för att skapa ett :exc:`ValueError` undantag om "
"det finns ett kodningsfel (standardvärdet ``None`` har samma effekt), eller "
"ange ``'ignore'`` för att ignorera fel.  (Observera att ignorering av "
"kodningsfel kan leda till dataförlust.) ``'replace'`` gör att en "
"ersättningsmarkör (t.ex. ``'?'``) infogas där det finns felaktiga data. "
"``'backslashreplace'`` gör att felaktiga data ersätts med en bakåtstreckad "
"escape-sekvens.  Vid skrivning kan ``'xmlcharrefreplace'`` (ersätter med "
"lämplig XML-teckenreferens) eller ``'namereplace'`` (ersätter med ``N{...}`` "
"escape-sekvenser) användas.  Alla andra felhanteringsnamn som har "
"registrerats med :func:`codecs.register_error` är också giltiga."

msgid ""
"*newline* controls how line endings are handled.  It can be ``None``, "
"``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as follows:"
msgstr ""
"*newline* styr hur radavslut ska hanteras.  Den kan vara ``None``, ``''``, "
"``'\\n'``, ``'\\r'`` och ``'\\r\\n'``.  Det fungerar på följande sätt:"

msgid ""
"When reading input from the stream, if *newline* is ``None``, :term:"
"`universal newlines` mode is enabled.  Lines in the input can end in "
"``'\\n'``, ``'\\r'``, or ``'\\r\\n'``, and these are translated into "
"``'\\n'`` before being returned to the caller.  If *newline* is ``''``, "
"universal newlines mode is enabled, but line endings are returned to the "
"caller untranslated.  If *newline* has any of the other legal values, input "
"lines are only terminated by the given string, and the line ending is "
"returned to the caller untranslated."
msgstr ""
"Om *newline* är ``None`` aktiveras :term:`universal newlines`-läget när "
"indata läses från strömmen.  Rader i inmatningen kan sluta på ``'\\n'``, "
"``'\\r'`` eller ``'\\r\\n'``, och dessa översätts till ``'\\n'`` innan de "
"returneras till den som anropar.  Om *newline* är ``''`` aktiveras universal "
"newlines mode, men radavslut returneras till uppringaren oöversatta.  Om "
"*newline* har något av de andra lagliga värdena avslutas inmatningsraderna "
"endast med den angivna strängen, och radavslutningen returneras till den som "
"ringer upp utan att översättas."

msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"Om *newline* är ``None`` när utdata skrivs till strömmen, översätts alla "
"``'\\n'``-tecken som skrivs till systemets standardradavgränsare, :data:`os."
"linesep`.  Om *newline* är ``''`` eller ``'\\n'`` sker ingen översättning.  "
"Om *newline* är något av de andra lagliga värdena översätts alla ``'\\n'``-"
"tecken som skrivs till den angivna strängen."

msgid ""
"If *line_buffering* is ``True``, :meth:`~IOBase.flush` is implied when a "
"call to write contains a newline character or a carriage return."
msgstr ""
"Om *line_buffering* är ``True``, är :meth:`~IOBase.flush` implicit när ett "
"anrop till write innehåller ett tecken för ny rad eller en vagnsretur."

msgid ""
"If *write_through* is ``True``, calls to :meth:`~BufferedIOBase.write` are "
"guaranteed not to be buffered: any data written on the :class:"
"`TextIOWrapper` object is immediately handled to its underlying binary "
"*buffer*."
msgstr ""
"Om *write_through* är ``True`` garanteras att anrop till :meth:"
"`~BufferedIOBase.write` inte buffras: all data som skrivs på :class:"
"`TextIOWrapper`-objektet hanteras omedelbart till dess underliggande binära "
"*buffer*."

msgid "The *write_through* argument has been added."
msgstr "Argumentet *write_through* har lagts till."

msgid ""
"The default *encoding* is now ``locale.getpreferredencoding(False)`` instead "
"of ``locale.getpreferredencoding()``. Don't change temporary the locale "
"encoding using :func:`locale.setlocale`, use the current locale encoding "
"instead of the user preferred encoding."
msgstr ""
"Standard *kodning* är nu ``locale.getpreferredencoding(False)`` istället för "
"``locale.getpreferredencoding()``. Ändra inte tillfälligt den lokala "
"kodningen med :func:`locale.setlocale`, använd den aktuella lokala kodningen "
"istället för den kodning som användaren föredrar."

msgid ""
"The *encoding* argument now supports the ``\"locale\"`` dummy encoding name."
msgstr ""
"Argumentet *encoding* stöder nu det fiktiva kodningsnamnet ``\"locale\"``."

msgid ""
"When the underlying raw stream is non-blocking, a :exc:`BlockingIOError` may "
"be raised if a read operation cannot be completed immediately."
msgstr ""
"När den underliggande råströmmen är icke-blockerande kan ett :exc:"
"`BlockingIOError` uppstå om en läsoperation inte kan slutföras omedelbart."

msgid ""
":class:`TextIOWrapper` provides these data attributes and methods in "
"addition to those from :class:`TextIOBase` and :class:`IOBase`:"
msgstr ""
":class:`TextIOWrapper` tillhandahåller dessa dataattribut och metoder utöver "
"dem från :class:`TextIOBase` och :class:`IOBase`:"

msgid "Whether line buffering is enabled."
msgstr "Om linjebuffring är aktiverad."

msgid "Whether writes are passed immediately to the underlying binary buffer."
msgstr ""
"Om skrivningar skickas omedelbart till den underliggande binära bufferten."

msgid ""
"Reconfigure this text stream using new settings for *encoding*, *errors*, "
"*newline*, *line_buffering* and *write_through*."
msgstr ""
"Omkonfigurera denna textström med nya inställningar för *kodning*, *fel*, "
"*ny rad*, *linje_buffring* och *skrivgenomgång*."

msgid ""
"Parameters not specified keep current settings, except ``errors='strict'`` "
"is used when *encoding* is specified but *errors* is not specified."
msgstr ""
"Parametrar som inte anges behåller aktuella inställningar, förutom "
"``errors='strict'`` som används när *encoding* anges men *errors* inte anges."

msgid ""
"It is not possible to change the encoding or newline if some data has "
"already been read from the stream. On the other hand, changing encoding "
"after write is possible."
msgstr ""
"Det är inte möjligt att ändra kodning eller newline om data redan har lästs "
"från flödet. Å andra sidan är det möjligt att ändra kodning efter skrivning."

msgid ""
"This method does an implicit stream flush before setting the new parameters."
msgstr ""
"Denna metod gör en implicit strömspolning innan de nya parametrarna ställs "
"in."

msgid "The method supports ``encoding=\"locale\"`` option."
msgstr "Metoden stöder alternativet ``encoding=\"locale\"``."

msgid ""
"Set the stream position. Return the new stream position as an :class:`int`."
msgstr ""
"Ställ in strömpositionen. Returnera den nya strömpositionen som en :class:"
"`int`."

msgid ""
"Four operations are supported, given by the following argument combinations:"
msgstr ""
"Det finns stöd för fyra operationer, som beskrivs med följande "
"argumentkombinationer:"

msgid "``seek(0, SEEK_SET)``: Rewind to the start of the stream."
msgstr "``seek(0, SEEK_SET)``: Spola tillbaka till början av strömmen."

msgid ""
"``seek(cookie, SEEK_SET)``: Restore a previous position; *cookie* **must "
"be** a number returned by :meth:`tell`."
msgstr ""
"``seek(cookie, SEEK_SET)``: Återställer en tidigare position; *cookie* "
"**måste vara** ett nummer som returnerats av :meth:`tell`."

msgid "``seek(0, SEEK_END)``: Fast-forward to the end of the stream."
msgstr "``seek(0, SEEK_END)``: Snabbspola till slutet av strömmen."

msgid "``seek(0, SEEK_CUR)``: Leave the current stream position unchanged."
msgstr ""
"``seek(0, SEEK_CUR)``: Lämna den aktuella stream-positionen oförändrad."

msgid "Any other argument combinations are invalid, and may raise exceptions."
msgstr ""
"Alla andra argumentkombinationer är ogiltiga och kan leda till undantag."

msgid ":data:`os.SEEK_SET`, :data:`os.SEEK_CUR`, and :data:`os.SEEK_END`."
msgstr ":data:`os.SEEK_SET`, :data:`os.SEEK_CUR`, och :data:`os.SEEK_END`."

msgid ""
"Return the stream position as an opaque number. The return value of :meth:`!"
"tell` can be given as input to :meth:`seek`, to restore a previous stream "
"position."
msgstr ""
"Returnerar strömpositionen som ett opakt tal. Returvärdet för :meth:`!tell` "
"kan ges som indata till :meth:`seek`, för att återställa en tidigare "
"strömposition."

msgid ""
"A text stream using an in-memory text buffer.  It inherits from :class:"
"`TextIOBase`."
msgstr ""
"En textström som använder en textbuffert i minnet.  Den ärver från :class:"
"`TextIOBase`."

msgid ""
"The text buffer is discarded when the :meth:`~IOBase.close` method is called."
msgstr "Textbufferten kasseras när metoden :meth:`~IOBase.close` anropas."

msgid ""
"The initial value of the buffer can be set by providing *initial_value*. If "
"newline translation is enabled, newlines will be encoded as if by :meth:"
"`~TextIOBase.write`.  The stream is positioned at the start of the buffer "
"which emulates opening an existing file in a ``w+`` mode, making it ready "
"for an immediate write from the beginning or for a write that would "
"overwrite the initial value.  To emulate opening a file in an ``a+`` mode "
"ready for appending, use ``f.seek(0, io.SEEK_END)`` to reposition the stream "
"at the end of the buffer."
msgstr ""
"Det initiala värdet för bufferten kan ställas in genom att ange "
"*initial_value*. Om översättning av nya rader är aktiverad kommer nya rader "
"att kodas som om de vore :meth:`~TextIOBase.write`.  Strömmen placeras i "
"början av bufferten, vilket emulerar öppnandet av en befintlig fil i ett "
"``w+``-läge, vilket gör den redo för en omedelbar skrivning från början "
"eller för en skrivning som skulle skriva över det initiala värdet.  För att "
"emulera öppnandet av en fil i ett ``a+``-läge som är redo att läggas till, "
"använd ``f.seek(0, io.SEEK_END)`` för att flytta strömmen till slutet av "
"bufferten."

msgid ""
"The *newline* argument works like that of :class:`TextIOWrapper`, except "
"that when writing output to the stream, if *newline* is ``None``, newlines "
"are written as ``\\n`` on all platforms."
msgstr ""
"Argumentet *newline* fungerar som i :class:`TextIOWrapper`, förutom att när "
"utdata skrivs till strömmen, om *newline* är ``None``, skrivs nya linjer som "
"``\\n`` på alla plattformar."

msgid ""
":class:`StringIO` provides this method in addition to those from :class:"
"`TextIOBase` and :class:`IOBase`:"
msgstr ""
":class:`StringIO` tillhandahåller denna metod utöver de som finns i :class:"
"`TextIOBase` och :class:`IOBase`:"

msgid ""
"Return a :class:`str` containing the entire contents of the buffer. Newlines "
"are decoded as if by :meth:`~TextIOBase.read`, although the stream position "
"is not changed."
msgstr ""
"Returnerar en :class:`str` som innehåller hela innehållet i bufferten. Nya "
"rader avkodas som om de vore :meth:`~TextIOBase.read`, även om "
"flödespositionen inte ändras."

msgid "Example usage::"
msgstr "Exempel på användning::"

msgid ""
"import io\n"
"\n"
"output = io.StringIO()\n"
"output.write('First line.\\n')\n"
"print('Second line.', file=output)\n"
"\n"
"# Retrieve file contents -- this will be\n"
"# 'First line.\\nSecond line.\\n'\n"
"contents = output.getvalue()\n"
"\n"
"# Close object and discard memory buffer --\n"
"# .getvalue() will now raise an exception.\n"
"output.close()"
msgstr ""
"import io\n"
"\n"
"output = io.StringIO()\n"
"output.write('Första raden.\\n')\n"
"print('Andra raden.', file=output)\n"
"\n"
"# Hämta filinnehållet -- detta kommer att vara\n"
"# 'Första raden.\\nSekundära raden.\\n'\n"
"innehåll = output.getvalue()\n"
"\n"
"# Stäng objektet och kasta minnesbufferten --\n"
"# .getvalue() kommer nu att ge upphov till ett undantag.\n"
"output.close()"

msgid ""
"A helper codec that decodes newlines for :term:`universal newlines` mode. It "
"inherits from :class:`codecs.IncrementalDecoder`."
msgstr ""
"En hjälpcodec som avkodar newlines för :term:`universal newlines`-läget. Den "
"ärver från :class:`codecs.IncrementalDecoder`."

msgid "Static Typing"
msgstr "Statisk typning"

msgid ""
"The following protocols can be used for annotating function and method "
"arguments for simple stream reading or writing operations. They are "
"decorated with :deco:`typing.runtime_checkable`."
msgstr ""
"Följande protokoll kan användas för att annotera funktions- och "
"metodargument för enkla läs- eller skrivoperationer i strömmar. De är "
"dekorerade med :deco:`typing.runtime_checkable`."

msgid ""
"Generic protocol for reading from a file or other input stream. ``T`` will "
"usually be :class:`str` or :class:`bytes`, but can be any type that is read "
"from the stream."
msgstr ""
"Generiskt protokoll för att läsa från en fil eller annan inmatningsström. "
"``T`` kommer vanligtvis att vara :class:`str` eller :class:`bytes`, men kan "
"vara vilken typ som helst som läses från strömmen."

msgid ""
"Read data from the input stream and return it. If *size* is specified, it "
"should be an integer, and at most *size* items (bytes/characters) will be "
"read."
msgstr ""
"Läser data från inmatningsströmmen och returnerar den. Om *size* anges ska "
"det vara ett heltal, och högst *size* objekt (byte/tecken) kommer att läsas."

msgid "For example::"
msgstr "Till exempel::"

msgid ""
"def read_it(reader: Reader[str]):\n"
"    data = reader.read(11)\n"
"    assert isinstance(data, str)"
msgstr ""
"def read_it(reader: Läsare[str]):\n"
"    data = läsare.läs(11)\n"
"    assert isinstance(data, str)"

msgid ""
"Generic protocol for writing to a file or other output stream. ``T`` will "
"usually be :class:`str` or :class:`bytes`, but can be any type that can be "
"written to the stream."
msgstr ""
"Generiskt protokoll för att skriva till en fil eller annan utdataström. "
"``T`` kommer vanligtvis att vara :class:`str` eller :class:`bytes`, men kan "
"vara vilken typ som helst som kan skrivas till strömmen."

msgid ""
"Write *data* to the output stream and return the number of items (bytes/"
"characters) written."
msgstr ""
"Skriv *data* till utdataströmmen och returnera antalet objekt (bytes/tecken) "
"som skrivits."

msgid ""
"def write_binary(writer: Writer[bytes]):\n"
"    writer.write(b\"Hello world!\\n\")"
msgstr ""
"def write_binary(writer: Writer[bytes]):\n"
"    writer.write(b\"Hej världen!\\n\")"

msgid ""
"See :ref:`typing-io` for other I/O related protocols and classes that can be "
"used for static type checking."
msgstr ""
"Se :ref:`typing-io` för andra I/O-relaterade protokoll och klasser som kan "
"användas för statisk typkontroll."

msgid "Performance"
msgstr "Prestanda"

msgid ""
"This section discusses the performance of the provided concrete I/O "
"implementations."
msgstr ""
"I det här avsnittet diskuteras prestandan för de konkreta I/O-"
"implementeringarna."

msgid ""
"By reading and writing only large chunks of data even when the user asks for "
"a single byte, buffered I/O hides any inefficiency in calling and executing "
"the operating system's unbuffered I/O routines.  The gain depends on the OS "
"and the kind of I/O which is performed.  For example, on some modern OSes "
"such as Linux, unbuffered disk I/O can be as fast as buffered I/O.  The "
"bottom line, however, is that buffered I/O offers predictable performance "
"regardless of the platform and the backing device.  Therefore, it is almost "
"always preferable to use buffered I/O rather than unbuffered I/O for binary "
"data."
msgstr ""
"Genom att bara läsa och skriva stora bitar data även när användaren ber om "
"en enda byte döljer buffrad I/O ineffektiviteten i anrop och exekvering av "
"operativsystemets obuffrade I/O-rutiner.  Vinsten beror på operativsystemet "
"och vilken typ av I/O som utförs.  På vissa moderna operativsystem som Linux "
"kan till exempel obuffrad disk-I/O vara lika snabb som buffrad I/O.  "
"Slutsatsen är dock att buffrad I/O ger förutsägbar prestanda oavsett "
"plattform och backingenhet.  Därför är det nästan alltid att föredra att "
"använda buffrad I/O i stället för obuffrad I/O för binära data."

msgid ""
"Text I/O over a binary storage (such as a file) is significantly slower than "
"binary I/O over the same storage, because it requires conversions between "
"unicode and binary data using a character codec.  This can become noticeable "
"handling huge amounts of text data like large log files.  Also, :meth:"
"`~TextIOBase.tell` and :meth:`~TextIOBase.seek` are both quite slow due to "
"the reconstruction algorithm used."
msgstr ""
"Text-I/O över en binär lagring (t.ex. en fil) är betydligt långsammare än "
"binär I/O över samma lagring, eftersom det krävs konverteringar mellan "
"unicode och binär data med hjälp av en teckenkodek.  Detta kan bli märkbart "
"vid hantering av stora mängder textdata, t.ex. stora loggfiler.  Dessutom är "
"både :meth:`~TextIOBase.tell` och :meth:`~TextIOBase.seek` ganska långsamma "
"på grund av den rekonstruktionsalgoritm som används."

msgid ""
":class:`StringIO`, however, is a native in-memory unicode container and will "
"exhibit similar speed to :class:`BytesIO`."
msgstr ""
":class:`StringIO` är dock en inbyggd unicode-behållare i minnet och kommer "
"att uppvisa liknande hastighet som :class:`BytesIO`."

msgid "Multi-threading"
msgstr "Multi-threading"

msgid ""
":class:`FileIO` objects are thread-safe to the extent that the operating "
"system calls (such as :manpage:`read(2)` under Unix) they wrap are thread-"
"safe too."
msgstr ""
":class:`FileIO`-objekt är trådsäkra i den utsträckning som de anrop från "
"operativsystemet (t.ex. :manpage:`read(2)` under Unix) som de omsluter också "
"är trådsäkra."

msgid ""
"Binary buffered objects (instances of :class:`BufferedReader`, :class:"
"`BufferedWriter`, :class:`BufferedRandom` and :class:`BufferedRWPair`) "
"protect their internal structures using a lock; it is therefore safe to call "
"them from multiple threads at once."
msgstr ""
"Binära buffrade objekt (instanser av :class:`BufferedReader`, :class:"
"`BufferedWriter`, :class:`BufferedRandom` och :class:`BufferedRWPair`) "
"skyddar sina interna strukturer med hjälp av ett lås; det är därför säkert "
"att anropa dem från flera trådar samtidigt."

msgid ":class:`TextIOWrapper` objects are not thread-safe."
msgstr ":class:`TextIOWrapper`-objekt är inte tråd-säkra."

msgid "Reentrancy"
msgstr "Reentrancy"

msgid ""
"Binary buffered objects (instances of :class:`BufferedReader`, :class:"
"`BufferedWriter`, :class:`BufferedRandom` and :class:`BufferedRWPair`) are "
"not reentrant.  While reentrant calls will not happen in normal situations, "
"they can arise from doing I/O in a :mod:`signal` handler.  If a thread tries "
"to re-enter a buffered object which it is already accessing, a :exc:"
"`RuntimeError` is raised.  Note this doesn't prohibit a different thread "
"from entering the buffered object."
msgstr ""
"Binära buffrade objekt (instanser av :class:`BufferedReader`, :class:"
"`BufferedWriter`, :class:`BufferedRandom` och :class:`BufferedRWPair`) är "
"inte reentranta.  Även om reentranta anrop inte kommer att ske i normala "
"situationer kan de uppstå när I/O görs i en :mod:`signal`-hanterare.  Om en "
"tråd försöker återgå till ett buffrat objekt som den redan har tillgång "
"till, uppstår ett :exc:`RuntimeError`.  Observera att detta inte hindrar en "
"annan tråd från att komma in i det buffrade objektet."

msgid ""
"The above implicitly extends to text files, since the :func:`open` function "
"will wrap a buffered object inside a :class:`TextIOWrapper`.  This includes "
"standard streams and therefore affects the built-in :func:`print` function "
"as well."
msgstr ""
"Ovanstående gäller implicit även textfiler, eftersom funktionen :func:`open` "
"kommer att packa in ett buffrat objekt i en :class:`TextIOWrapper`.  Detta "
"inkluderar standardströmmar och påverkar därför även den inbyggda "
"funktionen :func:`print`."

msgid "file object"
msgstr "filobjekt"

msgid "io module"
msgstr "io-modul"

msgid "universal newlines"
msgstr "universella nya rader"

msgid "io.TextIOWrapper class"
msgstr "io.TextIOWrapper-klass"

msgid "io.IncrementalNewlineDecoder class"
msgstr "io.IncrementalNewlineDecoder-klass"
