# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!sched` --- Event scheduler"
msgstr ":mod:`!sched` --- Schemaläggare för händelser"

msgid "**Source code:** :source:`Lib/sched.py`"
msgstr "**Källkod:** :source:`Lib/sched.py`"

msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ""
"Modulen :mod:`sched` definierar en klass som implementerar en schemaläggare "
"för händelser för allmänt bruk:"

msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be "
"callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity "
"to run in multi-threaded applications."
msgstr ""
"Klassen :class:`scheduler` definierar ett generiskt gränssnitt för "
"schemaläggning av händelser. Den behöver två funktioner för att faktiskt "
"hantera \"omvärlden\" --- *timefunc* skall kunna anropas utan argument och "
"returnera ett tal (\"tiden\", i valfri enhet).  Funktionen *delayfunc* skall "
"kunna anropas med ett argument, kompatibelt med resultatet från *timefunc*, "
"och skall fördröja så många tidsenheter. *delayfunc* kommer också att "
"anropas med argumentet ``0`` efter att varje händelse har körts för att ge "
"andra trådar en möjlighet att köra i flertrådade applikationer."

msgid "*timefunc* and *delayfunc* parameters are optional."
msgstr "parametrarna *timefunc* och *delayfunc* är valfria."

msgid ""
":class:`scheduler` class can be safely used in multi-threaded environments."
msgstr ":class:`scheduler`-klassen kan användas säkert i flertrådade miljöer."

msgid "Example::"
msgstr "Exempel::"

msgid ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # despite having higher priority, 'keyword' runs after 'positional' "
"as enter() is relative\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first "
"enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second "
"enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"
msgstr ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # despite having higher priority, 'keyword' runs after 'positional' "
"as enter() is relative\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first "
"enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second "
"enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"

msgid "Scheduler Objects"
msgstr "Schemaläggningsobjekt"

msgid ":class:`scheduler` instances have the following methods and attributes:"
msgstr ":class:`scheduler`-instanser har följande metoder och attribut:"

msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*. A lower number represents a higher priority."
msgstr ""
"Schemalägg en ny händelse. Argumentet *time* bör vara en numerisk typ som är "
"kompatibel med returvärdet för funktionen *timefunc* som skickas till "
"konstruktören. Händelser som schemalagts för samma *tid* kommer att utföras "
"i den ordning som deras *prioritet* anger. En lägre siffra representerar en "
"högre prioritet."

msgid ""
"Executing the event means executing ``action(*argument, **kwargs)``. "
"*argument* is a sequence holding the positional arguments for *action*. "
"*kwargs* is a dictionary holding the keyword arguments for *action*."
msgstr ""
"Att utföra händelsen innebär att utföra ``action(*argument, **kwargs)``. "
"*argument* är en sekvens som innehåller de positionella argumenten för "
"*action*. *kwargs* är en ordbok som innehåller nyckelordsargumenten för "
"*action*."

msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr ""
"Returvärdet är en händelse som kan användas för senare annullering av "
"händelsen (se :meth:`cancel`)."

msgid "*argument* parameter is optional."
msgstr "*argument*-parametern är valfri."

msgid "*kwargs* parameter was added."
msgstr "*parametern kwargs* har lagts till."

msgid ""
"Schedule an event for *delay* more time units. Other than the relative time, "
"the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr ""
"Schemalägg en händelse för *fördröjning* fler tidsenheter. Förutom den "
"relativa tiden är de andra argumenten, effekten och returvärdet desamma som "
"för :meth:`enterabs`."

msgid ""
"Remove the event from the queue. If *event* is not an event currently in the "
"queue, this method will raise a :exc:`ValueError`."
msgstr ""
"Tar bort händelsen från kön. Om *event* inte är en händelse som för "
"närvarande finns i kön, kommer denna metod att ge upphov till ett :exc:"
"`ValueError`."

msgid "Return ``True`` if the event queue is empty."
msgstr "Returnerar ``True`` om händelsekön är tom."

msgid ""
"Run all scheduled events. This method will wait  (using the *delayfunc* "
"function passed to the constructor) for the next event, then execute it and "
"so on until there are no more scheduled events."
msgstr ""
"Kör alla schemalagda händelser. Den här metoden väntar (med hjälp av "
"funktionen *delayfunc* som skickas till konstruktören) på nästa händelse och "
"kör den sedan och så vidare tills det inte finns några fler schemalagda "
"händelser."

msgid ""
"If *blocking* is false executes the scheduled events due to expire soonest "
"(if any) and then return the deadline of the next scheduled call in the "
"scheduler (if any)."
msgstr ""
"Om *blocking* är false körs de schemalagda händelser som löper ut tidigast "
"(om sådana finns) och returnerar sedan tidsfristen för nästa schemalagda "
"anrop i schemaläggaren (om sådan finns)."

msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""
"Antingen *action* eller *delayfunc* kan ge upphov till ett undantag.  I båda "
"fallen kommer schemaläggaren att upprätthålla ett konsekvent tillstånd och "
"sprida undantaget.  Om ett undantag utlöses av *action* kommer händelsen "
"inte att prövas i framtida anrop till :meth:`run`."

msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr ""
"Om en sekvens av händelser tar längre tid att köra än den tid som finns "
"tillgänglig före nästa händelse, kommer schemaläggaren helt enkelt att hamna "
"på efterkälken.  Inga händelser kommer att avbrytas; den anropande koden är "
"ansvarig för att avbryta händelser som inte längre är relevanta."

msgid "*blocking* parameter was added."
msgstr "*parametern blocking* har lagts till."

msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument, kwargs."
msgstr ""
"Skrivskyddat attribut som returnerar en lista över kommande händelser i den "
"ordning de kommer att köras.  Varje händelse visas som en :term:`named "
"tuple` med följande fält: tid, prioritet, åtgärd, argument, kwargs."

msgid "event scheduling"
msgstr "schemaläggning av evenemang"
