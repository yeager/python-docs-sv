# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Python on Windows FAQ"
msgstr "Vanliga frågor om Python på Windows"

msgid "Contents"
msgstr "Innehåll"

msgid "How do I run a Python program under Windows?"
msgstr "Hur kör jag ett Python-program under Windows?"

msgid ""
"This is not necessarily a straightforward question. If you are already "
"familiar with running programs from the Windows command line then everything "
"will seem obvious; otherwise, you might need a little more guidance."
msgstr ""
"Det här är inte nödvändigtvis en enkel fråga. Om du redan är bekant med att "
"köra program från kommandoraden i Windows kommer allt att verka självklart, "
"men annars kan du behöva lite mer vägledning."

msgid ""
"Unless you use some sort of integrated development environment, you will end "
"up *typing* Windows commands into what is referred to as a \"Command prompt "
"window\".  Usually you can create such a window from your search bar by "
"searching for ``cmd``.  You should be able to recognize when you have "
"started such a window because you will see a Windows \"command prompt\", "
"which usually looks like this:"
msgstr ""
"Om du inte använder någon form av integrerad utvecklingsmiljö kommer du att "
"sluta med att *skriva* Windows-kommandon i vad som kallas ett "
"\"kommandotolkfönster\".  Vanligtvis kan du skapa ett sådant fönster från "
"ditt sökfält genom att söka efter ``cmd``.  Du bör kunna känna igen när du "
"har startat ett sådant fönster eftersom du kommer att se en Windows "
"\"kommandotolk\", som vanligtvis ser ut så här:"

msgid "C:\\>"
msgstr "C:\\>"

msgid ""
"The letter may be different, and there might be other things after it, so "
"you might just as easily see something like:"
msgstr ""
"Bokstaven kan vara annorlunda, och det kan finnas andra saker efter den, så "
"du kan lika gärna se något i stil med:"

msgid "D:\\YourName\\Projects\\Python>"
msgstr "D:\\Ditt namn\\Projekt\\Python>"

msgid ""
"depending on how your computer has been set up and what else you have "
"recently done with it.  Once you have started such a window, you are well on "
"the way to running Python programs."
msgstr ""
"beroende på hur din dator har konfigurerats och vad du har gjort med den den "
"senaste tiden.  När du väl har startat ett sådant fönster är du på god väg "
"att köra Python-program."

msgid ""
"You need to realize that your Python scripts have to be processed by another "
"program called the Python *interpreter*.  The interpreter reads your script, "
"compiles it into bytecodes, and then executes the bytecodes to run your "
"program. So, how do you arrange for the interpreter to handle your Python?"
msgstr ""
"Du måste inse att dina Python-skript måste bearbetas av ett annat program "
"som kallas Python *tolk*.  Tolken läser ditt skript, kompilerar det till "
"bytecodes och kör sedan bytecodes för att köra ditt program. Så hur gör du "
"för att tolken ska hantera ditt Python?"

msgid ""
"First, you need to make sure that your command window recognises the word "
"\"py\" as an instruction to start the interpreter.  If you have opened a "
"command window, you should try entering the command ``py`` and hitting "
"return:"
msgstr ""
"Först måste du se till att ditt kommandofönster känner igen ordet \"py\" som "
"en instruktion för att starta tolken.  Om du har öppnat ett kommandofönster "
"bör du försöka skriva in kommandot ``py`` och trycka på retur:"

msgid "C:\\Users\\YourName> py"
msgstr "C:\\Användare\\Ditt Namn> py"

msgid "You should then see something like:"
msgstr "Du bör då se något liknande:"

msgid ""
"Python 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit "
"(Intel)] on win32\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more "
"information.\n"
">>>"
msgstr ""
"Python 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit "
"(Intel)] på win32\n"
"Skriv \"help\", \"copyright\", \"credits\" eller \"license\" för mer "
"information.\n"
">>>"

msgid ""
"You have started the interpreter in \"interactive mode\". That means you can "
"enter Python statements or expressions interactively and have them executed "
"or evaluated while you wait.  This is one of Python's strongest features.  "
"Check it by entering a few expressions of your choice and seeing the results:"
msgstr ""
"Du har startat tolken i \"interaktivt läge\". Det betyder att du kan skriva "
"in Python-satser eller -uttryck interaktivt och få dem exekverade eller "
"utvärderade medan du väntar.  Detta är en av Pythons starkaste funktioner.  "
"Kontrollera det genom att skriva in några valfria uttryck och se resultatet:"

msgid ""
">>> print(\"Hello\")\n"
"Hello\n"
">>> \"Hello\" * 3\n"
"'HelloHelloHello'"
msgstr ""
">>> print(\"Hej\")\n"
"Hej\n"
">>> \"Hallå\" * 3\n"
"\"HallåHallåHallå"

msgid ""
"Many people use the interactive mode as a convenient yet highly programmable "
"calculator.  When you want to end your interactive Python session, call the :"
"func:`exit` function or hold the :kbd:`Ctrl` key down while you enter a :kbd:"
"`Z`, then hit the \":kbd:`Enter`\" key to get back to your Windows command "
"prompt."
msgstr ""
"Många använder det interaktiva läget som en bekväm men ändå mycket "
"programmerbar miniräknare.  När du vill avsluta din interaktiva Python-"
"session anropar du funktionen :func:`exit` eller håller ned :kbd:`Ctrl` "
"medan du skriver in :kbd:`Z` och trycker sedan på \":kbd:`Enter`\" för att "
"komma tillbaka till Windows kommandotolk."

msgid ""
"You may also find that you have a Start-menu entry such as :menuselection:"
"`Start --> Programs --> Python 3.x --> Python (command line)` that results "
"in you seeing the ``>>>`` prompt in a new window.  If so, the window will "
"disappear after you call the :func:`exit` function or enter the :kbd:`Ctrl-"
"Z` character; Windows is running a single \"python\" command in the window, "
"and closes it when you terminate the interpreter."
msgstr ""
"Det kan också hända att du har en startmenypost som :menuselection:`Start --"
"> Program --> Python 3.x --> Python (kommandorad)` som resulterar i att du "
"ser prompten ``>>>`` i ett nytt fönster.  Om så är fallet kommer fönstret "
"att försvinna när du anropar funktionen :func:`exit` eller skriver in "
"tecknet :kbd:`Ctrl-Z`; Windows kör ett enda \"python\"-kommando i fönstret "
"och stänger det när du avslutar tolken."

msgid ""
"Now that we know the ``py`` command is recognized, you can give your Python "
"script to it. You'll have to give either an absolute or a relative path to "
"the Python script. Let's say your Python script is located in your desktop "
"and is named ``hello.py``, and your command prompt is nicely opened in your "
"home directory so you're seeing something similar to::"
msgstr ""
"Nu när vi vet att kommandot ``py`` känns igen kan du ge ditt Python-skript "
"till det. Du måste ange antingen en absolut eller en relativ sökväg till "
"Python-skriptet. Låt oss säga att ditt Python-skript finns på ditt skrivbord "
"och heter ``hello.py``, och din kommandotolk öppnas snyggt i din hemkatalog "
"så att du ser något liknande::"

msgid "C:\\Users\\YourName>"
msgstr "C:\\Användare\\Ditt Namn>"

msgid ""
"So now you'll ask the ``py`` command to give your script to Python by typing "
"``py`` followed by your script path::"
msgstr ""
"Så nu ska du be kommandot ``py`` att ge ditt skript till Python genom att "
"skriva ``py`` följt av din skriptsökväg::"

msgid ""
"C:\\Users\\YourName> py Desktop\\hello.py\n"
"hello"
msgstr ""
"C:\\Användare\\Ditt Namn> py Desktop\\hello.py\n"
"hej"

msgid "How do I make Python scripts executable?"
msgstr "Hur gör jag Python-skript körbara?"

msgid ""
"On Windows, the standard Python installer already associates the .py "
"extension with a file type (Python.File) and gives that file type an open "
"command that runs the interpreter (``D:\\Program Files\\Python\\python.exe "
"\"%1\" %*``).  This is enough to make scripts executable from the command "
"prompt as 'foo.py'.  If you'd rather be able to execute the script by simple "
"typing 'foo' with no extension you need to add .py to the PATHEXT "
"environment variable."
msgstr ""
"I Windows associerar Pythons standardinstallationsprogram redan .py-"
"tillägget med en filtyp (Python.File) och ger filtypen ett öppningskommando "
"som kör tolken (``D:\\Program Files\\Python\\python.exe \"%1\" %*``).  Detta "
"är tillräckligt för att göra skript körbara från kommandotolken som \"foo."
"py\".  Om du hellre vill kunna köra skriptet genom att bara skriva \"foo\" "
"utan något tillägg måste du lägga till .py i PATHEXT-miljövariabeln."

msgid "Why does Python sometimes take so long to start?"
msgstr "Varför tar det ibland så lång tid för Python att starta?"

msgid ""
"Usually Python starts very quickly on Windows, but occasionally there are "
"bug reports that Python suddenly begins to take a long time to start up.  "
"This is made even more puzzling because Python will work fine on other "
"Windows systems which appear to be configured identically."
msgstr ""
"Vanligtvis startar Python mycket snabbt i Windows, men ibland kommer det in "
"felrapporter om att Python plötsligt börjar ta lång tid på sig att starta.  "
"Detta blir ännu mer förbryllande eftersom Python fungerar bra på andra "
"Windows-system som verkar vara konfigurerade på samma sätt."

msgid ""
"The problem may be caused by a misconfiguration of virus checking software "
"on the problem machine.  Some virus scanners have been known to introduce "
"startup overhead of two orders of magnitude when the scanner is configured "
"to monitor all reads from the filesystem.  Try checking the configuration of "
"virus scanning software on your systems to ensure that they are indeed "
"configured identically. McAfee, when configured to scan all file system read "
"activity, is a particular offender."
msgstr ""
"Problemet kan bero på en felaktig konfiguration av viruskontrollprogramvaran "
"på problemdatorn.  Vissa virusskannrar är kända för att införa ett "
"startoverhead på två storleksordningar när skannern är konfigurerad för att "
"övervaka alla läsningar från filsystemet.  Försök att kontrollera "
"konfigurationen av virusskanningsprogram på dina system för att säkerställa "
"att de verkligen är konfigurerade på samma sätt. McAfee, när det är "
"konfigurerat för att skanna all läsaktivitet i filsystemet, är en särskild "
"förbrytare."

msgid "How do I make an executable from a Python script?"
msgstr "Hur skapar jag en körbar fil från ett Python-skript?"

msgid ""
"See :ref:`faq-create-standalone-binary` for a list of tools that can be used "
"to make executables."
msgstr ""
"Se :ref:`faq-create-standalone-binary` för en lista över verktyg som kan "
"användas för att skapa körbara filer."

msgid "Is a ``*.pyd`` file the same as a DLL?"
msgstr "Är en ``*.pyd``-fil samma sak som en DLL?"

msgid ""
"Yes, .pyd files are dll's, but there are a few differences.  If you have a "
"DLL named ``foo.pyd``, then it must have a function ``PyInit_foo()``.  You "
"can then write Python \"import foo\", and Python will search for foo.pyd (as "
"well as foo.py, foo.pyc) and if it finds it, will attempt to call "
"``PyInit_foo()`` to initialize it.  You do not link your .exe with foo.lib, "
"as that would cause Windows to require the DLL to be present."
msgstr ""
"Ja, .pyd-filer är dll:er, men det finns några skillnader.  Om du har en DLL "
"som heter ``foo.pyd``, så måste den ha en funktion ``PyInit_foo()``.  Du kan "
"sedan skriva Python \"import foo\", och Python kommer att söka efter foo.pyd "
"(liksom foo.py, foo.pyc) och om den hittar den, kommer den att försöka "
"anropa ``PyInit_foo()`` för att initiera den.  Du länkar inte din .exe med "
"foo.lib, eftersom det skulle få Windows att kräva att DLL:en finns."

msgid ""
"Note that the search path for foo.pyd is PYTHONPATH, not the same as the "
"path that Windows uses to search for foo.dll.  Also, foo.pyd need not be "
"present to run your program, whereas if you linked your program with a dll, "
"the dll is required.  Of course, foo.pyd is required if you want to say "
"``import foo``.  In a DLL, linkage is declared in the source code with "
"``__declspec(dllexport)``. In a .pyd, linkage is defined in a list of "
"available functions."
msgstr ""
"Observera att sökvägen för foo.pyd är PYTHONPATH, inte samma som den sökväg "
"som Windows använder för att söka efter foo.dll.  Dessutom behöver foo.pyd "
"inte finnas för att köra programmet, men om du har länkat programmet med en "
"dll-fil krävs dll-filen.  Naturligtvis krävs foo.pyd om du vill säga "
"``importera foo``.  I en DLL deklareras länkning i källkoden med "
"``__declspec(dllexport)``. I en .pyd definieras länkningen i en lista över "
"tillgängliga funktioner."

msgid "How can I embed Python into a Windows application?"
msgstr "Hur kan jag bädda in Python i en Windows-applikation?"

msgid ""
"Embedding the Python interpreter in a Windows app can be summarized as "
"follows:"
msgstr ""
"Att bädda in Python-tolken i en Windows-app kan sammanfattas på följande "
"sätt:"

msgid ""
"Do **not** build Python into your .exe file directly.  On Windows, Python "
"must be a DLL to handle importing modules that are themselves DLL's.  (This "
"is the first key undocumented fact.)  Instead, link to :file:`python{NN}."
"dll`; it is typically installed in ``C:\\Windows\\System``.  *NN* is the "
"Python version, a number such as \"33\" for Python 3.3."
msgstr ""
"Bygg **inte** in Python direkt i din .exe-fil.  På Windows måste Python vara "
"en DLL för att hantera import av moduler som själva är DLL:er.  (Detta är "
"det första viktiga odokumenterade faktumet.) Länka istället till :file:"
"`python{NN}.dll`; den installeras vanligtvis i ``C:\\Windows\\System``.  "
"*NN* är Python-versionen, en siffra som \"33\" för Python 3.3."

msgid ""
"You can link to Python in two different ways.  Load-time linking means "
"linking against :file:`python{NN}.lib`, while run-time linking means linking "
"against :file:`python{NN}.dll`.  (General note: :file:`python{NN}.lib` is "
"the so-called \"import lib\" corresponding to :file:`python{NN}.dll`.  It "
"merely defines symbols for the linker.)"
msgstr ""
"Du kan länka till Python på två olika sätt.  Laddningstidslänkning innebär "
"länkning mot :file:`python{NN}.lib`, medan körtidslänkning innebär länkning "
"mot :file:`python{NN}.dll`.  (Allmän anmärkning: :file:`python{NN}.lib` är "
"den så kallade \"import lib\" som motsvarar :file:`python{NN}.dll`.  Det "
"definierar bara symboler för länkaren)"

msgid ""
"Run-time linking greatly simplifies link options; everything happens at run "
"time.  Your code must load :file:`python{NN}.dll` using the Windows "
"``LoadLibraryEx()`` routine.  The code must also use access routines and "
"data in :file:`python{NN}.dll` (that is, Python's C API's) using pointers "
"obtained by the Windows ``GetProcAddress()`` routine.  Macros can make using "
"these pointers transparent to any C code that calls routines in Python's C "
"API."
msgstr ""
"Körtidslänkning förenklar länkalternativen avsevärt; allt sker vid körning.  "
"Din kod måste ladda :file:`python{NN}.dll` med Windows-rutinen "
"``LoadLibraryEx()``.  Koden måste också använda åtkomstrutiner och data i :"
"file:`python{NN}.dll` (det vill säga Pythons C API:er) med hjälp av pekare "
"som erhålls med Windows-rutinen ``GetProcAddress()``.  Makron kan göra "
"användningen av dessa pekare transparent för all C-kod som anropar rutiner i "
"Pythons C API."

msgid ""
"If you use SWIG, it is easy to create a Python \"extension module\" that "
"will make the app's data and methods available to Python.  SWIG will handle "
"just about all the grungy details for you.  The result is C code that you "
"link *into* your .exe file (!)  You do **not** have to create a DLL file, "
"and this also simplifies linking."
msgstr ""
"Om du använder SWIG är det enkelt att skapa en Python \"extension module\" "
"som gör appens data och metoder tillgängliga för Python.  SWIG kommer att "
"hantera nästan alla de smutsiga detaljerna åt dig.  Resultatet är C-kod som "
"du länkar *till* din .exe-fil (!) Du behöver **inte** skapa en DLL-fil, och "
"detta förenklar också länkningen."

msgid ""
"SWIG will create an init function (a C function) whose name depends on the "
"name of the extension module.  For example, if the name of the module is "
"leo, the init function will be called initleo().  If you use SWIG shadow "
"classes, as you should, the init function will be called initleoc().  This "
"initializes a mostly hidden helper class used by the shadow class."
msgstr ""
"SWIG kommer att skapa en init-funktion (en C-funktion) vars namn beror på "
"namnet på tilläggsmodulen.  Om modulens namn t.ex. är leo, kommer init-"
"funktionen att heta initleo().  Om du använder SWIG:s skuggklasser, vilket "
"du bör göra, kommer init-funktionen att heta initleoc().  Detta "
"initialiserar en mestadels dold hjälpklass som används av skuggklassen."

msgid ""
"The reason you can link the C code in step 2 into your .exe file is that "
"calling the initialization function is equivalent to importing the module "
"into Python! (This is the second key undocumented fact.)"
msgstr ""
"Anledningen till att du kan länka C-koden i steg 2 till din .exe-fil är att "
"anrop av initialiseringsfunktionen motsvarar import av modulen till Python! "
"(Detta är det andra viktiga odokumenterade faktumet.)"

msgid ""
"In short, you can use the following code to initialize the Python "
"interpreter with your extension module."
msgstr ""
"Kort sagt kan du använda följande kod för att initiera Python-tolken med din "
"tilläggsmodul."

msgid ""
"#include <Python.h>\n"
"...\n"
"Py_Initialize();  // Initialize Python.\n"
"initmyAppc();  // Initialize (import) the helper class.\n"
"PyRun_SimpleString(\"import myApp\");  // Import the shadow class."
msgstr ""
"#include <Python.h>\n"
"...\n"
"Py_Initialize();  // Initialize Python.\n"
"initmyAppc();  // Initialize (import) the helper class.\n"
"PyRun_SimpleString(\"import myApp\");  // Import the shadow class."

msgid ""
"There are two problems with Python's C API which will become apparent if you "
"use a compiler other than MSVC, the compiler used to build pythonNN.dll."
msgstr ""
"Det finns två problem med Pythons C API som blir uppenbara om du använder en "
"annan kompilator än MSVC, den kompilator som användes för att bygga pythonNN."
"dll."

msgid ""
"Problem 1: The so-called \"Very High Level\" functions that take ``FILE *`` "
"arguments will not work in a multi-compiler environment because each "
"compiler's notion of a ``struct FILE`` will be different.  From an "
"implementation standpoint these are very low level functions."
msgstr ""
"Problem 1: De s.k. \"Very High Level\"-funktionerna som tar ``FILE *``-"
"argument kommer inte att fungera i en miljö med flera kompilatorer eftersom "
"varje kompilator har olika uppfattning om ``struct FILE``.  Ur "
"implementeringssynpunkt är dessa funktioner på mycket låg nivå."

msgid ""
"Problem 2: SWIG generates the following code when generating wrappers to "
"void functions:"
msgstr ""
"Problem 2: SWIG genererar följande kod när man genererar omslag till void-"
"funktioner:"

msgid ""
"Py_INCREF(Py_None);\n"
"_resultobj = Py_None;\n"
"return _resultobj;"
msgstr ""
"Py_INCREF(Py_None);\n"
"_resultobj = Py_None;\n"
"returnera _resultobj;"

msgid ""
"Alas, Py_None is a macro that expands to a reference to a complex data "
"structure called _Py_NoneStruct inside pythonNN.dll.  Again, this code will "
"fail in a mult-compiler environment.  Replace such code by:"
msgstr ""
"Tyvärr är Py_None ett makro som expanderar till en referens till en komplex "
"datastruktur som heter _Py_NoneStruct i pythonNN.dll.  Återigen kommer den "
"här koden att misslyckas i en miljö med flera kompilatorer.  Ersätt sådan "
"kod med:"

msgid "return Py_BuildValue(\"\");"
msgstr "return Py_BuildValue(\"\");"

msgid ""
"It may be possible to use SWIG's ``%typemap`` command to make the change "
"automatically, though I have not been able to get this to work (I'm a "
"complete SWIG newbie)."
msgstr ""
"Det kan vara möjligt att använda SWIGs ``%typemap``-kommando för att göra "
"ändringen automatiskt, men jag har inte lyckats få det att fungera (jag är "
"en fullständig SWIG-nybörjare)."

msgid ""
"Using a Python shell script to put up a Python interpreter window from "
"inside your Windows app is not a good idea; the resulting window will be "
"independent of your app's windowing system.  Rather, you (or the "
"wxPythonWindow class) should create a \"native\" interpreter window.  It is "
"easy to connect that window to the Python interpreter.  You can redirect "
"Python's i/o to _any_ object that supports read and write, so all you need "
"is a Python object (defined in your extension module) that contains read() "
"and write() methods."
msgstr ""
"Det är ingen bra idé att använda ett Python-skalskript för att skapa ett "
"Python-tolkningsfönster inifrån Windows-appen; det resulterande fönstret "
"kommer att vara oberoende av appens fönstersystem.  Istället bör du (eller "
"wxPythonWindow-klassen) skapa ett \"inbyggt\" tolkningsfönster.  Det är lätt "
"att ansluta det fönstret till Python-tolken.  Du kan omdirigera Pythons i/o "
"till _valfritt_ objekt som stöder läsning och skrivning, så allt du behöver "
"är ett Python-objekt (definierat i din tilläggsmodul) som innehåller read()- "
"och write()-metoder."

msgid "How do I keep editors from inserting tabs into my Python source?"
msgstr "Hur hindrar jag redaktörer från att infoga tabbar i min Python-källa?"

msgid ""
"The FAQ does not recommend using tabs, and the Python style guide, :pep:`8`, "
"recommends 4 spaces for distributed Python code; this is also the Emacs "
"python-mode default."
msgstr ""
"FAQ rekommenderar inte att tabbar används och Python Style Guide, :pep:`8`, "
"rekommenderar 4 mellanslag för distribuerad Python-kod; detta är också Emacs "
"python-mode standard."

msgid ""
"Under any editor, mixing tabs and spaces is a bad idea.  MSVC is no "
"different in this respect, and is easily configured to use spaces: Take :"
"menuselection:`Tools --> Options --> Tabs`, and for file type \"Default\" "
"set \"Tab size\" and \"Indent size\" to 4, and select the \"Insert spaces\" "
"radio button."
msgstr ""
"I alla editorer är det en dålig idé att blanda tabbar och mellanslag.  MSVC "
"är inte annorlunda i detta avseende och är lätt att konfigurera för att "
"använda mellanslag: Ta :menuselection:` `Tools --> Options --> Tabs`, och "
"för filtypen \"Default\" ställ in \"Tab size\" och \"Indent size\" till 4, "
"och välj alternativknappen \"Insert spaces\"."

msgid ""
"Python raises :exc:`IndentationError` or :exc:`TabError` if mixed tabs and "
"spaces are causing problems in leading whitespace. You may also run the :mod:"
"`tabnanny` module to check a directory tree in batch mode."
msgstr ""
"Python ger :exc:`IndentationError` eller :exc:`TabError` om blandade tabbar "
"och mellanslag orsakar problem med att leda blanksteg. Du kan också köra "
"modulen :mod:`tabnanny` för att kontrollera ett katalogträd i batch-läge."

msgid "How do I check for a keypress without blocking?"
msgstr "Hur kontrollerar jag en knapptryckning utan att blockera?"

msgid ""
"Use the :mod:`msvcrt` module.  This is a standard Windows-specific extension "
"module. It defines a function ``kbhit()`` which checks whether a keyboard "
"hit is present, and ``getch()`` which gets one character without echoing it."
msgstr ""
"Använd modulen :mod:`msvcrt`.  Detta är en standard Windows-specifik "
"tilläggsmodul. Den definierar funktionen ``kbhit()`` som kontrollerar om det "
"finns en tangentbordsträff, och ``getch()`` som hämtar ett tecken utan att "
"eka det."

msgid "How do I solve the missing api-ms-win-crt-runtime-l1-1-0.dll error?"
msgstr "Hur löser jag felet api-ms-win-crt-runtime-l1-1-0.dll som saknas?"

msgid ""
"This can occur on Python 3.5 and later when using Windows 8.1 or earlier "
"without all updates having been installed. First ensure your operating "
"system is supported and is up to date, and if that does not resolve the "
"issue, visit the `Microsoft support page <https://support.microsoft.com/en-"
"us/help/3118401/>`_ for guidance on manually installing the C Runtime update."
msgstr ""
"Detta kan inträffa på Python 3.5 och senare när du använder Windows 8.1 "
"eller tidigare utan att alla uppdateringar har installerats. Kontrollera "
"först att operativsystemet stöds och är uppdaterat, och om det inte löser "
"problemet, besök Microsofts supportsida <https://support.microsoft.com/en-us/"
"help/3118401/>`_ för vägledning om hur du manuellt installerar C Runtime-"
"uppdateringen."
