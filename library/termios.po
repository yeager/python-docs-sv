# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!termios` --- POSIX style tty control"
msgstr ":mod:`!termios` --- Tty-kontroll i POSIX-stil"

msgid ""
"This module provides an interface to the POSIX calls for tty I/O control. "
"For a complete description of these calls, see :manpage:`termios(3)` Unix "
"manual page.  It is only available for those Unix versions that support "
"POSIX *termios* style tty I/O control configured during installation."
msgstr ""
"Denna modul tillhandahåller ett gränssnitt till POSIX-anropen för tty I/O-"
"kontroll. För en fullständig beskrivning av dessa anrop, se :manpage:"
"`termios(3)` Unix-manualsida.  Den är endast tillgänglig för de Unix-"
"versioner som stöder POSIX *termios*-stil tty I/O-kontroll som konfigureras "
"under installationen."

msgid "Availability"
msgstr "Tillgänglighet"

msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or a :term:`file object`, such as ``sys.stdin`` itself."
msgstr ""
"Alla funktioner i denna modul tar en filbeskrivare *fd* som sitt första "
"argument.  Detta kan vara en heltalsfilbeskrivning, som den som returneras "
"av ``sys.stdin.fileno()``, eller ett :term:`filobjekt`, som ``sys.stdin`` "
"själv."

msgid ""
"This module also defines all the constants needed to work with the functions "
"provided here; these have the same name as their counterparts in C.  Please "
"refer to your system documentation for more information on using these "
"terminal control interfaces."
msgstr ""
"Denna modul definierar också alla konstanter som behövs för att arbeta med "
"de funktioner som tillhandahålls här; dessa har samma namn som sina "
"motsvarigheter i C. Se din systemdokumentation för mer information om hur du "
"använder dessa gränssnitt för terminalstyrning."

msgid "The module defines the following functions:"
msgstr "Modulen definierar följande funktioner:"

msgid ""
"Return a list containing the tty attributes for file descriptor *fd*, as "
"follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* is "
"a list of the tty special characters (each a string of length 1, except the "
"items with indices :const:`VMIN` and :const:`VTIME`, which are integers when "
"these fields are defined).  The interpretation of the flags and the speeds "
"as well as the indexing in the *cc* array must be done using the symbolic "
"constants defined in the :mod:`termios` module."
msgstr ""
"Returnerar en lista som innehåller tty-attributen för filbeskrivaren *fd*, "
"enligt följande: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` där "
"*cc* är en lista med tty-specialtecken (var och en en sträng med längden 1, "
"utom objekten med index :const:`VMIN` och :const:`VTIME`, som är heltal när "
"dessa fält definieras).  Tolkningen av flaggorna och hastigheterna samt "
"indexeringen i *cc*-arrayen måste göras med hjälp av de symboliska "
"konstanter som definieras i modulen :mod:`termios`."

msgid ""
"Set the tty attributes for file descriptor *fd* from the *attributes*, which "
"is a list like the one returned by :func:`tcgetattr`.  The *when* argument "
"determines when the attributes are changed:"
msgstr ""
"Ställ in tty-attributen för filbeskrivaren *fd* från *attributes*, som är en "
"lista liknande den som returneras av :func:`tcgetattr`.  Argumentet *when* "
"bestämmer när attributen ska ändras:"

msgid "Change attributes immediately."
msgstr "Ändra attribut omedelbart."

msgid "Change attributes after transmitting all queued output."
msgstr "Ändra attribut efter att ha sänt all köad utdata."

msgid ""
"Change attributes after transmitting all queued output and discarding all "
"queued input."
msgstr ""
"Ändra attribut efter att ha sänt all köad utdata och kasserat all köad "
"indata."

msgid ""
"Send a break on file descriptor *fd*.  A zero *duration* sends a break for "
"0.25--0.5 seconds; a nonzero *duration* has a system dependent meaning."
msgstr ""
"Skicka en paus på filbeskrivaren *fd*.  En noll *duration* skickar en paus i "
"0,25--0,5 sekunder; en icke-noll *duration* har en systemberoende betydelse."

msgid ""
"Wait until all output written to file descriptor *fd* has been transmitted."
msgstr ""
"Vänta tills alla utdata som skrivits till filbeskrivaren *fd* har överförts."

msgid ""
"Discard queued data on file descriptor *fd*.  The *queue* selector specifies "
"which queue: :const:`TCIFLUSH` for the input queue, :const:`TCOFLUSH` for "
"the output queue, or :const:`TCIOFLUSH` for both queues."
msgstr ""
"Kassera köade data på filbeskrivaren *fd*.  Väljaren *queue* anger vilken "
"kö: :const:`TCIFLUSH` för ingångskön, :const:`TCOFLUSH` för utgångskön "
"eller :const:`TCIOFLUSH` för båda köerna."

msgid ""
"Suspend or resume input or output on file descriptor *fd*.  The *action* "
"argument can be :const:`TCOOFF` to suspend output, :const:`TCOON` to restart "
"output, :const:`TCIOFF` to suspend input, or :const:`TCION` to restart input."
msgstr ""
"Avbryt eller återuppta inmatning eller utmatning på filbeskrivaren *fd*.  "
"Argumentet *action* kan vara :const:`TCOOFF` för att avbryta utdata, :const:"
"`TCOON` för att starta om utdata, :const:`TCIOFF` för att avbryta inmatning "
"eller :const:`TCION` för att starta om inmatning."

msgid ""
"Return a tuple ``(ws_row, ws_col)`` containing the tty window size for file "
"descriptor *fd*. Requires :const:`termios.TIOCGWINSZ` or :const:`termios."
"TIOCGSIZE`."
msgstr ""
"Returnerar en tupel ``(ws_row, ws_col)`` som innehåller tty-fönsterstorleken "
"för filbeskrivaren *fd*. Kräver :const:`termios.TIOCGWINSZ` eller :const:"
"`termios.TIOCGSIZE`."

msgid ""
"Set the tty window size for file descriptor *fd* from *winsize*, which is a "
"two-item tuple ``(ws_row, ws_col)`` like the one returned by :func:"
"`tcgetwinsize`. Requires at least one of the pairs (:const:`termios."
"TIOCGWINSZ`, :const:`termios.TIOCSWINSZ`); (:const:`termios.TIOCGSIZE`, :"
"const:`termios.TIOCSSIZE`) to be defined."
msgstr ""
"Ställ in tty-fönsterstorleken för filbeskrivaren *fd* från *winsize*, som är "
"en tupel med två punkter ``(ws_row, ws_col)`` som den som returneras av :"
"func:`tcgetwinsize`. Kräver att minst ett av paren (:const:`termios."
"TIOCGWINSZ`, :const:`termios.TIOCSWINSZ`); (:const:`termios.TIOCGSIZE`, :"
"const:`termios.TIOCSSIZE`) är definierat."

msgid "Module :mod:`tty`"
msgstr "Modul :mod:`tty`"

msgid "Convenience functions for common terminal control operations."
msgstr "Praktiska funktioner för vanliga terminalstyrningsoperationer."

msgid "Example"
msgstr "Exempel"

msgid ""
"Here's a function that prompts for a password with echoing turned off.  Note "
"the technique using a separate :func:`tcgetattr` call and a :keyword:"
"`try` ... :keyword:`finally` statement to ensure that the old tty attributes "
"are restored exactly no matter what happens::"
msgstr ""
"Här är en funktion som frågar efter ett lösenord med ekot avstängt.  Notera "
"tekniken med ett separat :func:`tcgetattr`-anrop och en :keyword:`try` ... :"
"keyword:`finally`-sats för att säkerställa att de gamla tty-attributen "
"återställs exakt oavsett vad som händer::"

msgid ""
"def getpass(prompt=\"Password: \"):\n"
"    import termios, sys\n"
"    fd = sys.stdin.fileno()\n"
"    old = termios.tcgetattr(fd)\n"
"    new = termios.tcgetattr(fd)\n"
"    new[3] = new[3] & ~termios.ECHO          # lflags\n"
"    try:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, new)\n"
"        passwd = input(prompt)\n"
"    finally:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, old)\n"
"    return passwd"
msgstr ""
"def getpass(prompt=\"Lösenord: \"):\n"
"    import termios, sys\n"
"    fd = sys.stdin.fileno()\n"
"    gammal = termios.tcgetattr(fd)\n"
"    new = termios.tcgetattr(fd)\n"
"    ny[3] = ny[3] & ~termios.ECHO # lflags\n"
"    försök:\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, ny)\n"
"        passwd = input(prompt)\n"
"    slutligen: termios.tcsetattr(fd)\n"
"        termios.tcsetattr(fd, termios.TCSADRAIN, gammal)\n"
"    returnera passwd"

msgid "POSIX"
msgstr "POSIX"

msgid "I/O control"
msgstr "I/O-kontroll"

msgid "tty"
msgstr "tty"
