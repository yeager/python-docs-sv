# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Function Objects"
msgstr "Funktionsobjekt"

msgid "There are a few functions specific to Python functions."
msgstr "Det finns några funktioner som är specifika för Python-funktioner."

msgid "The C structure used for functions."
msgstr "Den C-struktur som används för funktioner."

msgid ""
"This is an instance of :c:type:`PyTypeObject` and represents the Python "
"function type.  It is exposed to Python programmers as ``types."
"FunctionType``."
msgstr ""
"Detta är en instans av :c:type:`PyTypeObject` och representerar Pythons "
"funktionstyp.  Den är exponerad för Python-programmerare som ``types."
"FunctionType``."

msgid ""
"Return true if *o* is a function object (has type :c:data:"
"`PyFunction_Type`). The parameter must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Returnerar true om *o* är ett funktionsobjekt (har typen :c:data:"
"`PyFunction_Type`). Parametern får inte vara ``NULL``.  Denna funktion "
"lyckas alltid."

msgid ""
"Return a new function object associated with the code object *code*. "
"*globals* must be a dictionary with the global variables accessible to the "
"function."
msgstr ""
"Returnerar ett nytt funktionsobjekt som är associerat med kodobjektet "
"*code*. *globals* måste vara en ordbok med de globala variabler som är "
"tillgängliga för funktionen."

msgid ""
"The function's docstring and name are retrieved from the code object. :attr:"
"`~function.__module__` is retrieved from *globals*. The argument defaults, "
"annotations and closure are set to ``NULL``. :attr:`~function.__qualname__` "
"is set to the same value as the code object's :attr:`~codeobject."
"co_qualname` field."
msgstr ""
"Funktionens docstring och namn hämtas från kodobjektet. :attr:`~function."
"__module__` hämtas från *globals*. Argumentets standardvärden, annoteringar "
"och avslutning sätts till ``NULL``. :attr:`~function.__qualname__` sätts "
"till samma värde som kodobjektets fält :attr:`~codeobject.co_qualname``."

msgid ""
"As :c:func:`PyFunction_New`, but also allows setting the function object's :"
"attr:`~function.__qualname__` attribute. *qualname* should be a unicode "
"object or ``NULL``; if ``NULL``, the :attr:`!__qualname__` attribute is set "
"to the same value as the code object's :attr:`~codeobject.co_qualname` field."
msgstr ""
"Som :c:func:`PyFunction_New`, men tillåter även inställning av "
"funktionsobjektets attribut :attr:`~function.__qualname__`. *qualname* bör "
"vara ett unicode-objekt eller ``NULL``; om ``NULL``, sätts attributet :attr:"
"`!__qualname__`` till samma värde som kodobjektets fält :attr:`~codeobject."
"co_qualname``."

msgid "Return the code object associated with the function object *op*."
msgstr "Returnerar kodobjektet som är associerat med funktionsobjektet *op*."

msgid "Return the globals dictionary associated with the function object *op*."
msgstr ""
"Returnerar globals-ordlistan som är kopplad till funktionsobjektet *op*."

msgid ""
"Return a :term:`borrowed reference` to the :attr:`~function.__module__` "
"attribute of the :ref:`function object <user-defined-funcs>` *op*. It can be "
"*NULL*."
msgstr ""
"Returnerar en :term:`lånad referens` till attributet :attr:`~function."
"__module__` i :ref:`funktionsobjektet <user-defined-funcs>` *op*. Det kan "
"vara *NULL*."

msgid ""
"This is normally a :class:`string <str>` containing the module name, but can "
"be set to any other object by Python code."
msgstr ""
"Detta är normalt en :class:`string <str>` som innehåller modulnamnet, men "
"kan ställas in på vilket annat objekt som helst av Python-kod."

msgid ""
"Return the argument default values of the function object *op*. This can be "
"a tuple of arguments or ``NULL``."
msgstr ""
"Returnerar standardvärdena för argumenten i funktionsobjektet *op*. Detta "
"kan vara en tupel av argument eller ``NULL``."

msgid ""
"Set the argument default values for the function object *op*. *defaults* "
"must be ``Py_None`` or a tuple."
msgstr ""
"Ställ in argumentens standardvärden för funktionsobjektet *op*. *defaults* "
"måste vara ``Py_None`` eller en tupel."

msgid "Raises :exc:`SystemError` and returns ``-1`` on failure."
msgstr "Utlöser :exc:`SystemError` och returnerar ``-1`` vid misslyckande."

msgid "Set the vectorcall field of a given function object *func*."
msgstr "Ställ in vectorcall-fältet för ett givet funktionsobjekt *func*."

msgid ""
"Warning: extensions using this API must preserve the behavior of the "
"unaltered (default) vectorcall function!"
msgstr ""
"Varning: Tillägg som använder detta API måste bevara beteendet hos den "
"oförändrade (standard) vectorcall-funktionen!"

msgid ""
"Return the keyword-only argument default values of the function object *op*. "
"This can be a dictionary of arguments or ``NULL``."
msgstr ""
"Returnerar standardvärdena för nyckelordsbaserade argument för "
"funktionsobjektet *op*. Detta kan vara en ordlista med argument eller "
"``NULL``."

msgid ""
"Return the closure associated with the function object *op*. This can be "
"``NULL`` or a tuple of cell objects."
msgstr ""
"Returnerar den closure som är associerad med funktionsobjektet *op*. Detta "
"kan vara ``NULL`` eller en tupel av cellobjekt."

msgid ""
"Set the closure associated with the function object *op*. *closure* must be "
"``Py_None`` or a tuple of cell objects."
msgstr ""
"Ställ in den closure som är associerad med funktionsobjektet *op*. *closure* "
"måste vara ``Py_None`` eller en tupel av cellobjekt."

msgid ""
"Return the annotations of the function object *op*. This can be a mutable "
"dictionary or ``NULL``."
msgstr ""
"Returnerar anteckningarna för funktionsobjektet *op*. Detta kan vara en "
"föränderlig ordbok eller ``NULL``."

msgid ""
"Set the annotations for the function object *op*. *annotations* must be a "
"dictionary or ``Py_None``."
msgstr ""
"Ställ in annoteringarna för funktionsobjektet *op*. *annotations* måste vara "
"en ordbok eller ``Py_None``."

msgid ""
"These functions are similar to their ``PyFunction_Get*`` counterparts, but "
"do not do type checking. Passing anything other than an instance of :c:data:"
"`PyFunction_Type` is undefined behavior."
msgstr ""
"Dessa funktioner liknar sina motsvarigheter i ``PyFunction_Get*``, men gör "
"ingen typkontroll. Att skicka något annat än en instans av :c:data:"
"`PyFunction_Type` är ett odefinierat beteende."

msgid ""
"Register *callback* as a function watcher for the current interpreter. "
"Return an ID which may be passed to :c:func:`PyFunction_ClearWatcher`. In "
"case of error (e.g. no more watcher IDs available), return ``-1`` and set an "
"exception."
msgstr ""
"Registrera *callback* som en funktionsvakt för den aktuella tolken. "
"Returnerar ett ID som kan skickas till :c:func:`PyFunction_ClearWatcher`. I "
"händelse av fel (t.ex. inga fler ID:n tillgängliga), returnera ``-1`` och "
"sätt ett undantag."

msgid ""
"Clear watcher identified by *watcher_id* previously returned from :c:func:"
"`PyFunction_AddWatcher` for the current interpreter. Return ``0`` on "
"success, or ``-1`` and set an exception on error (e.g.  if the given "
"*watcher_id* was never registered.)"
msgstr ""
"Rensa den observatör som identifieras av *watcher_id* och som tidigare "
"returnerats från :c:func:`PyFunction_AddWatcher` för den aktuella tolken. "
"Returnerar ``0`` vid framgång, eller ``-1`` och sätter ett undantag vid fel "
"(t.ex. om det givna *watcher_id* aldrig registrerades)"

msgid "Enumeration of possible function watcher events:"
msgstr "Uppräkning av möjliga händelser för funktionsövervakare:"

msgid "``PyFunction_EVENT_CREATE``"
msgstr "``PyFunction_EVENT_CREATE``"

msgid "``PyFunction_EVENT_DESTROY``"
msgstr "``PyFunction_EVENT_DESTROY``"

msgid "``PyFunction_EVENT_MODIFY_CODE``"
msgstr "``PyFunction_EVENT_MODIFY_CODE``"

msgid "``PyFunction_EVENT_MODIFY_DEFAULTS``"
msgstr "``PyFunction_EVENT_MODIFY_DEFAULTS``"

msgid "``PyFunction_EVENT_MODIFY_KWDEFAULTS``"
msgstr "``PyFunction_EVENT_MODIFY_KWDEFAULTS``"

msgid "Type of a function watcher callback function."
msgstr "Typ av en funktion som är en Watcher callback-funktion."

msgid ""
"If *event* is ``PyFunction_EVENT_CREATE`` or ``PyFunction_EVENT_DESTROY`` "
"then *new_value* will be ``NULL``. Otherwise, *new_value* will hold a :term:"
"`borrowed reference` to the new value that is about to be stored in *func* "
"for the attribute that is being modified."
msgstr ""
"Om *event* är ``PyFunction_EVENT_CREATE`` eller ``PyFunction_EVENT_DESTROY`` "
"så kommer *new_value* att vara ``NULL``. Annars kommer *new_value* att "
"innehålla en :term:`lånad referens` till det nya värde som ska lagras i "
"*func* för det attribut som modifieras."

msgid ""
"The callback may inspect but must not modify *func*; doing so could have "
"unpredictable effects, including infinite recursion."
msgstr ""
"Återkallelsen kan inspektera men får inte modifiera *func*; om så sker kan "
"det få oförutsägbara effekter, inklusive oändlig rekursion."

msgid ""
"If *event* is ``PyFunction_EVENT_CREATE``, then the callback is invoked "
"after *func* has been fully initialized. Otherwise, the callback is invoked "
"before the modification to *func* takes place, so the prior state of *func* "
"can be inspected. The runtime is permitted to optimize away the creation of "
"function objects when possible. In such cases no event will be emitted. "
"Although this creates the possibility of an observable difference of runtime "
"behavior depending on optimization decisions, it does not change the "
"semantics of the Python code being executed."
msgstr ""
"Om *event* är ``PyFunction_EVENT_CREATE``, anropas återuppringningen efter "
"att *func* har initialiserats fullständigt. Annars anropas återuppringningen "
"innan modifieringen av *func* äger rum, så att det tidigare tillståndet för "
"*func* kan inspekteras. Körtiden tillåts optimera bort skapandet av "
"funktionsobjekt när så är möjligt. I sådana fall kommer ingen händelse att "
"sändas ut. Även om detta skapar en möjlighet till en observerbar skillnad i "
"körtidsbeteende beroende på optimeringsbeslut, ändrar det inte semantiken i "
"den Python-kod som exekveras."

msgid ""
"If *event* is ``PyFunction_EVENT_DESTROY``,  Taking a reference in the "
"callback to the about-to-be-destroyed function will resurrect it, preventing "
"it from being freed at this time. When the resurrected object is destroyed "
"later, any watcher callbacks active at that time will be called again."
msgstr ""
"Om *event* är ``PyFunction_EVENT_DESTROY`` kommer en referens i callbacken "
"till den funktion som ska förstöras att återuppliva den, vilket förhindrar "
"att den frigörs vid denna tidpunkt. När det återupplivade objektet förstörs "
"senare, kommer alla watcher callbacks som är aktiva vid den tidpunkten att "
"anropas igen."

msgid ""
"If the callback sets an exception, it must return ``-1``; this exception "
"will be printed as an unraisable exception using :c:func:"
"`PyErr_WriteUnraisable`. Otherwise it should return ``0``."
msgstr ""
"Om callbacken anger ett undantag måste den returnera ``-1``; detta undantag "
"kommer att skrivas ut som ett undantag som inte kan bedömas med :c:func:"
"`PyErr_WriteUnraisable`. Annars bör det returnera ``0``."

msgid ""
"There may already be a pending exception set on entry to the callback. In "
"this case, the callback should return ``0`` with the same exception still "
"set. This means the callback may not call any other API that can set an "
"exception unless it saves and clears the exception state first, and restores "
"it before returning."
msgstr ""
"Det kan redan finnas ett väntande undantag inställt vid ingången till "
"återuppringningen. I detta fall bör återuppringningen returnera ``0`` med "
"samma undantag fortfarande inställt. Detta innebär att återuppringningen "
"inte får anropa något annat API som kan ställa in ett undantag om det inte "
"sparar och rensar undantagstillståndet först och återställer det innan det "
"returneras."

msgid "object"
msgstr "objekt"

msgid "function"
msgstr "funktion"

msgid "MethodType (in module types)"
msgstr "MethodType (i modultyper)"
