# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!string.templatelib` --- Support for template string literals"
msgstr ":mod:`!string.templatelib` --- Stöd för mallsträngslitteraler"

msgid "**Source code:** :source:`Lib/string/templatelib.py`"
msgstr "**Källkod:** :source:`Lib/string/templatelib.py`"

msgid ":ref:`Format strings <f-strings>`"
msgstr ":ref:`Formatsträngar <f-strings>`"

msgid ":ref:`T-string literal syntax <t-strings>`"
msgstr ":ref:`T-sträng litteral syntax <t-strings>`"

msgid "Template strings"
msgstr "Mall för strängar"

msgid ""
"Template strings are a formatting mechanism that allows for deep control "
"over how strings are processed. You can create templates using :ref:`t-"
"string literal syntax <t-strings>`, which is identical to :ref:`f-string "
"syntax <f-strings>` but uses a ``t`` instead of an ``f``. While f-strings "
"evaluate to ``str``, t-strings create a :class:`Template` instance that "
"gives you access to the static and interpolated (in curly braces) parts of a "
"string *before* they are combined."
msgstr ""
"Mallsträngar är en formateringsmekanism som ger djup kontroll över hur "
"strängar bearbetas. Du kan skapa mallar med hjälp av :ref:`t-string literal "
"syntax <t-strings>`, vilket är identiskt med :ref:`f-string syntax <f-"
"strings>` men använder ett ``t`` istället för ett ``f``. Medan f-strängar "
"utvärderas till ``str``, skapar t-strängar en :class:`Template`-instans som "
"ger dig tillgång till de statiska och interpolerade (inom hakparenteser) "
"delarna av en sträng *innan* de kombineras."

msgid "Template"
msgstr "Mall"

msgid ""
"The :class:`!Template` class describes the contents of a template string."
msgstr "Klassen :class:`!Template` beskriver innehållet i en mallsträng."

msgid ""
":class:`!Template` instances are immutable: their attributes cannot be "
"reassigned."
msgstr ""
":class:`!Template`-instanser är oföränderliga: deras attribut kan inte "
"tilldelas på nytt."

msgid "Create a new :class:`!Template` object."
msgstr "Skapa ett nytt :class:`!Template`-objekt."

msgid "Parameters"
msgstr "Parametrar"

msgid "A mix of strings and :class:`Interpolation` instances in any order."
msgstr ""
"En blandning av strängar och :class:`Interpolation`-instanser i valfri "
"ordning."

msgid ""
"The most common way to create a :class:`!Template` instance is to use the :"
"ref:`t-string literal syntax <t-strings>`. This syntax is identical to that "
"of :ref:`f-strings <f-strings>` except that it uses a ``t`` instead of an "
"``f``:"
msgstr ""
"Det vanligaste sättet att skapa en :class:`!Template`-instans är att "
"använda :ref:`t-string literal syntax <t-strings>`. Denna syntax är identisk "
"med den för :ref:`f-strings <f-strings>` förutom att den använder ett ``t`` "
"istället för ett ``f``:"

msgid ""
"Templates ars stored as sequences of literal :attr:`~Template.strings` and "
"dynamic :attr:`~Template.interpolations`. A :attr:`~Template.values` "
"attribute holds the interpolation values:"
msgstr ""
"Mallar lagras som sekvenser av bokstavliga :attr:`~Template.strings` och "
"dynamiska :attr:`~Template.interpolations`. Ett attribut :attr:`~Template."
"values` innehåller interpoleringsvärdena:"

msgid ""
"The :attr:`!strings` tuple has one more element than :attr:`!interpolations` "
"and :attr:`!values`; the interpolations “belong” between the strings. This "
"may be easier to understand when tuples are aligned::"
msgstr ""
"Tupeln :attr:`!strings` har ett element mer än :attr:`!interpolations` och :"
"attr:`!values`; interpolationerna \"hör hemma\" mellan strängarna. Detta kan "
"vara lättare att förstå när tuplerna är aligned::"

msgid ""
"template.strings:  ('Hello ',          '!')\n"
"template.values:   (          'World',    )"
msgstr ""
"mall.strängar: ('Hello', '!')\n"
"mall.värden: ( 'Världen', )"

msgid ""
"While literal syntax is the most common way to create :class:`!Template` "
"instances, it is also possible to create them directly using the constructor:"
msgstr ""
"Även om litteral syntax är det vanligaste sättet att skapa :class:`!"
"Template`-instanser, är det också möjligt att skapa dem direkt med hjälp av "
"konstruktorn:"

msgid ""
"If two or more consecutive strings are passed, they will be concatenated "
"into a single value in the :attr:`~Template.strings` attribute. For example, "
"the following code creates a :class:`Template` with a single final string:"
msgstr ""
"Om två eller flera på varandra följande strängar skickas, kommer de att "
"sammanfogas till ett enda värde i attributet :attr:`~Template.strings`. "
"Följande kod skapar t.ex. en :class:`Template` med en enda slutlig sträng:"

msgid ""
"If two or more consecutive interpolations are passed, they will be treated "
"as separate interpolations and an empty string will be inserted between "
"them. For example, the following code creates a template with empty "
"placeholders in the :attr:`~Template.strings` attribute:"
msgstr ""
"Om två eller flera på varandra följande interpoleringar skickas, behandlas "
"de som separata interpoleringar och en tom sträng infogas mellan dem. "
"Följande kod skapar t.ex. en mall med tomma platshållare i attributet :attr:"
"`~Template.strings`:"

msgid "A :ref:`tuple <tut-tuples>` of the static strings in the template."
msgstr "En :ref:`tupel <tut-tuples>` av de statiska strängarna i mallen."

msgid "Empty strings *are* included in the tuple:"
msgstr "Tomma strängar *inkluderas* i tupeln:"

msgid ""
"The ``strings`` tuple is never empty, and always contains one more string "
"than the ``interpolations`` and ``values`` tuples:"
msgstr ""
"Tupeln ``strings`` är aldrig tom och innehåller alltid en sträng mer än "
"tuplarna ``interpolations`` och ``values``:"

msgid "A tuple of the interpolations in the template."
msgstr "En tupel av interpoleringarna i mallen."

msgid ""
"The ``interpolations`` tuple may be empty and always contains one fewer "
"values than the ``strings`` tuple:"
msgstr ""
"Tupeln ``interpolations`` kan vara tom och innehåller alltid ett värde "
"mindre än tupeln ``strings``:"

msgid "A tuple of all interpolated values in the template."
msgstr "En tupel av alla interpolerade värden i mallen."

msgid ""
"The ``values`` tuple always has the same length as the ``interpolations`` "
"tuple. It is equivalent to ``tuple(i.value for i in template."
"interpolations)``."
msgstr ""
"Tupeln ``values`` har alltid samma längd som tupeln ``interpolations``. Den "
"är ekvivalent med ``tuple(i.value for i in template.interpolations)``."

msgid ""
"Iterate over the template, yielding each string and :class:`Interpolation` "
"in order."
msgstr ""
"Iterera över mallen och få fram varje sträng och :class:`Interpolation` i "
"ordning."

msgid "Empty strings are *not* included in the iteration:"
msgstr "Tomma strängar ingår *inte* i iterationen:"

msgid ""
"Concatenate this template with another, returning a new :class:`!Template` "
"instance:"
msgstr ""
"Sammanfoga denna mall med en annan och returnera en ny :class:`!Template`-"
"instans:"

msgid ""
"Concatenation between a :class:`!Template` and a ``str`` is *not* supported. "
"This is because it is ambiguous whether the string should be treated as a "
"static string or an interpolation. If you want to concatenate a :class:`!"
"Template` with a string, you should either wrap the string directly in a :"
"class:`!Template` (to treat it as a static string) or use an :class:`!"
"Interpolation` (to treat it as dynamic):"
msgstr ""
"Konkatenering mellan en :class:`!Template` och en ``str`` stöds *inte*. "
"Detta beror på att det är tvetydigt om strängen ska behandlas som en statisk "
"sträng eller en interpolation. Om du vill konkatenera en :class:`!Template` "
"med en sträng, bör du antingen linda in strängen direkt i en :class:`!"
"Template` (för att behandla den som en statisk sträng) eller använda en :"
"class:`!Interpolation` (för att behandla den som dynamisk):"

msgid "Create a new :class:`!Interpolation` object."
msgstr "Skapa ett nytt :class:`!Interpolation`-objekt."

msgid "The evaluated, in-scope result of the interpolation."
msgstr "Det utvärderade resultatet av interpoleringen, inom räckvidden."

msgid "The text of a valid Python expression, or an empty string."
msgstr "Texten i ett giltigt Python-uttryck, eller en tom sträng."

msgid ""
"The optional :ref:`conversion <formatstrings>` to be used, one of r, s, and "
"a."
msgstr ""
"Den valfria :ref:`konvertering <formatstrings>` som ska användas, en av r, s "
"och a."

msgid ""
"An optional, arbitrary string used as the :ref:`format specification "
"<formatspec>` to present the value."
msgstr ""
"En valfri, godtycklig sträng som används som :ref:`formatspecifikation "
"<formatspec>` för att presentera värdet."

msgid ""
"The :class:`!Interpolation` type represents an expression inside a template "
"string."
msgstr ""
"Typen :class:`!Interpolation` representerar ett uttryck inuti en mallsträng."

msgid ""
":class:`!Interpolation` instances are immutable: their attributes cannot be "
"reassigned."
msgstr ""
":class:`!Interpolation`-instanser är oföränderliga: deras attribut kan inte "
"tilldelas på nytt."

msgid "Returns"
msgstr "Returer"

msgid "The evaluated value of the interpolation."
msgstr "Det utvärderade värdet för interpoleringen."

msgid "type"
msgstr "typ"

msgid "str"
msgstr "str"

msgid ""
"The :attr:`~Interpolation.expression` is the original text of the "
"interpolation's Python expression, if the interpolation was created from a t-"
"string literal. Developers creating interpolations manually should either "
"set this to an empty string or choose a suitable valid Python expression."
msgstr ""
":attr:`~Interpolation.expression` är originaltexten för interpolationens "
"Python-uttryck, om interpolationen skapades från en t-strängslitteral. "
"Utvecklare som skapar interpoleringen manuellt bör antingen sätta detta till "
"en tom sträng eller välja ett lämpligt giltigt Python-uttryck."

msgid "The conversion to apply to the value, or ``None``."
msgstr "Den konvertering som ska tillämpas på värdet, eller ``None``."

msgid "``Literal[\"a\", \"r\", \"s\"] | None``"
msgstr "``Literal[\"a\", \"r\", \"s\"] | Ingen``"

msgid ""
"The :attr:`!Interpolation.conversion` is the optional conversion to apply to "
"the value:"
msgstr ""
":attr:`!Interpolation.conversion` är den valfria konvertering som ska "
"tillämpas på värdet:"

msgid ""
"Unlike f-strings, where conversions are applied automatically, the expected "
"behavior with t-strings is that code that *processes* the :class:`!Template` "
"will decide how to interpret and whether to apply the :attr:`!Interpolation."
"conversion`."
msgstr ""
"Till skillnad från f-strängar, där konverteringar tillämpas automatiskt, är "
"det förväntade beteendet med t-strängar att kod som *behandlar* :class:`!"
"Template` kommer att avgöra hur den ska tolkas och om den ska tillämpa :attr:"
"`!Interpolation.conversion`."

msgid "The format specification to apply to the value."
msgstr "Den formatspecifikation som ska tillämpas på värdet."

msgid ""
"The :attr:`!Interpolation.format_spec` is an optional, arbitrary string used "
"as the format specification to present the value:"
msgstr ""
":attr:`!Interpolation.format_spec` är en valfri, godtycklig sträng som "
"används som formatspecifikation för att presentera värdet:"

msgid ""
"Unlike f-strings, where format specifications are applied automatically via "
"the :func:`format` protocol, the expected behavior with t-strings is that "
"code that *processes* the :class:`!Template` will decide how to interpret "
"and whether to apply the format specification. As a result, :attr:`!"
"Interpolation.format_spec` values in :class:`!Template` instances can be "
"arbitrary strings, even those that do not necessarily conform to the rules "
"of Python's :func:`format` protocol."
msgstr ""
"Till skillnad från f-strängar, där formatspecifikationer tillämpas "
"automatiskt via :func:`format`-protokollet, är det förväntade beteendet med "
"t-strängar att kod som *processar* :class:`!Template` bestämmer hur "
"formatspecifikationen ska tolkas och om den ska tillämpas. Som ett resultat "
"kan :attr:`!Interpolation.format_spec`-värden i :class:`!Template`-instanser "
"vara godtyckliga strängar, även sådana som inte nödvändigtvis överensstämmer "
"med reglerna i Pythons :func:`format`-protokoll."

msgid ""
"Interpolations support pattern matching, allowing you to match against their "
"attributes with the :ref:`match statement <match>`:"
msgstr ""
"Interpolationer stöder mönstermatchning, vilket gör att du kan matcha mot "
"deras attribut med :ref:`match statement <match>`:"

msgid "Helper functions"
msgstr "Hjälpfunktioner"

msgid ""
"Applies formatted string literal :ref:`conversion <formatstrings-"
"conversion>` semantics to the given object *obj*. This is frequently useful "
"for custom template string processing logic."
msgstr ""
"Tillämpar formaterad strängbokstäver :ref:`konvertering <formatstrings-"
"conversion>` semantik på det givna objektet *obj*. Detta är ofta användbart "
"för anpassad logik för bearbetning av mallsträngar."

msgid "Three conversion flags are currently supported:"
msgstr "Tre konverteringsflaggor stöds för närvarande:"

msgid "``'s'`` which calls :func:`str` on the value,"
msgstr "``'s'`` som anropar :func:`str` på värdet,"

msgid "``'r'`` which calls :func:`repr`, and"
msgstr "``'r'`` som anropar :func:`repr`, och"

msgid "``'a'`` which calls :func:`ascii`."
msgstr "``'a'`` som anropar :func:`ascii`."

msgid "If the conversion flag is ``None``, *obj* is returned unchanged."
msgstr "Om konverteringsflaggan är ``None`` returneras *obj* oförändrad."
