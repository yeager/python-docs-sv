# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!email.iterators`: Iterators"
msgstr ""

msgid "**Source code:** :source:`Lib/email/iterators.py`"
msgstr ""

msgid ""
"Iterating over a message object tree is fairly easy with the :meth:`Message."
"walk <email.message.Message.walk>` method.  The :mod:`email.iterators` "
"module provides some useful higher level iterations over message object "
"trees."
msgstr ""

msgid ""
"This iterates over all the payloads in all the subparts of *msg*, returning "
"the string payloads line-by-line.  It skips over all the subpart headers, "
"and it skips over any subpart with a payload that isn't a Python string.  "
"This is somewhat equivalent to reading the flat text representation of the "
"message from a file using :meth:`~io.TextIOBase.readline`, skipping over all "
"the intervening headers."
msgstr ""

msgid ""
"Optional *decode* is passed through to :meth:`Message.get_payload <email."
"message.Message.get_payload>`."
msgstr ""

msgid ""
"This iterates over all the subparts of *msg*, returning only those subparts "
"that match the MIME type specified by *maintype* and *subtype*."
msgstr ""

msgid ""
"Note that *subtype* is optional; if omitted, then subpart MIME type matching "
"is done only with the main type.  *maintype* is optional too; it defaults "
"to :mimetype:`text`."
msgstr ""

msgid ""
"Thus, by default :func:`typed_subpart_iterator` returns each subpart that "
"has a MIME type of :mimetype:`text/\\*`."
msgstr ""

msgid ""
"The following function has been added as a useful debugging tool.  It should "
"*not* be considered part of the supported public interface for the package."
msgstr ""

msgid ""
"Prints an indented representation of the content types of the message object "
"structure.  For example:"
msgstr ""

msgid ""
">>> msg = email.message_from_file(somefile)\n"
">>> _structure(msg)\n"
"multipart/mixed\n"
"    text/plain\n"
"    text/plain\n"
"    multipart/digest\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"        message/rfc822\n"
"            text/plain\n"
"    text/plain"
msgstr ""

msgid ""
"Optional *fp* is a file-like object to print the output to.  It must be "
"suitable for Python's :func:`print` function.  *level* is used internally. "
"*include_default*, if true, prints the default type as well."
msgstr ""
