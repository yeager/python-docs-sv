# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!email.generator`: Generating MIME documents"
msgstr ":mod:`!email.generator`: Generering av MIME-dokument"

msgid "**Source code:** :source:`Lib/email/generator.py`"
msgstr "**Källkod:** :source:`Lib/email/generator.py`"

msgid ""
"One of the most common tasks is to generate the flat (serialized) version of "
"the email message represented by a message object structure.  You will need "
"to do this if you want to send your message via :meth:`smtplib.SMTP."
"sendmail`, or print the message on the console.  Taking a message object "
"structure and producing a serialized representation is the job of the "
"generator classes."
msgstr ""
"En av de vanligaste uppgifterna är att generera den platta (serialiserade) "
"versionen av e-postmeddelandet som representeras av en "
"meddelandeobjektstruktur.  Du behöver göra detta om du vill skicka ditt "
"meddelande via :meth:`smtplib.SMTP.sendmail`, eller skriva ut meddelandet på "
"konsolen.  Att ta en meddelandeobjektstruktur och producera en serialiserad "
"representation är jobbet för generatorklasserna."

msgid ""
"As with the :mod:`email.parser` module, you aren't limited to the "
"functionality of the bundled generator; you could write one from scratch "
"yourself.  However the bundled generator knows how to generate most email in "
"a standards-compliant way, should handle MIME and non-MIME email messages "
"just fine, and is designed so that the bytes-oriented parsing and generation "
"operations are inverses, assuming the same non-transforming :mod:`~email."
"policy` is used for both.  That is, parsing the serialized byte stream via "
"the :class:`~email.parser.BytesParser` class and then regenerating the "
"serialized byte stream using :class:`BytesGenerator` should produce output "
"identical to the input [#]_.  (On the other hand, using the generator on an :"
"class:`~email.message.EmailMessage` constructed by program may result in "
"changes to the :class:`~email.message.EmailMessage` object as defaults are "
"filled in.)"
msgstr ""
"Precis som med modulen :mod:`email.parser` är du inte begränsad till "
"funktionaliteten i den medföljande generatorn; du kan skriva en från grunden "
"själv.  Den medföljande generatorn vet dock hur man genererar de flesta e-"
"postmeddelanden på ett standardkompatibelt sätt, bör hantera MIME- och icke-"
"MIME-e-postmeddelanden helt okej och är utformad så att de bytesorienterade "
"pars- och genereringsoperationerna är inversa, förutsatt att samma icke-"
"transformerande :mod:`~email.policy` används för båda.  Det vill säga, att "
"analysera den serialiserade byteströmmen via :class:`~email.parser."
"BytesParser`-klassen och sedan regenerera den serialiserade byteströmmen "
"med :class:`BytesGenerator` bör ge utdata som är identiska med indata [#]_.  "
"(Å andra sidan kan användning av generatorn på ett :class:`~email.message."
"EmailMessage` konstruerat av ett program resultera i ändringar av :class:"
"`~email.message.EmailMessage`-objektet när standardvärden fylls i)"

msgid ""
"The :class:`Generator` class can be used to flatten a message into a text "
"(as opposed to binary) serialized representation, but since Unicode cannot "
"represent binary data directly, the message is of necessity transformed into "
"something that contains only ASCII characters, using the standard email RFC "
"Content Transfer Encoding techniques for encoding email messages for "
"transport over channels that are not \"8 bit clean\"."
msgstr ""
"Klassen :class:`Generator` kan användas för att platta till ett meddelande "
"till en text (i motsats till binär) serialiserad representation, men "
"eftersom Unicode inte kan representera binära data direkt måste meddelandet "
"omvandlas till något som bara innehåller ASCII-tecken, med hjälp av standard "
"RFC Content Transfer Encoding-teknik för e-postmeddelanden för kodning av e-"
"postmeddelanden för transport över kanaler som inte är \"8 bit clean\"."

msgid ""
"To accommodate reproducible processing of SMIME-signed messages :class:"
"`Generator` disables header folding for message parts of type ``multipart/"
"signed`` and all subparts."
msgstr ""
"För att möjliggöra reproducerbar behandling av SMIME-signerade meddelanden "
"inaktiverar :class:`Generator` header folding för meddelandedelar av typen "
"``multipart/signed`` och alla underdelar."

msgid ""
"Return a :class:`BytesGenerator` object that will write any message provided "
"to the :meth:`flatten` method, or any surrogateescape encoded text provided "
"to the :meth:`write` method, to the :term:`file-like object` *outfp*. "
"*outfp* must support a ``write`` method that accepts binary data."
msgstr ""
"Returnerar ett :class:`BytesGenerator`-objekt som skriver ett meddelande som "
"tillhandahålls till :meth:`flatten`-metoden, eller en surrogateescape-kodad "
"text som tillhandahålls till :meth:`write`-metoden, till :term:`filliknande "
"objektet` *outfp*. *outfp* måste ha stöd för en ``write``-metod som "
"accepterar binära data."

msgid ""
"If optional *mangle_from_* is ``True``, put a ``>`` character in front of "
"any line in the body that starts with the exact string ``\"From \"``, that "
"is ``From`` followed by a space at the beginning of a line.  *mangle_from_* "
"defaults to the value of the :attr:`~email.policy.Policy.mangle_from_` "
"setting of the *policy* (which is ``True`` for the :data:`~email.policy."
"compat32` policy and ``False`` for all others). *mangle_from_* is intended "
"for use when messages are stored in Unix mbox format (see :mod:`mailbox` and "
"`WHY THE CONTENT-LENGTH FORMAT IS BAD <https://www.jwz.org/doc/content-"
"length.html>`_)."
msgstr ""
"Om det valfria *mangle_from_* är ``True``, placeras ett ``>``-tecken framför "
"varje rad i brödtexten som börjar med den exakta strängen ``\"From\"``, det "
"vill säga ``From`` följt av ett mellanslag i början av en rad.  "
"*mangle_from_* är standardvärdet för inställningen :attr:`~email.policy."
"Policy.mangle_from_` i *policy* (som är ``True`` för policyn :data:`~email."
"policy.compat32` och ``False`` för alla andra). *mangle_from_* är avsedd att "
"användas när meddelanden lagras i Unix mbox-format (se :mod:`mailbox` och "
"`Varför är innehållslängdsformatet dåligt <https://www.jwz.org/doc/content-"
"length.html>`_)."

msgid ""
"If *maxheaderlen* is not ``None``, refold any header lines that are longer "
"than *maxheaderlen*, or if ``0``, do not rewrap any headers.  If "
"*manheaderlen* is ``None`` (the default), wrap headers and other message "
"lines according to the *policy* settings."
msgstr ""
"Om *maxheaderlen* inte är ``None``, vik om alla rubrikrader som är längre än "
"*maxheaderlen*, eller om ``0``, vik inte om några rubriker.  Om "
"*manheaderlen* är ``None`` (standard), bryts rubriker och andra "
"meddelanderader enligt inställningarna för *policy*."

msgid ""
"If *policy* is specified, use that policy to control message generation.  If "
"*policy* is ``None`` (the default), use the policy associated with the :"
"class:`~email.message.Message` or :class:`~email.message.EmailMessage` "
"object passed to ``flatten`` to control the message generation.  See :mod:"
"`email.policy` for details on what *policy* controls."
msgstr ""
"Om *policy* anges används den policyn för att styra genereringen av "
"meddelanden.  Om *policy* är ``None`` (standard), används den policy som är "
"associerad med :class:`~email.message.Message` eller :class:`~email.message."
"EmailMessage`-objektet som skickas till ``flatten`` för att styra "
"genereringen av meddelanden.  Se :mod:`email.policy` för detaljer om vad "
"*policy* kontrollerar."

msgid "Added the *policy* keyword."
msgstr "Nyckelordet *policy* har lagts till."

msgid ""
"The default behavior of the *mangle_from_* and *maxheaderlen* parameters is "
"to follow the policy."
msgstr ""
"Standardbeteendet för parametrarna *mangle_from_* och *maxheaderlen* är att "
"följa policyn."

msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`BytesGenerator` instance "
"was created."
msgstr ""
"Skriv ut en textrepresentation av meddelandeobjektstrukturen med *msg* som "
"bas till den utdatafil som angavs när instansen :class:`BytesGenerator` "
"skapades."

msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit`` (the default), copy any headers in the original parsed message that "
"have not been modified to the output with any bytes with the high bit set "
"reproduced as in the original, and preserve the non-ASCII :mailheader:"
"`Content-Transfer-Encoding` of any body parts that have them. If "
"``cte_type`` is ``7bit``, convert the bytes with the high bit set as needed "
"using an ASCII-compatible :mailheader:`Content-Transfer-Encoding`. That is, "
"transform parts with non-ASCII :mailheader:`Content-Transfer-Encoding` (:"
"mailheader:`Content-Transfer-Encoding: 8bit`) to an ASCII compatible :"
"mailheader:`Content-Transfer-Encoding`, and encode RFC-invalid non-ASCII "
"bytes in headers using the MIME ``unknown-8bit`` character set, thus "
"rendering them RFC-compliant."
msgstr ""
"Om alternativet :mod:`~email.policy` option :attr:`~email.policy.Policy."
"cte_type` är ``8bit`` (standard), kopiera alla rubriker i det ursprungliga "
"analyserade meddelandet som inte har modifierats till utdata med alla byte "
"med den höga bituppsättningen reproducerade som i originalet, och bevara den "
"icke-ASCII :mailheader:`Content-Transfer-Encoding` för alla kroppsdelar som "
"har dem. Om ``cte_type`` är ``7bit``, konvertera byte med hög bituppsättning "
"efter behov med hjälp av en ASCII-kompatibel :mailheader:`Content-Transfer-"
"Encoding`. Det vill säga, omvandla delar med icke-ASCII :mailheader:`Content-"
"Transfer-Encoding` (:mailheader:`Content-Transfer-Encoding: 8bit`) till en "
"ASCII-kompatibel :mailheader:`Content-Transfer-Encoding`, och koda RFC-"
"giltiga icke-ASCII-bytes i rubriker med MIME-teckensatsen ``unknown-8bit``, "
"vilket gör dem RFC-kompatibla."

msgid ""
"If *unixfrom* is ``True``, print the envelope header delimiter used by the "
"Unix mailbox format (see :mod:`mailbox`) before the first of the :rfc:`5322` "
"headers of the root message object.  If the root object has no envelope "
"header, craft a standard one.  The default is ``False``. Note that for "
"subparts, no envelope header is ever printed."
msgstr ""
"Om *unixfrom* är ``True``, skriv ut den avgränsare för kuvertrubriker som "
"används av Unix brevlådeformat (se :mod:`mailbox`) före den första av :rfc:"
"`5322'-rubrikerna i rotmeddelandeobjektet.  Om rotobjektet inte har något "
"kuverthuvud skapas ett standardhuvud.  Standardvärdet är ``False``. "
"Observera att för subparts skrivs aldrig något kuverthuvud ut."

msgid ""
"If *linesep* is not ``None``, use it as the separator character between all "
"the lines of the flattened message.  If *linesep* is ``None`` (the default), "
"use the value specified in the *policy*."
msgstr ""
"Om *linesep* inte är ``None`` används det som skiljetecken mellan alla rader "
"i det tillplattade meddelandet.  Om *linesep* är ``None`` (standard), "
"används det värde som anges i *policy*."

msgid ""
"Return an independent clone of this :class:`BytesGenerator` instance with "
"the exact same option settings, and *fp* as the new *outfp*."
msgstr ""
"Returnerar en oberoende klon av denna :class:`BytesGenerator`-instans med "
"exakt samma alternativinställningar, och *fp* som den nya *outfp*."

msgid ""
"Encode *s* using the ``ASCII`` codec and the ``surrogateescape`` error "
"handler, and pass it to the *write* method of the *outfp* passed to the :"
"class:`BytesGenerator`'s constructor."
msgstr ""
"Koda *s* med hjälp av codec ``ASCII`` och felhanteraren ``surrogateescape`` "
"och skicka den till metoden *write* i *outfp* som skickas till :class:"
"`BytesGenerator`'s konstruktör."

msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods :"
"meth:`~email.message.EmailMessage.as_bytes` and ``bytes(aMessage)`` (a.k.a. :"
"meth:`~email.message.EmailMessage.__bytes__`), which simplify the generation "
"of a serialized binary representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Som en bekvämlighet tillhandahåller :class:`~email.message.EmailMessage` "
"metoderna :meth:`~email.message.EmailMessage.as_bytes` och "
"``bytes(aMessage)`` (a.k.a. :meth:`~email.message.EmailMessage.__bytes__`), "
"som förenklar genereringen av en serialiserad binär representation av ett "
"meddelandeobjekt.  För mer information, se :mod:`email.message`."

msgid ""
"Because strings cannot represent binary data, the :class:`Generator` class "
"must convert any binary data in any message it flattens to an ASCII "
"compatible format, by converting them to an ASCII compatible :mailheader:"
"`Content-Transfer_Encoding`.  Using the terminology of the email RFCs, you "
"can think of this as :class:`Generator` serializing to an I/O stream that is "
"not \"8 bit clean\".  In other words, most applications will want to be "
"using :class:`BytesGenerator`, and not :class:`Generator`."
msgstr ""
"Eftersom strängar inte kan representera binära data måste klassen :class:"
"`Generator` konvertera alla binära data i alla meddelanden som den plattar "
"till ett ASCII-kompatibelt format genom att konvertera dem till en ASCII-"
"kompatibel :mailheader:`Content-Transfer_Encoding`.  Med hjälp av "
"terminologin i RFC för e-post kan du tänka på detta som att :class:"
"`Generator` serialiserar till en I/O-ström som inte är \"8 bit clean\".  Med "
"andra ord kommer de flesta applikationer att vilja använda :class:"
"`BytesGenerator`, och inte :class:`Generator`."

msgid ""
"Return a :class:`Generator` object that will write any message provided to "
"the :meth:`flatten` method, or any text provided to the :meth:`write` "
"method, to the :term:`file-like object` *outfp*.  *outfp* must support a "
"``write`` method that accepts string data."
msgstr ""
"Returnerar ett :class:`Generator`-objekt som skriver alla meddelanden som "
"anges i :meth:`flatten`-metoden, eller all text som anges i :meth:`write`-"
"metoden, till :term:`filliknande objekt` *outfp*.  *outfp* måste ha stöd för "
"en ``write``-metod som accepterar strängdata."

msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`Generator` instance was "
"created."
msgstr ""
"Skriv ut en textrepresentation av meddelandeobjektstrukturen med *msg* som "
"rot till den utdatafil som angavs när :class:`Generator`-instansen skapades."

msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit``, generate the message as if the option were set to ``7bit``. (This "
"is required because strings cannot represent non-ASCII bytes.) Convert any "
"bytes with the high bit set as needed using an ASCII-compatible :mailheader:"
"`Content-Transfer-Encoding`.  That is, transform parts with non-ASCII :"
"mailheader:`Content-Transfer-Encoding` (:mailheader:`Content-Transfer-"
"Encoding: 8bit`) to an ASCII compatible :mailheader:`Content-Transfer-"
"Encoding`, and encode RFC-invalid non-ASCII bytes in headers using the MIME "
"``unknown-8bit`` character set, thus rendering them RFC-compliant."
msgstr ""
"Om alternativet :mod:`~email.policy` :attr:`~email.policy.Policy.cte_type` "
"är ``8bit``, genereras meddelandet som om alternativet vore inställt på "
"``7bit``. (Detta krävs eftersom strängar inte kan representera icke-ASCII-"
"bytes.) Konvertera alla bytes med den höga biten inställd efter behov med en "
"ASCII-kompatibel :mailheader:`Content-Transfer-Encoding`.  Det vill säga, "
"omvandla delar med icke-ASCII :mailheader:`Content-Transfer-Encoding` (:"
"mailheader:`Content-Transfer-Encoding: 8bit`) till en ASCII-kompatibel :"
"mailheader:`Content-Transfer-Encoding`, och koda RFC-giltiga icke-ASCII-"
"bytes i rubriker med MIME-teckensatsen ``unknown-8bit``, vilket gör dem RFC-"
"kompatibla."

msgid ""
"Added support for re-encoding ``8bit`` message bodies, and the *linesep* "
"argument."
msgstr ""
"Stöd för omkodning av ``8bit``-meddelandekroppar och argumentet *linesep* "
"har lagts till."

msgid ""
"Return an independent clone of this :class:`Generator` instance with the "
"exact same options, and *fp* as the new *outfp*."
msgstr ""
"Returnerar en oberoende klon av denna :class:`Generator`-instans med exakt "
"samma alternativ, och *fp* som den nya *outfp*."

msgid ""
"Write *s* to the *write* method of the *outfp* passed to the :class:"
"`Generator`'s constructor.  This provides just enough file-like API for :"
"class:`Generator` instances to be used in the :func:`print` function."
msgstr ""
"Skriv *s* till *write*-metoden i den *outfp* som skickas till :class:"
"`Generator's konstruktör.  Detta ger precis tillräckligt med filliknande API "
"för att :class:`Generator`-instanser ska kunna användas i funktionen :func:"
"`print`."

msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods :"
"meth:`~email.message.EmailMessage.as_string` and ``str(aMessage)`` (a.k.a. :"
"meth:`~email.message.EmailMessage.__str__`), which simplify the generation "
"of a formatted string representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Som en bekvämlighet tillhandahåller :class:`~email.message.EmailMessage` "
"metoderna :meth:`~email.message.EmailMessage.as_string` och "
"``str(aMessage)`` (a.k.a. :meth:`~email.message.EmailMessage.__str__`), som "
"förenklar genereringen av en formaterad strängrepresentation av ett "
"meddelandeobjekt.  För mer information, se :mod:`email.message`."

msgid ""
"The :mod:`email.generator` module also provides a derived class, :class:"
"`DecodedGenerator`, which is like the :class:`Generator` base class, except "
"that non-\\ :mimetype:`text` parts are not serialized, but are instead "
"represented in the output stream by a string derived from a template filled "
"in with information about the part."
msgstr ""
"Modulen :mod:`email.generator` tillhandahåller också en härledd klass, :"
"class:`DecodedGenerator`, som är som basklassen :class:`Generator`, förutom "
"att delar som inte är av typen :mimetype:`text` inte serialiseras, utan i "
"stället representeras i utdataströmmen av en sträng som härleds från en mall "
"som fylls i med information om delen."

msgid ""
"Act like :class:`Generator`, except that for any subpart of the message "
"passed to :meth:`Generator.flatten`, if the subpart is of main type :"
"mimetype:`text`, print the decoded payload of the subpart, and if the main "
"type is not :mimetype:`text`, instead of printing it fill in the string "
"*fmt* using information from the part and print the resulting filled-in "
"string."
msgstr ""
"Fungerar som :class:`Generator`, förutom att för alla underdelar av "
"meddelandet som skickas till :meth:`Generator.flatten`, om underdelen är av "
"huvudtypen :mimetype:`text`, skriv ut den avkodade nyttolasten för "
"underdelen, och om huvudtypen inte är :mimetype:`text`, istället för att "
"skriva ut den, fyll i strängen *fmt* med information från delen och skriv ut "
"den resulterande ifyllda strängen."

msgid ""
"To fill in *fmt*, execute ``fmt % part_info``, where ``part_info`` is a "
"dictionary composed of the following keys and values:"
msgstr ""
"För att fylla i *fmt*, kör ``fmt % part_info``, där ``part_info`` är en "
"ordbok som består av följande nycklar och värden:"

msgid "``type`` -- Full MIME type of the non-\\ :mimetype:`text` part"
msgstr ""
"``type`` -- Fullständig MIME-typ för den del som inte är :mimetype:`text"

msgid "``maintype`` -- Main MIME type of the non-\\ :mimetype:`text` part"
msgstr "``maintype`` -- Huvud-MIME-typ för icke-delen :mimetype:`text"

msgid "``subtype`` -- Sub-MIME type of the non-\\ :mimetype:`text` part"
msgstr "```subtype`` -- Sub-MIME-typ för den del som inte är :mimetype:`text"

msgid "``filename`` -- Filename of the non-\\ :mimetype:`text` part"
msgstr "``filnamn`` -- Filnamn för den del som inte är :mimetype:`text"

msgid ""
"``description`` -- Description associated with the non-\\ :mimetype:`text` "
"part"
msgstr ""
"``description`` -- Beskrivning som är associerad med den del som inte är :"
"mimetype:`text"

msgid ""
"``encoding`` -- Content transfer encoding of the non-\\ :mimetype:`text` part"
msgstr ""
"``encoding`` -- Innehållsöverföringskodning av delen non-\\ :mimetype:`text"

msgid "If *fmt* is ``None``, use the following default *fmt*:"
msgstr "Om *fmt* är ``None`` används följande standard *fmt*:"

msgid ""
"\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""
msgstr ""
"\"[Icke-text (%(type)s) del av meddelandet utelämnad, filnamn %(filename)s]\""

msgid ""
"Optional *_mangle_from_* and *maxheaderlen* are as with the :class:"
"`Generator` base class."
msgstr ""
"De valfria *_mangle_from_* och *maxheaderlen* är samma som för basklassen :"
"class:`Generator`."

msgid "Footnotes"
msgstr "Fotnoter"

msgid ""
"This statement assumes that you use the appropriate setting for "
"``unixfrom``, and that there are no :mod:`email.policy` settings calling for "
"automatic adjustments (for example, :attr:`~email.policy.EmailPolicy."
"refold_source` must be ``none``, which is *not* the default).  It is also "
"not 100% true, since if the message does not conform to the RFC standards "
"occasionally information about the exact original text is lost during "
"parsing error recovery.  It is a goal to fix these latter edge cases when "
"possible."
msgstr ""
"Detta uttalande förutsätter att du använder rätt inställning för "
"``unixfrom`` och att det inte finns några :mod:`email.policy`-inställningar "
"som kräver automatiska justeringar (till exempel måste :attr:`~email.policy."
"EmailPolicy.refold_source` vara ``none``, vilket *inte* är standard).  Det "
"är inte heller 100% sant, eftersom om meddelandet inte överensstämmer med "
"RFC-standarderna förloras ibland information om den exakta originaltexten "
"under felåterställning av parsing.  Det är ett mål att åtgärda dessa senare "
"kantfall när det är möjligt."
