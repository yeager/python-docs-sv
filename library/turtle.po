# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!turtle` --- Turtle graphics"
msgstr ":mod:`!turtle` --- Turtle graphics"

msgid "**Source code:** :source:`Lib/turtle.py`"
msgstr "**Källkod:** :source:`Lib/turtle.py`"

msgid "Introduction"
msgstr "Introduktion"

msgid ""
"Turtle graphics is an implementation of `the popular geometric drawing tools "
"introduced in Logo <https://en.wikipedia.org/wiki/Turtle_ (robot)>`_, "
"developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967."
msgstr ""
"Turtle graphics är en implementation av \"de populära geometriska ritverktyg "
"som introducerades i Logo <https://en.wikipedia.org/wiki/Turtle_ (robot)>`_, "
"utvecklad av Wally Feurzeig, Seymour Papert och Cynthia Solomon 1967."

msgid "Get started"
msgstr "Kom igång"

msgid ""
"Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an "
"``import turtle``, give it the command ``turtle.forward(15)``, and it moves "
"(on-screen!) 15 pixels in the direction it is facing, drawing a line as it "
"moves.  Give it the command ``turtle.right(25)``, and it rotates in-place 25 "
"degrees clockwise."
msgstr ""
"Föreställ dig en robotsköldpadda som startar vid (0, 0) i x-y-planet.  Efter "
"en ``import turtle``, ge den kommandot ``turtle.forward(15)``, och den rör "
"sig (på skärmen!) 15 pixlar i den riktning den är vänd, och ritar en linje "
"medan den rör sig.  Ge den kommandot ``turtle.right(25)``, och den roterar "
"på plats 25 grader medurs."

msgid ""
"Turtle can draw intricate shapes using programs that repeat simple moves."
msgstr ""
"Turtle kan rita komplicerade former med hjälp av program som upprepar enkla "
"rörelser."

msgid ""
"In Python, turtle graphics provides a representation of a physical "
"\"turtle\" (a little robot with a pen) that draws on a sheet of paper on the "
"floor."
msgstr ""
"I Python ger turtle graphics en representation av en fysisk "
"\"sköldpadda\" (en liten robot med en penna) som ritar på ett pappersark på "
"golvet."

msgid ""
"It's an effective and well-proven way for learners to encounter programming "
"concepts and interaction with software, as it provides instant, visible "
"feedback. It also provides convenient access to graphical output in general."
msgstr ""
"Det är ett effektivt och väl beprövat sätt för elever att möta "
"programmeringskoncept och interaktion med programvara, eftersom det ger "
"omedelbar och synlig feedback. Det ger också bekväm tillgång till grafiska "
"utdata i allmänhet."

msgid ""
"Turtle drawing was originally created as an educational tool, to be used by "
"teachers in the classroom. For the programmer who needs to produce some "
"graphical output it can be a way to do that without the overhead of "
"introducing more complex or external libraries into their work."
msgstr ""
"Turtle drawing skapades ursprungligen som ett pedagogiskt verktyg, för att "
"användas av lärare i klassrummet. För programmerare som behöver producera "
"grafiska utdata kan det vara ett sätt att göra det utan att behöva "
"introducera mer komplexa eller externa bibliotek i sitt arbete."

msgid "Tutorial"
msgstr "Handledning"

msgid ""
"New users should start here. In this tutorial we'll explore some of the "
"basics of turtle drawing."
msgstr ""
"Nya användare bör börja här. I den här handledningen kommer vi att utforska "
"några av grunderna i turtle-ritning."

msgid "Starting a turtle environment"
msgstr "Starta en turtle-miljö"

msgid "In a Python shell, import all the objects of the ``turtle`` module::"
msgstr "I ett Python-skal importerar du alla objekt i modulen ``turtle``::"

msgid "from turtle import *"
msgstr "från turtle import *"

msgid ""
"If you run into a ``No module named '_tkinter'`` error, you'll have to "
"install the :mod:`Tk interface package <tkinter>` on your system."
msgstr ""
"Om du stöter på felet ``No module named '_tkinter'`` måste du installera :"
"mod:`Tk interface package <tkinter>` på ditt system."

msgid "Basic drawing"
msgstr "Grundläggande ritning"

msgid "Send the turtle forward 100 steps::"
msgstr "Skicka sköldpaddan framåt 100 steg::"

msgid "forward(100)"
msgstr "framåt(100)"

msgid ""
"You should see (most likely, in a new window on your display) a line drawn "
"by the turtle, heading East. Change the direction of the turtle, so that it "
"turns 120 degrees left (anti-clockwise)::"
msgstr ""
"Du bör se (troligen i ett nytt fönster på din skärm) en linje dragen av "
"sköldpaddan, som går österut. Ändra sköldpaddans riktning så att den vrider "
"sig 120 grader åt vänster (moturs)::"

msgid "left(120)"
msgstr "vänster(120)"

msgid "Let's continue by drawing a triangle::"
msgstr "Låt oss fortsätta med att rita en triangel::"

msgid ""
"forward(100)\n"
"left(120)\n"
"forward(100)"
msgstr ""
"framåt(100)\n"
"vänster(120)\n"
"framåt(100)"

msgid ""
"Notice how the turtle, represented by an arrow, points in different "
"directions as you steer it."
msgstr ""
"Lägg märke till hur sköldpaddan, som representeras av en pil, pekar i olika "
"riktningar när du styr den."

msgid ""
"Experiment with those commands, and also with ``backward()`` and ``right()``."
msgstr ""
"Experimentera med dessa kommandon, och även med ``backward()`` och "
"``right()``."

msgid "Pen control"
msgstr "Kontroll av pennan"

msgid ""
"Try changing the color - for example, ``color('blue')`` - and width of the "
"line - for example, ``width(3)`` - and then drawing again."
msgstr ""
"Prova att ändra färg - till exempel ``color('blue')`` - och bredd på linjen "
"- till exempel ``width(3)`` - och rita sedan igen."

msgid ""
"You can also move the turtle around without drawing, by lifting up the pen: "
"``up()`` before moving. To start drawing again, use ``down()``."
msgstr ""
"Du kan också flytta runt sköldpaddan utan att rita, genom att lyfta upp "
"pennan: ``up()`` innan du flyttar. För att börja rita igen, använd "
"``down()``."

msgid "The turtle's position"
msgstr "Sköldpaddans position"

msgid ""
"Send your turtle back to its starting-point (useful if it has disappeared "
"off-screen)::"
msgstr ""
"Skicka tillbaka din sköldpadda till startpunkten (användbart om den har "
"försvunnit utanför skärmen)::"

msgid "home()"
msgstr "hem()"

msgid ""
"The home position is at the center of the turtle's screen. If you ever need "
"to know them, get the turtle's x-y coordinates with::"
msgstr ""
"Hemmapositionen är i mitten av sköldpaddans skärm. Om du någonsin behöver "
"veta dem, kan du få sköldpaddans x-y-koordinater med::"

msgid "pos()"
msgstr "pos()"

msgid "Home is at ``(0, 0)``."
msgstr "Hemmet ligger vid ``(0, 0)``."

msgid ""
"And after a while, it will probably help to clear the window so we can start "
"anew::"
msgstr ""
"Och efter ett tag kommer det nog att hjälpa att rensa fönstret så att vi kan "
"börja om på nytt::"

msgid "clearscreen()"
msgstr "rensa skärmen()"

msgid "Making algorithmic patterns"
msgstr "Skapa algoritmiska mönster"

msgid "Using loops, it's possible to build up geometric patterns::"
msgstr "Med hjälp av slingor kan man bygga upp geometriska mönster::"

msgid ""
"for steps in range(100):\n"
"    for c in ('blue', 'red', 'green'):\n"
"        color(c)\n"
"        forward(steps)\n"
"        right(30)"
msgstr ""
"för steg i intervall(100):\n"
"    for c in ('blå', 'röd', 'grön'):\n"
"        färg(c)\n"
"        framåt(steg)\n"
"        höger(30)"

msgid "\\ - which of course, are limited only by the imagination!"
msgstr "\\ - som naturligtvis bara begränsas av fantasin!"

msgid ""
"Let's draw the star shape at the top of this page. We want red lines, filled "
"in with yellow::"
msgstr ""
"Låt oss rita stjärnformen högst upp på den här sidan. Vi vill ha röda "
"linjer, fyllda med gult::"

msgid ""
"color('red')\n"
"fillcolor('yellow')"
msgstr ""
"färg('röd')\n"
"fyllnadsfärg('gul')"

msgid ""
"Just as ``up()`` and ``down()`` determine whether lines will be drawn, "
"filling can be turned on and off::"
msgstr ""
"Precis som ``up()`` och ``down()`` avgör om linjer ska ritas, kan fyllning "
"slås på och av::"

msgid "begin_fill()"
msgstr "börja_fyllning()"

msgid "Next we'll create a loop::"
msgstr "Nu ska vi skapa en slinga::"

msgid ""
"while True:\n"
"    forward(200)\n"
"    left(170)\n"
"    if abs(pos()) < 1:\n"
"        break"
msgstr ""
"medan True:\n"
"    framåt(200)\n"
"    vänster(170)\n"
"    om abs(pos()) < 1:\n"
"        bryt"

msgid ""
"``abs(pos()) < 1`` is a good way to know when the turtle is back at its home "
"position."
msgstr ""
"``abs(pos()) < 1`` är ett bra sätt att veta när sköldpaddan är tillbaka på "
"sin hemmaposition."

msgid "Finally, complete the filling::"
msgstr "Avsluta med att fylla i::"

msgid "end_fill()"
msgstr "end_fill()"

msgid ""
"(Note that filling only actually takes place when you give the "
"``end_fill()`` command.)"
msgstr ""
"(Observera att fyllning faktiskt bara sker när du ger kommandot "
"``end_fill()``)"

msgid "How to..."
msgstr "Hur man..."

msgid "This section covers some typical turtle use-cases and approaches."
msgstr ""
"I detta avsnitt beskrivs några typiska användningsområden och "
"tillvägagångssätt för Turtle."

msgid "Get started as quickly as possible"
msgstr "Kom igång så snabbt som möjligt"

msgid ""
"One of the joys of turtle graphics is the immediate, visual feedback that's "
"available from simple commands - it's an excellent way to introduce children "
"to programming ideas, with a minimum of overhead (not just children, of "
"course)."
msgstr ""
"Ett av glädjeämnena med sköldpaddsgrafik är den omedelbara, visuella "
"återkopplingen som är tillgänglig från enkla kommandon - det är ett utmärkt "
"sätt att introducera barn till programmeringsidéer, med ett minimum av "
"overhead (inte bara barn, naturligtvis)."

msgid ""
"The turtle module makes this possible by exposing all its basic "
"functionality as functions, available with ``from turtle import *``. The :"
"ref:`turtle graphics tutorial <turtle-tutorial>` covers this approach."
msgstr ""
"Modulen turtle gör detta möjligt genom att exponera alla dess grundläggande "
"funktioner som funktioner, tillgängliga med ``from turtle import *``. I :ref:"
"``turtle graphics tutorial <turtle-tutorial>`` beskrivs detta "
"tillvägagångssätt."

msgid ""
"It's worth noting that many of the turtle commands also have even more terse "
"equivalents, such as ``fd()`` for :func:`forward`. These are especially "
"useful when working with learners for whom typing is not a skill."
msgstr ""
"Det är värt att notera att många av turtle-kommandona också har ännu mer "
"kortfattade motsvarigheter, t.ex. ``fd()`` för :func:`forward`. Dessa är "
"särskilt användbara när man arbetar med elever som inte är vana att skriva."

msgid ""
"You'll need to have the :mod:`Tk interface package <tkinter>` installed on "
"your system for turtle graphics to work. Be warned that this is not always "
"straightforward, so check this in advance if you're planning to use turtle "
"graphics with a learner."
msgstr ""
"Du måste ha :mod:`Tk-gränssnittspaketet <tkinter>` installerat på ditt "
"system för att turtle graphics ska fungera. Observera att detta inte alltid "
"är helt enkelt, så kontrollera detta i förväg om du planerar att använda "
"turtle graphics med en elev."

msgid "Automatically begin and end filling"
msgstr "Börja och avsluta fyllningen automatiskt"

msgid ""
"Starting with Python 3.14, you can use the :func:`fill` :term:`context "
"manager` instead of :func:`begin_fill` and :func:`end_fill` to automatically "
"begin and end fill. Here is an example::"
msgstr ""
"Från och med Python 3.14 kan du använda :func:`fill` :term:`context manager` "
"istället för :func:`begin_fill` och :func:`end_fill` för att automatiskt "
"påbörja och avsluta fill. Här är ett exempel::"

msgid ""
"with fill():\n"
"    for i in range(4):\n"
"        forward(100)\n"
"        right(90)\n"
"\n"
"forward(200)"
msgstr ""
"med fill():\n"
"    för i i intervall(4):\n"
"        framåt(100)\n"
"        höger(90)\n"
"\n"
"framåt(200)"

msgid "The code above is equivalent to::"
msgstr "Koden ovan är likvärdig med::"

msgid ""
"begin_fill()\n"
"for i in range(4):\n"
"    forward(100)\n"
"    right(90)\n"
"end_fill()\n"
"\n"
"forward(200)"
msgstr ""
"börja_fylla()\n"
"för i i intervallet(4):\n"
"    framåt(100)\n"
"    höger(90)\n"
"end_fill()\n"
"\n"
"framåt(200)"

msgid "Use the ``turtle`` module namespace"
msgstr "Använd namnrymden för modulen ``turtle``"

msgid ""
"Using ``from turtle import *`` is convenient - but be warned that it imports "
"a rather large collection of objects, and if you're doing anything but "
"turtle graphics you run the risk of a name conflict (this becomes even more "
"an issue if you're using turtle graphics in a script where other modules "
"might be imported)."
msgstr ""
"Att använda ``from turtle import *`` är bekvämt - men varning för att det "
"importerar en ganska stor samling objekt, och om du gör något annat än "
"turtle graphics riskerar du en namnkonflikt (detta blir ett ännu större "
"problem om du använder turtle graphics i ett skript där andra moduler kan "
"importeras)."

msgid ""
"The solution is to use ``import turtle`` - ``fd()`` becomes ``turtle.fd()``, "
"``width()`` becomes ``turtle.width()`` and so on. (If typing \"turtle\" over "
"and over again becomes tedious, use for example ``import turtle as t`` "
"instead.)"
msgstr ""
"Lösningen är att använda ``import turtle`` - ``fd()`` blir ``turtle.fd()``, "
"``width()`` blir ``turtle.width()`` och så vidare. (Om det blir tråkigt att "
"skriva \"turtle\" om och om igen, använd till exempel ``import turtle as t`` "
"istället)"

msgid "Use turtle graphics in a script"
msgstr "Använda turtle graphics i ett manus"

msgid ""
"It's recommended to use the ``turtle`` module namespace as described "
"immediately above, for example::"
msgstr ""
"Vi rekommenderar att du använder modulen ``turtle`` namespace enligt "
"beskrivningen ovan, till exempel::"

msgid ""
"import turtle as t\n"
"from random import random\n"
"\n"
"for i in range(100):\n"
"    steps = int(random() * 100)\n"
"    angle = int(random() * 360)\n"
"    t.right(angle)\n"
"    t.fd(steps)"
msgstr ""
"import turtle as t\n"
"from random import random\n"
"\n"
"for i in range(100):\n"
"    steps = int(random() * 100)\n"
"    angle = int(random() * 360)\n"
"    t.right(angle)\n"
"    t.fd(steps)"

msgid ""
"Another step is also required though - as soon as the script ends, Python "
"will also close the turtle's window. Add::"
msgstr ""
"Ett annat steg krävs dock också - så snart skriptet avslutas kommer Python "
"också att stänga sköldpaddans fönster. Lägg till::"

msgid "t.mainloop()"
msgstr "t.mainloop()"

msgid ""
"to the end of the script. The script will now wait to be dismissed and will "
"not exit until it is terminated, for example by closing the turtle graphics "
"window."
msgstr ""
"till slutet av skriptet. Skriptet väntar nu på att bli avfärdat och avslutas "
"inte förrän det avslutas, t.ex. genom att stänga sköldpaddans grafikfönster."

msgid "Use object-oriented turtle graphics"
msgstr "Använd objektorienterad grafik för sköldpaddor"

msgid ""
":ref:`Explanation of the object-oriented interface <turtle-explanation>`"
msgstr ""
":ref:``Förklaring av det objektorienterade gränssnittet <turtle-explanation>`"

msgid ""
"Other than for very basic introductory purposes, or for trying things out as "
"quickly as possible, it's more usual and much more powerful to use the "
"object-oriented approach to turtle graphics. For example, this allows "
"multiple turtles on screen at once."
msgstr ""
"Förutom för mycket grundläggande introduktionsändamål, eller för att prova "
"saker så snabbt som möjligt, är det vanligare och mycket mer kraftfullt att "
"använda den objektorienterade metoden för sköldpaddsgrafik. Till exempel "
"tillåter detta flera sköldpaddor på skärmen samtidigt."

msgid ""
"In this approach, the various turtle commands are methods of objects (mostly "
"of ``Turtle`` objects). You *can* use the object-oriented approach in the "
"shell, but it would be more typical in a Python script."
msgstr ""
"I detta tillvägagångssätt är de olika turtle-kommandona metoder för objekt "
"(oftast för ``Turtle``-objekt). Du *kan* använda det objektorienterade "
"tillvägagångssättet i skalet, men det skulle vara mer typiskt i ett Python-"
"skript."

msgid "The example above then becomes::"
msgstr "Exemplet ovan blir då::"

msgid ""
"from turtle import Turtle\n"
"from random import random\n"
"\n"
"t = Turtle()\n"
"for i in range(100):\n"
"    steps = int(random() * 100)\n"
"    angle = int(random() * 360)\n"
"    t.right(angle)\n"
"    t.fd(steps)\n"
"\n"
"t.screen.mainloop()"
msgstr ""
"from turtle import Sköldpadda\n"
"from random import slumpmässigt\n"
"\n"
"t = Sköldpadda()\n"
"för i i intervallet(100):\n"
"    steg = int(slumpmässig() * 100)\n"
"    vinkel = int(slumpmässig() * 360)\n"
"    t.höger(vinkel)\n"
"    t.fd(steg)\n"
"\n"
"t.screen.mainloop()"

msgid ""
"Note the last line. ``t.screen`` is an instance of the :class:`Screen` that "
"a Turtle instance exists on; it's created automatically along with the "
"turtle."
msgstr ""
"Notera den sista raden. ``t.screen`` är en instans av :class:`Screen` som en "
"sköldpaddsinstans finns på; den skapas automatiskt tillsammans med "
"sköldpaddan."

msgid "The turtle's screen can be customised, for example::"
msgstr "Sköldpaddans skärm kan skräddarsys, till exempel::"

msgid ""
"t.screen.title('Object-oriented turtle demo')\n"
"t.screen.bgcolor(\"orange\")"
msgstr ""
"t.screen.title(\"Objektorienterad sköldpaddsdemo\")\n"
"t.screen.bgcolor(\"orange\")"

msgid "Turtle graphics reference"
msgstr "Sköldpaddans grafikreferens"

msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""
"I den följande dokumentationen anges argumentlistan för funktioner. Metoder "
"har naturligtvis det ytterligare första argumentet *self* som utelämnas här."

msgid "Turtle methods"
msgstr "Sköldpaddans metoder"

msgid "Turtle motion"
msgstr "Sköldpaddans rörelse"

msgid "Move and draw"
msgstr "Flytta och rita"

msgid ":func:`forward` | :func:`fd`"
msgstr ":func:`forward` | :func:`fd`"

msgid ":func:`backward` | :func:`bk` | :func:`back`"
msgstr ":func:`backward` | :func:`bk` | :func:`back`"

msgid ":func:`right` | :func:`rt`"
msgstr ":func:`right` | :func:`rt`"

msgid ":func:`left` | :func:`lt`"
msgstr ":func:`vänster` | :func:`lt`"

msgid ":func:`goto` | :func:`setpos` | :func:`setposition`"
msgstr ":func:`goto` | :func:`setpos` | :func:`setposition`"

msgid ":func:`teleport`"
msgstr ":func:`teleport`"

msgid ":func:`setx`"
msgstr ":func:`setx`"

msgid ":func:`sety`"
msgstr ":func:`sety`"

msgid ":func:`setheading` | :func:`seth`"
msgstr ":func:`setheading` | :func:`seth`"

msgid ":func:`home`"
msgstr ":func:`hem`"

msgid ":func:`circle`"
msgstr ":func:`cirkel`"

msgid ":func:`dot`"
msgstr ":func:`dot`"

msgid ":func:`stamp`"
msgstr ":func:`stämpel`"

msgid ":func:`clearstamp`"
msgstr ":func:`clearstamp`"

msgid ":func:`clearstamps`"
msgstr ":func:`klara stämplar`"

msgid ":func:`undo`"
msgstr ":func:`undo`"

msgid ":func:`speed`"
msgstr ":func:`hastighet`"

msgid "Tell Turtle's state"
msgstr "Berätta Turtle's tillstånd"

msgid ":func:`position` | :func:`pos`"
msgstr ":func:`position` | :func:`pos`"

msgid ":func:`towards`"
msgstr ":func:`towards`"

msgid ":func:`xcor`"
msgstr ":func:`xcor`"

msgid ":func:`ycor`"
msgstr ":func:`ycor`"

msgid ":func:`heading`"
msgstr ":func:`rubrik`"

msgid ":func:`distance`"
msgstr ":func:`avstånd`"

msgid "Setting and measurement"
msgstr "Inställning och mätning"

msgid ":func:`degrees`"
msgstr ":func:`grader`"

msgid ":func:`radians`"
msgstr ":func:`radianer`"

msgid "Drawing state"
msgstr "Ritningstillstånd"

msgid ":func:`pendown` | :func:`pd` | :func:`down`"
msgstr ":func:`pendown` | :func:`pd` | :func:`down`"

msgid ":func:`penup` | :func:`pu` | :func:`up`"
msgstr ":func:`penup` | :func:`pu` | :func:`up`"

msgid ":func:`pensize` | :func:`width`"
msgstr ":func:`penstorlek` | :func:`bredd`"

msgid ":func:`pen`"
msgstr ":func:`pen`"

msgid ":func:`isdown`"
msgstr ":func:`isdown`"

msgid "Color control"
msgstr "Färgkontroll"

msgid ":func:`color`"
msgstr ":func:`färg`"

msgid ":func:`pencolor`"
msgstr ":func:`pennafärg`"

msgid ":func:`fillcolor`"
msgstr ":func:`fillcolor`"

msgid "Filling"
msgstr "Fyllning"

msgid ":func:`filling`"
msgstr ":func:`fyllning`"

msgid ":func:`fill`"
msgstr ":func:`fyllning`"

msgid ":func:`begin_fill`"
msgstr ":func:`begin_fill`"

msgid ":func:`end_fill`"
msgstr ":func:`sluta_fyllning`"

msgid "More drawing control"
msgstr "Mer ritningskontroll"

msgid ":func:`reset`"
msgstr ":func:`återställ`"

msgid ":func:`clear`"
msgstr ":func:`clear`"

msgid ":func:`write`"
msgstr ":func:`skriva`"

msgid "Turtle state"
msgstr "Sköldpaddans tillstånd"

msgid "Visibility"
msgstr "Synlighet"

msgid ":func:`showturtle` | :func:`st`"
msgstr ":func:`showturtle` | :func:`st`"

msgid ":func:`hideturtle` | :func:`ht`"
msgstr ":func:`hideturtle` | :func:`ht`"

msgid ":func:`isvisible`"
msgstr ":func:`isvisible`"

msgid "Appearance"
msgstr "Utseende"

msgid ":func:`shape`"
msgstr ":func:`form`"

msgid ":func:`resizemode`"
msgstr ":func:`resizemode`"

msgid ":func:`shapesize` | :func:`turtlesize`"
msgstr ":func:`shapesize` | :func:`turtlesize`"

msgid ":func:`shearfactor`"
msgstr ":func:`shearfactor`"

msgid ":func:`tiltangle`"
msgstr ":func:`tiltangel`"

msgid ":func:`tilt`"
msgstr ":func:`tilt`"

msgid ":func:`shapetransform`"
msgstr ":func:`shapetransform`"

msgid ":func:`get_shapepoly`"
msgstr ":func:`get_shapepoly`"

msgid "Using events"
msgstr "Använda händelser"

msgid ":func:`onclick`"
msgstr ":func:`onclick`"

msgid ":func:`onrelease`"
msgstr ":func:`onrelease`"

msgid ":func:`ondrag`"
msgstr ":func:`ondrag`"

msgid "Special Turtle methods"
msgstr "Särskilda Turtle-metoder"

msgid ":func:`poly`"
msgstr ":func:`poly`"

msgid ":func:`begin_poly`"
msgstr ":func:`begin_poly`"

msgid ":func:`end_poly`"
msgstr ":func:`sluta_poly`"

msgid ":func:`get_poly`"
msgstr ":func:`get_poly`"

msgid ":func:`clone`"
msgstr ":func:`klon`"

msgid ":func:`getturtle` | :func:`getpen`"
msgstr ":func:`getturtle` | :func:`getpen`"

msgid ":func:`getscreen`"
msgstr ":func:`getskärm`"

msgid ":func:`setundobuffer`"
msgstr ":func:`setundobuffer`"

msgid ":func:`undobufferentries`"
msgstr ":func:`undobufferentries`"

msgid "Methods of TurtleScreen/Screen"
msgstr "Metoder för TurtleScreen/Screen"

msgid "Window control"
msgstr "Kontroll av fönster"

msgid ":func:`bgcolor`"
msgstr ":func:`bgcolor`"

msgid ":func:`bgpic`"
msgstr ":func:`bgpic`"

msgid ":func:`clearscreen`"
msgstr ":func:`clearscreen`"

msgid ":func:`resetscreen`"
msgstr ":func:`återställ skärm`"

msgid ":func:`screensize`"
msgstr ":func:`skärmstorlek`"

msgid ":func:`setworldcoordinates`"
msgstr ":func:`setworldcoordinates`"

msgid "Animation control"
msgstr "Kontroll av animering"

msgid ":func:`no_animation`"
msgstr ":func:`no_animation`"

msgid ":func:`delay`"
msgstr ":func:`fördröjning`"

msgid ":func:`tracer`"
msgstr ":func:`spårare`"

msgid ":func:`update`"
msgstr ":func:`uppdatera`"

msgid "Using screen events"
msgstr "Använda skärmhändelser"

msgid ":func:`listen`"
msgstr ":func:`lyssna`"

msgid ":func:`onkey` | :func:`onkeyrelease`"
msgstr ":func:`onkey` | :func:`onkeyrelease`"

msgid ":func:`onkeypress`"
msgstr ":func:`onkeypress`"

msgid ":func:`onclick` | :func:`onscreenclick`"
msgstr ":func:`onclick` | :func:`onscreenclick`"

msgid ":func:`ontimer`"
msgstr ":func:`ontimer`"

msgid ":func:`mainloop` | :func:`done`"
msgstr ":func:`mainloop` | :func:`done`"

msgid "Settings and special methods"
msgstr "Inställningar och specialmetoder"

msgid ":func:`mode`"
msgstr ":func:`mode`"

msgid ":func:`colormode`"
msgstr ":func:`kolorläge`"

msgid ":func:`getcanvas`"
msgstr ":func:`getcanvas`"

msgid ":func:`getshapes`"
msgstr ":func:`getshapes`"

msgid ":func:`register_shape` | :func:`addshape`"
msgstr ":func:`register_shape` | :func:`addshape`"

msgid ":func:`turtles`"
msgstr ":func:`sköldpaddor`"

msgid ":func:`window_height`"
msgstr ":func:`fönster_höjd`"

msgid ":func:`window_width`"
msgstr ":func:`fönsterbredd`"

msgid "Input methods"
msgstr "Inmatningsmetoder"

msgid ":func:`textinput`"
msgstr ":func:`textinmatning`"

msgid ":func:`numinput`"
msgstr ":func:`numinput`"

msgid "Methods specific to Screen"
msgstr "Metoder som är specifika för Screen"

msgid ":func:`bye`"
msgstr ":func:`hejdå`"

msgid ":func:`exitonclick`"
msgstr ":func:`exitonclick`"

msgid ":func:`save`"
msgstr ":func:`save`"

msgid ":func:`setup`"
msgstr ":func:`setup`"

msgid ":func:`title`"
msgstr ":func:`titel`"

msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr "Metoder för RawTurtle/Turtle och motsvarande funktioner"

msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""
"De flesta av exemplen i detta avsnitt hänvisar till en Turtle-instans som "
"heter ``turtle``."

msgid "Parameters"
msgstr "Parametrar"

msgid "a number (integer or float)"
msgstr "ett tal (heltal eller float)"

msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""
"Flytta sköldpaddan framåt med det angivna *avståndet*, i den riktning som "
"sköldpaddan är på väg."

msgid ""
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.forward(25)\n"
">>> turtle.position()\n"
"(25.00,0.00)\n"
">>> turtle.forward(-75)\n"
">>> turtle.position()\n"
"(-50.00,0.00)"
msgstr ""
">>> sköldpadda.position()\n"
"(0.00,0.00)\n"
">>> sköldpadda.framåt(25)\n"
">>> sköldpadda.position()\n"
"(25.00,0.00)\n"
">>> sköldpadda.framåt(-75)\n"
">>> sköldpadda.position()\n"
"(-50.00,0.00)"

msgid "a number"
msgstr "ett antal"

msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""
"Flytta sköldpaddan bakåt med *avstånd*, i motsatt riktning mot den riktning "
"som sköldpaddan är på väg mot.  Ändra inte sköldpaddans kurs."

msgid ""
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.backward(30)\n"
">>> turtle.position()\n"
"(-30.00,0.00)"
msgstr ""
">>> sköldpadda.position()\n"
"(0.00,0.00)\n"
">>> sköldpadda.bakåt(30)\n"
">>> sköldpadda.position()\n"
"(-30.00,0.00)"

msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Vrid sköldpaddan åt höger med *vinkel* enheter.  (Enheterna är som standard "
"grader, men kan ställas in via funktionerna :func:`degrees` och :func:"
"`radians`)  Vinkelorienteringen beror på sköldpaddans läge, se :func:`mode`."

msgid ""
">>> turtle.heading()\n"
"22.0\n"
">>> turtle.right(45)\n"
">>> turtle.heading()\n"
"337.0"
msgstr ""
">>> sköldpadda.kurs()\n"
"22.0\n"
">>> sköldpadda.höger(45)\n"
">>> sköldpadda.kurs()\n"
"337.0"

msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Vrid sköldpaddan åt vänster med *vinkel* enheter.  (Enheterna är som "
"standard grader, men kan ställas in via funktionerna :func:`degrees` och :"
"func:`radians`)  Vinkelorienteringen beror på sköldpaddans läge, se :func:"
"`mode`."

msgid ""
">>> turtle.heading()\n"
"22.0\n"
">>> turtle.left(45)\n"
">>> turtle.heading()\n"
"67.0"
msgstr ""
">>> sköldpadda.kurs()\n"
"22.0\n"
">>> sköldpadda.vänster(45)\n"
">>> sköldpadda.kurs()\n"
"67.0"

msgid "a number or a pair/vector of numbers"
msgstr "ett tal eller ett par/vektor av tal"

msgid "a number or ``None``"
msgstr "ett tal eller ``None``"

msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""
"Om *y* är ``None`` måste *x* vara ett koordinatpar eller en :class:`Vec2D` "
"(t.ex. som returneras av :func:`pos`)."

msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""
"Flytta sköldpaddan till en absolut position.  Om pennan är nere, dra en "
"linje.  Ändra inte sköldpaddans orientering."

msgid ""
">>> tp = turtle.pos()\n"
">>> tp\n"
"(0.00,0.00)\n"
">>> turtle.setpos(60,30)\n"
">>> turtle.pos()\n"
"(60.00,30.00)\n"
">>> turtle.setpos((20,80))\n"
">>> turtle.pos()\n"
"(20.00,80.00)\n"
">>> turtle.setpos(tp)\n"
">>> turtle.pos()\n"
"(0.00,0.00)"
msgstr ""
">>> tp = sköldpadda.pos()\n"
">>> tp\n"
"(0.00,0.00)\n"
">>> turtle.setpos(60,30)\n"
">>> turtle.pos()\n"
"(60.00,30.00)\n"
">>> turtle.setpos((20,80))\n"
">>> sköldpadda.pos()\n"
"(20.00,80.00)\n"
">>> sköldpadda.setpos(tp)\n"
">>> sköldpadda.pos()\n"
"(0.00,0.00)"

msgid "a boolean"
msgstr "en boolean"

msgid ""
"Move turtle to an absolute position. Unlike goto(x, y), a line will not be "
"drawn. The turtle's orientation does not change. If currently filling, the "
"polygon(s) teleported from will be filled after leaving, and filling will "
"begin again after teleporting. This can be disabled with fill_gap=True, "
"which makes the imaginary line traveled during teleporting act as a fill "
"barrier like in goto(x, y)."
msgstr ""
"Flytta sköldpaddan till en absolut position. Till skillnad från goto(x, y) "
"kommer inte en linje att ritas. Sköldpaddans orientering ändras inte. Om "
"polygonen fylls för närvarande kommer polygonen/polygonerna som sköldpaddan "
"teleporteras från att fyllas efter att den lämnat platsen, och fyllningen "
"kommer att börja igen efter teleporteringen. Detta kan inaktiveras med "
"fill_gap=True, vilket gör att den imaginära linje som förflyttas under "
"teleporteringen fungerar som en fyllningsbarriär som i goto(x, y)."

msgid ""
">>> tp = turtle.pos()\n"
">>> tp\n"
"(0.00,0.00)\n"
">>> turtle.teleport(60)\n"
">>> turtle.pos()\n"
"(60.00,0.00)\n"
">>> turtle.teleport(y=10)\n"
">>> turtle.pos()\n"
"(60.00,10.00)\n"
">>> turtle.teleport(20, 30)\n"
">>> turtle.pos()\n"
"(20.00,30.00)"
msgstr ""
">>> tp = sköldpadda.pos()\n"
">>> tp\n"
"(0.00,0.00)\n"
">>> sköldpadda.teleport(60)\n"
">>> turtle.pos()\n"
"(60.00,0.00)\n"
">>> turtle.teleport(y=10)\n"
">>> sköldpadda.pos()\n"
"(60.00,10.00)\n"
">>> sköldpadda.teleport(20, 30)\n"
">>> sköldpadda.pos()\n"
"(20.00,30.00)"

msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr ""
"Sätt sköldpaddans första koordinat till *x*, lämna den andra koordinaten "
"oförändrad."

msgid ""
">>> turtle.position()\n"
"(0.00,240.00)\n"
">>> turtle.setx(10)\n"
">>> turtle.position()\n"
"(10.00,240.00)"
msgstr ""
">>> sköldpadda.position()\n"
"(0.00,240.00)\n"
">>> sköldpadda.setx(10)\n"
">>> sköldpadda.position()\n"
"(10.00,240.00)"

msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr ""
"Ställ in sköldpaddans andra koordinat till *y*, lämna den första koordinaten "
"oförändrad."

msgid ""
">>> turtle.position()\n"
"(0.00,40.00)\n"
">>> turtle.sety(-10)\n"
">>> turtle.position()\n"
"(0.00,-10.00)"
msgstr ""
">>> sköldpadda.position()\n"
"(0.00,40.00)\n"
">>> sköldpadda.sety(-10)\n"
">>> sköldpadda.position()\n"
"(0.00,-10.00)"

msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""
"Ställ in sköldpaddans orientering till *to_angle*.  Här är några vanliga "
"riktningar i grader:"

msgid "standard mode"
msgstr "standardläge"

msgid "logo mode"
msgstr "logotypläge"

msgid "0 - east"
msgstr "0 - öster"

msgid "0 - north"
msgstr "0 - norr"

msgid "90 - north"
msgstr "90 - norr"

msgid "90 - east"
msgstr "90 - öster"

msgid "180 - west"
msgstr "180 - väster"

msgid "180 - south"
msgstr "180 - söderut"

msgid "270 - south"
msgstr "270 - söderut"

msgid "270 - west"
msgstr "270 - västerut"

msgid ""
">>> turtle.setheading(90)\n"
">>> turtle.heading()\n"
"90.0"
msgstr ""
">>> turtle.setheading(90)\n"
">>> sköldpadda.kurs()\n"
"90.0"

msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""
"Flytta sköldpaddan till origo -- koordinater (0,0) -- och sätt dess kurs "
"till dess startorientering (som beror på läget, se :func:`mode`)."

msgid ""
">>> turtle.heading()\n"
"90.0\n"
">>> turtle.position()\n"
"(0.00,-10.00)\n"
">>> turtle.home()\n"
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0"
msgstr ""
">>> sköldpadda.kurs()\n"
"90.0\n"
">>> sköldpadda.position()\n"
"(0.00,-10.00)\n"
">>> sköldpadda.hem()\n"
">>> sköldpadda.position()\n"
"(0.00,0.00)\n"
">>> sköldpadda.heading()\n"
"0.0"

msgid "a number (or ``None``)"
msgstr "ett tal (eller ``None``)"

msgid "an integer (or ``None``)"
msgstr "ett heltal (eller ``None``)"

msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""
"Rita en cirkel med given *radius*.  Centrum är *radius* enheter till vänster "
"om sköldpaddan; *extent* -- en vinkel -- bestämmer vilken del av cirkeln som "
"ritas.  Om *extent* inte anges ritas hela cirkeln.  Om *extent* inte är en "
"hel cirkel, är en av bågens ändpunkter den aktuella pennpositionen.  Rita "
"bågen moturs om *radius* är positiv, annars medurs.  Slutligen ändras "
"sköldpaddans riktning med beloppet för *extent*."

msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""
"Eftersom cirkeln approximeras av en inskriven reguljär polygon, bestämmer "
"*steps* antalet steg som ska användas.  Om det inte anges beräknas det "
"automatiskt.  Kan användas för att rita regelbundna polygoner."

msgid ""
">>> turtle.home()\n"
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0\n"
">>> turtle.circle(50)\n"
">>> turtle.position()\n"
"(-0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0\n"
">>> turtle.circle(120, 180)  # draw a semicircle\n"
">>> turtle.position()\n"
"(0.00,240.00)\n"
">>> turtle.heading()\n"
"180.0"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.position()\n"
"(0.00,0.00)\n"
">>> sköldpadda.heading()\n"
"0.0\n"
">>> sköldpadda.cirkel(50)\n"
">>> sköldpadda.position()\n"
"(-0.00,0.00)\n"
">>> sköldpadda.kurs()\n"
"0.0\n"
">>> turtle.circle(120, 180) # rita en halvcirkel\n"
">>> sköldpadda.position()\n"
"(0.00,240.00)\n"
">>> sköldpadda.kurs()\n"
"180.0"

msgid "an integer >= 1 (if given)"
msgstr "ett heltal >= 1 (om det anges)"

msgid "a colorstring or a numeric color tuple"
msgstr "en färgsträng eller en numerisk färgtupel"

msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""
"Rita en cirkelformad punkt med diameter *storlek*, med *färg*.  Om *storlek* "
"inte anges används det högsta av pennstorlek+4 och 2*pennstorlek."

msgid ""
">>> turtle.home()\n"
">>> turtle.dot()\n"
">>> turtle.fd(50); turtle.dot(20, \"blue\"); turtle.fd(50)\n"
">>> turtle.position()\n"
"(100.00,-0.00)\n"
">>> turtle.heading()\n"
"0.0"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.dot()\n"
">>> turtle.fd(50); turtle.dot(20, \"blue\"); turtle.fd(50)\n"
">>> sköldpadda.position()\n"
"(100.00,-0.00)\n"
">>> sköldpadda.kurs()\n"
"0.0"

msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""
"Stämplar en kopia av sköldpaddsformen på duken vid den aktuella "
"sköldpaddspositionen.  Returnerar ett stamp_id för stämpeln, som kan "
"användas för att ta bort den genom att anropa ``clearstamp(stamp_id)``."

msgid ""
">>> turtle.color(\"blue\")\n"
">>> stamp_id = turtle.stamp()\n"
">>> turtle.fd(50)"
msgstr ""
">>> sköldpadda.färg(\"blå\")\n"
">>> stämpel_id = sköldpadda.stämpel()\n"
">>> sköldpadda.fd(50)"

msgid "an integer, must be return value of previous :func:`stamp` call"
msgstr "ett heltal, måste vara returvärdet av föregående :func:`stamp`-anrop"

msgid "Delete stamp with given *stampid*."
msgstr "Ta bort stämpel med angiven *stämpelid*."

msgid ""
">>> turtle.position()\n"
"(150.00,-0.00)\n"
">>> turtle.color(\"blue\")\n"
">>> astamp = turtle.stamp()\n"
">>> turtle.fd(50)\n"
">>> turtle.position()\n"
"(200.00,-0.00)\n"
">>> turtle.clearstamp(astamp)\n"
">>> turtle.position()\n"
"(200.00,-0.00)"
msgstr ""
">>> sköldpadda.position()\n"
"(150.00,-0.00)\n"
">>> sköldpadda.färg(\"blå\")\n"
">>> astamp = sköldpaddan.stämpel()\n"
">>> sköldpadda.fd(50)\n"
">>> sköldpadda.position()\n"
"(200.00,-0.00)\n"
">>> turtle.clearstamp(astamp)\n"
">>> sköldpadda.position()\n"
"(200.00,-0.00)"

msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is ``None``, delete "
"all stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last "
"*n* stamps."
msgstr ""
"Ta bort alla eller de första/sista *n* av sköldpaddans stämplar.  Om *n* är "
"``None``, radera alla stämplar, om *n* > 0 radera första *n* stämplar, "
"annars om *n* < 0 radera sista *n* stämplar."

msgid ""
">>> for i in range(8):\n"
"...     unused_stamp_id = turtle.stamp()\n"
"...     turtle.fd(30)\n"
">>> turtle.clearstamps(2)\n"
">>> turtle.clearstamps(-2)\n"
">>> turtle.clearstamps()"
msgstr ""
">>> för i i intervall(8):\n"
"... oanvända_stämpel_id = sköldpadda.stämpel()\n"
"... turtle.fd(30)\n"
">>> turtle.clearstamps(2)\n"
">>> turtle.clearstamps(-2)\n"
">>> turtle.clearstamps()"

msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""
"Ångra (upprepade gånger) den/de senaste sköldpaddsaktionen/erna.  Antalet "
"tillgängliga åtgärder för ångra bestäms av storleken på ångra-bufferten."

msgid ""
">>> for i in range(4):\n"
"...     turtle.fd(50); turtle.lt(80)\n"
"...\n"
">>> for i in range(8):\n"
"...     turtle.undo()"
msgstr ""
">>> för i i intervall(4):\n"
"... turtle.fd(50); turtle.lt(80)\n"
"...\n"
">>> för i i intervall(8):\n"
"... turtle.undo()"

msgid "an integer in the range 0..10 or a speedstring (see below)"
msgstr "ett heltal i intervallet 0..10 eller en speedstring (se nedan)"

msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""
"Ställer in sköldpaddans hastighet till ett heltalsvärde i intervallet "
"0..10.  Om inget argument anges returneras aktuell hastighet."

msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""
"Om indata är ett tal som är större än 10 eller mindre än 0,5 sätts "
"hastigheten till 0. Speedstrings mappas till hastighetsvärden enligt "
"följande:"

msgid "\"fastest\":  0"
msgstr "\"snabbast\":  0"

msgid "\"fast\":  10"
msgstr "\"snabb\":  10"

msgid "\"normal\":  6"
msgstr "\"normal\":  6"

msgid "\"slow\":  3"
msgstr "\"långsam\":  3"

msgid "\"slowest\":  1"
msgstr "\"långsammast\":  1"

msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""
"Hastigheter från 1 till 10 ger allt snabbare animering av linjeteckning och "
"sköldpaddsvändning."

msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""
"OBS! *speed* = 0 innebär att *ingen* animation sker. framåt/bakåt får "
"sköldpaddan att hoppa och likaså vänster/höger får sköldpaddan att svänga "
"direkt."

msgid ""
">>> turtle.speed()\n"
"3\n"
">>> turtle.speed('normal')\n"
">>> turtle.speed()\n"
"6\n"
">>> turtle.speed(9)\n"
">>> turtle.speed()\n"
"9"
msgstr ""
">>> sköldpadda.hastighet()\n"
"3\n"
">>> sköldpadda.hastighet('normal')\n"
">>> sköldpadda.hastighet()\n"
"6\n"
">>> turtle.speed(9)\n"
">>> sköldpadda.hastighet()\n"
"9"

msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr ""
"Returnerar sköldpaddans aktuella position (x,y) (som en :class:`Vec2D` "
"vektor)."

msgid ""
">>> turtle.pos()\n"
"(440.00,-0.00)"
msgstr ""
">>> sköldpadda.pos()\n"
"(440.00,-0.00)"

msgid "a number or a pair/vector of numbers or a turtle instance"
msgstr "ett tal eller ett par/vektor av tal eller en sköldpaddsinstans"

msgid "a number if *x* is a number, else ``None``"
msgstr "ett tal om *x* är ett tal, annars ``None``"

msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\"."
msgstr ""
"Returnerar vinkeln mellan linjen från sköldpaddans position till positionen "
"specificerad av (x,y), vektorn eller den andra sköldpaddan.  Detta beror på "
"sköldpaddans startorientering som beror på läget - \"standard\"/\"world\" "
"eller \"logo\"."

msgid ""
">>> turtle.goto(10, 10)\n"
">>> turtle.towards(0,0)\n"
"225.0"
msgstr ""
">>> sköldpadda.goto(10, 10)\n"
">>> sköldpadda.mot(0,0)\n"
"225.0"

msgid "Return the turtle's x coordinate."
msgstr "Returnerar sköldpaddans x-koordinat."

msgid ""
">>> turtle.home()\n"
">>> turtle.left(50)\n"
">>> turtle.forward(100)\n"
">>> turtle.pos()\n"
"(64.28,76.60)\n"
">>> print(round(turtle.xcor(), 5))\n"
"64.27876"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.vänster(50)\n"
">>> sköldpadda.framåt(100)\n"
">>> sköldpadda.pos()\n"
"(64.28,76.60)\n"
">>> print(runda(sköldpadda.xcor(), 5))\n"
"64.27876"

msgid "Return the turtle's y coordinate."
msgstr "Returnerar sköldpaddans y-koordinat."

msgid ""
">>> turtle.home()\n"
">>> turtle.left(60)\n"
">>> turtle.forward(100)\n"
">>> print(turtle.pos())\n"
"(50.00,86.60)\n"
">>> print(round(turtle.ycor(), 5))\n"
"86.60254"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.vänster(60)\n"
">>> sköldpadda.framåt(100)\n"
">>> print(sköldpaddan.pos())\n"
"(50.00,86.60)\n"
">>> print(runda(sköldpaddan.ycor(), 5))\n"
"86.60254"

msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""
"Returnerar sköldpaddans aktuella kurs (värdet beror på sköldpaddans läge, "
"se :func:`mode`)."

msgid ""
">>> turtle.home()\n"
">>> turtle.left(67)\n"
">>> turtle.heading()\n"
"67.0"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.vänster(67)\n"
">>> sköldpadda.kurs()\n"
"67.0"

msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""
"Returnerar avståndet från sköldpaddan till (x,y), den givna vektorn eller "
"den givna andra sköldpaddan, i sköldpaddsstegsenheter."

msgid ""
">>> turtle.home()\n"
">>> turtle.distance(30,40)\n"
"50.0\n"
">>> turtle.distance((30,40))\n"
"50.0\n"
">>> joe = Turtle()\n"
">>> joe.forward(77)\n"
">>> turtle.distance(joe)\n"
"77.0"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.avstånd(30,40)\n"
"50.0\n"
">>> sköldpadda.avstånd((30,40))\n"
"50.0\n"
">>> joe = sköldpadda()\n"
">>> joe.framåt(77)\n"
">>> turtle.avstånd(joe)\n"
"77.0"

msgid "Settings for measurement"
msgstr "Inställningar för mätning"

msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""
"Ange enheter för vinkelmätning, dvs. ange antal \"grader\" för en hel "
"cirkel. Standardvärdet är 360 grader."

msgid ""
">>> turtle.home()\n"
">>> turtle.left(90)\n"
">>> turtle.heading()\n"
"90.0\n"
"\n"
">>> # Change angle measurement unit to grad (also known as gon,\n"
">>> # grade, or gradian and equals 1/100-th of the right angle.)\n"
">>> turtle.degrees(400.0)\n"
">>> turtle.heading()\n"
"100.0\n"
">>> turtle.degrees(360)\n"
">>> turtle.heading()\n"
"90.0"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.vänster(90)\n"
">>> sköldpadda.kurs()\n"
"90.0\n"
"\n"
">>> # Ändra vinkelmätningsenhet till grad (även känd som gon,\n"
">>> # grad eller gradian och motsvarar 1/100-del av den räta vinkeln)\n"
">>> turtle.degrees(400.0)\n"
">>> turtle.heading()\n"
"100.0\n"
">>> sköldpadda.grader(360)\n"
">>> sköldpadda.kurs()\n"
"90.0"

msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""
"Ställ in vinkelmätningsenheterna till radianer.  Motsvarar ``grader(2*math."
"pi)``."

msgid ""
">>> turtle.home()\n"
">>> turtle.left(90)\n"
">>> turtle.heading()\n"
"90.0\n"
">>> turtle.radians()\n"
">>> turtle.heading()\n"
"1.5707963267948966"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.vänster(90)\n"
">>> sköldpadda.kurs()\n"
"90.0\n"
">>> sköldpadda.radianer()\n"
">>> sköldpadda.kurs()\n"
"1.5707963267948966"

msgid "Pull the pen down -- drawing when moving."
msgstr "Dra ner pennan - rita när du rör dig."

msgid "Pull the pen up -- no drawing when moving."
msgstr "Dra upp pennan - ingen ritning när du rör dig."

msgid "a positive number"
msgstr "ett positivt tal"

msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""
"Ställ in linjetjockleken till *width* eller returnera den.  Om resizemode är "
"inställt på \"auto\" och turtleshape är en polygon, ritas polygonen med "
"samma linjetjocklek.  Om inget argument anges returneras den aktuella "
"pennstorleken."

msgid ""
">>> turtle.pensize()\n"
"1\n"
">>> turtle.pensize(10)   # from here on lines of width 10 are drawn"
msgstr ""
">>> sköldpadda.pensize()\n"
"1\n"
">>> turtle.pensize(10) # från och med nu ritas linjer med bredden 10"

msgid "a dictionary with some or all of the below listed keys"
msgstr "en ordbok med några eller alla av nedanstående nycklar"

msgid "one or more keyword-arguments with the below listed keys as keywords"
msgstr ""
"ett eller flera keyword-argument med nedanstående nycklar som nyckelord"

msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""
"Returnera eller ställ in pennans attribut i en \"pen-dictionary\" med "
"följande nyckel/värde-par:"

msgid "\"shown\": True/False"
msgstr "\"visad\": Sant/Falskt"

msgid "\"pendown\": True/False"
msgstr "\"Pendown\": Sant/Falskt"

msgid "\"pencolor\": color-string or color-tuple"
msgstr "\"pencolor\": färgsträng eller färg-tupel"

msgid "\"fillcolor\": color-string or color-tuple"
msgstr "\"fillcolor\": färgsträng eller färg-tupel"

msgid "\"pensize\": positive number"
msgstr "\"pensize\": positivt tal"

msgid "\"speed\": number in range 0..10"
msgstr "\"speed\": tal inom intervallet 0..10"

msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr "\"resizemode\": \"auto\" eller \"user\" eller \"noresize\""

msgid "\"stretchfactor\": (positive number, positive number)"
msgstr "\"stretchfactor\": (positivt tal, positivt tal)"

msgid "\"outline\": positive number"
msgstr "\"outline\": positivt tal"

msgid "\"tilt\": number"
msgstr "\"tilt\": antal"

msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""
"Denna ordbok kan användas som argument för ett efterföljande anrop till :"
"func:`pen` för att återställa det tidigare pen-läget.  Dessutom kan ett "
"eller flera av dessa attribut anges som nyckelordsargument.  Detta kan "
"användas för att ställa in flera pennattribut i ett och samma meddelande."

msgid ""
">>> turtle.pen(fillcolor=\"black\", pencolor=\"red\", pensize=10)\n"
">>> sorted(turtle.pen().items())\n"
"[('fillcolor', 'black'), ('outline', 1), ('pencolor', 'red'),\n"
" ('pendown', True), ('pensize', 10), ('resizemode', 'noresize'),\n"
" ('shearfactor', 0.0), ('shown', True), ('speed', 9),\n"
" ('stretchfactor', (1.0, 1.0)), ('tilt', 0.0)]\n"
">>> penstate=turtle.pen()\n"
">>> turtle.color(\"yellow\", \"\")\n"
">>> turtle.penup()\n"
">>> sorted(turtle.pen().items())[:3]\n"
"[('fillcolor', ''), ('outline', 1), ('pencolor', 'yellow')]\n"
">>> turtle.pen(penstate, fillcolor=\"green\")\n"
">>> sorted(turtle.pen().items())[:3]\n"
"[('fillcolor', 'green'), ('outline', 1), ('pencolor', 'red')]"
msgstr ""
">>> turtle.pen(fyllnadsfärg=\"svart\", pennfärg=\"röd\", pennstorlek=10)\n"
">>> sorterad(turtle.pen().items())\n"
"[('fillcolor', 'black'), ('outline', 1), ('pencolor', 'red'),\n"
" ('pendown', True), ('pensize', 10), ('resizemode', 'noresize'),\n"
" ('shearfactor', 0.0), ('shown', True), ('speed', 9),\n"
" ('stretchfactor', (1,0, 1,0)), ('tilt', 0,0)]\n"
">>> penstate=sköldpadda.pen()\n"
">>> sköldpadda.färg(\"gul\", \"\")\n"
">>> sköldpadda.penup()\n"
">>> sorterad(sköldpadda.pen().objekt())[:3]\n"
"[('fillcolor', ''), ('outline', 1), ('pencolor', 'yellow')]\n"
">>> turtle.pen(penstate, fyllningsfärg=\"grön\")\n"
">>> sorterad(turtle.pen().items())[:3]\n"
"[('fillcolor', 'green'), ('outline', 1), ('pencolor', 'red')]"

msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr "Returnerar ``True`` om pennan är nere, ``False`` om den är uppe."

msgid ""
">>> turtle.penup()\n"
">>> turtle.isdown()\n"
"False\n"
">>> turtle.pendown()\n"
">>> turtle.isdown()\n"
"True"
msgstr ""
">>> sköldpadda.penup()\n"
">>> sköldpadda.isdown()\n"
"Falsk\n"
">>> sköldpadda.pendown()\n"
">>> sköldpadda.isdown()\n"
"Sant"

msgid "Return or set the pencolor."
msgstr "Återställ eller ställ in pennfärgen."

msgid "Four input formats are allowed:"
msgstr "Fyra inmatningsformat är tillåtna:"

msgid "``pencolor()``"
msgstr "``penfärg()```"

msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""
"Returnerar den aktuella pennfärgen som färgspecifikationssträng eller som en "
"tupel (se exempel).  Kan användas som indata till ett annat color/pencolor/"
"fillcolor-anrop."

msgid "``pencolor(colorstring)``"
msgstr "``penfärg(färgsträng)``"

msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Ställ in pencolor på *colorstring*, som är en Tk-sträng för "
"färgspecifikationer, till exempel ``\"red\"``, ``\"yellow\"`` eller "
"``\"#33cc8c\"``."

msgid "``pencolor((r, g, b))``"
msgstr "``pennafärg((r, g, b))``"

msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Ställ in pencolor till RGB-färgen som representeras av tupeln *r*, *g* och "
"*b*.  Var och en av *r*, *g* och *b* måste ligga i intervallet 0..colormode, "
"där colormode är antingen 1.0 eller 255 (se :func:`colormode`)."

msgid "``pencolor(r, g, b)``"
msgstr "``pennafärg(r, g, b)``"

msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Ställ in pencolor till den RGB-färg som representeras av *r*, *g* och *b*.  "
"Var och en av *r*, *g* och *b* måste ligga i intervallet 0..colormode."

msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""
"Om turtleshape är en polygon ritas polygonens kontur med den nyinställda "
"pennfärgen."

msgid ""
">>> colormode()\n"
"1.0\n"
">>> turtle.pencolor()\n"
"'red'\n"
">>> turtle.pencolor(\"brown\")\n"
">>> turtle.pencolor()\n"
"'brown'\n"
">>> tup = (0.2, 0.8, 0.55)\n"
">>> turtle.pencolor(tup)\n"
">>> turtle.pencolor()\n"
"(0.2, 0.8, 0.5490196078431373)\n"
">>> colormode(255)\n"
">>> turtle.pencolor()\n"
"(51.0, 204.0, 140.0)\n"
">>> turtle.pencolor('#32c18f')\n"
">>> turtle.pencolor()\n"
"(50.0, 193.0, 143.0)"
msgstr ""
">>> färgläge()\n"
"1.0\n"
">>> sköldpadda.pencolor()\n"
"\"röd\n"
">>> sköldpadda.pencolor(\"brun\")\n"
">>> sköldpadda.pencolor()\n"
"\"brun\n"
">>> tup = (0,2, 0,8, 0,55)\n"
">>> turtle.pencolor(tup)\n"
">>> turtle.pencolor()\n"
"(0.2, 0.8, 0.5490196078431373)\n"
">>> färgmod(255)\n"
">>> sköldpadda.pencolor()\n"
"(51.0, 204.0, 140.0)\n"
">>> turtle.pencolor('#32c18f')\n"
">>> turtle.pencolor()\n"
"(50.0, 193.0, 143.0)"

msgid "Return or set the fillcolor."
msgstr "Returnera eller ställ in fyllnadsfärgen."

msgid "``fillcolor()``"
msgstr "``fillcolor()``"

msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""
"Returnerar aktuell fillcolor som en färgspecifikationssträng, eventuellt i "
"tuple-format (se exempel).  Kan användas som indata till ett annat color/"
"pencolor/fillcolor-anrop."

msgid "``fillcolor(colorstring)``"
msgstr "``fillcolor(färgsträng)``"

msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Ställ in fillcolor till *colorstring*, som är en Tk-"
"färgspecifikationssträng, till exempel ``\"red\"``, ``\"yellow\"`` eller "
"``\"#33cc8c\"``."

msgid "``fillcolor((r, g, b))``"
msgstr "``fillcolor((r, g, b))``"

msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Ställ in fillcolor på den RGB-färg som representeras av tupeln *r*, *g* och "
"*b*.  Var och en av *r*, *g* och *b* måste ligga i intervallet 0..colormode, "
"där colormode är antingen 1,0 eller 255 (se :func:`colormode`)."

msgid "``fillcolor(r, g, b)``"
msgstr "``fillcolor(r, g, b)``"

msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Ställ in fillcolor till den RGB-färg som representeras av *r*, *g* och *b*.  "
"Var och en av *r*, *g* och *b* måste ligga i intervallet 0..colormode."

msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""
"Om turtleshape är en polygon ritas polygonens inre med den nyinställda "
"fillcolor."

msgid ""
">>> turtle.fillcolor(\"violet\")\n"
">>> turtle.fillcolor()\n"
"'violet'\n"
">>> turtle.pencolor()\n"
"(50.0, 193.0, 143.0)\n"
">>> turtle.fillcolor((50, 193, 143))  # Integers, not floats\n"
">>> turtle.fillcolor()\n"
"(50.0, 193.0, 143.0)\n"
">>> turtle.fillcolor('#ffffff')\n"
">>> turtle.fillcolor()\n"
"(255.0, 255.0, 255.0)"
msgstr ""
">>> turtle.fillcolor(\"violett\")\n"
">>> turtle.fillcolor()\n"
"'violett'\n"
">>> turtle.pencolor()\n"
"(50.0, 193.0, 143.0)\n"
">>> turtle.fillcolor((50, 193, 143))  # Heltal, inte flyttal\n"
">>> turtle.fillcolor()\n"
"(50.0, 193.0, 143.0)\n"
">>> turtle.fillcolor('#ffffffff')\n"
">>> turtle.fillcolor()\n"
"(255.0, 255.0, 255.0)"

msgid "Return or set pencolor and fillcolor."
msgstr "Returnera eller ställ in pencolor och fillcolor."

msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""
"Flera inmatningsformat är tillåtna.  De använder 0 till 3 argument enligt "
"följande:"

msgid "``color()``"
msgstr "``färg()```"

msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""
"Returnerar aktuell pencolor och aktuell fillcolor som ett par "
"färgspecifikationssträngar eller -tupler som returneras av :func:`pencolor` "
"och :func:`fillcolor`."

msgid "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"
msgstr "``färg(färgsträng)``, ``färg((r,g,b)))``, ``färg(r,g,b)``"

msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""
"Ingångar som i :func:`pencolor`, sätter båda, fillcolor och pencolor, till "
"det angivna värdet."

msgid ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"
msgstr "``färg(färgsträng1, färgsträng2)``, ``färg((r1,g1,b1), (r2,g2,b2))``"

msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""
"Motsvarar ``pencolor(colorstring1)`` och ``fillcolor(colorstring2)`` och "
"analogt om det andra inmatningsformatet används."

msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""
"Om turtleshape är en polygon ritas polygonens kontur och insida med de "
"nyinställda färgerna."

msgid ""
">>> turtle.color(\"red\", \"green\")\n"
">>> turtle.color()\n"
"('red', 'green')\n"
">>> color(\"#285078\", \"#a0c8f0\")\n"
">>> color()\n"
"((40.0, 80.0, 120.0), (160.0, 200.0, 240.0))"
msgstr ""
">>> turtle.color(\"röd\", \"grön\")\n"
">>> turtle.color()\n"
"(\"röd\", \"grön\")\n"
">>> färg(\"#285078\", \"#a0c8f0\")\n"
">>> färg()\n"
"((40.0, 80.0, 120.0), (160.0, 200.0, 240.0))"

msgid "See also: Screen method :func:`colormode`."
msgstr "Se även följande: Skärmmetod :func:`colormode`."

msgid "Return fillstate (``True`` if filling, ``False`` else)."
msgstr "Returnerar fyllningsstatus (``True`` om fyllning, ``False`` annars)."

msgid ""
">>> turtle.begin_fill()\n"
">>> if turtle.filling():\n"
"...    turtle.pensize(5)\n"
"... else:\n"
"...    turtle.pensize(3)"
msgstr ""
">>> turtle.börja_fylla()\n"
">>> om sköldpadda.fyllning():\n"
"... sköldpadda.pennstorlek(5)\n"
"... annars:\n"
"... sköldpadda.pennstorlek(3)"

msgid "Fill the shape drawn in the ``with turtle.fill():`` block."
msgstr "Fyller den form som ritats i blocket ``with turtle.fill():``."

msgid ""
">>> turtle.color(\"black\", \"red\")\n"
">>> with turtle.fill():\n"
"...     turtle.circle(80)"
msgstr ""
">>> turtle.color(\"svart\", \"röd\")\n"
">>> med turtle.fill():\n"
"... sköldpadda.cirkel(80)"

msgid ""
"Using :func:`!fill` is equivalent to adding the :func:`begin_fill` before "
"the fill-block and :func:`end_fill` after the fill-block:"
msgstr ""
"Att använda :func:`!fill` är likvärdigt med att lägga till :func:"
"`begin_fill` före fill-blocket och :func:`end_fill` efter fill-blocket:"

msgid ""
">>> turtle.color(\"black\", \"red\")\n"
">>> turtle.begin_fill()\n"
">>> turtle.circle(80)\n"
">>> turtle.end_fill()"
msgstr ""
">>> turtle.color(\"svart\", \"röd\")\n"
">>> turtle.begin_fill()\n"
">>> sköldpadda.cirkel(80)\n"
">>> turtle.end_fill()"

msgid "To be called just before drawing a shape to be filled."
msgstr "Anropas precis innan du ritar en form som ska fyllas."

msgid "Fill the shape drawn after the last call to :func:`begin_fill`."
msgstr ""
"Fyller den form som ritades efter det senaste anropet till :func:"
"`begin_fill`."

msgid ""
"Whether or not overlap regions for self-intersecting polygons or multiple "
"shapes are filled depends on the operating system graphics, type of overlap, "
"and number of overlaps.  For example, the Turtle star above may be either "
"all yellow or have some white regions."
msgstr ""
"Huruvida överlappningsregioner för självskärande polygoner eller flera "
"former fylls beror på operativsystemets grafik, typ av överlappning och "
"antal överlappningar.  Sköldpaddsstjärnan ovan kan till exempel antingen "
"vara helt gul eller ha några vita områden."

msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""
"Ta bort sköldpaddans teckningar från skärmen, centrera om sköldpaddan och "
"sätt variablerna till standardvärdena."

msgid ""
">>> turtle.goto(0,-22)\n"
">>> turtle.left(100)\n"
">>> turtle.position()\n"
"(0.00,-22.00)\n"
">>> turtle.heading()\n"
"100.0\n"
">>> turtle.reset()\n"
">>> turtle.position()\n"
"(0.00,0.00)\n"
">>> turtle.heading()\n"
"0.0"
msgstr ""
">>> sköldpaddan.goto(0,-22)\n"
">>> sköldpaddan.vänster(100)\n"
">>> sköldpadda.position()\n"
"(0.00,-22.00)\n"
">>> sköldpadda.kurs()\n"
"100.0\n"
">>> sköldpadda.reset()\n"
">>> sköldpadda.position()\n"
"(0.00,0.00)\n"
">>> sköldpadda.kurs()\n"
"0.0"

msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""
"Ta bort sköldpaddans teckningar från skärmen.  Flytta inte sköldpaddan.  "
"Sköldpaddans tillstånd och position samt andra sköldpaddors teckningar "
"påverkas inte."

msgid "object to be written to the TurtleScreen"
msgstr "objekt som ska skrivas till TurtleScreen"

msgid "True/False"
msgstr "Sant/falskt"

msgid "one of the strings \"left\", \"center\" or right\""
msgstr "en av strängarna \"left\", \"center\" eller right\""

msgid "a triple (fontname, fontsize, fonttype)"
msgstr "en trippel (fontnamn, fontstorlek, fonttyp)"

msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or \"right\") and with "
"the given font.  If *move* is true, the pen is moved to the bottom-right "
"corner of the text.  By default, *move* is ``False``."
msgstr ""
"Skriv text - strängrepresentationen av *arg* - vid den aktuella "
"sköldpaddspositionen enligt *align* (\"left\", \"center\" eller \"right\") "
"och med det angivna teckensnittet.  Om *move* är true flyttas pennan till "
"det nedre högra hörnet av texten.  Som standard är *move* ``False``."

msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""
"Gör sköldpaddan osynlig.  Det är en bra idé att göra detta medan du är mitt "
"uppe i en komplicerad ritning, eftersom det går betydligt snabbare att rita "
"om du döljer sköldpaddan."

msgid ">>> turtle.hideturtle()"
msgstr ">>> sköldpadda.hideturtle()"

msgid "Make the turtle visible."
msgstr "Gör sköldpaddan synlig."

msgid ">>> turtle.showturtle()"
msgstr ">>> sköldpadda.showturtle()"

msgid "Return ``True`` if the Turtle is shown, ``False`` if it's hidden."
msgstr "Returnerar ``True`` om sköldpaddan visas, ``False`` om den är dold."

msgid "a string which is a valid shapename"
msgstr "en sträng som är ett giltigt shapenamn"

msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  "
"To learn about how to deal with shapes see Screen method :func:"
"`register_shape`."
msgstr ""
"Ställ in sköldpaddans form till formen med angivet *namn* eller, om namn "
"inte anges, returnera namnet på aktuell form.  Formen med *namn* måste "
"finnas i TurtleScreens formordbok.  Initialt finns följande polygonformer: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  "
"För att lära dig mer om hur man hanterar former, se skärmmetoden :func:"
"`register_shape`."

msgid ""
">>> turtle.shape()\n"
"'classic'\n"
">>> turtle.shape(\"turtle\")\n"
">>> turtle.shape()\n"
"'turtle'"
msgstr ""
">>> sköldpadda.form()\n"
"'klassisk'\n"
">>> sköldpadda.form(\"sköldpadda\")\n"
">>> sköldpadda.form()\n"
"\"sköldpadda"

msgid "one of the strings \"auto\", \"user\", \"noresize\""
msgstr "en av strängarna \"auto\", \"user\", \"noresize\""

msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""
"Ställ in resizemode till ett av värdena: \"auto\", \"user\", \"noresize\".  "
"Om *rmode* inte anges returneras aktuellt resizemode.  Olika resizemodes har "
"följande effekter:"

msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr ""
"\"auto\": anpassar sköldpaddans utseende motsvarande värdet för pennstorlek."

msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""
"\"user\": anpassar sköldpaddans utseende enligt värdena för stretchfactor "
"och outlinewidth (outline), som ställs in av :func:`shapesize`."

msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr "\"noresize\": ingen anpassning av sköldpaddans utseende sker."

msgid ""
"``resizemode(\"user\")`` is called by :func:`shapesize` when used with "
"arguments."
msgstr ""
"``resizemode(\"user\")`` anropas av :func:`shapesize` när den används med "
"argument."

msgid ""
">>> turtle.resizemode()\n"
"'noresize'\n"
">>> turtle.resizemode(\"auto\")\n"
">>> turtle.resizemode()\n"
"'auto'"
msgstr ""
">>> sköldpadda.resizemode()\n"
"'noresize'\n"
">>> turtle.resizemode(\"auto\")\n"
">>> turtle.resizemode()\n"
"'auto'"

msgid "positive number"
msgstr "positivt tal"

msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shape's outline."
msgstr ""
"Returnera eller ställ in pennans attribut x/y-stretchfactors och/eller "
"outline.  Ställ in resizemode till \"user\".  Om och endast om resizemode är "
"satt till \"user\", kommer sköldpaddan att visas utsträckt enligt dess "
"stretchfaktorer: *stretch_wid* är stretchfaktorn vinkelrätt mot dess "
"orientering, *stretch_len* är stretchfaktorn i riktning mot dess "
"orientering, *outline* bestämmer bredden på formens kontur."

msgid ""
">>> turtle.shapesize()\n"
"(1.0, 1.0, 1)\n"
">>> turtle.resizemode(\"user\")\n"
">>> turtle.shapesize(5, 5, 12)\n"
">>> turtle.shapesize()\n"
"(5, 5, 12)\n"
">>> turtle.shapesize(outline=8)\n"
">>> turtle.shapesize()\n"
"(5, 5, 8)"
msgstr ""
">>> sköldpadda.formstorlek()\n"
"(1.0, 1.0, 1)\n"
">>> turtle.resizemode(\"användare\")\n"
">>> turtle.shapesize(5, 5, 12)\n"
">>> turtle.shapesize()\n"
"(5, 5, 12)\n"
">>> turtle.shapesize(kontur=8)\n"
">>> turtle.shapesize()\n"
"(5, 5, 8)"

msgid "number (optional)"
msgstr "nummer (valfritt)"

msgid ""
"Set or return the current shearfactor. Shear the turtleshape according to "
"the given shearfactor shear, which is the tangent of the shear angle. Do "
"*not* change the turtle's heading (direction of movement). If shear is not "
"given: return the current shearfactor, i. e. the tangent of the shear angle, "
"by which lines parallel to the heading of the turtle are sheared."
msgstr ""
"Ställ in eller returnera aktuell shearfaktor. Skjuter sköldpaddsformen "
"enligt den angivna skjuvfaktorn shear, som är tangenten till skjuvvinkeln. "
"Ändra *inte* sköldpaddans kurs (rörelseriktning). Om shear inte anges: "
"returnerar den aktuella shearfaktorn, dvs. tangenten till shearvinkeln, med "
"vilken linjer parallella med sköldpaddans riktning klipps."

msgid ""
">>> turtle.shape(\"circle\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.shearfactor(0.5)\n"
">>> turtle.shearfactor()\n"
"0.5"
msgstr ""
">>> sköldpadda.form(\"cirkel\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.shearfactor(0,5)\n"
">>> turtle.shearfactor()\n"
"0.5"

msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""
"Rotera sköldpaddsfiguren med *vinkel* från dess aktuella lutningsvinkel, men "
"ändra *inte* sköldpaddans riktning (rörelseriktning)."

msgid ""
">>> turtle.reset()\n"
">>> turtle.shape(\"circle\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.tilt(30)\n"
">>> turtle.fd(50)\n"
">>> turtle.tilt(30)\n"
">>> turtle.fd(50)"
msgstr ""
">>> sköldpadda.reset()\n"
">>> sköldpadda.form(\"cirkel\")\n"
">>> sköldpadda.shapesize(5,2)\n"
">>> sköldpadda.tilt(30)\n"
">>> sköldpadda.fd(50)\n"
">>> sköldpadda.lutning(30)\n"
">>> sköldpadda.fd(50)"

msgid "a number (optional)"
msgstr "ett nummer (valfritt)"

msgid ""
"Set or return the current tilt-angle. If angle is given, rotate the "
"turtleshape to point in the direction specified by angle, regardless of its "
"current tilt-angle. Do *not* change the turtle's heading (direction of "
"movement). If angle is not given: return the current tilt-angle, i. e. the "
"angle between the orientation of the turtleshape and the heading of the "
"turtle (its direction of movement)."
msgstr ""
"Ställ in eller returnera den aktuella tilt-vinkeln. Om vinkel anges, roterar "
"sköldpaddsformen så att den pekar i den riktning som anges av vinkel, "
"oavsett dess aktuella tilt-vinkel. Ändra *inte* sköldpaddans kurs "
"(rörelseriktning). Om angle inte anges: returnera den aktuella tilt-vinkeln, "
"dvs. vinkeln mellan sköldpaddsformens orientering och sköldpaddans riktning "
"(dess rörelseriktning)."

msgid ""
">>> turtle.reset()\n"
">>> turtle.shape(\"circle\")\n"
">>> turtle.shapesize(5,2)\n"
">>> turtle.tilt(45)\n"
">>> turtle.tiltangle()\n"
"45.0"
msgstr ""
">>> sköldpadda.reset()\n"
">>> sköldpadda.form(\"cirkel\")\n"
">>> sköldpadda.shapesize(5,2)\n"
">>> sköldpadda.lutning(45)\n"
">>> sköldpadda.lutningsvinkel()\n"
"45.0"

msgid "Set or return the current transformation matrix of the turtle shape."
msgstr ""
"Ställ in eller returnera den aktuella transformationsmatrisen för "
"sköldpaddsformen."

msgid ""
"If none of the matrix elements are given, return the transformation matrix "
"as a tuple of 4 elements. Otherwise set the given elements and transform the "
"turtleshape according to the matrix consisting of first row t11, t12 and "
"second row t21, t22. The determinant t11 * t22 - t12 * t21 must not be zero, "
"otherwise an error is raised. Modify stretchfactor, shearfactor and "
"tiltangle according to the given matrix."
msgstr ""
"Om inget av matriselementen anges, returneras transformationsmatrisen som en "
"tupel med 4 element. I annat fall anges de angivna elementen och "
"sköldpaddsformen transformeras enligt matrisen som består av första raden "
"t11, t12 och andra raden t21, t22. Determinanten t11 * t22 - t12 * t21 får "
"inte vara noll, annars uppstår ett fel. Modifiera stretchfactor, shearfactor "
"och tiltangle enligt den givna matrisen."

msgid ""
">>> turtle = Turtle()\n"
">>> turtle.shape(\"square\")\n"
">>> turtle.shapesize(4,2)\n"
">>> turtle.shearfactor(-0.5)\n"
">>> turtle.shapetransform()\n"
"(4.0, -1.0, -0.0, 2.0)"
msgstr ""
">>> sköldpadda = sköldpadda()\n"
">>> sköldpadda.form(\"kvadrat\")\n"
">>> turtle.shapesize(4,2)\n"
">>> turtle.shearfactor(-0,5)\n"
">>> turtle.shapetransform()\n"
"(4.0, -1.0, -0.0, 2.0)"

msgid ""
"Return the current shape polygon as tuple of coordinate pairs. This can be "
"used to define a new shape or components of a compound shape."
msgstr ""
"Returnerar den aktuella formpolygonen som en tupel av koordinatpar. Detta "
"kan användas för att definiera en ny form eller komponenter i en sammansatt "
"form."

msgid ""
">>> turtle.shape(\"square\")\n"
">>> turtle.shapetransform(4, -1, 0, 2)\n"
">>> turtle.get_shapepoly()\n"
"((50, -20), (30, 20), (-50, 20), (-30, -20))"
msgstr ""
">>> turtle.shape(\"kvadrat\")\n"
">>> turtle.shapetransform(4, -1, 0, 2)\n"
">>> turtle.get_shapepoly()\n"
"((50, -20), (30, 20), (-50, 20), (-30, -20))"

msgid ""
"a function with two arguments which will be called with the coordinates of "
"the clicked point on the canvas"
msgstr ""
"en funktion med två argument som kommer att anropas med koordinaterna för "
"den klickade punkten på duken"

msgid "number of the mouse-button, defaults to 1 (left mouse button)"
msgstr "musknappens nummer, standardvärde 1 (vänster musknapp)"

msgid ""
"``True`` or ``False`` -- if ``True``, a new binding will be added, otherwise "
"it will replace a former binding"
msgstr ""
"``True`` eller ``False`` -- om ``True``, läggs en ny bindning till, annars "
"ersätter den en tidigare bindning"

msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""
"Bind *fun* till musklickhändelser på denna sköldpadda.  Om *fun* är ``None`` "
"tas befintliga bindningar bort.  Exempel för den anonyma sköldpaddan, dvs. "
"det procedurmässiga sättet:"

msgid ""
">>> def turn(x, y):\n"
"...     left(180)\n"
"...\n"
">>> onclick(turn)  # Now clicking into the turtle will turn it.\n"
">>> onclick(None)  # event-binding will be removed"
msgstr ""
">>> def turn(x, y):\n"
"... vänster(180)\n"
"...\n"
">>> onclick(turn) # Nu när du klickar in i sköldpaddan kommer den att "
"vända.\n"
">>> onclick(None) # händelsebindningen kommer att tas bort"

msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""
"Bind *fun* till händelser där musknappen släpps på den här sköldpaddan.  Om "
"*fun* är ``None`` tas befintliga bindningar bort."

msgid ""
">>> class MyTurtle(Turtle):\n"
"...     def glow(self,x,y):\n"
"...         self.fillcolor(\"red\")\n"
"...     def unglow(self,x,y):\n"
"...         self.fillcolor(\"\")\n"
"...\n"
">>> turtle = MyTurtle()\n"
">>> turtle.onclick(turtle.glow)     # clicking on turtle turns fillcolor "
"red,\n"
">>> turtle.onrelease(turtle.unglow) # releasing turns it to transparent."
msgstr ""
">>> klass MyTurtle(Sköldpadda):\n"
"... def glow(self,x,y):\n"
"... self.fillcolor(\"röd\")\n"
"... def unglow(self,x,y):\n"
"... self.fillcolor(\"\")\n"
"...\n"
">>> sköldpadda = MyTurtle()\n"
">>> turtle.onclick(turtle.glow) # om du klickar på sköldpaddan blir "
"fyllnadsfärgen röd,\n"
">>> turtle.onrelease(turtle.unglow) # när man släpper den blir den "
"transparent."

msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Bind *fun* till musförflyttningshändelser på denna sköldpadda.  Om *fun* är "
"``None`` tas befintliga bindningar bort."

msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""
"Anmärkning: Varje sekvens av musrörelsehändelser på en sköldpadda föregås av "
"en musklickhändelse på samma sköldpadda."

msgid ">>> turtle.ondrag(turtle.goto)"
msgstr ">>> sköldpaddan.ondrag(sköldpaddan.goto)"

msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""
"Om du sedan klickar och drar sköldpaddan flyttas den över skärmen, vilket "
"ger handritningar (om pennan är nedtryckt)."

msgid ""
"Record the vertices of a polygon drawn in the ``with turtle.poly():`` block. "
"The first and last vertices will be connected."
msgstr ""
"Registrerar hörnpunkterna i en polygon som ritats i blocket ``with turtle."
"poly():``. Det första och sista hörnet kommer att vara anslutna."

msgid ""
">>> with turtle.poly():\n"
"...     turtle.forward(100)\n"
"...     turtle.right(60)\n"
"...     turtle.forward(100)"
msgstr ""
">>> med turtle.poly():\n"
"... sköldpadda.framåt(100)\n"
"... sköldpadda.höger(60)\n"
"... sköldpadda.framåt(100)"

msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr ""
"Börja registrera hörnen i en polygon.  Sköldpaddans nuvarande position är "
"polygonens första toppunkt."

msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""
"Sluta registrera hörnen i en polygon.  Sköldpaddans nuvarande position är "
"polygonens sista toppunkt.  Detta kommer att anslutas till det första "
"toppunktet."

msgid "Return the last recorded polygon."
msgstr "Returnerar den senast registrerade polygonen."

msgid ""
">>> turtle.home()\n"
">>> turtle.begin_poly()\n"
">>> turtle.fd(100)\n"
">>> turtle.left(20)\n"
">>> turtle.fd(30)\n"
">>> turtle.left(60)\n"
">>> turtle.fd(50)\n"
">>> turtle.end_poly()\n"
">>> p = turtle.get_poly()\n"
">>> register_shape(\"myFavouriteShape\", p)"
msgstr ""
">>> sköldpadda.hem()\n"
">>> sköldpadda.börja_poly()\n"
">>> sköldpadda.fd(100)\n"
">>> sköldpadda.vänster(20)\n"
">>> sköldpadda.fd(30)\n"
">>> sköldpadda.vänster(60)\n"
">>> sköldpadda.fd(50)\n"
">>> turtle.end_poly()\n"
">>> p = turtle.get_poly()\n"
">>> register_shape(\"myFavouriteShape\", p)"

msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""
"Skapa och returnera en klon av sköldpaddan med samma position, kurs och "
"sköldpaddsegenskaper."

msgid ""
">>> mick = Turtle()\n"
">>> joe = mick.clone()"
msgstr ""
">>> mick = sköldpadda()\n"
">>> joe = mick.klon()"

msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""
"Returnerar själva Turtle-objektet.  Enda rimliga användning: som en funktion "
"för att returnera den \"anonyma sköldpaddan\":"

msgid ""
">>> pet = getturtle()\n"
">>> pet.fd(50)\n"
">>> pet\n"
"<turtle.Turtle object at 0x...>"
msgstr ""
">>> husdjur = ge sköldpadda()\n"
">>> husdjur.fd(50)\n"
">>> husdjur\n"
"<sköldpadda.sköldpaddsobjekt på 0x...>"

msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""
"Returnerar :class:`TurtleScreen`-objektet som sköldpaddan ritar på. "
"TurtleScreen-metoder kan sedan anropas för det objektet."

msgid ""
">>> ts = turtle.getscreen()\n"
">>> ts\n"
"<turtle._Screen object at 0x...>\n"
">>> ts.bgcolor(\"pink\")"
msgstr ""
">>> ts = sköldpaddan.hämtar skärm()\n"
">>> ts\n"
"<turtle._Screen-objekt vid 0x...>\n"
">>> ts.bgcolor(\"rosa\")"

msgid "an integer or ``None``"
msgstr "ett heltal eller ``None``"

msgid ""
"Set or disable undobuffer.  If *size* is an integer, an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""
"Ställ in eller inaktivera undobuffer.  Om *size* är ett heltal installeras "
"en tom undobuffer av given storlek.  *size* anger det maximala antalet "
"sköldpaddsaktioner som kan ångras med metoden/funktionen :func:`undo`.  Om "
"*size* är ``None`` inaktiveras undobufferten."

msgid ">>> turtle.setundobuffer(42)"
msgstr ">>> turtle.setundobuffer(42)"

msgid "Return number of entries in the undobuffer."
msgstr "Returnerar antal poster i undobufferten."

msgid ""
">>> while undobufferentries():\n"
"...     undo()"
msgstr ""
">>> while undobufferentries():\n"
"... undo()"

msgid "Compound shapes"
msgstr "Sammansatta former"

msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""
"För att använda sammansatta sköldpaddsformer, som består av flera polygoner "
"med olika färg, måste du använda hjälpklassen :class:`Shape` explicit enligt "
"beskrivningen nedan:"

msgid "Create an empty Shape object of type \"compound\"."
msgstr "Skapa ett tomt Shape-objekt av typen \"compound\"."

msgid ""
"Add as many components to this object as desired, using the :meth:`~Shape."
"addcomponent` method."
msgstr ""
"Lägg till så många komponenter som önskas till detta objekt med hjälp av "
"metoden :meth:`~Shape.addcomponent`."

msgid "For example:"
msgstr "Till exempel:"

msgid ""
">>> s = Shape(\"compound\")\n"
">>> poly1 = ((0,0),(10,-5),(0,10),(-10,-5))\n"
">>> s.addcomponent(poly1, \"red\", \"blue\")\n"
">>> poly2 = ((0,0),(10,-5),(-10,-5))\n"
">>> s.addcomponent(poly2, \"blue\", \"red\")"
msgstr ""
">>> s = Form(\"förening\")\n"
">>> poly1 = ((0,0),(10,-5),(0,10),(-10,-5))\n"
">>> s.addcomponent(poly1, \"röd\", \"blå\")\n"
">>> poly2 = ((0,0),(10,-5),(-10,-5))\n"
">>> s.addcomponent(poly2, \"blå\", \"röd\")"

msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr "Lägg nu till Shape i skärmens shapelist och använd den:"

msgid ""
">>> register_shape(\"myshape\", s)\n"
">>> shape(\"myshape\")"
msgstr ""
">>> register_shape(\"myshape\", s)\n"
">>> form(\"myshape\")"

msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""
"Klassen :class:`Shape` används internt av metoden :func:`register_shape` på "
"olika sätt.  Applikationsprogrammeraren måste hantera Shape-klassen *endast* "
"när han använder sammansatta former som visas ovan!"

msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr "Metoder för TurtleScreen/Screen och motsvarande funktioner"

msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""
"De flesta av exemplen i detta avsnitt hänvisar till en TurtleScreen-instans "
"som heter ``screen``."

msgid ""
"a color string or three numbers in the range 0..colormode or a 3-tuple of "
"such numbers"
msgstr ""
"en färgsträng eller tre tal i intervallet 0..colormode eller en 3-tupel av "
"sådana tal"

msgid "Set or return background color of the TurtleScreen."
msgstr "Ställ in eller returnera bakgrundsfärgen för TurtleScreen."

msgid ""
">>> screen.bgcolor(\"orange\")\n"
">>> screen.bgcolor()\n"
"'orange'\n"
">>> screen.bgcolor(\"#800080\")\n"
">>> screen.bgcolor()\n"
"(128.0, 0.0, 128.0)"
msgstr ""
">>> skärm.bgcolor(\"orange\")\n"
">>> skärm.bgcolor()\n"
"\"orange\n"
">>> skärm.bgcolor(\"#800080\")\n"
">>> skärm.bgcolor()\n"
"(128.0, 0.0, 128.0)"

msgid ""
"a string, name of an image file (PNG, GIF, PGM, and PPM) or ``\"nopic\"``, "
"or ``None``"
msgstr ""
"en sträng, namnet på en bildfil (PNG, GIF, PGM och PPM) eller ``\"nopic\"``, "
"eller ``None``"

msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""
"Ange bakgrundsbild eller returnera namnet på den aktuella bakgrundsbilden.  "
"Om *picname* är ett filnamn, anges motsvarande bild som bakgrund.  Om "
"*picname* är ``\"nopic\"``, radera bakgrundsbilden, om den finns.  Om "
"*picname* är ``None``, returneras filnamnet för den aktuella "
"bakgrundsbilden. ::"

msgid ""
">>> screen.bgpic()\n"
"'nopic'\n"
">>> screen.bgpic(\"landscape.gif\")\n"
">>> screen.bgpic()\n"
"\"landscape.gif\""
msgstr ""
">>> skärm.bgpic()\n"
"'nopic'\n"
">>> skärm.bgpic(\"landskap.gif\")\n"
">>> skärm.bgpic()\n"
"\"landskap.gif\""

msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is a different one "
"derived from the Turtle method ``clear``."
msgstr ""
"Denna TurtleScreen-metod är tillgänglig som en global funktion endast under "
"namnet ``clearscreen``.  Den globala funktionen ``clear`` är en annan "
"funktion som härrör från Turtle-metoden ``clear``."

msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""
"Ta bort alla ritningar och alla sköldpaddor från TurtleScreen.  Återställ "
"den nu tomma TurtleScreen till dess ursprungliga tillstånd: vit bakgrund, "
"ingen bakgrundsbild, inga händelsebindningar och spårning på."

msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""
"Denna TurtleScreen-metod är tillgänglig som en global funktion endast under "
"namnet ``resetscreen``.  Den globala funktionen ``reset`` är en annan "
"funktion som härrör från Turtle-metoden ``reset``."

msgid "Reset all Turtles on the Screen to their initial state."
msgstr ""
"Återställ alla sköldpaddor på skärmen till deras ursprungliga tillstånd."

msgid "positive integer, new width of canvas in pixels"
msgstr "positivt heltal, ny bredd på duken i pixlar"

msgid "positive integer, new height of canvas in pixels"
msgstr "positivt heltal, ny höjd på duken i pixlar"

msgid "colorstring or color-tuple, new background color"
msgstr "colorstring eller color-tuple, ny bakgrundsfärg"

msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""
"Om inga argument anges, returneras current (canvaswidth, canvasheight).  "
"Ändra annars storleken på den duk som sköldpaddorna ritar på.  Ändra inte "
"ritfönstret.  För att observera dolda delar av duken, använd "
"rullningslisterna. Med denna metod kan man göra de delar av en ritning "
"synliga som tidigare låg utanför duken."

msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr "t.ex. för att söka efter en sköldpadda som har rymt ;-)"

msgid "a number, x-coordinate of lower left corner of canvas"
msgstr "ett tal, x-koordinat för det nedre vänstra hörnet på duken"

msgid "a number, y-coordinate of lower left corner of canvas"
msgstr "ett tal, y-koordinat för det nedre vänstra hörnet av duken"

msgid "a number, x-coordinate of upper right corner of canvas"
msgstr "ett tal, x-koordinat för övre högra hörnet av duken"

msgid "a number, y-coordinate of upper right corner of canvas"
msgstr "ett tal, y-koordinat för övre högra hörnet av duken"

msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""
"Ställ in det användardefinierade koordinatsystemet och växla till läget "
"\"world\" om det behövs.  Detta utför en ``screen.reset()``.  Om läget "
"\"world\" redan är aktivt ritas alla ritningar om enligt de nya "
"koordinaterna."

msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr ""
"**OBSERVERA**: I användardefinierade koordinatsystem kan vinklar se "
"förvrängda ut."

msgid ""
">>> screen.reset()\n"
">>> screen.setworldcoordinates(-50,-7.5,50,7.5)\n"
">>> for _ in range(72):\n"
"...     left(10)\n"
"...\n"
">>> for _ in range(8):\n"
"...     left(45); fd(2)   # a regular octagon"
msgstr ""
">>> skärm.återställ()\n"
">>> skärm.setworldcoordinates(-50,-7.5,50,7.5)\n"
">>> för _ i intervall(72):\n"
"... vänster(10)\n"
"...\n"
">>> för _ i intervall(8):\n"
"... left(45); fd(2) # en regelbunden oktagon"

msgid ""
"Temporarily disable turtle animation. The code written inside the "
"``no_animation`` block will not be animated; once the code block is exited, "
"the drawing will appear."
msgstr ""
"Avaktiverar tillfälligt animering av sköldpaddan. Koden som skrivs inuti "
"``no_animation``-blocket kommer inte att animeras; när kodblocket avslutas "
"visas teckningen."

msgid ""
">>> with screen.no_animation():\n"
"...     for dist in range(2, 400, 2):\n"
"...         fd(dist)\n"
"...         rt(90)"
msgstr ""
">>> med screen.no_animation():\n"
"... för dist i intervall(2, 400, 2):\n"
"... fd(dist)\n"
"... rt(90)"

msgid "positive integer"
msgstr "positivt heltal"

msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""
"Ställ in eller returnera ritningens *fördröjning* i millisekunder.  (Detta "
"är ungefär tidsintervallet mellan två på varandra följande "
"canvasuppdateringar)  Ju längre fördröjning, desto långsammare animation."

msgid "Optional argument:"
msgstr "Valfritt argument:"

msgid ""
">>> screen.delay()\n"
"10\n"
">>> screen.delay(5)\n"
">>> screen.delay()\n"
"5"
msgstr ""
">>> skärm.fördröjning()\n"
"10\n"
">>> skärm.fördröjning(5)\n"
">>> skärm.fördröjning()\n"
"5"

msgid "nonnegative integer"
msgstr "icke-negativt heltal"

msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  When called without "
"arguments, returns the currently stored value of n. Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""
"Slå på/av sköldpaddsanimering och ställ in fördröjning för uppdatering av "
"ritningar.  Om *n* anges, utförs endast varje n:te regelbundna "
"skärmuppdatering.  (Kan användas för att påskynda ritningen av komplex "
"grafik.) När den anropas utan argument returneras det aktuella lagrade "
"värdet av n. Det andra argumentet anger fördröjningsvärdet (se :func:"
"`delay`)."

msgid ""
">>> screen.tracer(8, 25)\n"
">>> dist = 2\n"
">>> for i in range(200):\n"
"...     fd(dist)\n"
"...     rt(90)\n"
"...     dist += 2"
msgstr ""
">>> screen.tracer(8, 25)\n"
">>> dist = 2\n"
">>> för i i intervall(200):\n"
"... fd(dist)\n"
"... rt(90)\n"
"... dist += 2"

msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr ""
"Utför en uppdatering av TurtleScreen. Används när spåraren är avstängd."

msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr "Se även RawTurtle/Turtle-metoden :func:`speed`."

msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""
"Sätter fokus på TurtleScreen (för att samla in tangenthändelser).  Dummy-"
"argument tillhandahålls för att kunna skicka :func:`listen` till onclick-"
"metoden."

msgid "a function with no arguments or ``None``"
msgstr "en funktion utan argument eller ``None``"

msgid "a string: key (e.g. \"a\") or key-symbol (e.g. \"space\")"
msgstr ""
"en sträng: nyckel (t.ex. \"a\") eller nyckelsymbol (t.ex. \"mellanslag\")"

msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""
"Bind *fun* till key-release-händelse för nyckel.  Om *fun* är ``None`` tas "
"händelsebindningarna bort. Anmärkning: För att kunna registrera "
"tangenthändelser måste TurtleScreen ha fokus. (Se metod :func:`listen`.)"

msgid ""
">>> def f():\n"
"...     fd(50)\n"
"...     lt(60)\n"
"...\n"
">>> screen.onkey(f, \"Up\")\n"
">>> screen.listen()"
msgstr ""
">>> def f():\n"
"... fd(50)\n"
"... lt(60)\n"
"...\n"
">>> screen.onkey(f, \"Upp\")\n"
">>> skärm.lyssna()"

msgid ""
"Bind *fun* to key-press event of key if key is given, or to any key-press-"
"event if no key is given. Remark: in order to be able to register key-"
"events, TurtleScreen must have focus. (See method :func:`listen`.)"
msgstr ""
"Bind *fun* till tangenttryckningshändelsen för tangenten om tangenten är "
"angiven, eller till valfri tangenttryckningshändelse om ingen tangent är "
"angiven. Anmärkning: För att kunna registrera tangenthändelser måste "
"TurtleScreen ha fokus. (Se metod :func:`listen`.)"

msgid ""
">>> def f():\n"
"...     fd(50)\n"
"...\n"
">>> screen.onkey(f, \"Up\")\n"
">>> screen.listen()"
msgstr ""
">>> def f():\n"
"... fd(50)\n"
"...\n"
">>> screen.onkey(f, \"Upp\")\n"
">>> skärm.lyssna()"

msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Bind *fun* till musklickhändelser på den här skärmen.  Om *fun* är ``None`` "
"tas befintliga bindningar bort."

msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named ``turtle``:"
msgstr ""
"Exempel för en TurtleScreen-instans med namnet ``screen`` och en Turtle-"
"instans med namnet ``turtle``:"

msgid ""
">>> screen.onclick(turtle.goto) # Subsequently clicking into the "
"TurtleScreen will\n"
">>>                             # make the turtle move to the clicked "
"point.\n"
">>> screen.onclick(None)        # remove event binding again"
msgstr ""
">>> screen.onclick(turtle.goto) # Om man sedan klickar i TurtleScreen "
"kommer\n"
">>> # få sköldpaddan att flytta sig till den klickade punkten.\n"
">>> screen.onclick(None) # ta bort händelsebindningen igen"

msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""
"Denna TurtleScreen-metod är tillgänglig som en global funktion endast under "
"namnet ``onscreenclick``.  Den globala funktionen ``onclick`` är en annan "
"funktion som härrör från Turtle-metoden ``onclick``."

msgid "a function with no arguments"
msgstr "en funktion utan argument"

msgid "a number >= 0"
msgstr "ett tal >= 0"

msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr "Installera en timer som anropar *fun* efter *t* millisekunder."

msgid ""
">>> running = True\n"
">>> def f():\n"
"...     if running:\n"
"...         fd(50)\n"
"...         lt(60)\n"
"...         screen.ontimer(f, 250)\n"
">>> f()   ### makes the turtle march around\n"
">>> running = False"
msgstr ""
">>> kör = Sann\n"
">>> def f():\n"
"... om körs:\n"
"... fd(50)\n"
"... lt(60)\n"
"... screen.ontimer(f, 250)\n"
">>> f() ### får sköldpaddan att marschera runt\n"
">>> running = False"

msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program. Must *not* be used if a script is "
"run from within IDLE in -n mode (No subprocess) - for interactive use of "
"turtle graphics. ::"
msgstr ""
"Startar händelseslinga - anropar Tkinters mainloop-funktion. Måste vara den "
"sista satsen i ett turtle graphics-program. Får *inte* användas om ett "
"skript körs från IDLE i -n-läge (ingen subprocess) - för interaktiv "
"användning av turtle graphics. ::"

msgid ">>> screen.mainloop()"
msgstr ">>> skärm.mainloop()"

msgid "string"
msgstr "sträng"

msgid ""
"Pop up a dialog window for input of a string. Parameter title is the title "
"of the dialog window, prompt is a text mostly describing what information to "
"input. Return the string input. If the dialog is canceled, return "
"``None``. ::"
msgstr ""
"Öppnar ett dialogfönster för inmatning av en sträng. Parameter title är "
"titeln på dialogfönstret, prompt är en text som mestadels beskriver vilken "
"information som ska matas in. Returnerar den inmatade strängen. Om "
"dialogrutan avbryts returneras ``None``. ::"

msgid ">>> screen.textinput(\"NIM\", \"Name of first player:\")"
msgstr ">>> screen.textinput(\"NIM\", \"Namn på första spelaren:\")"

msgid ""
"Pop up a dialog window for input of a number. title is the title of the "
"dialog window, prompt is a text mostly describing what numerical information "
"to input. default: default value, minval: minimum value for input, maxval: "
"maximum value for input. The number input must be in the range minval .. "
"maxval if these are given. If not, a hint is issued and the dialog remains "
"open for correction. Return the number input. If the dialog is canceled,  "
"return ``None``. ::"
msgstr ""
"Popa upp ett dialogfönster för inmatning av ett tal. title är titeln på "
"dialogfönstret, prompt är en text som mestadels beskriver vilken numerisk "
"information som ska matas in. default: standardvärde, minval: lägsta värde "
"för inmatning, maxval: högsta värde för inmatning. Det inmatade talet måste "
"ligga inom intervallet minval .. maxval om dessa anges. Om så inte är fallet "
"ges en hint och dialogen förblir öppen för korrigering. Returnera det "
"inmatade talet. Om dialogen avbryts, returneras ``None``. ::"

msgid ""
">>> screen.numinput(\"Poker\", \"Your stakes:\", 1000, minval=10, "
"maxval=10000)"
msgstr ""
">>> screen.numinput(\"Poker\", \"Dina insatser:\", 1000, minval=10, "
"maxval=10000)"

msgid "one of the strings \"standard\", \"logo\" or \"world\""
msgstr "en av strängarna \"standard\", \"logo\" eller \"world\""

msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""
"Ställ in turtle mode (\"standard\", \"logo\" eller \"world\") och utför "
"reset.  Om mode inte anges returneras aktuellt läge."

msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""
"Läget \"standard\" är kompatibelt med gamla :mod:`turtle`.  Läget \"logo\" "
"är kompatibelt med de flesta Logo sköldpaddsgrafiker.  Läge \"world\" "
"använder användardefinierade \"världskoordinater\". **Attention**: i detta "
"läge ser vinklar förvrängda ut om enhetsförhållandet ``x/y`` inte är lika "
"med 1."

msgid "Mode"
msgstr "Läge"

msgid "Initial turtle heading"
msgstr "Sköldpaddans initiala kurs"

msgid "positive angles"
msgstr "positiva vinklar"

msgid "\"standard\""
msgstr "\"standard\""

msgid "to the right (east)"
msgstr "till höger (öster)"

msgid "counterclockwise"
msgstr "moturs"

msgid "\"logo\""
msgstr "\"logotyp\""

msgid "upward    (north)"
msgstr "uppåt (norr)"

msgid "clockwise"
msgstr "medurs"

msgid ""
">>> mode(\"logo\")   # resets turtle heading to north\n"
">>> mode()\n"
"'logo'"
msgstr ""
">>> mode(\"logo\") # återställer sköldpaddan på väg mot norr\n"
">>> mode()\n"
"'logo'"

msgid "one of the values 1.0 or 255"
msgstr "ett av värdena 1.0 eller 255"

msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..*cmode*."
msgstr ""
"Returnerar färgmodet eller sätter det till 1.0 eller 255.  Därefter måste "
"*r*-, *g*-, *b*-värdena för färgtripplar ligga i intervallet 0..*cmode*."

msgid ""
">>> screen.colormode(1)\n"
">>> turtle.pencolor(240, 160, 80)\n"
"Traceback (most recent call last):\n"
"     ...\n"
"TurtleGraphicsError: bad color sequence: (240, 160, 80)\n"
">>> screen.colormode()\n"
"1.0\n"
">>> screen.colormode(255)\n"
">>> screen.colormode()\n"
"255\n"
">>> turtle.pencolor(240,160,80)"
msgstr ""
">>> skärm.färgläge(1)\n"
">>> sköldpadda.pencolor(240, 160, 80)\n"
"Traceback (senaste anropet senast):\n"
"     ...\n"
"TurtleGraphicsError: dålig färgsekvens: (240, 160, 80)\n"
">>> skärm.färgläge()\n"
"1.0\n"
">>> skärm.färgläge(255)\n"
">>> skärm.färgläge()\n"
"255\n"
">>> sköldpadda.pencolor(240,160,80)"

msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""
"Returnerar Canvas för denna TurtleScreen.  Användbart för insiders som vet "
"vad de ska göra med en Tkinter Canvas."

msgid ""
">>> cv = screen.getcanvas()\n"
">>> cv\n"
"<turtle.ScrolledCanvas object ...>"
msgstr ""
">>> cv = screen.getcanvas()\n"
">>> cv\n"
"<turtle.ScrolledCanvas-objekt ...>"

msgid "Return a list of names of all currently available turtle shapes."
msgstr "Returnerar en lista med namn på alla tillgängliga sköldpaddsformer."

msgid ""
">>> screen.getshapes()\n"
"['arrow', 'blank', 'circle', ..., 'turtle']"
msgstr ""
">>> screen.gethapes()\n"
"['pil', 'blank', 'cirkel', ..., 'sköldpadda']"

msgid "There are four different ways to call this function:"
msgstr "Det finns fyra olika sätt att anropa denna funktion:"

msgid ""
"*name* is the name of an image file (PNG, GIF, PGM, and PPM) and *shape* is "
"``None``: Install the corresponding image shape. ::"
msgstr ""
"*name* är namnet på en bildfil (PNG, GIF, PGM och PPM) och *shape* är "
"``None``: Installera motsvarande bildform. ::"

msgid ">>> screen.register_shape(\"turtle.gif\")"
msgstr ">>> screen.register_shape(\"sköldpadda.gif\")"

msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""
"Bildformerna *roterar* inte när sköldpaddan vrids, så de visar inte "
"sköldpaddans riktning!"

msgid ""
"*name* is an arbitrary string and *shape* is the name of an image file (PNG, "
"GIF, PGM, and PPM): Install the corresponding image shape. ::"
msgstr ""
"*name* är en godtycklig sträng och *shape* är namnet på en bildfil (PNG, "
"GIF, PGM och PPM): Installera motsvarande bildform. ::"

msgid ">>> screen.register_shape(\"turtle\", \"turtle.gif\")"
msgstr ">>> screen.register_shape(\"sköldpadda\", \"turtle.gif\")"

msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""
"*name* är en godtycklig sträng och *shape* är en tupel av koordinatpar: "
"Installera motsvarande polygonform."

msgid ">>> screen.register_shape(\"triangle\", ((5,-3), (0,5), (-5,-3)))"
msgstr ">>> screen.register_shape(\"triangel\", ((5,-3), (0,5), (-5,-3)))"

msgid ""
"*name* is an arbitrary string and *shape* is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""
"*name* är en godtycklig sträng och *shape* är ett (sammansatt) :class:"
"`Shape`-objekt: Installera motsvarande sammansatta form."

msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""
"Lägg till en sköldpaddsform i TurtleScreens formlista.  Endast sålunda "
"registrerade former kan användas genom att ge kommandot ``form(formnamn)``."

msgid ""
"Added support for PNG, PGM, and PPM image formats. Both a shape name and an "
"image file name can be specified."
msgstr ""
"Stöd för PNG-, PGM- och PPM-bildformat har lagts till. Både ett formnamn och "
"ett bildfilnamn kan anges."

msgid "Return the list of turtles on the screen."
msgstr "Returnera listan över sköldpaddor på skärmen."

msgid ""
">>> for turtle in screen.turtles():\n"
"...     turtle.color(\"red\")"
msgstr ""
">>> för sköldpadda i screen.turtles():\n"
"... sköldpadda.färg(\"röd\")"

msgid "Return the height of the turtle window. ::"
msgstr "Returnera höjden på sköldpaddans fönster. ::"

msgid ""
">>> screen.window_height()\n"
"480"
msgstr ""
">>> screen.window_height()\n"
"480"

msgid "Return the width of the turtle window. ::"
msgstr "Returnera bredden på sköldpaddans fönster. ::"

msgid ""
">>> screen.window_width()\n"
"640"
msgstr ""
">>> skärm.fönster_bredd()\n"
"640"

msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr ""
"Metoder som är specifika för Screen och som inte ärvs från TurtleScreen"

msgid "Shut the turtlegraphics window."
msgstr "Stäng fönstret turtlegraphics."

msgid "Bind ``bye()`` method to mouse clicks on the Screen."
msgstr "Binda metoden ``bye()`` till musklick på skärmen."

msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""
"Om värdet \"using_IDLE\" i konfigurationsordlistan är ``False`` "
"(standardvärde), ska även mainloop startas.  Anmärkning: Om IDLE med ``-n`` "
"switch (ingen subprocess) används, bör detta värde sättas till ``True`` i :"
"file:`turtle.cfg`.  I detta fall är IDLE:s egen huvudslinga aktiv även för "
"klientskriptet."

msgid "Save the current turtle drawing (and turtles) as a PostScript file."
msgstr ""
"Spara den aktuella sköldpaddsritningen (och sköldpaddorna) som en PostScript-"
"fil."

msgid "the path of the saved PostScript file"
msgstr "sökvägen till den sparade PostScript-filen"

msgid ""
"if ``False`` and there already exists a file with the given filename, then "
"the function will raise a ``FileExistsError``. If it is ``True``, the file "
"will be overwritten."
msgstr ""
"om ``False`` och det redan finns en fil med det angivna filnamnet, kommer "
"funktionen att ge upphov till ett ``FileExistsError``. Om det är ``True``, "
"kommer filen att skrivas över."

msgid ""
">>> screen.save(\"my_drawing.ps\")\n"
">>> screen.save(\"my_drawing.ps\", overwrite=True)"
msgstr ""
">>> skärm.spara(\"min_teckning.ps\")\n"
">>> skärm.spara(\"min_teckning.ps\", överskrivning=True)"

msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""
"Ställer in storlek och position för huvudfönstret.  Standardvärden för "
"argument lagras i konfigurationsordlistan och kan ändras via en :file:"
"`turtle.cfg`-fil."

msgid ""
"if an integer, a size in pixels, if a float, a fraction of the screen; "
"default is 50% of screen"
msgstr ""
"om ett heltal, en storlek i pixlar, om en float, en bråkdel av skärmen; "
"standard är 50% of screen"

msgid ""
"if an integer, the height in pixels, if a float, a fraction of the screen; "
"default is 75% of screen"
msgstr ""
"om ett heltal, höjden i pixlar, om en float, en bråkdel av skärmen; standard "
"är 75% of screen"

msgid ""
"if positive, starting position in pixels from the left edge of the screen, "
"if negative from the right edge, if ``None``, center window horizontally"
msgstr ""
"om positiv, startposition i pixlar från skärmens vänstra kant, om negativ "
"från höger kant, om ``None``, centrera fönstret horisontellt"

msgid ""
"if positive, starting position in pixels from the top edge of the screen, if "
"negative from the bottom edge, if ``None``, center window vertically"
msgstr ""
"om positiv, startposition i pixlar från skärmens övre kant, om negativ från "
"den nedre kanten, om ``None``, centrera fönstret vertikalt"

msgid ""
">>> screen.setup (width=200, height=200, startx=0, starty=0)\n"
">>>              # sets window to 200x200 pixels, in upper left of screen\n"
">>> screen.setup(width=.75, height=0.5, startx=None, starty=None)\n"
">>>              # sets window to 75% of screen by 50% of screen and centers"
msgstr ""
">>> screen.setup (width=200, height=200, startx=0, starty=0)\n"
">>> # sätter fönstret till 200x200 pixlar, i övre vänstra delen av skärmen\n"
">>> screen.setup(width=.75, height=0.5, startx=None, starty=None)\n"
">>> # ställer in fönstret till 75% of skärm gånger 50% of skärm och centrerar"

msgid "a string that is shown in the titlebar of the turtle graphics window"
msgstr "en sträng som visas i titelfältet i sköldpaddans grafikfönster"

msgid "Set title of turtle window to *titlestring*."
msgstr "Ställ in titeln på sköldpaddsfönstret till *titlestring*."

msgid ">>> screen.title(\"Welcome to the turtle zoo!\")"
msgstr ">>> screen.title(\"Välkommen till sköldpaddans zoo!\")"

msgid "Public classes"
msgstr "Offentliga klasser"

msgid ""
"a :class:`!tkinter.Canvas`, a :class:`ScrolledCanvas` or a :class:"
"`TurtleScreen`"
msgstr ""
"en :class:`!tkinter.Canvas`, en :class:`ScrolledCanvas` eller en :class:"
"`TurtleScreen`"

msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""
"Skapa en sköldpadda.  Sköldpaddan har alla metoder som beskrivs ovan som "
"\"metoder för Turtle/RawTurtle\"."

msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""
"Underklass till RawTurtle, har samma gränssnitt men ritar på ett "
"standardobjekt :class:`Screen` som skapas automatiskt när det behövs för "
"första gången."

msgid "a :class:`!tkinter.Canvas`"
msgstr "en :class:`!tkinter.Canvas`"

msgid ""
"Provides screen oriented methods like :func:`bgcolor` etc. that are "
"described above."
msgstr ""
"Tillhandahåller skärmorienterade metoder som :func:`bgcolor` etc. som "
"beskrivs ovan."

msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""
"Underklass av TurtleScreen, med :ref:`fyra metoder tillagda "
"<screenspecific>`."

msgid ""
"some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas "
"with scrollbars added"
msgstr ""
"en Tkinter-widget som innehåller ScrolledCanvas, dvs. en Tkinter-canvas med "
"tillägg av rullningslister"

msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""
"Används av klassen Screen, som därmed automatiskt tillhandahåller en "
"ScrolledCanvas som lekplats för sköldpaddorna."

msgid "one of the strings \"polygon\", \"image\", \"compound\""
msgstr "en av strängarna \"polygon\", \"image\", \"compound\""

msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""
"Former för modellering av datastrukturer.  Paret ``(typ_, data)`` måste "
"följa denna specifikation:"

msgid "*type_*"
msgstr "*typ_*"

msgid "*data*"
msgstr "*data*"

msgid "\"polygon\""
msgstr "\"polygon\""

msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr "en polygon-tupel, dvs. en tupel av koordinatpar"

msgid "\"image\""
msgstr "\"bild\""

msgid "an image  (in this form only used internally!)"
msgstr "en bild (i denna form används den endast internt!)"

msgid "\"compound\""
msgstr "\"sammansatt\""

msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""
"``None`` (en sammansatt form måste konstrueras med hjälp av metoden :meth:"
"`addcomponent`)"

msgid "a polygon, i.e. a tuple of pairs of numbers"
msgstr "en polygon, d.v.s. en tupel av talpar"

msgid "a color the *poly* will be filled with"
msgstr "en färg som *poly* kommer att fyllas med"

msgid "a color for the poly's outline (if given)"
msgstr "en färg för polygonens kontur (om den anges)"

msgid "Example:"
msgstr "Exempel:"

msgid ""
">>> poly = ((0,0),(10,-5),(0,10),(-10,-5))\n"
">>> s = Shape(\"compound\")\n"
">>> s.addcomponent(poly, \"red\", \"blue\")\n"
">>> # ... add more components and then use register_shape()"
msgstr ""
">>> poly = ((0,0),(10,-5),(0,10),(-10,-5))\n"
">>> s = Form(\"förening\")\n"
">>> s.addcomponent(poly, \"röd\", \"blå\")\n"
">>> # ... lägg till fler komponenter och använd sedan register_shape()"

msgid "See :ref:`compoundshapes`."
msgstr "Se :ref:`sammansatta former`."

msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""
"En tvådimensionell vektorklass som används som en hjälpklass för att "
"implementera sköldpaddsgrafik.  Kan vara användbar för "
"sköldpaddsgrafikprogram också.  Härledd från tuple, så en vektor är en tuple!"

msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr "Ger (för *a*, *b* vektorer, *k* nummer):"

msgid "``a + b`` vector addition"
msgstr "``a + b`` vektor addition"

msgid "``a - b`` vector subtraction"
msgstr "``a - b`` vektorns subtraktion"

msgid "``a * b`` inner product"
msgstr "``a * b`` inre produkt"

msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr "multiplikation av ``k * a`` och ``a * k`` med skalär"

msgid "``abs(a)`` absolute value of a"
msgstr "``abs(a)``` absolut värde av a"

msgid "``a.rotate(angle)`` rotation"
msgstr "``a.rotera(vinkel)`` rotation"

msgid "Explanation"
msgstr "Förklaring"

msgid ""
"A turtle object draws on a screen object, and there a number of key classes "
"in the turtle object-oriented interface that can be used to create them and "
"relate them to each other."
msgstr ""
"Ett turtle-objekt ritar på ett screen-objekt och det finns ett antal "
"nyckelklasser i det objektorienterade gränssnittet turtle som kan användas "
"för att skapa dem och relatera dem till varandra."

msgid ""
"A :class:`Turtle` instance will automatically create a :class:`Screen` "
"instance if one is not already present."
msgstr ""
"En :class:`Turtle`-instans skapar automatiskt en :class:`Screen`-instans om "
"en sådan inte redan finns."

msgid ""
"``Turtle`` is a subclass of :class:`RawTurtle`, which *doesn't* "
"automatically create a drawing surface - a *canvas* will need to be provided "
"or created for it. The *canvas* can be a :class:`!tkinter.Canvas`, :class:"
"`ScrolledCanvas` or :class:`TurtleScreen`."
msgstr ""
"``Turtle`` är en underklass av :class:`RawTurtle`, som *inte* automatiskt "
"skapar en rityta - en *canvas* måste tillhandahållas eller skapas för den. "
"*Canvas* kan vara en :class:`!tkinter.Canvas`, :class:`ScrolledCanvas` "
"eller :class:`TurtleScreen`."

msgid ""
":class:`TurtleScreen` is the basic drawing surface for a turtle. :class:"
"`Screen` is a subclass of ``TurtleScreen``, and includes :ref:`some "
"additional methods <screenspecific>` for managing its appearance (including "
"size and title) and behaviour. ``TurtleScreen``'s constructor needs a :class:"
"`!tkinter.Canvas` or a :class:`ScrolledCanvas` as an argument."
msgstr ""
":class:`TurtleScreen` är den grundläggande ritytan för en sköldpadda. :class:"
"`Screen` är en underklass av ``TurtleScreen``, och innehåller :ref:``vissa "
"ytterligare metoder <screenspecific>` för att hantera dess utseende "
"(inklusive storlek och titel) och beteende. ``TurtleScreen``'s konstruktor "
"behöver en :class:`!tkinter.Canvas` eller en :class:`ScrolledCanvas` som "
"argument."

msgid ""
"The functional interface for turtle graphics uses the various methods of "
"``Turtle`` and ``TurtleScreen``/``Screen``. Behind the scenes, a screen "
"object is automatically created whenever a function derived from a "
"``Screen`` method is called. Similarly, a turtle object is automatically "
"created whenever any of the functions derived from a Turtle method is called."
msgstr ""
"Det funktionella gränssnittet för sköldpaddsgrafik använder de olika "
"metoderna i ``Turtle`` och ``TurtleScreen``/``Screen``. Bakom kulisserna "
"skapas automatiskt ett screen-objekt när en funktion som härrör från en "
"``Screen``-metod anropas. På samma sätt skapas ett turtle-objekt automatiskt "
"när någon av de funktioner som härrör från en turtle-metod anropas."

msgid ""
"To use multiple turtles on a screen, the object-oriented interface must be "
"used."
msgstr ""
"För att använda flera sköldpaddor på en skärm måste det objektorienterade "
"gränssnittet användas."

msgid "Help and configuration"
msgstr "Hjälp och konfiguration"

msgid "How to use help"
msgstr "Hur man använder hjälp"

msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""
"De publika metoderna i klasserna Screen och Turtle är utförligt "
"dokumenterade via docstrings.  Så dessa kan användas som online-hjälp via "
"Pythons hjälpfunktioner:"

msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""
"När IDLE används visar verktygstipsen signaturerna och de första raderna i "
"dokumentsträngarna för de funktions-/metodanrop som skrivits in."

msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""
"Om du anropar :func:`help` på metoder eller funktioner visas "
"dokumentationen::"

msgid ""
">>> help(Screen.bgcolor)\n"
"Help on method bgcolor in module turtle:\n"
"\n"
"bgcolor(self, *args) unbound turtle.Screen method\n"
"    Set or return backgroundcolor of the TurtleScreen.\n"
"\n"
"    Arguments (if given): a color string or three numbers\n"
"    in the range 0..colormode or a 3-tuple of such numbers.\n"
"\n"
"\n"
"    >>> screen.bgcolor(\"orange\")\n"
"    >>> screen.bgcolor()\n"
"    \"orange\"\n"
"    >>> screen.bgcolor(0.5,0,0.5)\n"
"    >>> screen.bgcolor()\n"
"    \"#800080\"\n"
"\n"
">>> help(Turtle.penup)\n"
"Help on method penup in module turtle:\n"
"\n"
"penup(self) unbound turtle.Turtle method\n"
"    Pull the pen up -- no drawing when moving.\n"
"\n"
"    Aliases: penup | pu | up\n"
"\n"
"    No argument\n"
"\n"
"    >>> turtle.penup()"
msgstr ""
">>> hjälp(Screen.bgcolor)\n"
"Hjälp om metoden bgcolor i modul turtle:\n"
"\n"
"bgcolor(self, *args) obunden turtle.screen-metod\n"
"    Ställ in eller returnera bakgrundsfärg för TurtleScreen.\n"
"\n"
"    Argument (om de ges): en färgsträng eller tre siffror\n"
"    i intervallet 0..colormode eller en 3-tupel av sådana tal.\n"
"\n"
"\n"
"    >>> skärm.bgcolor(\"orange\")\n"
"    >>> skärm.bgcolor()\n"
"    \"orange\"\n"
"    >>> skärm.bgcolor(0.5,0,0.5)\n"
"    >>> skärm.bgcolor()\n"
"    \"#800080\"\n"
"\n"
">>> help(Sköldpadda.penup)\n"
"Hjälp om metoden penup i modulen turtle:\n"
"\n"
"penup(self) obunden turtle.Turtle metod\n"
"    Dra upp pennan -- ingen ritning när du rör dig.\n"
"\n"
"    Alias: penup | pu | up\n"
"\n"
"    Inget argument\n"
"\n"
"    >>> sköldpadda.penup()"

msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr ""
"Dokumentationen av de funktioner som härrör från metoder har en modifierad "
"form::"

msgid ""
">>> help(bgcolor)\n"
"Help on function bgcolor in module turtle:\n"
"\n"
"bgcolor(*args)\n"
"    Set or return backgroundcolor of the TurtleScreen.\n"
"\n"
"    Arguments (if given): a color string or three numbers\n"
"    in the range 0..colormode or a 3-tuple of such numbers.\n"
"\n"
"    Example::\n"
"\n"
"      >>> bgcolor(\"orange\")\n"
"      >>> bgcolor()\n"
"      \"orange\"\n"
"      >>> bgcolor(0.5,0,0.5)\n"
"      >>> bgcolor()\n"
"      \"#800080\"\n"
"\n"
">>> help(penup)\n"
"Help on function penup in module turtle:\n"
"\n"
"penup()\n"
"    Pull the pen up -- no drawing when moving.\n"
"\n"
"    Aliases: penup | pu | up\n"
"\n"
"    No argument\n"
"\n"
"    Example:\n"
"    >>> penup()"
msgstr ""
">>> hjälp(bgcolor)\n"
"Hjälp om funktionen bgcolor i modul turtle:\n"
"\n"
"bgcolor(*args)\n"
"    Ställ in eller returnera bakgrundsfärg för TurtleScreen.\n"
"\n"
"    Argument (om givna): en färgsträng eller tre siffror\n"
"    i intervallet 0..colormode eller en 3-tupel av sådana tal.\n"
"\n"
"    Exempel::\n"
"\n"
"      >>> bgcolor(\"orange\")\n"
"      >>> bgcolor()\n"
"      \"orange\"\n"
"      >>> bgcolor(0.5,0,0.5)\n"
"      >>> bgcolor()\n"
"      \"#800080\"\n"
"\n"
">>> hjälp(penup)\n"
"Hjälp om funktionen penup i modul turtle:\n"
"\n"
"penup()\n"
"    Dra upp pennan -- ingen ritning när du rör dig.\n"
"\n"
"    Alias: penup | pu | up\n"
"\n"
"    Inget argument\n"
"\n"
"    Exempel: >>> penup()\n"
"    >>> penup()"

msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""
"Dessa modifierade docstrings skapas automatiskt tillsammans med de "
"funktionsdefinitioner som härleds från metoderna vid importtillfället."

msgid "Translation of docstrings into different languages"
msgstr "Översättning av docstrings till olika språk"

msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""
"Det finns ett verktyg för att skapa en ordbok vars nycklar är metodnamnen "
"och vars värden är dokumentsträngarna för de offentliga metoderna i "
"klasserna Screen och Turtle."

msgid "a string, used as filename"
msgstr "en sträng, används som filnamn"

msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""
"Skapa och skriv docstring-dictionary till ett Python-skript med det angivna "
"filnamnet.  Denna funktion måste anropas explicit (den används inte av "
"turtle graphics-klasserna).  Docstring-ordboken kommer att skrivas till "
"Python-skriptet :file:`{filename}.py`.  Den är avsedd att fungera som en "
"mall för översättning av docstrings till olika språk."

msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""
"Om du (eller dina studenter) vill använda :mod:`turtle` med onlinehjälp på "
"ditt modersmål, måste du översätta dokumentationen och spara den "
"resulterande filen som t.ex. :file:`turtle_docstringdict_german.py`."

msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""
"Om du har en lämplig post i din :file:`turtle.cfg`-fil kommer denna ordbok "
"att läsas in vid importtillfället och ersätta de engelska originaldokumenten."

msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""
"När detta skrivs finns det docstring-ordböcker på tyska och italienska.  "
"(Förfrågningar vänligen till glingl@aon.at.)"

msgid "How to configure Screen and Turtles"
msgstr "Så här konfigurerar du Screen and Turtles"

msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""
"Den inbyggda standardkonfigurationen efterliknar utseendet och beteendet hos "
"den gamla turtle-modulen för att bibehålla bästa möjliga kompatibilitet med "
"den."

msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""
"Om du vill använda en annan konfiguration som bättre återspeglar "
"funktionerna i denna modul eller som bättre passar dina behov, t.ex. för "
"användning i ett klassrum, kan du förbereda en konfigurationsfil ``turtle."
"cfg`` som kommer att läsas vid importtillfället och ändra konfigurationen "
"enligt dess inställningar."

msgid ""
"The built in configuration would correspond to the following ``turtle.cfg``:"
msgstr "Den inbyggda konfigurationen skulle motsvara följande ``turtle.cfg``:"

msgid ""
"width = 0.5\n"
"height = 0.75\n"
"leftright = None\n"
"topbottom = None\n"
"canvwidth = 400\n"
"canvheight = 300\n"
"mode = standard\n"
"colormode = 1.0\n"
"delay = 10\n"
"undobuffersize = 1000\n"
"shape = classic\n"
"pencolor = black\n"
"fillcolor = black\n"
"resizemode = noresize\n"
"visible = True\n"
"language = english\n"
"exampleturtle = turtle\n"
"examplescreen = screen\n"
"title = Python Turtle Graphics\n"
"using_IDLE = False"
msgstr ""
"bredd = 0,5\n"
"höjd = 0,75\n"
"vänster höger = Ingen\n"
"topbottom = Ingen\n"
"kanvbredd = 400\n"
"höjd på bild = 300\n"
"läge = standard\n"
"färgläge = 1.0\n"
"fördröjning = 10\n"
"undobuffersize = 1000\n"
"form = klassisk\n"
"pennfärg = svart\n"
"fyllnadsfärg = svart\n"
"storleksändringsläge = noresize\n"
"synlig = sann\n"
"språk = engelska\n"
"exampleturtle = sköldpadda\n"
"exempelskärm = skärm\n"
"title = Python sköldpaddsgrafik\n"
"using_IDLE = Falsk"

msgid "Short explanation of selected entries:"
msgstr "Kort förklaring av utvalda poster:"

msgid ""
"The first four lines correspond to the arguments of the :func:`Screen.setup "
"<setup>` method."
msgstr ""
"De fyra första raderna motsvarar argumenten i metoden :func:`Screen.setup "
"<setup>`."

msgid ""
"Line 5 and 6 correspond to the arguments of the method :func:`Screen."
"screensize <screensize>`."
msgstr ""
"Rad 5 och 6 motsvarar argumenten i metoden :func:`Screen.screensize "
"<screensize>`."

msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""
"*shape* kan vara vilken som helst av de inbyggda formerna, t.ex. pil, "
"sköldpadda osv.  För mer information, se ``help(shape)``."

msgid ""
"If you want to use no fill color (i.e. make the turtle transparent), you "
"have to write ``fillcolor = \"\"`` (but all nonempty strings must not have "
"quotes in the cfg file)."
msgstr ""
"Om du inte vill använda någon fyllnadsfärg (t.ex. göra sköldpaddan "
"genomskinlig) måste du skriva ``fillcolor = \"\"`` (men alla icke-tomma "
"strängar får inte ha citattecken i cfg-filen)."

msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""
"Om du vill återspegla sköldpaddans tillstånd måste du använda ``resizemode = "
"auto``."

msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`)."
msgstr ""
"Om du t.ex. anger ``language = italian`` kommer docstringdict :file:"
"`turtle_docstringdict_italian.py` att laddas vid importtillfället (om den "
"finns på importsökvägen, t.ex. i samma katalog som :mod:`turtle`)."

msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""
"Posterna *exampleturtle* och *examplescreen* definierar namnen på dessa "
"objekt så som de förekommer i dokumentsträngarna.  När metoddokumentationer "
"omvandlas till funktionsdokumentationer kommer dessa namn att tas bort från "
"dokumentationerna."

msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its "
"``-n`` switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""
"*använder_IDLE*: Sätt detta till ``True`` om du regelbundet arbetar med IDLE "
"och dess ``-n`` switch (\"no subprocess\").  Detta kommer att förhindra :"
"func:`exitonclick` att gå in i huvudslingan."

msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""
"Det kan finnas en :file:`turtle.cfg`-fil i den katalog där :mod:`turtle` "
"lagras och ytterligare en i den aktuella arbetskatalogen.  Den senare kommer "
"att åsidosätta inställningarna i den första."

msgid ""
"The :file:`Lib/turtledemo` directory contains a :file:`turtle.cfg` file.  "
"You can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""
"I katalogen :file:`Lib/turtledemo` finns en fil :file:`turtle.cfg`.  Du kan "
"studera den som ett exempel och se dess effekter när du kör demona (helst "
"inte från demovisaren)."

msgid ":mod:`turtledemo` --- Demo scripts"
msgstr ":mod:`turtledemo` --- Demoskript"

msgid ""
"The :mod:`turtledemo` package includes a set of demo scripts.  These scripts "
"can be run and viewed using the supplied demo viewer as follows::"
msgstr ""
"Paketet :mod:`turtledemo` innehåller en uppsättning demoskript.  Dessa "
"skript kan köras och visas med hjälp av den medföljande demovisaren enligt "
"följande::"

msgid "python -m turtledemo"
msgstr "python -m turtledemo"

msgid ""
"Alternatively, you can run the demo scripts individually.  For example, ::"
msgstr "Alternativt kan du köra demoskripten var för sig.  Till exempel ::"

msgid "python -m turtledemo.bytedesign"
msgstr "python -m turtledemo.bytedesign"

msgid "The :mod:`turtledemo` package directory contains:"
msgstr "Paketkatalogen :mod:`turtledemo` innehåller:"

msgid ""
"A demo viewer :file:`__main__.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time."
msgstr ""
"En demovisare :file:`__main__.py` som kan användas för att visa källkoden "
"för skripten och köra dem samtidigt."

msgid ""
"Multiple scripts demonstrating different features of the :mod:`turtle` "
"module.  Examples can be accessed via the Examples menu.  They can also be "
"run standalone."
msgstr ""
"Flera skript som demonstrerar olika funktioner i modulen :mod:`turtle`.  Du "
"kan komma åt exemplen via menyn Examples.  De kan också köras fristående."

msgid ""
"A :file:`turtle.cfg` file which serves as an example of how to write and use "
"such files."
msgstr ""
"En :file:`turtle.cfg`-fil som fungerar som ett exempel på hur man skriver "
"och använder sådana filer."

msgid "The demo scripts are:"
msgstr "Demoskriptet är:"

msgid "Name"
msgstr "Namn"

msgid "Description"
msgstr "Beskrivning"

msgid "Features"
msgstr "Funktioner"

msgid "bytedesign"
msgstr "bytedesign"

msgid "complex classical turtle graphics pattern"
msgstr "komplext klassiskt sköldpaddsgrafiskt mönster"

msgid ":func:`tracer`, delay, :func:`update`"
msgstr ":func:`tracer`, fördröjning, :func:`update`"

msgid "chaos"
msgstr "kaos"

msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""
"graf Verhulst dynamik, visar att datorns beräkningar kan generera resultat "
"som ibland strider mot sunt förnufts förväntningar"

msgid "world coordinates"
msgstr "världskoordinater"

msgid "clock"
msgstr "klocka"

msgid "analog clock showing time of your computer"
msgstr "analog klocka som visar tiden för din dator"

msgid "turtles as clock's hands, ontimer"
msgstr "sköldpaddor som klockvisare, ontimer"

msgid "colormixer"
msgstr "färgblandare"

msgid "experiment with r, g, b"
msgstr "experimentera med r, g, b"

msgid "forest"
msgstr "skog"

msgid "3 breadth-first trees"
msgstr "3 Bredd-först-träd"

msgid "randomization"
msgstr "randomisering"

msgid "fractalcurves"
msgstr "fractalcurves"

msgid "Hilbert & Koch curves"
msgstr "Hilbert- och Koch-kurvor"

msgid "recursion"
msgstr "rekursion"

msgid "lindenmayer"
msgstr "lindenmayer"

msgid "ethnomathematics (indian kolams)"
msgstr "etnomatematik (indiska kolamer)"

msgid "L-System"
msgstr "L-system"

msgid "minimal_hanoi"
msgstr "minimal_hanoi"

msgid "Towers of Hanoi"
msgstr "Tornen i Hanoi"

msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr "Rektangulära sköldpaddor som Hanoi-skivor (form, shapesize)"

msgid "nim"
msgstr "nim"

msgid ""
"play the classical nim game with three heaps of sticks against the computer."
msgstr "spela det klassiska nim-spelet med tre högar av pinnar mot datorn."

msgid "turtles as nimsticks, event driven (mouse, keyboard)"
msgstr "sköldpaddor som nimsticks, händelsestyrd (mus, tangentbord)"

msgid "paint"
msgstr "färg"

msgid "super minimalistic drawing program"
msgstr "super minimalistiskt ritprogram"

msgid "peace"
msgstr "fred"

msgid "elementary"
msgstr "elementär"

msgid "turtle: appearance and animation"
msgstr "sköldpadda: utseende och animation"

msgid "penrose"
msgstr "penros"

msgid "aperiodic tiling with kites and darts"
msgstr "aperiodiska plattor med drakar och pilar"

msgid "planet_and_moon"
msgstr "planet_och_måne"

msgid "simulation of gravitational system"
msgstr "simulering av gravitationssystem"

msgid "compound shapes, :class:`Vec2D`"
msgstr "sammansatta former, :class:`Vec2D`"

msgid "rosette"
msgstr "rosett"

msgid "a pattern from the wikipedia article on turtle graphics"
msgstr "ett mönster från wikipediaartikeln om sköldpaddsgrafik"

msgid ":func:`clone`, :func:`undo`"
msgstr ":func:`clone`, :func:`undo`"

msgid "round_dance"
msgstr "runddans"

msgid "dancing turtles rotating pairwise in opposite direction"
msgstr "dansande sköldpaddor som roterar parvis i motsatt riktning"

msgid "compound shapes, clone shapesize, tilt, get_shapepoly, update"
msgstr ""
"sammansatta former, klona former storlek, lutning, get_shapepoly, uppdatering"

msgid "sorting_animate"
msgstr "sortering_animerad"

msgid "visual demonstration of different sorting methods"
msgstr "visuell demonstration av olika sorteringsmetoder"

msgid "simple alignment, randomization"
msgstr "enkel justering, randomisering"

msgid "tree"
msgstr "träd"

msgid "a (graphical) breadth first tree (using generators)"
msgstr "ett (grafiskt) träd med första bredden (med hjälp av generatorer)"

msgid "two_canvases"
msgstr "två_kanvaser"

msgid "simple design"
msgstr "enkel design"

msgid "turtles on two canvases"
msgstr "sköldpaddor på två dukar"

msgid "yinyang"
msgstr "yinyang"

msgid "another elementary example"
msgstr "ett annat elementärt exempel"

msgid "Have fun!"
msgstr "Ha kul!"

msgid "Changes since Python 2.6"
msgstr "Ändringar sedan Python 2.6"

msgid ""
"The methods :func:`Turtle.tracer <tracer>`, :func:`Turtle.window_width "
"<window_width>` and :func:`Turtle.window_height <window_height>` have been "
"eliminated. Methods with these names and functionality are now available "
"only as methods of :class:`Screen`. The functions derived from these remain "
"available. (In fact already in Python 2.6 these methods were merely "
"duplications of the corresponding :class:`TurtleScreen`/:class:`Screen` "
"methods.)"
msgstr ""
"Metoderna :func:`Turtle.tracer <tracer>`, :func:`Turtle.window_width "
"<window_width>` och :func:`Turtle.window_height <window_height>` har tagits "
"bort. Metoder med dessa namn och funktioner är nu endast tillgängliga som "
"metoder i :class:`Screen`. De funktioner som härrör från dessa är "
"fortfarande tillgängliga. (Faktum är att redan i Python 2.6 var dessa "
"metoder bara dupliceringar av motsvarande :class:`TurtleScreen`/:class:"
"`Screen`-metoder)"

msgid ""
"The method :func:`!Turtle.fill` has been eliminated. The behaviour of :func:"
"`begin_fill` and :func:`end_fill` have changed slightly: now every filling "
"process must be completed with an ``end_fill()`` call."
msgstr ""
"Metoden :func:`!Turtle.fill` har tagits bort. Beteendet för :func:"
"`begin_fill` och :func:`end_fill` har ändrats något: nu måste varje "
"fyllningsprocess avslutas med ett ``end_fill()``-anrop."

msgid ""
"A method :func:`Turtle.filling <filling>` has been added. It returns a "
"boolean value: ``True`` if a filling process is under way, ``False`` "
"otherwise. This behaviour corresponds to a ``fill()`` call without arguments "
"in Python 2.6."
msgstr ""
"En metod :func:`Turtle.filling <filling>` har lagts till. Den returnerar ett "
"booleanskt värde: ``True`` om en fyllningsprocess pågår, ``False`` annars. "
"Detta beteende motsvarar ett ``fill()``-anrop utan argument i Python 2.6."

msgid "Changes since Python 3.0"
msgstr "Ändringar sedan Python 3.0"

msgid ""
"The :class:`Turtle` methods :func:`shearfactor`, :func:`shapetransform` and :"
"func:`get_shapepoly` have been added. Thus the full range of regular linear "
"transforms is now available for transforming turtle shapes. :func:"
"`tiltangle` has been enhanced in functionality: it now can be used to get or "
"set the tilt angle."
msgstr ""
"Metoderna :class:`Turtle` :func:`shearfactor`, :func:`shapetransform` och :"
"func:`get_shapepoly` har lagts till. Därmed finns nu hela utbudet av vanliga "
"linjära transformationer tillgängliga för att transformera "
"sköldpaddsformer. :func:`tiltangle` har fått utökad funktionalitet: den kan "
"nu användas för att få eller ställa in lutningsvinkeln."

msgid ""
"The :class:`Screen` method :func:`onkeypress` has been added as a complement "
"to :func:`onkey`. As the latter binds actions to the key release event, an "
"alias: :func:`onkeyrelease` was also added for it."
msgstr ""
"Metoden :class:`Screen` :func:`onkeypress` har lagts till som ett komplement "
"till :func:`onkey`. Eftersom den senare binder åtgärder till "
"nyckelutlösningshändelsen, har ett alias: :func:`onkeyrelease` också lagts "
"till för den."

msgid ""
"The method :func:`Screen.mainloop <mainloop>` has been added, so there is no "
"longer a need to use the standalone :func:`mainloop` function when working "
"with :class:`Screen` and :class:`Turtle` objects."
msgstr ""
"Metoden :func:`Screen.mainloop <mainloop>` har lagts till, så det finns inte "
"längre något behov av att använda den fristående funktionen :func:`mainloop` "
"när man arbetar med objekten :class:`Screen` och :class:`Turtle`."

msgid ""
"Two input methods have been added: :func:`Screen.textinput <textinput>` and :"
"func:`Screen.numinput <numinput>`. These pop up input dialogs and return "
"strings and numbers respectively."
msgstr ""
"Två inmatningsmetoder har lagts till: :func:`Screen.textinput <textinput>` "
"och :func:`Screen.numinput <numinput>`. Dessa öppnar inmatningsdialoger och "
"returnerar strängar respektive siffror."
