# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!fcntl` --- The ``fcntl`` and ``ioctl`` system calls"
msgstr ":mod:`!fcntl` --- Systemanropen ``fcntl`` och ``ioctl``"

msgid ""
"This module performs file and I/O control on file descriptors. It is an "
"interface to the :c:func:`fcntl` and :c:func:`ioctl` Unix routines. See the :"
"manpage:`fcntl(2)` and :manpage:`ioctl(2)` Unix manual pages for full "
"details."
msgstr ""
"Den här modulen utför fil- och I/O-kontroll på filbeskrivare. Den är ett "
"gränssnitt till Unix-rutinerna :c:func:`fcntl` och :c:func:`ioctl`. Se Unix "
"manualsidor :manpage:`fcntl(2)` och :manpage:`ioctl(2)` för fullständig "
"information."

msgid "Availability"
msgstr "Tillgänglighet"

msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or an :class:`io.IOBase` object, such as ``sys.stdin`` "
"itself, which provides a :meth:`~io.IOBase.fileno` that returns a genuine "
"file descriptor."
msgstr ""
"Alla funktioner i denna modul tar en filbeskrivare *fd* som sitt första "
"argument.  Detta kan vara en heltalsfilbeskrivning, som den som returneras "
"av ``sys.stdin.fileno()``, eller ett :class:`io.IOBase`-objekt, som ``sys."
"stdin`` själv, som tillhandahåller en :meth:`~io.IOBase.fileno` som "
"returnerar en äkta filbeskrivning."

msgid ""
"Operations in this module used to raise an :exc:`IOError` where they now "
"raise an :exc:`OSError`."
msgstr ""
"Operationer i denna modul brukade ge upphov till ett :exc:`IOError`, men nu "
"ger de upphov till ett :exc:`OSError`."

msgid ""
"The :mod:`!fcntl` module now contains ``F_ADD_SEALS``, ``F_GET_SEALS``, and "
"``F_SEAL_*`` constants for sealing of :func:`os.memfd_create` file "
"descriptors."
msgstr ""
"Modulen :mod:`!fcntl` innehåller nu konstanterna ``F_ADD_SEALS``, "
"``F_GET_SEALS`` och ``F_SEAL_*`` för försegling av :func:`os.memfd_create`-"
"filbeskrivare."

msgid ""
"On macOS, the :mod:`!fcntl` module exposes the ``F_GETPATH`` constant, which "
"obtains the path of a file from a file descriptor. On Linux(>=3.15), the :"
"mod:`!fcntl` module exposes the ``F_OFD_GETLK``, ``F_OFD_SETLK`` and "
"``F_OFD_SETLKW`` constants, which are used when working with open file "
"description locks."
msgstr ""
"På macOS exponerar modulen :mod:`!fcntl` konstanten ``F_GETPATH``, som "
"erhåller sökvägen till en fil från en filbeskrivare. På Linux (>=3.15) "
"exponerar modulen :mod:`!fcntl` konstanterna ``F_OFD_GETLK``, "
"``F_OFD_SETLK`` och ``F_OFD_SETLKW``, som används när man arbetar med öppna "
"filbeskrivningslås."

msgid ""
"On Linux >= 2.6.11, the :mod:`!fcntl` module exposes the ``F_GETPIPE_SZ`` "
"and ``F_SETPIPE_SZ`` constants, which allow to check and modify a pipe's "
"size respectively."
msgstr ""
"På Linux >= 2.6.11, exponerar modulen :mod:`!fcntl` konstanterna "
"``F_GETPIPE_SZ`` och ``F_SETPIPE_SZ``, som gör det möjligt att kontrollera "
"respektive ändra en pipes storlek."

msgid ""
"On FreeBSD, the :mod:`!fcntl` module exposes the ``F_DUP2FD`` and "
"``F_DUP2FD_CLOEXEC`` constants, which allow to duplicate a file descriptor, "
"the latter setting ``FD_CLOEXEC`` flag in addition."
msgstr ""
"På FreeBSD exponerar :mod:`!fcntl`-modulen konstanterna ``F_DUP2FD`` och "
"``F_DUP2FD_CLOEXEC``, som gör det möjligt att duplicera en filbeskrivare, "
"den senare sätter dessutom flaggan ``FD_CLOEXEC``."

msgid ""
"On Linux >= 4.5, the :mod:`fcntl` module exposes the ``FICLONE`` and "
"``FICLONERANGE`` constants, which allow to share some data of one file with "
"another file by reflinking on some filesystems (e.g., btrfs, OCFS2, and "
"XFS). This behavior is commonly referred to as \"copy-on-write\"."
msgstr ""
"På Linux >= 4.5, exponerar :mod:`fcntl`-modulen konstanterna ``FICLONE`` och "
"``FICLONERANGE``, som gör det möjligt att dela vissa data i en fil med en "
"annan fil genom att återlänka på vissa filsystem (t.ex. btrfs, OCFS2 och "
"XFS). Detta beteende kallas vanligen \"copy-on-write\"."

msgid ""
"On Linux >= 2.6.32, the :mod:`!fcntl` module exposes the ``F_GETOWN_EX``, "
"``F_SETOWN_EX``, ``F_OWNER_TID``, ``F_OWNER_PID``, ``F_OWNER_PGRP`` "
"constants, which allow to direct I/O availability signals to a specific "
"thread, process, or process group. On Linux >= 4.13, the :mod:`!fcntl` "
"module exposes the ``F_GET_RW_HINT``, ``F_SET_RW_HINT``, "
"``F_GET_FILE_RW_HINT``, ``F_SET_FILE_RW_HINT``, and ``RWH_WRITE_LIFE_*`` "
"constants, which allow to inform the kernel about the relative expected "
"lifetime of writes on a given inode or via a particular open file "
"description. On Linux >= 5.1 and NetBSD, the :mod:`!fcntl` module exposes "
"the ``F_SEAL_FUTURE_WRITE`` constant for use with ``F_ADD_SEALS`` and "
"``F_GET_SEALS`` operations. On FreeBSD, the :mod:`!fcntl` module exposes the "
"``F_READAHEAD``, ``F_ISUNIONSTACK``, and ``F_KINFO`` constants. On macOS and "
"FreeBSD, the :mod:`!fcntl` module exposes the ``F_RDAHEAD`` constant. On "
"NetBSD and AIX, the :mod:`!fcntl` module exposes the ``F_CLOSEM`` constant. "
"On NetBSD, the :mod:`!fcntl` module exposes the ``F_MAXFD`` constant. On "
"macOS and NetBSD, the :mod:`!fcntl` module exposes the ``F_GETNOSIGPIPE`` "
"and ``F_SETNOSIGPIPE`` constant."
msgstr ""
"På Linux >= 2.6.32, exponerar :mod:`!fcntl`-modulen konstanterna "
"``F_GETOWN_EX``, ``F_SETOWN_EX``, ``F_OWNER_TID``, ``F_OWNER_PID``, "
"``F_OWNER_PGRP``, som gör det möjligt att rikta I/O-tillgänglighetssignaler "
"till en specifik tråd, process eller processgrupp. På Linux >= 4.13 "
"exponerar modulen :mod:`!fcntl` konstanterna ``F_GET_RW_HINT``, "
"``F_SET_RW_HINT``, ``F_GET_FILE_RW_HINT``, ``F_SET_FILE_RW_HINT`` och "
"``RWH_WRITE_LIFE_*``, som gör det möjligt att informera kärnan om den "
"relativa förväntade livslängden för skrivningar på en viss inode eller via "
"en viss beskrivning av en öppen fil. På Linux >= 5.1 och NetBSD, exponerar "
"modulen :mod:`!fcntl` konstanten ``F_SEAL_FUTURE_WRITE`` för användning med "
"``F_ADD_SEALS`` och ``F_GET_SEALS`` operationer. På FreeBSD exponerar "
"modulen :mod:`!fcntl` konstanterna ``F_READAHEAD``, ``F_ISUNIONSTACK`` och "
"``F_KINFO``. På macOS och FreeBSD exponerar modulen :mod:`!fcntl` konstanten "
"``F_RDAHEAD``. På NetBSD och AIX exponerar modulen :mod:`!fcntl` konstanten "
"``F_CLOSEM``. På NetBSD exponerar modulen :mod:`!fcntl` konstanten "
"``F_MAXFD``. På macOS och NetBSD exponerar modulen :mod:`!fcntl` "
"konstanterna ``F_GETNOSIGPIPE`` och ``F_SETNOSIGPIPE``."

msgid ""
"On Linux >= 6.1, the :mod:`!fcntl` module exposes the ``F_DUPFD_QUERY`` to "
"query a file descriptor pointing to the same file."
msgstr ""
"På Linux >= 6.1 exponerar modulen :mod:`!fcntl` modulen ``F_DUPFD_QUERY`` "
"för att fråga en filbeskrivare som pekar på samma fil."

msgid "The module defines the following functions:"
msgstr "Modulen definierar följande funktioner:"

msgid ""
"Perform the operation *cmd* on file descriptor *fd* (file objects providing "
"a :meth:`~io.IOBase.fileno` method are accepted as well).  The values used "
"for *cmd* are operating system dependent, and are available as constants in "
"the :mod:`fcntl` module, using the same names as used in the relevant C "
"header files. The argument *arg* can either be an integer value, a :term:"
"`bytes-like object`, or a string. The type and size of *arg* must match the "
"type and size of the argument of the operation as specified in the relevant "
"C documentation."
msgstr ""
"Utför operationen *cmd* på filbeskrivaren *fd* (filobjekt som "
"tillhandahåller en :meth:`~io.IOBase.fileno`-metod accepteras också).  De "
"värden som används för *cmd* är beroende av operativsystemet och finns "
"tillgängliga som konstanter i modulen :mod:`fcntl`, med samma namn som "
"används i de relevanta C-headerfilerna. Argumentet *arg* kan antingen vara "
"ett heltalsvärde, ett :term:`bytesliknande objekt` eller en sträng. Typ och "
"storlek på *arg* måste överensstämma med typ och storlek på argumentet för "
"operationen enligt specifikationen i relevant C-dokumentation."

msgid ""
"When *arg* is an integer, the function returns the integer return value of "
"the C :c:func:`fcntl` call."
msgstr ""
"När *arg* är ett heltal, returnerar funktionen heltalsreturvärdet för "
"anropet C :c:func:`fcntl`."

msgid ""
"When the argument is bytes-like object, it represents a binary structure, "
"for example, created by :func:`struct.pack`. A string value is encoded to "
"binary using the UTF-8 encoding. The binary data is copied to a buffer whose "
"address is passed to the C :c:func:`fcntl` call.  The return value after a "
"successful call is the contents of the buffer, converted to a :class:`bytes` "
"object. The length of the returned object will be the same as the length of "
"the *arg* argument. This is limited to 1024 bytes."
msgstr ""
"När argumentet är ett bytesliknande objekt representerar det en binär "
"struktur, t.ex. skapad av :func:`struct.pack`. Ett strängvärde kodas till "
"binär med hjälp av UTF-8-kodning. De binära data kopieras till en buffert "
"vars adress skickas till C :c:func:`fcntl`-anropet.  Returvärdet efter ett "
"lyckat anrop är innehållet i bufferten, konverterat till ett :class:`bytes`-"
"objekt. Längden på det returnerade objektet kommer att vara densamma som "
"längden på argumentet *arg*. Detta är begränsat till 1024 byte."

msgid "If the :c:func:`fcntl` call fails, an :exc:`OSError` is raised."
msgstr ""
"Om anropet av :c:func:`fcntl` misslyckas, genereras ett :exc:`OSError`."

msgid ""
"If the type or the size of *arg* does not match the type or size of the "
"argument of the operation (for example, if an integer is passed when a "
"pointer is expected, or the information returned in the buffer by the "
"operating system is larger than 1024 bytes), this is most likely to result "
"in a segmentation violation or a more subtle data corruption."
msgstr ""
"Om typen eller storleken på *arg* inte stämmer överens med typen eller "
"storleken på argumentet för operationen (t.ex. om ett heltal skickas när en "
"pekare förväntas, eller om informationen som returneras i bufferten av "
"operativsystemet är större än 1024 byte), är det mest troligt att detta "
"resulterar i en segmenteringsöverträdelse eller en mer subtil datakorruption."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.fcntl`` with arguments "
"``fd``, ``cmd``, ``arg``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``fcntl.fcntl`` med argumenten "
"``fd``, ``cmd``, ``arg``."

msgid ""
"Add support of arbitrary :term:`bytes-like objects <bytes-like object>`, not "
"only :class:`bytes`."
msgstr ""
"Lägg till stöd för godtyckliga :term:`bytesliknande objekt <bytes-like "
"object>`, inte bara :class:`bytes`."

msgid ""
"This function is identical to the :func:`~fcntl.fcntl` function, except that "
"the argument handling is even more complicated."
msgstr ""
"Denna funktion är identisk med funktionen :func:`~fcntl.fcntl`, förutom att "
"argumenthanteringen är ännu mer komplicerad."

msgid ""
"The *request* parameter is limited to values that can fit in 32-bits or 64-"
"bits, depending on the platform. Additional constants of interest for use as "
"the *request* argument can be found in the :mod:`termios` module, under the "
"same names as used in the relevant C header files."
msgstr ""
"Parametern *request* är begränsad till värden som kan rymmas i 32-bitar "
"eller 64-bitar, beroende på plattform. Ytterligare konstanter av intresse "
"för användning som *request*-argument finns i modulen :mod:`termios`, under "
"samma namn som används i de relevanta C-headerfilerna."

msgid ""
"The parameter *arg* can be an integer, a :term:`bytes-like object`, or a "
"string. The type and size of *arg* must match the type and size of the "
"argument of the operation as specified in the relevant C documentation."
msgstr ""
"Parametern *arg* kan vara ett heltal, ett :term:`bytesliknande objekt` eller "
"en sträng. Typ och storlek på *arg* måste överensstämma med typ och storlek "
"på argumentet för operationen enligt vad som anges i relevant C-"
"dokumentation."

msgid ""
"If *arg* does not support the read-write buffer interface or the "
"*mutate_flag* is false, behavior is as for the :func:`~fcntl.fcntl` function."
msgstr ""
"Om *arg* inte stöder gränssnittet för skriv-läs-buffert eller om "
"*mutate_flag* är false, är beteendet detsamma som för funktionen :func:"
"`~fcntl.fcntl`."

msgid ""
"If *arg* supports the read-write buffer interface (like :class:`bytearray`) "
"and *mutate_flag* is true (the default), then the buffer is (in effect) "
"passed to the underlying :c:func:`!ioctl` system call, the latter's return "
"code is passed back to the calling Python, and the buffer's new contents "
"reflect the action of the :c:func:`ioctl`.  This is a slight simplification, "
"because if the supplied buffer is less than 1024 bytes long it is first "
"copied into a static buffer 1024 bytes long which is then passed to :func:"
"`ioctl` and copied back into the supplied buffer."
msgstr ""
"Om *arg* stöder gränssnittet för skriv-läs-buffertar (som :class:"
"`bytearray`) och *mutate_flag* är true (standard), då skickas bufferten (i "
"praktiken) till det underliggande systemanropet :c:func:`!ioctl`, den "
"senares returkod skickas tillbaka till den anropande Python, och buffertens "
"nya innehåll återspeglar åtgärden från :c:func:`ioctl`.  Detta är en liten "
"förenkling, för om den medföljande bufferten är mindre än 1024 byte lång "
"kopieras den först till en statisk buffert som är 1024 byte lång, som sedan "
"skickas till :func:`ioctl` och kopieras tillbaka till den medföljande "
"bufferten."

msgid ""
"If the :c:func:`ioctl` call fails, an :exc:`OSError` exception is raised."
msgstr ""
"Om anropet av :c:func:`ioctl` misslyckas, uppstår ett undantag av typen :exc:"
"`OSError`."

msgid ""
"If the type or size of *arg* does not match the type or size of the "
"operation's argument (for example, if an integer is passed when a pointer is "
"expected, or the information returned in the buffer by the operating system "
"is larger than 1024 bytes, or the size of the mutable bytes-like object is "
"too small), this is most likely to result in a segmentation violation or a "
"more subtle data corruption."
msgstr ""
"Om typen eller storleken på *arg* inte stämmer överens med typen eller "
"storleken på operationens argument (t.ex. om ett heltal skickas när en "
"pekare förväntas, eller om informationen som returneras i bufferten av "
"operativsystemet är större än 1024 byte, eller om storleken på det byte-"
"liknande objektet är för liten), är det mest troligt att detta resulterar i "
"en segmenteringsöverträdelse eller en mer subtil datakorruption."

msgid "An example::"
msgstr "Ett exempel::"

msgid ""
">>> import array, fcntl, struct, termios, os\n"
">>> os.getpgrp()\n"
"13341\n"
">>> struct.unpack('h', fcntl.ioctl(0, termios.TIOCGPGRP, \"  \"))[0]\n"
"13341\n"
">>> buf = array.array('h', [0])\n"
">>> fcntl.ioctl(0, termios.TIOCGPGRP, buf, 1)\n"
"0\n"
">>> buf\n"
"array('h', [13341])"
msgstr ""
">>> import array, fcntl, struct, termios, os\n"
">>> os.getpgrp()\n"
"13341\n"
">>> struct.unpack('h', fcntl.ioctl(0, termios.TIOCGPGRP, \"  \"))[0]\n"
"13341\n"
">>> buf = array.array('h', [0])\n"
">>> fcntl.ioctl(0, termios.TIOCGPGRP, buf, 1)\n"
"0\n"
">>> buf\n"
"array('h', [13341])"

msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.ioctl`` with arguments "
"``fd``, ``request``, ``arg``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``fcntl.ioctl`` med argumenten "
"``fd``, ``request``, ``arg``."

msgid ""
"The GIL is always released during a system call. System calls failing with "
"EINTR are automatically retried."
msgstr ""
"GIL frigörs alltid under ett systemanrop. Systemanrop som misslyckas med "
"EINTR försöker automatiskt på nytt."

msgid ""
"Perform the lock operation *operation* on file descriptor *fd* (file objects "
"providing a :meth:`~io.IOBase.fileno` method are accepted as well). See the "
"Unix manual :manpage:`flock(2)` for details.  (On some systems, this "
"function is emulated using :c:func:`fcntl`.)"
msgstr ""
"Utför låsoperationen *operation* på filbeskrivaren *fd* (filobjekt som "
"tillhandahåller en :meth:`~io.IOBase.fileno`-metod accepteras också). Se "
"Unix-manualen :manpage:`flock(2)` för mer information.  (På vissa system "
"emuleras denna funktion med hjälp av :c:func:`fcntl`)"

msgid ""
"If the :c:func:`flock` call fails, an :exc:`OSError` exception is raised."
msgstr ""
"Om anropet av :c:func:`flock` misslyckas, uppstår ett undantag av typen :exc:"
"`OSError`."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.flock`` with arguments "
"``fd``, ``operation``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``fcntl.flock`` med argumenten "
"``fd``, ``operation``."

msgid ""
"This is essentially a wrapper around the :func:`~fcntl.fcntl` locking calls. "
"*fd* is the file descriptor (file objects providing a :meth:`~io.IOBase."
"fileno` method are accepted as well) of the file to lock or unlock, and "
"*cmd* is one of the following values:"
msgstr ""
"Detta är i huvudsak ett omslag runt :func:`~fcntl.fcntl` låsningsanrop. *fd* "
"är filbeskrivaren (filobjekt som tillhandahåller en :meth:`~io.IOBase."
"fileno`-metod accepteras också) för den fil som ska låsas eller låsas upp, "
"och *cmd* är ett av följande värden:"

msgid "Release an existing lock."
msgstr "Frigör ett befintligt lås."

msgid "Acquire a shared lock."
msgstr "Förvärva ett delat lås."

msgid "Acquire an exclusive lock."
msgstr "Förvärva ett exklusivt lås."

msgid ""
"Bitwise OR with any of the other three ``LOCK_*`` constants to make the "
"request non-blocking."
msgstr ""
"Bitvis OR med någon av de andra tre ``LOCK_*``-konstanterna för att göra "
"begäran icke-blockerande."

msgid ""
"If :const:`!LOCK_NB` is used and the lock cannot be acquired, an :exc:"
"`OSError` will be raised and the exception will have an *errno* attribute "
"set to :const:`~errno.EACCES` or :const:`~errno.EAGAIN` (depending on the "
"operating system; for portability, check for both values).  On at least some "
"systems, :const:`!LOCK_EX` can only be used if the file descriptor refers to "
"a file opened for writing."
msgstr ""
"Om :const:`!LOCK_NB` används och låset inte kan förvärvas, kommer ett :exc:"
"`OSError` att uppstå och undantaget kommer att ha ett *errno*-attribut satt "
"till :const:`~errno.EACCES` eller :const:`~errno.EAGAIN` (beroende på "
"operativsystem; för portabilitet, kontrollera båda värdena).  På åtminstone "
"vissa system kan :const:`!LOCK_EX` endast användas om filbeskrivaren "
"hänvisar till en fil som är öppen för skrivning."

msgid ""
"*len* is the number of bytes to lock, *start* is the byte offset at which "
"the lock starts, relative to *whence*, and *whence* is as with :func:`io."
"IOBase.seek`, specifically:"
msgstr ""
"*len* är antalet byte som ska låsas, *start* är den byteoffset som låset "
"startar vid, relativt *whence*, och *whence* är som med :func:`io.IOBase."
"seek`, specifikt:"

msgid "``0`` -- relative to the start of the file (:const:`os.SEEK_SET`)"
msgstr "``0`` -- relativt till början av filen (:const:`os.SEEK_SET`)"

msgid "``1`` -- relative to the current buffer position (:const:`os.SEEK_CUR`)"
msgstr ""
"``1`` -- relativt den aktuella buffertpositionen (:const:`os.SEEK_CUR`)"

msgid "``2`` -- relative to the end of the file (:const:`os.SEEK_END`)"
msgstr "``2`` -- i förhållande till slutet av filen (:const:`os.SEEK_END`)"

msgid ""
"The default for *start* is 0, which means to start at the beginning of the "
"file. The default for *len* is 0 which means to lock to the end of the "
"file.  The default for *whence* is also 0."
msgstr ""
"Standardvärdet för *start* är 0, vilket innebär att man börjar i början av "
"filen. Standardvärdet för *len* är 0, vilket innebär att man låser till "
"slutet av filen.  Standardvärdet för *whence* är också 0."

msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.lockf`` with arguments "
"``fd``, ``cmd``, ``len``, ``start``, ``whence``."
msgstr ""
"Utlöser en :ref:`auditing event <auditing>` ``fcntl.lockf`` med argumenten "
"``fd``, ``cmd``, ``len``, ``start``, ``whence``."

msgid "Examples (all on a SVR4 compliant system)::"
msgstr "Exempel (alla på ett SVR4-kompatibelt system)::"

msgid ""
"import struct, fcntl, os\n"
"\n"
"f = open(...)\n"
"rv = fcntl.fcntl(f, fcntl.F_SETFL, os.O_NDELAY)\n"
"\n"
"lockdata = struct.pack('hhllhh', fcntl.F_WRLCK, 0, 0, 0, 0, 0)\n"
"rv = fcntl.fcntl(f, fcntl.F_SETLKW, lockdata)"
msgstr ""
"import struct, fcntl, os\n"
"\n"
"f = open(...)\n"
"rv = fcntl.fcntl(f, fcntl.F_SETFL, os.O_NDELAY)\n"
"\n"
"lockdata = struct.pack('hhllhh', fcntl.F_WRLCK, 0, 0, 0, 0, 0)\n"
"rv = fcntl.fcntl(f, fcntl.F_SETLKW, lockdata)"

msgid ""
"Note that in the first example the return value variable *rv* will hold an "
"integer value; in the second example it will hold a :class:`bytes` object.  "
"The structure lay-out for the *lockdata* variable is system dependent --- "
"therefore using the :func:`flock` call may be better."
msgstr ""
"Observera att i det första exemplet kommer returvärdevariabeln *rv* att "
"innehålla ett heltalsvärde; i det andra exemplet kommer den att innehålla "
"ett :class:`bytes`-objekt.  Strukturlayouten för variabeln *lockdata* är "
"systemberoende --- därför kan det vara bättre att använda :func:`flock`-"
"anropet."

msgid "Module :mod:`os`"
msgstr "Modul :mod:`os`"

msgid ""
"If the locking flags :const:`~os.O_SHLOCK` and :const:`~os.O_EXLOCK` are "
"present in the :mod:`os` module (on BSD only), the :func:`os.open` function "
"provides an alternative to the :func:`lockf` and :func:`flock` functions."
msgstr ""
"Om låsningsflaggorna :const:`~os.O_SHLOCK` och :const:`~os.O_EXLOCK` finns i "
"modulen :mod:`os` (endast på BSD), är funktionen :func:`os.open` ett "
"alternativ till funktionerna :func:`lockf` och :func:`flock`."

msgid "UNIX"
msgstr "UNIX"

msgid "file control"
msgstr "filkontroll"

msgid "I/O control"
msgstr "I/O-kontroll"
