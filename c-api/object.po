# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Object Protocol"
msgstr "Objektprotokoll"

msgid "Get a :term:`strong reference` to a constant."
msgstr "Få en :term:`stark referens` till en konstant."

msgid "Set an exception and return ``NULL`` if *constant_id* is invalid."
msgstr ""
"Ställ in ett undantag och returnera ``NULL`` om *constant_id* är ogiltig."

msgid "*constant_id* must be one of these constant identifiers:"
msgstr "*constant_id* måste vara en av dessa konstantidentifierare:"

msgid "Constant Identifier"
msgstr "Konstant identifierare"

msgid "Value"
msgstr "Värde"

msgid "Returned object"
msgstr "Återlämnat objekt"

msgid "``0``"
msgstr "``0``"

msgid ":py:data:`None`"
msgstr ":py:data:`None`"

msgid "``1``"
msgstr "``1``"

msgid ":py:data:`False`"
msgstr ":py:data:`False`"

msgid "``2``"
msgstr "``2``"

msgid ":py:data:`True`"
msgstr ":py:data:`True`"

msgid "``3``"
msgstr "``3``"

msgid ":py:data:`Ellipsis`"
msgstr ":py:data:`Ellipsis`"

msgid "``4``"
msgstr "``4``"

msgid ":py:data:`NotImplemented`"
msgstr ":py:data:`NotImplemented`"

msgid "``5``"
msgstr "``5``"

msgid "``6``"
msgstr "``6``"

msgid "``7``"
msgstr "``7``"

msgid "``''``"
msgstr "``''``"

msgid "``8``"
msgstr "``8``"

msgid "``b''``"
msgstr "``b''``"

msgid "``9``"
msgstr "``9``"

msgid "``()``"
msgstr "``()``"

msgid ""
"Numeric values are only given for projects which cannot use the constant "
"identifiers."
msgstr ""
"Numeriska värden anges endast för projekt som inte kan använda de konstanta "
"identifierarna."

msgid "In CPython, all of these constants are :term:`immortal`."
msgstr "I CPython är alla dessa konstanter :term:`immortal`."

msgid ""
"Similar to :c:func:`Py_GetConstant`, but return a :term:`borrowed reference`."
msgstr ""
"Liknar :c:func:`Py_GetConstant`, men returnerar en :term:`lånad referens`."

msgid ""
"This function is primarily intended for backwards compatibility: using :c:"
"func:`Py_GetConstant` is recommended for new code."
msgstr ""
"Denna funktion är främst avsedd för bakåtkompatibilitet: att använda :c:func:"
"`Py_GetConstant` rekommenderas för ny kod."

msgid ""
"The reference is borrowed from the interpreter, and is valid until the "
"interpreter finalization."
msgstr ""
"Referensen lånas av tolken och gäller till dess att tolken har slutfört sitt "
"uppdrag."

msgid ""
"The ``NotImplemented`` singleton, used to signal that an operation is not "
"implemented for the given type combination."
msgstr ""
"Singleton ``NotImplemented``, används för att signalera att en operation "
"inte är implementerad för den givna typkombinationen."

msgid ""
"Properly handle returning :c:data:`Py_NotImplemented` from within a C "
"function (that is, create a new :term:`strong reference` to :const:"
"`NotImplemented` and return it)."
msgstr ""
"Hantera korrekt returnering av :c:data:`Py_NotImplemented` från en C-"
"funktion (dvs. skapa en ny :term:`strong reference` till :const:"
"`NotImplemented` och returnera den)."

msgid ""
"Flag to be used with multiple functions that print the object (like :c:func:"
"`PyObject_Print` and :c:func:`PyFile_WriteObject`). If passed, these "
"function would use the :func:`str` of the object instead of the :func:`repr`."
msgstr ""
"Flagga som ska användas med flera funktioner som skriver ut objektet (som :c:"
"func:`PyObject_Print` och :c:func:`PyFile_WriteObject`). Om den godkänns "
"kommer dessa funktioner att använda objektets :func:`str` istället för :func:"
"`repr`."

msgid ""
"Print an object *o*, on file *fp*.  Returns ``-1`` on error.  The flags "
"argument is used to enable certain printing options.  The only option "
"currently supported is :c:macro:`Py_PRINT_RAW`; if given, the :func:`str` of "
"the object is written instead of the :func:`repr`."
msgstr ""
"Skriv ut ett objekt *o*, på filen *fp*.  Returnerar ``-1`` vid fel.  "
"Argumentet flags används för att aktivera vissa utskriftsalternativ.  Det "
"enda alternativ som för närvarande stöds är :c:macro:`Py_PRINT_RAW`; om det "
"anges skrivs objektets :func:`str` ut istället för :func:`repr`."

msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise. "
"This is equivalent to the Python expression ``hasattr(o, attr_name)``. On "
"failure, return ``-1``."
msgstr ""
"Returnerar ``1`` om *o* har attributet *attr_name*, och ``0`` annars. Detta "
"är likvärdigt med Python-uttrycket ``hasattr(o, attr_name)``. Vid "
"misslyckande returneras ``-1``."

msgid ""
"This is the same as :c:func:`PyObject_HasAttrWithError`, but *attr_name* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_HasAttrWithError`, men *attr_name* "
"anges som en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för "
"en :c:expr:`PyObject*`."

msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise. "
"This function always succeeds."
msgstr ""
"Returnerar ``1`` om *o* har attributet *attr_name*, och ``0`` annars. Denna "
"funktion lyckas alltid."

msgid ""
"Exceptions that occur when this calls :meth:`~object.__getattr__` and :meth:"
"`~object.__getattribute__` methods aren't propagated, but instead given to :"
"func:`sys.unraisablehook`. For proper error handling, use :c:func:"
"`PyObject_HasAttrWithError`, :c:func:`PyObject_GetOptionalAttr` or :c:func:"
"`PyObject_GetAttr` instead."
msgstr ""
"Undantag som uppstår när detta anropar metoderna :meth:`~object.__getattr__` "
"och :meth:`~object.__getattribute__` sprids inte, utan ges istället till :"
"func:`sys.unraisablehook`. För korrekt felhantering, använd :c:func:"
"`PyObject_HasAttrWithError`, :c:func:`PyObject_GetOptionalAttr` eller :c:"
"func:`PyObject_GetAttr` istället."

msgid ""
"This is the same as :c:func:`PyObject_HasAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_HasAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"Exceptions that occur when this calls :meth:`~object.__getattr__` and :meth:"
"`~object.__getattribute__` methods or while creating the temporary :class:"
"`str` object are silently ignored. For proper error handling, use :c:func:"
"`PyObject_HasAttrStringWithError`, :c:func:`PyObject_GetOptionalAttrString` "
"or :c:func:`PyObject_GetAttrString` instead."
msgstr ""
"Undantag som uppstår när detta anropar metoderna :meth:`~object.__getattr__` "
"och :meth:`~object.__getattribute__` eller när det tillfälliga :class:`str`-"
"objektet skapas ignoreras i tysthet. För korrekt felhantering, använd :c:"
"func:`PyObject_HasAttrStringWithError`, :c:func:"
"`PyObject_GetOptionalAttrString` eller :c:func:`PyObject_GetAttrString` "
"istället."

msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure.  This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Hämtar ett attribut med namnet *attr_name* från objektet *o*. Returnerar "
"attributvärdet vid framgång, eller ``NULL`` vid misslyckande.  Detta är "
"motsvarigheten till Python-uttrycket ``o.attr_name``."

msgid ""
"If the missing attribute should not be treated as a failure, you can use :c:"
"func:`PyObject_GetOptionalAttr` instead."
msgstr ""
"Om det saknade attributet inte ska behandlas som ett fel kan du använda :c:"
"func:`PyObject_GetOptionalAttr` istället."

msgid ""
"This is the same as :c:func:`PyObject_GetAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_GetAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"If the missing attribute should not be treated as a failure, you can use :c:"
"func:`PyObject_GetOptionalAttrString` instead."
msgstr ""
"Om det saknade attributet inte ska behandlas som ett fel kan du använda :c:"
"func:`PyObject_GetOptionalAttrString` istället."

msgid ""
"Variant of :c:func:`PyObject_GetAttr` which doesn't raise :exc:"
"`AttributeError` if the attribute is not found."
msgstr ""
"Variant av :c:func:`PyObject_GetAttr` som inte ger upphov till :exc:"
"`AttributeError` om attributet inte hittas."

msgid ""
"If the attribute is found, return ``1`` and set *\\*result* to a new :term:"
"`strong reference` to the attribute. If the attribute is not found, return "
"``0`` and set *\\*result* to ``NULL``; the :exc:`AttributeError` is "
"silenced. If an error other than :exc:`AttributeError` is raised, return "
"``-1`` and set *\\*result* to ``NULL``."
msgstr ""
"Om attributet hittas returneras ``1`` och *\\*result* sätts till en ny :term:"
"`strong referens` till attributet. Om attributet inte hittas, returneras "
"``0`` och *\\*result* sätts till ``NULL``; :exc:`AttributeError` tystas. Om "
"ett annat fel än :exc:`AttributeError` uppstår, returneras ``-1`` och "
"*\\*result* sätts till ``NULL``."

msgid ""
"This is the same as :c:func:`PyObject_GetOptionalAttr`, but *attr_name* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_GetOptionalAttr`, men *attr_name* "
"anges som en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för "
"en :c:expr:`PyObject*`."

msgid ""
"Generic attribute getter function that is meant to be put into a type "
"object's ``tp_getattro`` slot.  It looks for a descriptor in the dictionary "
"of classes in the object's MRO as well as an attribute in the object's :attr:"
"`~object.__dict__` (if present).  As outlined in :ref:`descriptors`, data "
"descriptors take preference over instance attributes, while non-data "
"descriptors don't.  Otherwise, an :exc:`AttributeError` is raised."
msgstr ""
"Generisk getterfunktion för attribut som är avsedd att placeras i ett "
"typobjekts ``tp_getattro`` slot.  Den letar efter en deskriptor i "
"klassordboken i objektets MRO samt ett attribut i objektets :attr:`~object."
"__dict__` (om det finns).  Som beskrivs i :ref:`descriptors`, har "
"datadeskriptorer företräde framför instansattribut, medan icke-"
"datadeskriptorer inte har det.  I annat fall uppstår ett :exc:"
"`AttributeError`."

msgid ""
"Set the value of the attribute named *attr_name*, for object *o*, to the "
"value *v*. Raise an exception and return ``-1`` on failure; return ``0`` on "
"success.  This is the equivalent of the Python statement ``o.attr_name = v``."
msgstr ""
"Ställ in värdet på attributet med namnet *attr_name*, för objektet *o*, till "
"värdet *v*. Utlös ett undantag och returnera ``-1`` vid misslyckande; "
"returnera ``0`` vid framgång.  Detta är motsvarigheten till Python-satsen "
"``o.attr_name = v``."

msgid ""
"If *v* is ``NULL``, the attribute is deleted. This behaviour is deprecated "
"in favour of using :c:func:`PyObject_DelAttr`, but there are currently no "
"plans to remove it."
msgstr ""
"Om *v* är ``NULL`` tas attributet bort. Detta beteende är föråldrat till "
"förmån för att använda :c:func:`PyObject_DelAttr`, men det finns för "
"närvarande inga planer på att ta bort det."

msgid ""
"This is the same as :c:func:`PyObject_SetAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_SetAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"If *v* is ``NULL``, the attribute is deleted, but this feature is deprecated "
"in favour of using :c:func:`PyObject_DelAttrString`."
msgstr ""
"Om *v* är ``NULL`` tas attributet bort, men denna funktion är föråldrad till "
"förmån för att använda :c:func:`PyObject_DelAttrString`."

msgid ""
"The number of different attribute names passed to this function should be "
"kept small, usually by using a statically allocated string as *attr_name*. "
"For attribute names that aren't known at compile time, prefer calling :c:"
"func:`PyUnicode_FromString` and :c:func:`PyObject_SetAttr` directly. For "
"more details, see :c:func:`PyUnicode_InternFromString`, which may be used "
"internally to create a key object."
msgstr ""
"Antalet olika attributnamn som skickas till denna funktion bör hållas litet, "
"vanligtvis genom att använda en statiskt allokerad sträng som *attr_name*. "
"För attributnamn som inte är kända vid kompileringstillfället är det bättre "
"att anropa :c:func:`PyUnicode_FromString` och :c:func:`PyObject_SetAttr` "
"direkt. För mer information, se :c:func:`PyUnicode_InternFromString`, som "
"kan användas internt för att skapa ett nyckelobjekt."

msgid ""
"Generic attribute setter and deleter function that is meant to be put into a "
"type object's :c:member:`~PyTypeObject.tp_setattro` slot.  It looks for a "
"data descriptor in the dictionary of classes in the object's MRO, and if "
"found it takes preference over setting or deleting the attribute in the "
"instance dictionary. Otherwise, the attribute is set or deleted in the "
"object's :attr:`~object.__dict__` (if present). On success, ``0`` is "
"returned, otherwise an :exc:`AttributeError` is raised and ``-1`` is "
"returned."
msgstr ""
"Generisk attributsättnings- och borttagningsfunktion som är avsedd att "
"placeras i ett typobjekts :c:member:`~PyTypeObject.tp_setattro` slot.  Den "
"letar efter en databeskrivare i klassordboken i objektets MRO, och om den "
"hittas har den företräde framför att sätta eller ta bort attributet i "
"instansordboken. I annat fall sätts eller tas attributet bort i objektets :"
"attr:`~object.__dict__` (om det finns). Vid framgång returneras ``0``, "
"annars genereras ett :exc:`AttributeError` och ``-1`` returneras."

msgid ""
"Delete attribute named *attr_name*, for object *o*. Returns ``-1`` on "
"failure. This is the equivalent of the Python statement ``del o.attr_name``."
msgstr ""
"Ta bort attributet med namnet *attr_name* för objektet *o*. Returnerar "
"``-1`` om det misslyckas. Detta är motsvarigheten till Python-satsen ``del o."
"attr_name``."

msgid ""
"This is the same as :c:func:`PyObject_DelAttr`, but *attr_name* is specified "
"as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_DelAttr`, men *attr_name* anges som "
"en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"The number of different attribute names passed to this function should be "
"kept small, usually by using a statically allocated string as *attr_name*. "
"For attribute names that aren't known at compile time, prefer calling :c:"
"func:`PyUnicode_FromString` and :c:func:`PyObject_DelAttr` directly. For "
"more details, see :c:func:`PyUnicode_InternFromString`, which may be used "
"internally to create a key object for lookup."
msgstr ""
"Antalet olika attributnamn som skickas till denna funktion bör hållas litet, "
"vanligtvis genom att använda en statiskt allokerad sträng som *attr_name*. "
"För attributnamn som inte är kända vid kompileringstillfället är det bättre "
"att anropa :c:func:`PyUnicode_FromString` och :c:func:`PyObject_DelAttr` "
"direkt. För mer information, se :c:func:`PyUnicode_InternFromString`, som "
"kan användas internt för att skapa ett nyckelobjekt för uppslagning."

msgid ""
"A generic implementation for the getter of a ``__dict__`` descriptor. It "
"creates the dictionary if necessary."
msgstr ""
"En generisk implementation för gettern för en ``__dict__`` deskriptor. Den "
"skapar ordlistan om det behövs."

msgid ""
"This function may also be called to get the :py:attr:`~object.__dict__` of "
"the object *o*. Pass ``NULL`` for *context* when calling it. Since this "
"function may need to allocate memory for the dictionary, it may be more "
"efficient to call :c:func:`PyObject_GetAttr` when accessing an attribute on "
"the object."
msgstr ""
"Denna funktion kan också anropas för att få :py:attr:`~object.__dict__` för "
"objektet *o*. Ange ``NULL`` för *context* när du anropar den. Eftersom den "
"här funktionen kan behöva allokera minne för ordlistan kan det vara "
"effektivare att anropa :c:func:`PyObject_GetAttr` när man vill komma åt ett "
"attribut på objektet."

msgid "On failure, returns ``NULL`` with an exception set."
msgstr "Vid misslyckande returneras ``NULL`` med en undantagsuppsättning."

msgid ""
"A generic implementation for the setter of a ``__dict__`` descriptor. This "
"implementation does not allow the dictionary to be deleted."
msgstr ""
"En generisk implementation för en ``__dict__`` descriptors setter. Den här "
"implementationen tillåter inte att ordboken raderas."

msgid ""
"Return a pointer to :py:attr:`~object.__dict__` of the object *obj*. If "
"there is no ``__dict__``, return ``NULL`` without setting an exception."
msgstr ""
"Returnerar en pekare till :py:attr:`~object.__dict__` för objektet *obj*. Om "
"det inte finns någon ``__dict__``, returneras ``NULL`` utan att ett undantag "
"anges."

msgid ""
"This function may need to allocate memory for the dictionary, so it may be "
"more efficient to call :c:func:`PyObject_GetAttr` when accessing an "
"attribute on the object."
msgstr ""
"Denna funktion kan behöva allokera minne för ordlistan, så det kan vara mer "
"effektivt att anropa :c:func:`PyObject_GetAttr` när man vill komma åt ett "
"attribut på objektet."

msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :c:macro:`Py_LT`, :c:macro:`Py_LE`, :c:macro:`Py_EQ`, :"
"c:macro:`Py_NE`, :c:macro:`Py_GT`, or :c:macro:`Py_GE`, corresponding to "
"``<``, ``<=``, ``==``, ``!=``, ``>``, or ``>=`` respectively. This is the "
"equivalent of the Python expression ``o1 op o2``, where ``op`` is the "
"operator corresponding to *opid*. Returns the value of the comparison on "
"success, or ``NULL`` on failure."
msgstr ""
"Jämför värdena i *o1* och *o2* med den operation som anges av *opid*, som "
"måste vara en av :c:macro:`Py_LT`, :c:macro:`Py_LE`, :c:macro:`Py_EQ`, :c:"
"macro:`Py_NE`, :c:macro:`Py_GT` eller :c:macro:`Py_GE`, motsvarande ``<``, "
"``<=``, ``==``, ``!=``, ``>``, eller ``>=`` respektive. Detta är "
"motsvarigheten till Python-uttrycket ``o1 op o2``, där ``op`` är operatorn "
"som motsvarar *opid*. Returnerar värdet av jämförelsen om den lyckas, eller "
"``NULL`` om den misslyckas."

msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"like :c:func:`PyObject_RichCompare`, but returns ``-1`` on error, ``0`` if "
"the result is false, ``1`` otherwise."
msgstr ""
"Jämför värdena på *o1* och *o2* med den operation som anges av *opid*, som :"
"c:func:`PyObject_RichCompare`, men returnerar ``-1`` vid fel, ``0`` om "
"resultatet är falskt, ``1`` annars."

msgid ""
"If *o1* and *o2* are the same object, :c:func:`PyObject_RichCompareBool` "
"will always return ``1`` for :c:macro:`Py_EQ` and ``0`` for :c:macro:`Py_NE`."
msgstr ""
"Om *o1* och *o2* är samma objekt kommer :c:func:`PyObject_RichCompareBool` "
"alltid att returnera ``1`` för :c:macro:`Py_EQ` och ``0`` för :c:macro:"
"`Py_NE`."

msgid ""
"Format *obj* using *format_spec*. This is equivalent to the Python "
"expression ``format(obj, format_spec)``."
msgstr ""
"Formatera *obj* med hjälp av *format_spec*. Detta är likvärdigt med Python-"
"uttrycket ``format(obj, format_spec)``."

msgid ""
"*format_spec* may be ``NULL``. In this case the call is equivalent to "
"``format(obj)``. Returns the formatted string on success, ``NULL`` on "
"failure."
msgstr ""
"*format_spec* kan vara ``NULL``. I detta fall är anropet likvärdigt med "
"``format(obj)``. Returnerar den formaterade strängen vid framgång, ``NULL`` "
"vid misslyckande."

msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``repr(o)``.  Called by the :func:`repr` built-in "
"function."
msgstr ""
"Beräknar en strängrepresentation av objektet *o*.  Returnerar "
"strängrepresentationen vid framgång, ``NULL`` vid misslyckande.  Detta är "
"motsvarigheten till Python-uttrycket ``repr(o)``.  Anropas av den inbyggda "
"funktionen :func:`repr`."

msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr ""
"Denna funktion innehåller nu ett debug-assertion för att säkerställa att den "
"inte i tysthet kasserar ett aktivt undantag."

msgid ""
"As :c:func:`PyObject_Repr`, compute a string representation of object *o*, "
"but escape the non-ASCII characters in the string returned by :c:func:"
"`PyObject_Repr` with ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :c:func:`PyObject_Repr` in Python 2. "
"Called by the :func:`ascii` built-in function."
msgstr ""
"Som :c:func:`PyObject_Repr`, beräkna en strängrepresentation av objektet "
"*o*, men escape icke-ASCII-tecken i strängen som returneras av :c:func:"
"`PyObject_Repr` med ``\\x``, ``u`` eller ``U`` escapes.  Detta genererar en "
"sträng som liknar den som returneras av :c:func:`PyObject_Repr` i Python 2. "
"Anropas av den inbyggda funktionen :func:`ascii`."

msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``str(o)``.  Called by the :func:`str` built-in "
"function and, therefore, by the :func:`print` function."
msgstr ""
"Beräknar en strängrepresentation av objektet *o*.  Returnerar "
"strängrepresentationen vid framgång, ``NULL`` vid misslyckande.  Detta är "
"motsvarigheten till Python-uttrycket ``str(o)``.  Anropas av den inbyggda "
"funktionen :func:`str` och därför även av funktionen :func:`print`."

msgid ""
"Compute a bytes representation of object *o*.  ``NULL`` is returned on "
"failure and a bytes object on success.  This is equivalent to the Python "
"expression ``bytes(o)``, when *o* is not an integer.  Unlike ``bytes(o)``, a "
"TypeError is raised when *o* is an integer instead of a zero-initialized "
"bytes object."
msgstr ""
"Beräkna en bytesrepresentation av objektet *o*.  ``NULL`` returneras vid "
"misslyckande och ett bytesobjekt vid framgång.  Detta är likvärdigt med "
"Python-uttrycket ``bytes(o)``, när *o* inte är ett heltal.  Till skillnad "
"från ``bytes(o)`` uppstår ett TypeError när *o* är ett heltal istället för "
"ett nollinitialiserat bytesobjekt."

msgid ""
"Return ``1`` if the class *derived* is identical to or derived from the "
"class *cls*, otherwise return ``0``.  In case of an error, return ``-1``."
msgstr ""
"Returnerar ``1`` om klassen *derived* är identisk med eller härledd från "
"klassen *cls*, annars returneras ``0``.  Vid ett fel returneras ``-1``."

msgid ""
"If *cls* is a tuple, the check will be done against every entry in *cls*. "
"The result will be ``1`` when at least one of the checks returns ``1``, "
"otherwise it will be ``0``."
msgstr ""
"Om *cls* är en tupel kommer kontrollen att göras mot varje post i *cls*. "
"Resultatet blir ``1`` när minst en av kontrollerna returnerar ``1``, annars "
"blir det ``0``."

msgid ""
"If *cls* has a :meth:`~type.__subclasscheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*derived* is a subclass of *cls* if it is a direct or indirect subclass, i."
"e. contained in :attr:`cls.__mro__ <type.__mro__>`."
msgstr ""
"Om *cls* har en :meth:`~type.__subclasscheck__`-metod, kommer den att "
"anropas för att bestämma subklassstatusen enligt beskrivningen i :pep:"
"`3119`.  Annars är *derived* en underklass till *cls* om den är en direkt "
"eller indirekt underklass, dvs. ingår i :attr:`cls.__mro__ <type.__mro__>`."

msgid ""
"Normally only class objects, i.e. instances of :class:`type` or a derived "
"class, are considered classes.  However, objects can override this by having "
"a :attr:`~type.__bases__` attribute (which must be a tuple of base classes)."
msgstr ""
"Normalt betraktas endast klassobjekt, dvs. instanser av :class:`type` eller "
"en härledd klass, som klasser.  Objekt kan dock åsidosätta detta genom att "
"ha ett :attr:`~type.__bases__`-attribut (som måste vara en tupel av "
"basklasser)."

msgid ""
"Return ``1`` if *inst* is an instance of the class *cls* or a subclass of "
"*cls*, or ``0`` if not.  On error, returns ``-1`` and sets an exception."
msgstr ""
"Returnerar ``1`` om *inst* är en instans av klassen *cls* eller en "
"underklass av *cls*, eller ``0`` om inte.  Vid fel returneras ``-1`` och ett "
"undantag anges."

msgid ""
"If *cls* has a :meth:`~type.__instancecheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*inst* is an instance of *cls* if its class is a subclass of *cls*."
msgstr ""
"Om *cls* har en :meth:`~type.__instancecheck__`-metod, kommer den att "
"anropas för att bestämma underklassstatusen enligt beskrivningen i :pep:"
"`3119`.  Annars är *inst* en instans av *cls* om dess klass är en underklass "
"av *cls*."

msgid ""
"An instance *inst* can override what is considered its class by having a :"
"attr:`~object.__class__` attribute."
msgstr ""
"En instans *inst* kan åsidosätta vad som anses vara dess klass genom att ha "
"ett :attr:`~object.__class__`-attribut."

msgid ""
"An object *cls* can override if it is considered a class, and what its base "
"classes are, by having a :attr:`~type.__bases__` attribute (which must be a "
"tuple of base classes)."
msgstr ""
"Ett objekt *cls* kan åsidosätta om det betraktas som en klass och vilka dess "
"basklasser är genom att ha ett :attr:`~type.__bases__`-attribut (som måste "
"vara en tupel av basklasser)."

msgid ""
"Compute and return the hash value of an object *o*.  On failure, return "
"``-1``. This is the equivalent of the Python expression ``hash(o)``."
msgstr ""
"Beräknar och returnerar hashvärdet för ett objekt *o*.  Vid misslyckande "
"returneras ``-1``. Detta är motsvarigheten till Python-uttrycket ``hash(o)``."

msgid ""
"The return type is now Py_hash_t.  This is a signed integer the same size "
"as :c:type:`Py_ssize_t`."
msgstr ""
"Returtypen är nu Py_hash_t.  Detta är ett signerat heltal av samma storlek "
"som :c:type:`Py_ssize_t`."

msgid ""
"Set a :exc:`TypeError` indicating that ``type(o)`` is not :term:`hashable` "
"and return ``-1``. This function receives special treatment when stored in a "
"``tp_hash`` slot, allowing a type to explicitly indicate to the interpreter "
"that it is not hashable."
msgstr ""
"Ställ in en :exc:`TypeError` som anger att ``type(o)`` inte är :term:"
"`hashable` och returnera ``-1``. Denna funktion behandlas speciellt när den "
"lagras i en ``tp_hash`` slot, vilket gör det möjligt för en typ att "
"uttryckligen ange för tolkaren att den inte är hashbar."

msgid ""
"Returns ``1`` if the object *o* is considered to be true, and ``0`` "
"otherwise. This is equivalent to the Python expression ``not not o``.  On "
"failure, return ``-1``."
msgstr ""
"Returnerar ``1`` om objektet *o* anses vara sant, och ``0`` annars. Detta är "
"likvärdigt med Python-uttrycket ``not not o``.  Vid misslyckande returneras "
"``-1``."

msgid ""
"Returns ``0`` if the object *o* is considered to be true, and ``1`` "
"otherwise. This is equivalent to the Python expression ``not o``.  On "
"failure, return ``-1``."
msgstr ""
"Returnerar ``0`` om objektet *o* anses vara sant, och ``1`` annars. Detta är "
"likvärdigt med Python-uttrycket ``not o``.  Vid misslyckande returneras "
"``-1``."

msgid ""
"When *o* is non-``NULL``, returns a type object corresponding to the object "
"type of object *o*. On failure, raises :exc:`SystemError` and returns "
"``NULL``.  This is equivalent to the Python expression ``type(o)``. This "
"function creates a new :term:`strong reference` to the return value. There's "
"really no reason to use this function instead of the :c:func:`Py_TYPE()` "
"function, which returns a pointer of type :c:expr:`PyTypeObject*`, except "
"when a new :term:`strong reference` is needed."
msgstr ""
"När *o* är icke-``NULL``, returnerar ett typobjekt som motsvarar objekttypen "
"för objektet *o*. Om det misslyckas, uppstår :exc:`SystemError` och "
"returnerar ``NULL``.  Detta är likvärdigt med Python-uttrycket ``type(o)``. "
"Denna funktion skapar en ny :term:`strong reference` till returvärdet. Det "
"finns egentligen ingen anledning att använda den här funktionen istället "
"för :c:func:`Py_TYPE()`-funktionen, som returnerar en pekare av typen :c:"
"expr:`PyTypeObject*`, förutom när en ny :term:`strong-referens` behövs."

msgid ""
"Return non-zero if the object *o* is of type *type* or a subtype of *type*, "
"and ``0`` otherwise.  Both parameters must be non-``NULL``."
msgstr ""
"Returnerar icke-noll om objektet *o* är av typen *type* eller en subtyp av "
"*type*, och ``0`` annars.  Båda parametrarna måste vara icke-``NULL``."

msgid ""
"Return the length of object *o*.  If the object *o* provides either the "
"sequence and mapping protocols, the sequence length is returned.  On error, "
"``-1`` is returned.  This is the equivalent to the Python expression "
"``len(o)``."
msgstr ""
"Returnerar längden på objektet *o*.  Om objektet *o* tillhandahåller "
"antingen sekvens- eller mappningsprotokollet returneras sekvenslängden.  Vid "
"fel returneras ``-1``.  Detta är motsvarigheten till Python-uttrycket "
"``len(o)``."

msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`~object.__length_hint__`, and "
"finally return the default value. On error return ``-1``. This is the "
"equivalent to the Python expression ``operator.length_hint(o, "
"defaultvalue)``."
msgstr ""
"Returnerar en uppskattad längd för objektet *o*. Försök först att returnera "
"dess faktiska längd, sedan en uppskattning med hjälp av :meth:`~object."
"__length_hint__`, och slutligen returnera standardvärdet. Vid fel returneras "
"``-1``. Detta är motsvarigheten till Python-uttrycket ``operator."
"length_hint(o, defaultvalue)``."

msgid ""
"Return element of *o* corresponding to the object *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``."
msgstr ""
"Returnerar element av *o* som motsvarar objektet *key* eller ``NULL`` om det "
"misslyckas. Detta är motsvarigheten till Python-uttrycket ``o[key]``."

msgid ""
"Map the object *key* to the value *v*.  Raise an exception and return ``-1`` "
"on failure; return ``0`` on success.  This is the equivalent of the Python "
"statement ``o[key] = v``.  This function *does not* steal a reference to *v*."
msgstr ""
"Mappa objektet *key* till värdet *v*.  Utlös ett undantag och returnera "
"``-1`` vid misslyckande; returnera ``0`` vid framgång.  Detta är "
"motsvarigheten till Python-satsen ``o[key] = v``.  Den här funktionen "
"*stjäl* inte en referens till *v*."

msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Ta bort mappningen för objektet *key* från objektet *o*.  Returnerar ``-1`` "
"vid misslyckande.  Detta är likvärdigt med Python-satsen ``del o[key]``."

msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_DelItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"This is equivalent to the Python expression ``dir(o)``, returning a "
"(possibly empty) list of strings appropriate for the object argument, or "
"``NULL`` if there was an error.  If the argument is ``NULL``, this is like "
"the Python ``dir()``, returning the names of the current locals; in this "
"case, if no execution frame is active then ``NULL`` is returned but :c:func:"
"`PyErr_Occurred` will return false."
msgstr ""
"Detta motsvarar Python-uttrycket ``dir(o)``, som returnerar en (eventuellt "
"tom) lista med strängar som passar för objektargumentet, eller ``NULL`` om "
"det uppstod ett fel.  Om argumentet är ``NULL``, är detta som Pythons "
"``dir()``, som returnerar namnen på de aktuella lokala platserna; i detta "
"fall, om ingen exekveringsram är aktiv, returneras ``NULL`` men :c:func:"
"`PyErr_Occurred` kommer att returnera false."

msgid ""
"This is equivalent to the Python expression ``iter(o)``. It returns a new "
"iterator for the object argument, or the object  itself if the object is "
"already an iterator.  Raises :exc:`TypeError` and returns ``NULL`` if the "
"object cannot be iterated."
msgstr ""
"Detta är likvärdigt med Python-uttrycket ``iter(o)``. Det returnerar en ny "
"iterator för objektargumentet, eller själva objektet om objektet redan är en "
"iterator.  Utlöser :exc:`TypeError` och returnerar ``NULL`` om objektet inte "
"kan itereras."

msgid ""
"This is equivalent to the Python ``__iter__(self): return self`` method. It "
"is intended for :term:`iterator` types, to be used in the :c:member:"
"`PyTypeObject.tp_iter` slot."
msgstr ""
"Detta motsvarar Python-metoden ``__iter__(self): return self``. Den är "
"avsedd för :term:`iterator`-typer, som ska användas i :c:member:"
"`PyTypeObject.tp_iter`-slot."

msgid ""
"This is the equivalent to the Python expression ``aiter(o)``. Takes an :"
"class:`AsyncIterable` object and returns an :class:`AsyncIterator` for it. "
"This is typically a new iterator but if the argument is an :class:"
"`AsyncIterator`, this returns itself. Raises :exc:`TypeError` and returns "
"``NULL`` if the object cannot be iterated."
msgstr ""
"Detta är motsvarigheten till Python-uttrycket ``aiter(o)``. Tar ett :class:"
"`AsyncIterable`-objekt och returnerar en :class:`AsyncIterator` för det. "
"Detta är typiskt en ny iterator men om argumentet är en :class:"
"`AsyncIterator` returnerar den sig själv. Utlöser :exc:`TypeError` och "
"returnerar ``NULL`` om objektet inte kan itereras."

msgid "Get a pointer to subclass-specific data reserved for *cls*."
msgstr ""
"Hämta en pekare till underklassspecifika data som reserverats för *cls*."

msgid ""
"The object *o* must be an instance of *cls*, and *cls* must have been "
"created using negative :c:member:`PyType_Spec.basicsize`. Python does not "
"check this."
msgstr ""
"Objektet *o* måste vara en instans av *cls*, och *cls* måste ha skapats med "
"negativa :c:member:`PyType_Spec.basicsize`. Python kontrollerar inte detta."

msgid "On error, set an exception and return ``NULL``."
msgstr "Vid fel, sätt ett undantag och returnera ``NULL``."

msgid ""
"Return the size of the instance memory space reserved for *cls*, i.e. the "
"size of the memory :c:func:`PyObject_GetTypeData` returns."
msgstr ""
"Returnerar storleken på det instansminnesutrymme som reserverats för *cls*, "
"dvs. storleken på det minne som :c:func:`PyObject_GetTypeData` returnerar."

msgid ""
"This may be larger than requested using :c:member:`-PyType_Spec.basicsize "
"<PyType_Spec.basicsize>`; it is safe to use this larger size (e.g. with :c:"
"func:`!memset`)."
msgstr ""
"Detta kan vara större än vad som begärdes med :c:member:`-PyType_Spec."
"basicsize <PyType_Spec.basicsize>`; det är säkert att använda denna större "
"storlek (t.ex. med :c:func:`!memset`)."

msgid ""
"The type *cls* **must** have been created using negative :c:member:"
"`PyType_Spec.basicsize`. Python does not check this."
msgstr ""
"Typen *cls* **måste** ha skapats med negativ :c:member:`PyType_Spec."
"basicsize`. Python kontrollerar inte detta."

msgid "On error, set an exception and return a negative value."
msgstr "Vid fel, skapa ett undantag och returnera ett negativt värde."

msgid ""
"Get a pointer to per-item data for a class with :c:macro:"
"`Py_TPFLAGS_ITEMS_AT_END`."
msgstr ""
"Hämta en pekare till data per artikel för en klass med :c:macro:"
"`Py_TPFLAGS_ITEMS_AT_END`."

msgid ""
"On error, set an exception and return ``NULL``. :py:exc:`TypeError` is "
"raised if *o* does not have :c:macro:`Py_TPFLAGS_ITEMS_AT_END` set."
msgstr ""
"Vid fel, ställ in ett undantag och returnera ``NULL``. :py:exc:`TypeError` "
"uppstår om *o* inte har :c:macro:`Py_TPFLAGS_ITEMS_AT_END` inställt."

msgid "Visit the managed dictionary of *obj*."
msgstr "Besök den hanterade ordlistan över *obj*."

msgid ""
"This function must only be called in a traverse function of the type which "
"has the :c:macro:`Py_TPFLAGS_MANAGED_DICT` flag set."
msgstr ""
"Denna funktion får endast anropas i en traversefunktion av den typ som har "
"flaggan :c:macro:`Py_TPFLAGS_MANAGED_DICT` inställd."

msgid "Clear the managed dictionary of *obj*."
msgstr "Rensa den hanterade ordlistan för *obj*."

msgid ""
"Enable `deferred reference counting <https://peps.python.org/pep-0703/"
"#deferred-reference-counting>`_ on *obj*, if supported by the runtime.  In "
"the :term:`free-threaded <free threading>` build, this allows the "
"interpreter to avoid reference count adjustments to *obj*, which may improve "
"multi-threaded performance.  The tradeoff is that *obj* will only be "
"deallocated by the tracing garbage collector, and not when the interpreter "
"no longer has any references to it."
msgstr ""
"Aktivera `uppskjuten referensräkning &lt;https://peps.python.org/pep-0703/"
"#deferred-reference-counting&gt;`_ på *obj*, om det stöds av körtiden.  I :"
"term:``free-threaded <free threading>`-versionen gör detta att tolken kan "
"undvika referensräkningsjusteringar för *obj*, vilket kan förbättra "
"prestanda för flera trådar.  Avvägningen är att *obj* endast kommer att "
"avallokeras av den spårande skräpsamlaren, och inte när tolken inte längre "
"har några referenser till den."

msgid ""
"This function returns ``1`` if deferred reference counting is enabled on "
"*obj*, and ``0`` if deferred reference counting is not supported or if the "
"hint was ignored by the interpreter, such as when deferred reference "
"counting is already enabled on *obj*. This function is thread-safe, and "
"cannot fail."
msgstr ""
"Denna funktion returnerar ``1`` om uppskjuten referensräkning är aktiverad "
"på *obj* och ``0`` om uppskjuten referensräkning inte stöds eller om tolken "
"ignorerade tipset, t.ex. när uppskjuten referensräkning redan är aktiverad "
"på *obj*. Denna funktion är trådsäker och kan inte misslyckas."

msgid ""
"This function does nothing on builds with the :term:`GIL` enabled, which do "
"not support deferred reference counting. This also does nothing if *obj* is "
"not an object tracked by the garbage collector (see :func:`gc.is_tracked` "
"and :c:func:`PyObject_GC_IsTracked`)."
msgstr ""
"Den här funktionen gör ingenting på byggen med :term:`GIL` aktiverat, som "
"inte stöder uppskjuten referensräkning. Den gör inte heller något om *obj* "
"inte är ett objekt som spåras av skräpsamlaren (se :func:`gc.is_tracked` "
"och :c:func:`PyObject_GC_IsTracked`)."

msgid ""
"This function is intended to be used soon after *obj* is created, by the "
"code that creates it, such as in the object's :c:member:`~PyTypeObject."
"tp_new` slot."
msgstr ""
"Denna funktion är avsedd att användas strax efter att *obj* har skapats, av "
"den kod som skapar det, t.ex. i objektets :c:member:`~PyTypeObject.tp_new` "
"slot."

msgid ""
"Check if *obj* is a unique temporary object. Returns ``1`` if *obj* is known "
"to be a unique temporary object, and ``0`` otherwise.  This function cannot "
"fail, but the check is conservative, and may return ``0`` in some cases even "
"if *obj* is a unique temporary object."
msgstr ""
"Kontrollerar om *obj* är ett unikt temporärt objekt. Returnerar ``1`` om det "
"är känt att *obj* är ett unikt temporärt objekt, och ``0`` annars.  Denna "
"funktion kan inte misslyckas, men kontrollen är konservativ och kan "
"returnera ``0`` i vissa fall även om *obj* är ett unikt temporärt objekt."

msgid ""
"If an object is a unique temporary, it is guaranteed that the current code "
"has the only reference to the object. For arguments to C functions, this "
"should be used instead of checking if the reference count is ``1``. Starting "
"with Python 3.14, the interpreter internally avoids some reference count "
"modifications when loading objects onto the operands stack by :term:"
"`borrowing <borrowed reference>` references when possible, which means that "
"a reference count of ``1`` by itself does not guarantee that a function "
"argument uniquely referenced."
msgstr ""
"Om ett objekt är en unik temporär är det garanterat att den aktuella koden "
"har den enda referensen till objektet. För argument till C-funktioner bör "
"detta användas istället för att kontrollera om referensantalet är ``1``. "
"Från och med Python 3.14 undviker tolken internt vissa ändringar av "
"referensantalet när objekt laddas till operandstacken genom att :term:``låna "
"<borrowed reference>` referenser när det är möjligt, vilket innebär att ett "
"referensantal på ``1`` i sig inte garanterar att ett funktionsargument är "
"unikt refererat."

msgid ""
"In the example below, ``my_func`` is called with a unique temporary object "
"as its argument::"
msgstr ""
"I exemplet nedan anropas ``my_func`` med ett unikt temporärt objekt som "
"argument::"

msgid "my_func([1, 2, 3])"
msgstr "my_func([1, 2, 3])"

msgid ""
"In the example below, ``my_func`` is **not** called with a unique temporary "
"object as its argument, even if its refcount is ``1``::"
msgstr ""
"I exemplet nedan anropas ``my_func`` **inte** med ett unikt temporärt objekt "
"som argument, även om dess refcount är ``1``::"

msgid ""
"my_list = [1, 2, 3]\n"
"my_func(my_list)"
msgstr ""
"min_lista = [1, 2, 3]\n"
"my_func(min_lista)"

msgid "See also the function :c:func:`Py_REFCNT`."
msgstr "Se även funktionen :c:func:`Py_REFCNT`."

msgid ""
"This function returns non-zero if *obj* is :term:`immortal`, and zero "
"otherwise. This function cannot fail."
msgstr ""
"Denna funktion returnerar icke-noll om *obj* är :term:`immortal`, och noll "
"annars. Denna funktion kan inte misslyckas."

msgid ""
"Objects that are immortal in one CPython version are not guaranteed to be "
"immortal in another."
msgstr ""
"Objekt som är odödliga i en CPython-version är inte garanterat odödliga i en "
"annan."

msgid ""
"Increments the reference count of *obj* if it is not zero.  Returns ``1`` if "
"the object's reference count was successfully incremented. Otherwise, this "
"function returns ``0``."
msgstr ""
"Ökar referensantalet för *obj* om det inte är noll.  Returnerar ``1`` om "
"objektets referensantal har ökats framgångsrikt. Annars returnerar denna "
"funktion ``0``."

msgid ""
":c:func:`PyUnstable_EnableTryIncRef` must have been called earlier on *obj* "
"or this function may spuriously return ``0`` in the :term:`free threading` "
"build."
msgstr ""
":c:func:`PyUnstable_EnableTryIncRef` måste ha anropats tidigare på *obj* "
"annars kan denna funktion felaktigt returnera ``0`` i :term:`free threading`-"
"bygget."

msgid ""
"This function is logically equivalent to the following C code, except that "
"it behaves atomically in the :term:`free threading` build::"
msgstr ""
"Denna funktion är logiskt ekvivalent med följande C-kod, förutom att den "
"beter sig atomiskt i :term:`free threading` build::"

msgid ""
"if (Py_REFCNT(op) > 0) {\n"
"   Py_INCREF(op);\n"
"   return 1;\n"
"}\n"
"return 0;"
msgstr ""
"if (Py_REFCNT(op) > 0) {\n"
"   Py_INCREF(op);\n"
"   returnera 1;\n"
"}\n"
"return 0;"

msgid ""
"This is intended as a building block for managing weak references without "
"the overhead of a Python :ref:`weak reference object <weakrefobjects>`."
msgstr ""
"Detta är tänkt som en byggsten för att hantera svaga referenser utan att "
"behöva använda Python :ref:`svagt referensobjekt <weakrefobjects>`."

msgid ""
"Typically, correct use of this function requires support from *obj*'s "
"deallocator (:c:member:`~PyTypeObject.tp_dealloc`). For example, the "
"following sketch could be adapted to implement a \"weakmap\" that works like "
"a :py:class:`~weakref.WeakValueDictionary` for a specific type:"
msgstr ""
"Normalt kräver korrekt användning av denna funktion stöd från *obj*:s "
"deallokator (:c:member:`~PyTypeObject.tp_dealloc`). Följande skiss kan t.ex. "
"anpassas för att implementera en \"weakmap\" som fungerar som en :py:class:"
"`~weakref.WeakValueDictionary` för en viss typ:"

msgid ""
"PyMutex mutex;\n"
"\n"
"PyObject *\n"
"add_entry(weakmap_key_type *key, PyObject *value)\n"
"{\n"
"    PyUnstable_EnableTryIncRef(value);\n"
"    weakmap_type weakmap = ...;\n"
"    PyMutex_Lock(&mutex);\n"
"    weakmap_add_entry(weakmap, key, value);\n"
"    PyMutex_Unlock(&mutex);\n"
"    Py_RETURN_NONE;\n"
"}\n"
"\n"
"PyObject *\n"
"get_value(weakmap_key_type *key)\n"
"{\n"
"    weakmap_type weakmap = ...;\n"
"    PyMutex_Lock(&mutex);\n"
"    PyObject *result = weakmap_find(weakmap, key);\n"
"    if (PyUnstable_TryIncRef(result)) {\n"
"        // `result` is safe to use\n"
"        PyMutex_Unlock(&mutex);\n"
"        return result;\n"
"    }\n"
"    // if we get here, `result` is starting to be garbage-collected,\n"
"    // but has not been removed from the weakmap yet\n"
"    PyMutex_Unlock(&mutex);\n"
"    return NULL;\n"
"}\n"
"\n"
"// tp_dealloc function for weakmap values\n"
"void\n"
"value_dealloc(PyObject *value)\n"
"{\n"
"    weakmap_type weakmap = ...;\n"
"    PyMutex_Lock(&mutex);\n"
"    weakmap_remove_value(weakmap, value);\n"
"\n"
"    ...\n"
"    PyMutex_Unlock(&mutex);\n"
"}"
msgstr ""
"PyMutex mutex;\n"
"\n"
"PyObjekt *\n"
"add_entry(weakmap_key_type *key, PyObject *value)\n"
"{\n"
"    PyUnstable_EnableTryIncRef(värde);\n"
"    weakmap_type weakmap = ...;\n"
"    PyMutex_Lock(&mutex);\n"
"    weakmap_add_entry(weakmap, nyckel, värde);\n"
"    PyMutex_Unlock(&mutex);\n"
"    Py_RETURN_NONE;\n"
"}\n"
"\n"
"PyObject *\n"
"get_value(weakmap_key_type *key)\n"
"{\n"
"    weakmap_type weakmap = ...;\n"
"    PyMutex_Lock(&mutex);\n"
"    PyObject *result = weakmap_find(weakmap, nyckel);\n"
"    if (PyUnstable_TryIncRef(resultat)) {\n"
"        // `result` är säkert att använda\n"
"        PyMutex_Unlock(&mutex);\n"
"        returnera resultat;\n"
"    }\n"
"    // om vi kommer hit börjar `result` samlas in som skräp,\n"
"    // men har inte tagits bort från den svaga kartan ännu\n"
"    PyMutex_Unlock(&mutex);\n"
"    returnera NULL;\n"
"}\n"
"\n"
"// tp_dealloc-funktion för svaga mappvärden\n"
"void\n"
"value_dealloc(PyObject *värde)\n"
"{\n"
"    weakmap_type weakmap = ...;\n"
"    PyMutex_Lock(&mutex);\n"
"    weakmap_remove_value(weakmap, värde);\n"
"\n"
"    ...\n"
"    PyMutex_Unlock(&mutex);\n"
"}"

msgid ""
"Enables subsequent uses of :c:func:`PyUnstable_TryIncRef` on *obj*.  The "
"caller must hold a :term:`strong reference` to *obj* when calling this."
msgstr ""
"Möjliggör efterföljande användning av :c:func:`PyUnstable_TryIncRef` på "
"*obj*.  Den som anropar måste ha en :term:`strong reference` till *obj* när "
"detta anropas."

msgid "Determine if *op* only has one reference."
msgstr "Avgör om *op* endast har en referens."

msgid ""
"On GIL-enabled builds, this function is equivalent to :c:expr:`Py_REFCNT(op) "
"== 1`."
msgstr ""
"På GIL-aktiverade byggsystem är den här funktionen likvärdig med :c:expr:"
"`Py_REFCNT(op) == 1`."

msgid ""
"On a :term:`free threaded <free threading>` build, this checks if *op*'s :"
"term:`reference count` is equal to one and additionally checks if *op* is "
"only used by this thread. :c:expr:`Py_REFCNT(op) == 1` is **not** thread-"
"safe on free threaded builds; prefer this function."
msgstr ""
"På en :term:``free threaded <free threading>`-byggnad kontrollerar detta om "
"*op*:s :term:`reference count` är lika med ett och kontrollerar dessutom om "
"*op* endast används av denna tråd. :c:expr:`Py_REFCNT(op) == 1` är **inte** "
"trådsäker på fritt trådade byggnader; föredra denna funktion."

msgid ""
"The caller must hold an :term:`attached thread state`, despite the fact that "
"this function doesn't call into the Python interpreter. This function cannot "
"fail."
msgstr ""
"Den som anropar måste ha en :term:`attached thread state`, trots att den här "
"funktionen inte anropar Python-tolken. Denna funktion kan inte misslyckas."

msgid "built-in function"
msgstr "inbyggd funktion"

msgid "repr"
msgstr "repr"

msgid "ascii"
msgstr "ascii"

msgid "string"
msgstr "string"

msgid "PyObject_Str (C function)"
msgstr "PyObject_Str (C-funktion)"

msgid "bytes"
msgstr "bytes"

msgid "hash"
msgstr "hash"

msgid "type"
msgstr "type"

msgid "len"
msgstr "len"
