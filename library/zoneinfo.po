# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!zoneinfo` --- IANA time zone support"
msgstr ":mod:`!zoneinfo` --- IANA:s stöd för tidszoner"

msgid "**Source code:** :source:`Lib/zoneinfo`"
msgstr "**Källkod:** :source:`Lib/zoneinfo`"

msgid ""
"The :mod:`zoneinfo` module provides a concrete time zone implementation to "
"support the IANA time zone database as originally specified in :pep:`615`. "
"By default, :mod:`zoneinfo` uses the system's time zone data if available; "
"if no system time zone data is available, the library will fall back to "
"using the first-party :pypi:`tzdata` package available on PyPI."
msgstr ""
"Modulen :mod:`zoneinfo` tillhandahåller en konkret implementering av "
"tidszoner för att stödja IANA:s tidszonsdatabas som ursprungligen "
"specificerades i :pep:`615`. Som standard använder :mod:`zoneinfo` systemets "
"tidszonsdata om de finns tillgängliga; om inga systemets tidszonsdata finns "
"tillgängliga kommer biblioteket att falla tillbaka till att använda "
"förstapartspaketet :pypi:`tzdata` som finns tillgängligt på PyPI."

msgid "Module: :mod:`datetime`"
msgstr "Modul: :mod:`datetime`"

msgid ""
"Provides the :class:`~datetime.time` and :class:`~datetime.datetime` types "
"with which the :class:`ZoneInfo` class is designed to be used."
msgstr ""
"Tillhandahåller typerna :class:`~datetime.time` och :class:`~datetime."
"datetime` med vilka klassen :class:`ZoneInfo` är avsedd att användas."

msgid "Package :pypi:`tzdata`"
msgstr "Paket :pypi:`tzdata`"

msgid ""
"First-party package maintained by the CPython core developers to supply time "
"zone data via PyPI."
msgstr ""
"Förstapartspaket som underhålls av CPython-kärnutvecklarna för att "
"tillhandahålla tidszonsdata via PyPI."

msgid "Availability"
msgstr "Tillgänglighet"

msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""
"Den här modulen fungerar inte eller är inte tillgänglig på WebAssembly. Se :"
"ref:`wasm-availability` för mer information."

msgid "Using ``ZoneInfo``"
msgstr "Använda ``ZoneInfo``"

msgid ""
":class:`ZoneInfo` is a concrete implementation of the :class:`datetime."
"tzinfo` abstract base class, and is intended to be attached to ``tzinfo``, "
"either via the constructor, the :meth:`datetime.replace <datetime.datetime."
"replace>` method or :meth:`datetime.astimezone <datetime.datetime."
"astimezone>`::"
msgstr ""
":class:`ZoneInfo` är en konkret implementation av den abstrakta basklassen :"
"class:`datetime.tzinfo`, och är avsedd att kopplas till ``tzinfo``, antingen "
"via konstruktorn, metoden :meth:`datetime.replace <datetime.datetime."
"replace>` eller :meth:`datetime.astimezone <datetime.datetime.astimezone>`::"

msgid ""
">>> from zoneinfo import ZoneInfo\n"
">>> from datetime import datetime, timedelta\n"
"\n"
">>> dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo(\"America/"
"Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-10-31 12:00:00-07:00\n"
"\n"
">>> dt.tzname()\n"
"'PDT'"
msgstr ""
">>> from zoneinfo import ZoneInfo\n"
">>> from datetime import datetime, timedelta\n"
"\n"
">>> dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo(\"America/"
"Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-10-31 12:00:00-07:00\n"
"\n"
">>> dt.tzname()\n"
"'PDT'"

msgid ""
"Datetimes constructed in this way are compatible with datetime arithmetic "
"and handle daylight saving time transitions with no further intervention::"
msgstr ""
"Datatider som konstrueras på detta sätt är kompatibla med datatidsaritmetik "
"och hanterar övergångar till sommartid utan ytterligare åtgärder:"

msgid ""
">>> dt_add = dt + timedelta(days=1)\n"
"\n"
">>> print(dt_add)\n"
"2020-11-01 12:00:00-08:00\n"
"\n"
">>> dt_add.tzname()\n"
"'PST'"
msgstr ""
">>> dt_add = dt + timedelta(dagar=1)\n"
"\n"
">>> skriv ut(dt_add)\n"
"2020-11-01 12:00:00-08:00\n"
"\n"
">>> dt_add.tzname()\n"
"'PST'"

msgid ""
"These time zones also support the :attr:`~datetime.datetime.fold` attribute "
"introduced in :pep:`495`.  During offset transitions which induce ambiguous "
"times (such as a daylight saving time to standard time transition), the "
"offset from *before* the transition is used when ``fold=0``, and the offset "
"*after* the transition is used when ``fold=1``, for example::"
msgstr ""
"Dessa tidszoner har också stöd för attributet :attr:`~datetime.datetime."
"fold` som introducerades i :pep:`495`.  Vid offsetövergångar som ger upphov "
"till tvetydiga tider (t.ex. en övergång från sommartid till normaltid) "
"används offset från *före* övergången när ``fold=0``, och offset *efter* "
"övergången används när ``fold=1``, t.ex:"

msgid ""
">>> dt = datetime(2020, 11, 1, 1, tzinfo=ZoneInfo(\"America/Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> print(dt.replace(fold=1))\n"
"2020-11-01 01:00:00-08:00"
msgstr ""
">>> dt = datetime(2020, 11, 1, 1, tzinfo=ZoneInfo(\"America/Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> print(dt.replace(fold=1))\n"
"2020-11-01 01:00:00-08:00"

msgid ""
"When converting from another time zone, the fold will be set to the correct "
"value::"
msgstr ""
"När du konverterar från en annan tidszon kommer vikningen att ställas in på "
"rätt värde::"

msgid ""
">>> from datetime import timezone\n"
">>> LOS_ANGELES = ZoneInfo(\"America/Los_Angeles\")\n"
">>> dt_utc = datetime(2020, 11, 1, 8, tzinfo=timezone.utc)\n"
"\n"
">>> # Before the PDT -> PST transition\n"
">>> print(dt_utc.astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> # After the PDT -> PST transition\n"
">>> print((dt_utc + timedelta(hours=1)).astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-08:00"
msgstr ""
">>> from datetime import timezone\n"
">>> LOS_ANGELES = ZoneInfo(\"America/Los_Angeles\")\n"
">>> dt_utc = datetime(2020, 11, 1, 8, tzinfo=timezone.utc)\n"
"\n"
">>> # Before the PDT -> PST transition\n"
">>> print(dt_utc.astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> # After the PDT -> PST transition\n"
">>> print((dt_utc + timedelta(hours=1)).astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-08:00"

msgid "Data sources"
msgstr "Datakällor"

msgid ""
"The ``zoneinfo`` module does not directly provide time zone data, and "
"instead pulls time zone information from the system time zone database or "
"the first-party PyPI package :pypi:`tzdata`, if available. Some systems, "
"including notably Windows systems, do not have an IANA database available, "
"and so for projects targeting cross-platform compatibility that require time "
"zone data, it is recommended to declare a dependency on tzdata. If neither "
"system data nor tzdata are available, all calls to :class:`ZoneInfo` will "
"raise :exc:`ZoneInfoNotFoundError`."
msgstr ""
"Modulen ``zoneinfo`` tillhandahåller inte tidszonsdata direkt, utan hämtar "
"istället tidszonsinformation från systemets tidszonsdatabas eller PyPI-"
"paketet :pypi:`tzdata`, om det finns tillgängligt. Vissa system, inklusive "
"särskilt Windows-system, har inte en IANA-databas tillgänglig, så för "
"projekt som riktar sig mot kompatibilitet mellan plattformar som kräver "
"tidszonsdata rekommenderas det att deklarera ett beroende av tzdata. Om "
"varken systemdata eller tzdata finns tillgängliga, kommer alla anrop till :"
"class:`ZoneInfo` att ge upphov till :exc:`ZoneInfoNotFoundError`."

msgid "Configuring the data sources"
msgstr "Konfigurera datakällorna"

msgid ""
"When ``ZoneInfo(key)`` is called, the constructor first searches the "
"directories specified in :data:`TZPATH` for a file matching ``key``, and on "
"failure looks for a match in the tzdata package. This behavior can be "
"configured in three ways:"
msgstr ""
"När ``ZoneInfo(key)`` anropas söker konstruktören först i de kataloger som "
"anges i :data:`TZPATH` efter en fil som matchar ``key``, och om den inte gör "
"det letar den efter en matchning i tzdata-paketet. Detta beteende kan "
"konfigureras på tre sätt:"

msgid ""
"The default :data:`TZPATH` when not otherwise specified can be configured "
"at :ref:`compile time <zoneinfo_data_compile_time_config>`."
msgstr ""
"Standardvärdet :data:`TZPATH` kan, om inget annat anges, konfigureras vid :"
"ref:`kompileringstid <zoneinfo_data_compile_time_config>`."

msgid ""
":data:`TZPATH` can be configured using :ref:`an environment variable "
"<zoneinfo_data_environment_var>`."
msgstr ""
":data:`TZPATH` kan konfigureras med :ref:`en miljövariabel "
"<zoneinfo_data_environment_var>`."

msgid ""
"At :ref:`runtime <zoneinfo_data_runtime_config>`, the search path can be "
"manipulated using the :func:`reset_tzpath` function."
msgstr ""
"Vid :ref:`runtime <zoneinfo_data_runtime_config>` kan sökvägen manipuleras "
"med hjälp av funktionen :func:`reset_tzpath`."

msgid "Compile-time configuration"
msgstr "Konfiguration under kompileringstiden"

msgid ""
"The default :data:`TZPATH` includes several common deployment locations for "
"the time zone database (except on Windows, where there are no \"well-known\" "
"locations for time zone data). On POSIX systems, downstream distributors and "
"those building Python from source who know where their system time zone data "
"is deployed may change the default time zone path by specifying the compile-"
"time option ``TZPATH`` (or, more likely, the :option:`configure flag --with-"
"tzpath <--with-tzpath>`), which should be a string delimited by :data:`os."
"pathsep`."
msgstr ""
"Standard :data:`TZPATH` innehåller flera vanliga distributionsplatser för "
"tidszonsdatabasen (utom på Windows, där det inte finns några \"välkända\" "
"platser för tidszonsdata). På POSIX-system kan nedströmsdistributörer och de "
"som bygger Python från källan och som vet var deras systems tidszonsdata "
"distribueras ändra standardtidszonssökvägen genom att ange "
"kompileringstidsalternativet ``TZPATH`` (eller, mer troligt, :option:"
"`configure flag --with-tzpath <--with-tzpath>`), som bör vara en sträng "
"avgränsad av :data:`os.pathsep`."

msgid ""
"On all platforms, the configured value is available as the ``TZPATH`` key "
"in :func:`sysconfig.get_config_var`."
msgstr ""
"På alla plattformar är det konfigurerade värdet tillgängligt som nyckeln "
"``TZPATH`` i :func:`sysconfig.get_config_var`."

msgid "Environment configuration"
msgstr "Konfiguration av miljö"

msgid ""
"When initializing :data:`TZPATH` (either at import time or whenever :func:"
"`reset_tzpath` is called with no arguments), the ``zoneinfo`` module will "
"use the environment variable ``PYTHONTZPATH``, if it exists, to set the "
"search path."
msgstr ""
"Vid initiering av :data:`TZPATH` (antingen vid import eller när :func:"
"`reset_tzpath` anropas utan argument) kommer modulen ``zoneinfo`` att "
"använda miljövariabeln ``PYTHONTZPATH``, om den finns, för att ange sökvägen."

msgid ""
"This is an :data:`os.pathsep`-separated string containing the time zone "
"search path to use. It must consist of only absolute rather than relative "
"paths. Relative components specified in ``PYTHONTZPATH`` will not be used, "
"but otherwise the behavior when a relative path is specified is "
"implementation-defined; CPython will raise :exc:`InvalidTZPathWarning`, but "
"other implementations are free to silently ignore the erroneous component or "
"raise an exception."
msgstr ""
"Detta är en :data:`os.pathsep`-separerad sträng som innehåller sökvägen för "
"tidszonssökning som ska användas. Den måste bestå av absoluta sökvägar "
"snarare än relativa sökvägar. Relativa komponenter som anges i "
"``PYTHONTZPATH`` kommer inte att användas, men annars är beteendet när en "
"relativ sökväg anges implementationsdefinierat; CPython kommer att höja :exc:"
"`InvalidTZPathWarning`, men andra implementationer är fria att tyst ignorera "
"den felaktiga komponenten eller höja ett undantag."

msgid ""
"To set the system to ignore the system data and use the tzdata package "
"instead, set ``PYTHONTZPATH=\"\"``."
msgstr ""
"Om du vill att systemet ska ignorera systemdata och använda tzdata-paketet i "
"stället anger du ``PYTHONTZPATH=\"\"``."

msgid "Runtime configuration"
msgstr "Konfiguration för körtid"

msgid ""
"The TZ search path can also be configured at runtime using the :func:"
"`reset_tzpath` function. This is generally not an advisable operation, "
"though it is reasonable to use it in test functions that require the use of "
"a specific time zone path (or require disabling access to the system time "
"zones)."
msgstr ""
"TZ-sökvägen kan också konfigureras vid körning med hjälp av funktionen :func:"
"`reset_tzpath`. Detta är i allmänhet inte en tillrådlig åtgärd, men det är "
"rimligt att använda den i testfunktioner som kräver användning av en "
"specifik sökväg för tidszoner (eller kräver att åtkomst till systemets "
"tidszoner inaktiveras)."

msgid "The ``ZoneInfo`` class"
msgstr "Klassen ``ZoneInfo`` (zoninformation)"

msgid ""
"A concrete :class:`datetime.tzinfo` subclass that represents an IANA time "
"zone specified by the string ``key``. Calls to the primary constructor will "
"always return objects that compare identically; put another way, barring "
"cache invalidation via :meth:`ZoneInfo.clear_cache`, for all values of "
"``key``, the following assertion will always be true:"
msgstr ""
"En konkret :class:`datetime.tzinfo`-underklass som representerar en IANA-"
"tidszon som specificeras av strängen ``key``. Anrop till den primära "
"konstruktören kommer alltid att returnera objekt som jämför identiskt; "
"uttryckt på ett annat sätt, om inte cachen ogiltigförklaras via :meth:"
"`ZoneInfo.clear_cache`, för alla värden av ``key``, kommer följande "
"påstående alltid att vara sant:"

msgid ""
"a = ZoneInfo(key)\n"
"b = ZoneInfo(key)\n"
"assert a is b"
msgstr ""
"a = ZoneInfo(nyckel)\n"
"b = ZoneInfo(nyckel)\n"
"assert a är b"

msgid ""
"``key`` must be in the form of a relative, normalized POSIX path, with no up-"
"level references. The constructor will raise :exc:`ValueError` if a non-"
"conforming key is passed."
msgstr ""
"``key`` måste vara i form av en relativ, normaliserad POSIX-sökväg, utan "
"referenser på högre nivå. Konstruktören kommer att ge :exc:`ValueError` om "
"en nyckel som inte överensstämmer skickas."

msgid ""
"If no file matching ``key`` is found, the constructor will raise :exc:"
"`ZoneInfoNotFoundError`."
msgstr ""
"Om ingen fil som matchar ``key`` hittas, kommer konstruktören att ge upphov "
"till :exc:`ZoneInfoNotFoundError`."

msgid "The ``ZoneInfo`` class has two alternate constructors:"
msgstr "Klassen ``ZoneInfo`` har två alternativa konstruktörer:"

msgid ""
"Constructs a ``ZoneInfo`` object from a file-like object returning bytes (e."
"g. a file opened in binary mode or an :class:`io.BytesIO` object). Unlike "
"the primary constructor, this always constructs a new object."
msgstr ""
"Konstruerar ett ``ZoneInfo``-objekt från ett filliknande objekt som "
"returnerar bytes (t.ex. en fil som öppnas i binärt läge eller ett :class:`io."
"BytesIO`-objekt). Till skillnad från den primära konstruktören konstruerar "
"denna alltid ett nytt objekt."

msgid ""
"The ``key`` parameter sets the name of the zone for the purposes of :py:meth:"
"`~object.__str__` and :py:meth:`~object.__repr__`."
msgstr ""
"Parametern ``key`` anger namnet på zonen för ändamålen :py:meth:`~object."
"__str__` och :py:meth:`~object.__repr__`."

msgid ""
"Objects created via this constructor cannot be pickled (see `pickling`_)."
msgstr ""
"Objekt som skapas med denna konstruktor kan inte picklas (se `pickling`_)."

msgid ""
"An alternate constructor that bypasses the constructor's cache. It is "
"identical to the primary constructor, but returns a new object on each call. "
"This is most likely to be useful for testing or demonstration purposes, but "
"it can also be used to create a system with a different cache invalidation "
"strategy."
msgstr ""
"En alternativ konstruktör som förbigår konstruktörens cache. Den är identisk "
"med den primära konstruktören, men returnerar ett nytt objekt vid varje "
"anrop. Detta är troligen mest användbart för test- eller "
"demonstrationsändamål, men det kan också användas för att skapa ett system "
"med en annan strategi för inaktivering av cachen."

msgid ""
"Objects created via this constructor will also bypass the cache of a "
"deserializing process when unpickled."
msgstr ""
"Objekt som skapas via denna konstruktör kommer också att gå förbi "
"cacheminnet i en deserialiseringsprocess när de plockas upp."

msgid ""
"Using this constructor may change the semantics of your datetimes in "
"surprising ways, only use it if you know that you need to."
msgstr ""
"Om du använder den här konstruktören kan semantiken i dina datatider ändras "
"på överraskande sätt, använd den bara om du vet att du behöver det."

msgid "The following class methods are also available:"
msgstr "Följande klassmetoder är också tillgängliga:"

msgid ""
"A method for invalidating the cache on the ``ZoneInfo`` class. If no "
"arguments are passed, all caches are invalidated and the next call to the "
"primary constructor for each key will return a new instance."
msgstr ""
"En metod för att inaktivera cachen för klassen ``ZoneInfo``. Om inga "
"argument anges kommer alla cacher att ogiltigförklaras och nästa anrop till "
"den primära konstruktören för varje nyckel kommer att returnera en ny "
"instans."

msgid ""
"If an iterable of key names is passed to the ``only_keys`` parameter, only "
"the specified keys will be removed from the cache. Keys passed to "
"``only_keys`` but not found in the cache are ignored."
msgstr ""
"Om en iterabel med nyckelnamn skickas till parametern ``only_keys`` kommer "
"endast de angivna nycklarna att tas bort från cacheminnet. Nycklar som "
"skickas till ``only_keys`` men som inte finns i cachen ignoreras."

msgid ""
"Invoking this function may change the semantics of datetimes using "
"``ZoneInfo`` in surprising ways; this modifies module state and thus may "
"have wide-ranging effects. Only use it if you know that you need to."
msgstr ""
"Om denna funktion anropas kan semantiken för datatider som använder "
"``ZoneInfo`` ändras på överraskande sätt; detta ändrar modulens tillstånd "
"och kan därför få omfattande effekter. Använd den bara om du vet att du "
"behöver det."

msgid "The class has one attribute:"
msgstr "Klassen har ett attribut:"

msgid ""
"This is a read-only :term:`attribute` that returns the value of ``key`` "
"passed to the constructor, which should be a lookup key in the IANA time "
"zone database (e.g. ``America/New_York``, ``Europe/Paris`` or ``Asia/"
"Tokyo``)."
msgstr ""
"Detta är en skrivskyddad :term:`attribut` som returnerar värdet på ``key`` "
"som skickas till konstruktören, vilket bör vara en uppslagsnyckel i IANA:s "
"tidszonsdatabas (t.ex. ``America/New_York``, ``Europe/Paris`` eller ``Asia/"
"Tokyo``)."

msgid ""
"For zones constructed from file without specifying a ``key`` parameter, this "
"will be set to ``None``."
msgstr ""
"För zoner som konstrueras från en fil utan att ange en ``key`` parameter, "
"kommer detta att sättas till ``None``."

msgid ""
"Although it is a somewhat common practice to expose these to end users, "
"these values are designed to be primary keys for representing the relevant "
"zones and not necessarily user-facing elements.  Projects like CLDR (the "
"Unicode Common Locale Data Repository) can be used to get more user-friendly "
"strings from these keys."
msgstr ""
"Även om det är ganska vanligt att exponera dessa för slutanvändare, är dessa "
"värden utformade för att vara primära nycklar för att representera de "
"relevanta zonerna och inte nödvändigtvis användarvänliga element.  Projekt "
"som CLDR (Unicode Common Locale Data Repository) kan användas för att få mer "
"användarvänliga strängar från dessa nycklar."

msgid "String representations"
msgstr "Representation av strängar"

msgid ""
"The string representation returned when calling :py:class:`str` on a :class:"
"`ZoneInfo` object defaults to using the :attr:`ZoneInfo.key` attribute (see "
"the note on usage in the attribute documentation)::"
msgstr ""
"Den strängrepresentation som returneras vid anrop av :py:class:`str` på ett :"
"class:`ZoneInfo`-objekt använder som standard attributet :attr:`ZoneInfo."
"key` (se anmärkningen om användning i attributdokumentationen)::"

msgid ""
">>> zone = ZoneInfo(\"Pacific/Kwajalein\")\n"
">>> str(zone)\n"
"'Pacific/Kwajalein'\n"
"\n"
">>> dt = datetime(2020, 4, 1, 3, 15, tzinfo=zone)\n"
">>> f\"{dt.isoformat()} [{dt.tzinfo}]\"\n"
"'2020-04-01T03:15:00+12:00 [Pacific/Kwajalein]'"
msgstr ""
">>> zon = ZoneInfo(\"Stilla havet/Kwajalein\")\n"
">>> str(zon)\n"
"'Stilla havet/Kwajalein'\n"
"\n"
">>> dt = datetime(2020, 4, 1, 3, 15, tzinfo=zone)\n"
">>> f\"{dt.isoformat()} [{dt.tzinfo}]\"\n"
"'2020-04-01T03:15:00+12:00 [Pacific/Kwajalein]'"

msgid ""
"For objects constructed from a file without specifying a ``key`` parameter, "
"``str`` falls back to calling :func:`repr`. ``ZoneInfo``'s ``repr`` is "
"implementation-defined and not necessarily stable between versions, but it "
"is guaranteed not to be a valid ``ZoneInfo`` key."
msgstr ""
"För objekt som konstrueras från en fil utan att ange en ``key`` parameter, "
"faller ``str`` tillbaka till att anropa :func:`repr`. ``ZoneInfo`` s "
"``repr`` är implementationsdefinierad och inte nödvändigtvis stabil mellan "
"versioner, men det är garanterat att det inte är en giltig ``ZoneInfo`` "
"nyckel."

msgid "Pickle serialization"
msgstr "Pickle-serialisering"

msgid ""
"Rather than serializing all transition data, ``ZoneInfo`` objects are "
"serialized by key, and ``ZoneInfo`` objects constructed from files (even "
"those with a value for ``key`` specified) cannot be pickled."
msgstr ""
"I stället för att serialisera alla övergångsdata serialiseras ``ZoneInfo``-"
"objekt efter nyckel, och ``ZoneInfo``-objekt som konstrueras från filer "
"(även de som har ett värde för ``key`` angivet) kan inte picklas."

msgid "The behavior of a ``ZoneInfo`` file depends on how it was constructed:"
msgstr "Hur en ``ZoneInfo``-fil fungerar beror på hur den konstruerades:"

msgid ""
"``ZoneInfo(key)``: When constructed with the primary constructor, a "
"``ZoneInfo`` object is serialized by key, and when deserialized, the "
"deserializing process uses the primary and thus it is expected that these "
"are expected to be the same object as other references to the same time "
"zone.  For example, if ``europe_berlin_pkl`` is a string containing a pickle "
"constructed from ``ZoneInfo(\"Europe/Berlin\")``, one would expect the "
"following behavior:"
msgstr ""
"``ZoneInfo(nyckel)``: När ett ``ZoneInfo``-objekt konstrueras med den "
"primära konstruktören serialiseras det med nyckel, och när det "
"deserialiseras använder deserialiseringsprocessen den primära och därmed "
"förväntas det att dessa förväntas vara samma objekt som andra referenser "
"till samma tidszon.  Om till exempel ``europe_berlin_pkl`` är en sträng som "
"innehåller en pickle konstruerad från ``ZoneInfo(\"Europe/Berlin\")``, kan "
"man förvänta sig följande beteende:"

msgid ""
">>> a = ZoneInfo(\"Europe/Berlin\")\n"
">>> b = pickle.loads(europe_berlin_pkl)\n"
">>> a is b\n"
"True"
msgstr ""
">>> a = ZoneInfo(\"Europa/Berlin\")\n"
">>> b = pickle.laddar(europe_berlin_pkl)\n"
">>> a är b\n"
"Sant"

msgid ""
"``ZoneInfo.no_cache(key)``: When constructed from the cache-bypassing "
"constructor, the ``ZoneInfo`` object is also serialized by key, but when "
"deserialized, the deserializing process uses the cache bypassing "
"constructor. If ``europe_berlin_pkl_nc`` is a string containing a pickle "
"constructed from ``ZoneInfo.no_cache(\"Europe/Berlin\")``, one would expect "
"the following behavior:"
msgstr ""
"``ZoneInfo.no_cache(key)``: När ``ZoneInfo``-objektet konstrueras från den "
"cache-förbikopplande konstruktören serialiseras det också med nyckel, men "
"när det deserialiseras använder deserialiseringsprocessen den cache-"
"förbikopplande konstruktören. Om ``europe_berlin_pkl_nc`` är en sträng som "
"innehåller en pickle konstruerad från ``ZoneInfo.no_cache(\"Europe/"
"Berlin\")``, kan man förvänta sig följande beteende:"

msgid ""
">>> a = ZoneInfo(\"Europe/Berlin\")\n"
">>> b = pickle.loads(europe_berlin_pkl_nc)\n"
">>> a is b\n"
"False"
msgstr ""
">>> a = ZoneInfo(\"Europa/Berlin\")\n"
">>> b = pickle.laddar(europe_berlin_pkl_nc)\n"
">>> a är b\n"
"Falsk"

msgid ""
"``ZoneInfo.from_file(file_obj, /, key=None)``: When constructed from a file, "
"the ``ZoneInfo`` object raises an exception on pickling. If an end user "
"wants to pickle a ``ZoneInfo`` constructed from a file, it is recommended "
"that they use a wrapper type or a custom serialization function: either "
"serializing by key or storing the contents of the file object and "
"serializing that."
msgstr ""
"``ZoneInfo.from_file(file_obj, /, key=None)``: När objektet ``ZoneInfo`` "
"konstrueras från en fil uppstår ett undantag vid betning. Om en "
"slutanvändare vill plocka ett ``ZoneInfo`` som konstruerats från en fil "
"rekommenderas att de använder en omslagstyp eller en anpassad "
"serialiseringsfunktion: antingen serialisering med nyckel eller lagring av "
"innehållet i filobjektet och serialisering av det."

msgid ""
"This method of serialization requires that the time zone data for the "
"required key be available on both the serializing and deserializing side, "
"similar to the way that references to classes and functions are expected to "
"exist in both the serializing and deserializing environments. It also means "
"that no guarantees are made about the consistency of results when unpickling "
"a ``ZoneInfo`` pickled in an environment with a different version of the "
"time zone data."
msgstr ""
"Denna serialiseringsmetod kräver att tidszonsdata för den nyckel som krävs "
"finns tillgänglig både på den serialiserande och den deserialiserande sidan, "
"på samma sätt som referenser till klasser och funktioner förväntas finnas i "
"både den serialiserande och den deserialiserande miljön. Det innebär också "
"att det inte finns några garantier för att resultaten är konsekventa när en "
"``ZoneInfo`` som är inlagd i en miljö med en annan version av tidszonsdata "
"plockas ut."

msgid "Functions"
msgstr "Funktioner"

msgid ""
"Get a set containing all the valid keys for IANA time zones available "
"anywhere on the time zone path. This is recalculated on every call to the "
"function."
msgstr ""
"Hämta en uppsättning som innehåller alla giltiga nycklar för IANA-tidszoner "
"som finns tillgängliga var som helst på tidszonsvägen. Detta räknas om vid "
"varje anrop till funktionen."

msgid ""
"This function only includes canonical zone names and does not include "
"\"special\" zones such as those under the ``posix/`` and ``right/`` "
"directories, or the ``posixrules`` zone."
msgstr ""
"Denna funktion inkluderar endast kanoniska zonnamn och inte \"speciella\" "
"zoner som de under katalogerna ``posix/`` och ``right/``, eller zonen "
"``posixrules``."

msgid ""
"This function may open a large number of files, as the best way to determine "
"if a file on the time zone path is a valid time zone is to read the \"magic "
"string\" at the beginning."
msgstr ""
"Denna funktion kan öppna ett stort antal filer, eftersom det bästa sättet "
"att avgöra om en fil på tidszonssökvägen har en giltig tidszon är att läsa "
"den \"magiska strängen\" i början."

msgid ""
"These values are not designed to be exposed to end-users; for user facing "
"elements, applications should use something like CLDR (the Unicode Common "
"Locale Data Repository) to get more user-friendly strings. See also the "
"cautionary note on :attr:`ZoneInfo.key`."
msgstr ""
"Dessa värden är inte avsedda att exponeras för slutanvändare; för element "
"som vänder sig till användare bör program använda något som CLDR (Unicode "
"Common Locale Data Repository) för att få mer användarvänliga strängar. Se "
"även försiktighetsanmärkningen om :attr:`ZoneInfo.key`."

msgid ""
"Sets or resets the time zone search path (:data:`TZPATH`) for the module. "
"When called with no arguments, :data:`TZPATH` is set to the default value."
msgstr ""
"Ställer in eller återställer sökvägen för tidszonssökning (:data:`TZPATH`) "
"för modulen. När den anropas utan argument sätts :data:`TZPATH` till "
"standardvärdet."

msgid ""
"Calling ``reset_tzpath`` will not invalidate the :class:`ZoneInfo` cache, "
"and so calls to the primary ``ZoneInfo`` constructor will only use the new "
"``TZPATH`` in the case of a cache miss."
msgstr ""
"Anrop av ``reset_tzpath`` kommer inte att inaktivera :class:`ZoneInfo`-"
"cachen, och anrop till den primära ``ZoneInfo``-konstruktören kommer därför "
"bara att använda den nya ``TZPATH`` i händelse av en cachemiss."

msgid ""
"The ``to`` parameter must be a :term:`sequence` of strings or :class:`os."
"PathLike` and not a string, all of which must be absolute paths. :exc:"
"`ValueError` will be raised if something other than an absolute path is "
"passed."
msgstr ""
"Parametern ``to`` måste vara en :term:`sequence` av strängar eller :class:"
"`os.PathLike` och inte en sträng, som alla måste vara absoluta sökvägar. :"
"exc:`ValueError` kommer att tas upp om något annat än en absolut sökväg "
"skickas."

msgid "Globals"
msgstr "Globaler"

msgid ""
"A read-only sequence representing the time zone search path -- when "
"constructing a ``ZoneInfo`` from a key, the key is joined to each entry in "
"the ``TZPATH``, and the first file found is used."
msgstr ""
"En skrivskyddad sekvens som representerar sökvägen för tidszoner - när en "
"``ZoneInfo`` konstrueras från en nyckel, kopplas nyckeln till varje post i "
"``TZPATH`` och den första filen som hittas används."

msgid ""
"``TZPATH`` may contain only absolute paths, never relative paths, regardless "
"of how it is configured."
msgstr ""
"``TZPATH`` kan bara innehålla absoluta sökvägar, aldrig relativa sökvägar, "
"oavsett hur den är konfigurerad."

msgid ""
"The object that ``zoneinfo.TZPATH`` points to may change in response to a "
"call to :func:`reset_tzpath`, so it is recommended to use ``zoneinfo."
"TZPATH`` rather than importing ``TZPATH`` from ``zoneinfo`` or assigning a "
"long-lived variable to ``zoneinfo.TZPATH``."
msgstr ""
"Objektet som ``zoneinfo.TZPATH`` pekar på kan ändras som svar på ett anrop "
"till :func:`reset_tzpath`, så det rekommenderas att använda ``zoneinfo."
"TZPATH`` i stället för att importera ``TZPATH`` från ``zoneinfo`` eller "
"tilldela en långlivad variabel till ``zoneinfo.TZPATH``."

msgid ""
"For more information on configuring the time zone search path, see :ref:"
"`zoneinfo_data_configuration`."
msgstr ""
"Mer information om hur du konfigurerar sökvägen för tidszoner finns i :ref:"
"`zoneinfo_data_configuration`."

msgid "Exceptions and warnings"
msgstr "Undantag och varningar"

msgid ""
"Raised when construction of a :class:`ZoneInfo` object fails because the "
"specified key could not be found on the system. This is a subclass of :exc:"
"`KeyError`."
msgstr ""
"Uppstår när konstruktionen av ett :class:`ZoneInfo`-objekt misslyckas "
"eftersom den angivna nyckeln inte kunde hittas i systemet. Detta är en "
"subklass av :exc:`KeyError`."

msgid ""
"Raised when :envvar:`PYTHONTZPATH` contains an invalid component that will "
"be filtered out, such as a relative path."
msgstr ""
"Utlöses när :envvar:`PYTHONTZPATH` innehåller en ogiltig komponent som "
"kommer att filtreras bort, t.ex. en relativ sökväg."
