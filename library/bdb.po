# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!bdb` --- Debugger framework"
msgstr ":mod:`!bdb` --- Felsökningsramverk"

msgid "**Source code:** :source:`Lib/bdb.py`"
msgstr "**Källkod:** :source:`Lib/bdb.py`"

msgid ""
"The :mod:`bdb` module handles basic debugger functions, like setting "
"breakpoints or managing execution via the debugger."
msgstr ""
"Modulen :mod:`bdb` hanterar grundläggande felsökningsfunktioner, som att "
"ställa in brytpunkter eller hantera körning via felsökaren."

msgid "The following exception is defined:"
msgstr "Följande undantag definieras:"

msgid "Exception raised by the :class:`Bdb` class for quitting the debugger."
msgstr ""
"Exception som orsakas av :class:`Bdb`-klassen för att avsluta felsökaren."

msgid "The :mod:`bdb` module also defines two classes:"
msgstr "Modulen :mod:`bdb` definierar också två klasser:"

msgid ""
"This class implements temporary breakpoints, ignore counts, disabling and "
"(re-)enabling, and conditionals."
msgstr ""
"I den här klassen implementeras temporära brytpunkter, ignoreringsräkningar, "
"inaktivering och (åter)aktivering samt villkor."

msgid ""
"Breakpoints are indexed by number through a list called :attr:`bpbynumber` "
"and by ``(file, line)`` pairs through :attr:`bplist`.  The former points to "
"a single instance of class :class:`Breakpoint`.  The latter points to a list "
"of such instances since there may be more than one breakpoint per line."
msgstr ""
"Brytpunkter indexeras med nummer genom en lista som heter :attr:`bpbynumber` "
"och med ``(fil, rad)``-par genom :attr:`bplist`.  Den förstnämnda pekar på "
"en enda instans av klassen :class:`Breakpoint`.  Den senare pekar på en "
"lista av sådana instanser eftersom det kan finnas mer än en brytpunkt per "
"rad."

msgid ""
"When creating a breakpoint, its associated :attr:`file name <file>` should "
"be in canonical form.  If a :attr:`funcname` is defined, a breakpoint :attr:"
"`hit <hits>` will be counted when the first line of that function is "
"executed.  A :attr:`conditional <cond>` breakpoint always counts a :attr:"
"`hit <hits>`."
msgstr ""
"När du skapar en brytpunkt bör dess associerade :attr:`filnamn <file>` vara "
"i kanonisk form.  Om en :attr:`funcname` definieras kommer en brytpunkt :"
"attr:`hit <hits>` att räknas när den första raden i den funktionen "
"exekveras.  En :attr:`conditional <cond>` brytpunkt räknar alltid en :attr:"
"`hit <hits>`."

msgid ":class:`Breakpoint` instances have the following methods:"
msgstr ":class:`Breakpoint`-instanser har följande metoder:"

msgid ""
"Delete the breakpoint from the list associated to a file/line.  If it is the "
"last breakpoint in that position, it also deletes the entry for the file/"
"line."
msgstr ""
"Ta bort brytpunkten från listan som är kopplad till en fil/rad.  Om det är "
"den sista brytpunkten i den positionen raderas även posten för filen/raden."

msgid "Mark the breakpoint as enabled."
msgstr "Markera brytpunkten som aktiverad."

msgid "Mark the breakpoint as disabled."
msgstr "Markera brytpunkten som inaktiverad."

msgid ""
"Return a string with all the information about the breakpoint, nicely "
"formatted:"
msgstr ""
"Returnerar en sträng med all information om brytpunkten, snyggt formaterad:"

msgid "Breakpoint number."
msgstr "Brytpunktsnummer."

msgid "Temporary status (del or keep)."
msgstr "Tillfällig status (del eller keep)."

msgid "File/line position."
msgstr "Fil/linjeposition."

msgid "Break condition."
msgstr "Bristande skick."

msgid "Number of times to ignore."
msgstr "Antal gånger att ignorera."

msgid "Number of times hit."
msgstr "Antal gånger träffad."

msgid ""
"Print the output of :meth:`bpformat` to the file *out*, or if it is "
"``None``, to standard output."
msgstr ""
"Skriv ut resultatet av :meth:`bpformat` till filen *out*, eller om den är "
"``None``, till standardutmatningen."

msgid ":class:`Breakpoint` instances have the following attributes:"
msgstr ":class:`Breakpoint`-instanser har följande attribut:"

msgid "File name of the :class:`Breakpoint`."
msgstr "Filnamn för :class:`Breakpoint`."

msgid "Line number of the :class:`Breakpoint` within :attr:`file`."
msgstr "Radnummer för :class:`Breakpoint` inom :attr:`file`."

msgid "``True`` if a :class:`Breakpoint` at (file, line) is temporary."
msgstr "``True`` om en :class:`Breakpoint` vid (fil, rad) är temporär."

msgid "Condition for evaluating a :class:`Breakpoint` at (file, line)."
msgstr "Villkor för utvärdering av en :class:`Breakpoint` vid (fil, rad)."

msgid ""
"Function name that defines whether a :class:`Breakpoint` is hit upon "
"entering the function."
msgstr ""
"Funktionsnamn som definierar om en :class:`Breakpoint` nås när funktionen "
"startas."

msgid "``True`` if :class:`Breakpoint` is enabled."
msgstr "``True`` om :class:`Breakpoint` är aktiverat."

msgid "Numeric index for a single instance of a :class:`Breakpoint`."
msgstr "Numeriskt index för en enskild instans av en :class:`Breakpoint`."

msgid ""
"Dictionary of :class:`Breakpoint` instances indexed by (:attr:`file`, :attr:"
"`line`) tuples."
msgstr ""
"Ordbok med :class:`Breakpoint`-instanser indexerade med (:attr:`file`, :attr:"
"`line`) tuples."

msgid "Number of times to ignore a :class:`Breakpoint`."
msgstr "Antal gånger som en :class:`Breakpoint` ska ignoreras."

msgid "Count of the number of times a :class:`Breakpoint` has been hit."
msgstr "Räknar antalet gånger en :class:`Breakpoint` har träffats."

msgid "The :class:`Bdb` class acts as a generic Python debugger base class."
msgstr ""
"Klassen :class:`Bdb` fungerar som en generisk basklass för Pythons felsökare."

msgid ""
"This class takes care of the details of the trace facility; a derived class "
"should implement user interaction.  The standard debugger class (:class:`pdb."
"Pdb`) is an example."
msgstr ""
"Denna klass tar hand om detaljerna i spårningsfunktionen; en härledd klass "
"bör implementera användarinteraktion.  Standardklassen för debugger (:class:"
"`pdb.Pdb`) är ett exempel."

msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. Whether a frame is considered to "
"originate in a certain module is determined by the ``__name__`` in the frame "
"globals."
msgstr ""
"Argumentet *skip*, om det anges, måste vara en iterabel av modulnamnsmönster "
"i glob-stil.  Felsökaren kommer inte att gå in i ramar som har sitt ursprung "
"i en modul som matchar något av dessa mönster. Huruvida en ram anses ha sitt "
"ursprung i en viss modul avgörs av ``__name__`` i ramglobalerna."

msgid ""
"The *backend* argument specifies the backend to use for :class:`Bdb`. It can "
"be either ``'settrace'`` or ``'monitoring'``. ``'settrace'`` uses :func:`sys."
"settrace` which has the best backward compatibility. The ``'monitoring'`` "
"backend uses the new :mod:`sys.monitoring` that was introduced in Python "
"3.12, which can be much more efficient because it can disable unused events. "
"We are trying to keep the exact interfaces for both backends, but there are "
"some differences. The debugger developers are encouraged to use the "
"``'monitoring'`` backend to achieve better performance."
msgstr ""
"Argumentet *backend* anger vilken backend som ska användas för :class:`Bdb`. "
"Det kan vara antingen ``'settrace'`` eller ``'monitoring'``. ``'settrace'`` "
"använder :func:`sys.settrace` som har den bästa bakåtkompatibiliteten. "
"``'monitoring'`` backend använder den nya :mod:`sys.monitoring` som "
"introducerades i Python 3.12, vilket kan vara mycket mer effektivt eftersom "
"det kan inaktivera oanvända händelser. Vi försöker behålla de exakta "
"gränssnitten för båda backends, men det finns vissa skillnader. "
"Felsökningsutvecklare uppmuntras att använda ``'monitoring'``-backend för "
"att uppnå bättre prestanda."

msgid "Added the *skip* parameter."
msgstr "Lagt till parametern *skip*."

msgid "Added the *backend* parameter."
msgstr "Lagt till parametern *backend*."

msgid ""
"The following methods of :class:`Bdb` normally don't need to be overridden."
msgstr "Följande metoder i :class:`Bdb` behöver normalt inte åsidosättas."

msgid "Return canonical form of *filename*."
msgstr "Returnerar kanonisk form av *filnamn*."

msgid ""
"For real file names, the canonical form is an operating-system-dependent, :"
"func:`case-normalized <os.path.normcase>` :func:`absolute path <os.path."
"abspath>`. A *filename* with angle brackets, such as ``\"<stdin>\"`` "
"generated in interactive mode, is returned unchanged."
msgstr ""
"För riktiga filnamn är den kanoniska formen en operativsystemberoende, :func:"
"`case-normaliserad <os.path.normcase>` :func:`absolut sökväg <os.path."
"abspath>`. Ett *filnamn* med vinkelparenteser, t.ex. ``\"<stdin>\"`` som "
"genererats i interaktivt läge, returneras oförändrat."

msgid ""
"Start tracing. For ``'settrace'`` backend, this method is equivalent to "
"``sys.settrace(self.trace_dispatch)``"
msgstr ""
"Starta spårning. För ``'settrace'`` backend, är denna metod likvärdig med "
"``sys.settrace(self.trace_dispatch)``"

msgid ""
"Stop tracing. For ``'settrace'`` backend, this method is equivalent to ``sys."
"settrace(None)``"
msgstr ""
"Stoppar spårning. För ``'settrace'`` backend, är denna metod likvärdig med "
"``sys.settrace(None)``"

msgid ""
"Set the :attr:`!botframe`, :attr:`!stopframe`, :attr:`!returnframe` and :"
"attr:`quitting <Bdb.set_quit>` attributes with values ready to start "
"debugging."
msgstr ""
"Ställ in attributen :attr:`!botframe`, :attr:`!stopframe`, :attr:`!"
"returnframe` och :attr:`quitting <Bdb.set_quit>` med värden som är redo att "
"börja felsöka."

msgid ""
"This function is installed as the trace function of debugged frames.  Its "
"return value is the new trace function (in most cases, that is, itself)."
msgstr ""
"Denna funktion installeras som spårningsfunktion för felsökta ramar.  Dess "
"returvärde är den nya spårningsfunktionen (i de flesta fall, dvs. sig själv)."

msgid ""
"The default implementation decides how to dispatch a frame, depending on the "
"type of event (passed as a string) that is about to be executed. *event* can "
"be one of the following:"
msgstr ""
"Standardimplementeringen avgör hur en ram ska skickas, beroende på vilken "
"typ av händelse (som skickas som en sträng) som ska utföras. *event* kan "
"vara något av följande:"

msgid "``\"line\"``: A new line of code is going to be executed."
msgstr "``\"linje\"``: En ny kodrad kommer att exekveras."

msgid ""
"``\"call\"``: A function is about to be called, or another code block "
"entered."
msgstr ""
"``\"anrop\"``: En funktion är på väg att anropas eller ett annat kodblock "
"anges."

msgid "``\"return\"``: A function or other code block is about to return."
msgstr ""
"``\"return\"``: En funktion eller ett annat kodblock är på väg att returnera."

msgid "``\"exception\"``: An exception has occurred."
msgstr "``\"undantag\"``: Ett undantag har inträffat."

msgid "``\"c_call\"``: A C function is about to be called."
msgstr "``\"c_call\"``: En C-funktion är på väg att anropas."

msgid "``\"c_return\"``: A C function has returned."
msgstr "``\"c_return\"``: En C-funktion har returnerats."

msgid "``\"c_exception\"``: A C function has raised an exception."
msgstr "``\"c_exception\"``: En C-funktion har orsakat ett undantag."

msgid ""
"For the Python events, specialized functions (see below) are called.  For "
"the C events, no action is taken."
msgstr ""
"För Python-händelserna anropas specialiserade funktioner (se nedan).  För C-"
"händelser vidtas inga åtgärder."

msgid "The *arg* parameter depends on the previous event."
msgstr "Parametern *arg* beror på den föregående händelsen."

msgid ""
"See the documentation for :func:`sys.settrace` for more information on the "
"trace function.  For more information on code and frame objects, refer to :"
"ref:`types`."
msgstr ""
"Se dokumentationen för :func:`sys.settrace` för mer information om trace-"
"funktionen.  För mer information om kod- och ramobjekt, se :ref:`types`."

msgid ""
"If the debugger should stop on the current line, invoke the :meth:"
"`user_line` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_line`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""
"Om felsökaren ska stanna på den aktuella raden, anropa metoden :meth:"
"`user_line` (som bör åsidosättas i underklasser). Utlöser ett :exc:`BdbQuit`-"
"undantag om flaggan :attr:`quitting <Bdb.set_quit>` är inställd (vilket kan "
"ställas in från :meth:`user_line`).  Returnera en referens till metoden :"
"meth:`trace_dispatch` för vidare spårning i det området."

msgid ""
"If the debugger should stop on this function call, invoke the :meth:"
"`user_call` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_call`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""
"Om debuggern ska stoppas vid detta funktionsanrop, anropa metoden :meth:"
"`user_call` (som bör åsidosättas i underklasser). Utlöser ett :exc:`BdbQuit` "
"undantag om :attr:`quitting <Bdb.set_quit>` flaggan är inställd (som kan "
"ställas in från :meth:`user_call`).  Returnera en referens till metoden :"
"meth:`trace_dispatch` för vidare spårning i det området."

msgid ""
"If the debugger should stop on this function return, invoke the :meth:"
"`user_return` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_return`).  Return a reference to the :"
"meth:`trace_dispatch` method for further tracing in that scope."
msgstr ""
"Om felsökaren ska stoppas vid denna funktionsretur, anropa metoden :meth:"
"`user_return` (som bör åsidosättas i underklasser). Utlöser ett :exc:"
"`BdbQuit` undantag om :attr:`quitting <Bdb.set_quit>` flaggan är inställd "
"(som kan ställas in från :meth:`user_return`).  Returnerar en referens till "
"metoden :meth:`trace_dispatch` för vidare spårning i det området."

msgid ""
"If the debugger should stop at this exception, invokes the :meth:"
"`user_exception` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`quitting  <Bdb.set_quit>` flag is set "
"(which can be set from :meth:`user_exception`).  Return a reference to the :"
"meth:`trace_dispatch` method for further tracing in that scope."
msgstr ""
"Om debuggern ska stoppas vid detta undantag, anropas metoden :meth:"
"`user_exception` (som bör åsidosättas i underklasser). Utlöser ett :exc:"
"`BdbQuit`-undantag om flaggan :attr:`quitting <Bdb.set_quit>` är inställd "
"(vilket kan ställas in från :meth:`user_exception`).  Returnerar en referens "
"till metoden :meth:`trace_dispatch` för vidare spårning i det området."

msgid ""
"Normally derived classes don't override the following methods, but they may "
"if they want to redefine the definition of stopping and breakpoints."
msgstr ""
"Normalt åsidosätter inte härledda klasser följande metoder, men de kan göra "
"det om de vill omdefiniera definitionen av stopp och brytpunkter."

msgid "Return ``True`` if *module_name* matches any skip pattern."
msgstr "Returnerar ``True`` om *modul_namn* matchar något skip-mönster."

msgid "Return ``True`` if *frame* is below the starting frame in the stack."
msgstr "Returnerar ``True`` om *frame* ligger under startramen i stacken."

msgid "Return ``True`` if there is an effective breakpoint for this line."
msgstr ""
"Returnerar ``True`` om det finns en effektiv brytpunkt för den här raden."

msgid ""
"Check whether a line or function breakpoint exists and is in effect.  Delete "
"temporary breakpoints based on information from :func:`effective`."
msgstr ""
"Kontrollera om det finns en linje- eller funktionsbrytpunkt och om den är i "
"kraft.  Ta bort tillfälliga brytpunkter baserat på information från :func:"
"`effective`."

msgid "Return ``True`` if any breakpoint exists for *frame*'s filename."
msgstr ""
"Returnerar ``True`` om det finns någon brytpunkt för *frame*:s filnamn."

msgid ""
"Derived classes should override these methods to gain control over debugger "
"operation."
msgstr ""
"Härledda klasser bör åsidosätta dessa metoder för att få kontroll över "
"felsökningsfunktionen."

msgid ""
"Called from :meth:`dispatch_call` if a break might stop inside the called "
"function."
msgstr ""
"Anropas från :meth:`dispatch_call` om en paus kan stoppas inuti den anropade "
"funktionen."

msgid ""
"*argument_list* is not used anymore and will always be ``None``. The "
"argument is kept for backwards compatibility."
msgstr ""
"*argument_list* används inte längre och kommer alltid att vara ``None``. "
"Argumentet behålls för bakåtkompatibilitet."

msgid ""
"Called from :meth:`dispatch_line` when either :meth:`stop_here` or :meth:"
"`break_here` returns ``True``."
msgstr ""
"Anropas från :meth:`dispatch_line` när antingen :meth:`stop_here` eller :"
"meth:`break_here` returnerar ``True``."

msgid ""
"Called from :meth:`dispatch_return` when :meth:`stop_here` returns ``True``."
msgstr ""
"Anropas från :meth:`dispatch_return` när :meth:`stop_here` returnerar "
"``True``."

msgid ""
"Called from :meth:`dispatch_exception` when :meth:`stop_here` returns "
"``True``."
msgstr ""
"Anropas från :meth:`dispatch_exception` när :meth:`stop_here` returnerar "
"``True``."

msgid "Handle how a breakpoint must be removed when it is a temporary one."
msgstr "Hantera hur en brytpunkt måste tas bort när den är tillfällig."

msgid "This method must be implemented by derived classes."
msgstr "Denna metod måste implementeras av härledda klasser."

msgid ""
"Derived classes and clients can call the following methods to affect the "
"stepping state."
msgstr ""
"Härledda klasser och klienter kan anropa följande metoder för att påverka "
"stepping-läget."

msgid "Stop after one line of code."
msgstr "Stoppa efter en rad kod."

msgid "Stop on the next line in or below the given frame."
msgstr "Stoppa på nästa linje i eller under den angivna ramen."

msgid "Stop when returning from the given frame."
msgstr "Stanna när du återvänder från den givna ramen."

msgid ""
"Stop when the line with the *lineno* greater than the current one is reached "
"or when returning from current frame."
msgstr ""
"Stoppa när linjen med *lineno* större än den aktuella linjen nås eller när "
"du återvänder från den aktuella ramen."

msgid ""
"Start debugging from *frame*.  If *frame* is not specified, debugging starts "
"from caller's frame."
msgstr ""
"Starta felsökning från *frame*.  Om *frame* inte anges startar felsökningen "
"från den anropande enhetens frame."

msgid ""
":func:`set_trace` will enter the debugger immediately, rather than on the "
"next line of code to be executed."
msgstr ""
":func:`set_trace` kommer att gå in i felsökaren omedelbart, snarare än på "
"nästa kodrad som ska exekveras."

msgid ""
"Stop only at breakpoints or when finished.  If there are no breakpoints, set "
"the system trace function to ``None``."
msgstr ""
"Stoppa endast vid brytpunkter eller när du är klar.  Om det inte finns några "
"brytpunkter, ställ in systemets spårningsfunktion till \"Ingen\"."

msgid ""
"Set the :attr:`!quitting` attribute to ``True``.  This raises :exc:`BdbQuit` "
"in the next call to one of the :meth:`!dispatch_\\*` methods."
msgstr ""
"Sätt attributet :attr:`!quitting` till ``True``.  Detta ger upphov till :exc:"
"`BdbQuit` i nästa anrop till en av :meth:`!dispatch_\\*`-metoderna."

msgid ""
"Derived classes and clients can call the following methods to manipulate "
"breakpoints.  These methods return a string containing an error message if "
"something went wrong, or ``None`` if all is well."
msgstr ""
"Härledda klasser och klienter kan anropa följande metoder för att manipulera "
"brytpunkter.  Dessa metoder returnerar en sträng som innehåller ett "
"felmeddelande om något gått fel, eller ``None`` om allt är bra."

msgid ""
"Set a new breakpoint.  If the *lineno* line doesn't exist for the *filename* "
"passed as argument, return an error message.  The *filename* should be in "
"canonical form, as described in the :meth:`canonic` method."
msgstr ""
"Ställ in en ny brytpunkt.  Om *lineno*-raden inte finns för det *filnamn* "
"som anges som argument, returneras ett felmeddelande.  *filnamnet* bör vara "
"i kanonisk form, enligt beskrivningen i metoden :meth:`canonic`."

msgid ""
"Delete the breakpoints in *filename* and *lineno*.  If none were set, return "
"an error message."
msgstr ""
"Ta bort brytpunkterna i *filnamn* och *lineno*.  Om inga har angetts "
"returneras ett felmeddelande."

msgid ""
"Delete the breakpoint which has the index *arg* in the :attr:`Breakpoint."
"bpbynumber`.  If *arg* is not numeric or out of range, return an error "
"message."
msgstr ""
"Ta bort den brytpunkt som har indexet *arg* i :attr:`Breakpoint."
"bpbynumber`.  Om *arg* inte är numeriskt eller ligger utanför intervallet "
"returneras ett felmeddelande."

msgid ""
"Delete all breakpoints in *filename*.  If none were set, return an error "
"message."
msgstr ""
"Ta bort alla brytpunkter i *filnamn*.  Om inga har angetts returneras ett "
"felmeddelande."

msgid ""
"Delete all existing breakpoints.  If none were set, return an error message."
msgstr ""
"Ta bort alla befintliga brytpunkter.  Om inga har angetts, returneras ett "
"felmeddelande."

msgid ""
"Return a breakpoint specified by the given number.  If *arg* is a string, it "
"will be converted to a number.  If *arg* is a non-numeric string, if the "
"given breakpoint never existed or has been deleted, a :exc:`ValueError` is "
"raised."
msgstr ""
"Returnerar en brytpunkt som specificeras av det angivna talet.  Om *arg* är "
"en sträng kommer den att konverteras till ett tal.  Om *arg* är en icke-"
"numerisk sträng, om den angivna brytpunkten aldrig har existerat eller har "
"tagits bort, kommer ett :exc:`ValueError` att visas."

msgid "Return ``True`` if there is a breakpoint for *lineno* in *filename*."
msgstr ""
"Returnerar ``True`` om det finns en brytpunkt för *lineno* i *filnamn*."

msgid ""
"Return all breakpoints for *lineno* in *filename*, or an empty list if none "
"are set."
msgstr ""
"Returnerar alla brytpunkter för *lineno* i *filnamn*, eller en tom lista om "
"inga har angetts."

msgid "Return all breakpoints in *filename*, or an empty list if none are set."
msgstr ""
"Returnerar alla brytpunkter i *filnamn*, eller en tom lista om inga har "
"angetts."

msgid "Return all breakpoints that are set."
msgstr "Returnera alla brytpunkter som är inställda."

msgid ""
"Derived classes and clients can call the following methods to disable and "
"restart events to achieve better performance. These methods only work when "
"using the ``'monitoring'`` backend."
msgstr ""
"Härledda klasser och klienter kan anropa följande metoder för att inaktivera "
"och starta om händelser för att uppnå bättre prestanda. Dessa metoder "
"fungerar endast när du använder backend ``'monitoring'``."

msgid ""
"Disable the current event until the next time :func:`restart_events` is "
"called. This is helpful when the debugger is not interested in the current "
"line."
msgstr ""
"Inaktiverar den aktuella händelsen tills nästa gång :func:`restart_events` "
"anropas. Detta är användbart när felsökaren inte är intresserad av den "
"aktuella raden."

msgid ""
"Restart all the disabled events. This function is automatically called in "
"``dispatch_*`` methods after ``user_*`` methods are called. If the "
"``dispatch_*`` methods are not overridden, the disabled events will be "
"restarted after each user interaction."
msgstr ""
"Starta om alla inaktiverade händelser. Denna funktion anropas automatiskt i "
"``dispatch_*``-metoderna efter att ``user_*``-metoderna har anropats. Om "
"metoderna ``dispatch_*`` inte åsidosätts kommer de inaktiverade händelserna "
"att startas om efter varje användarinteraktion."

msgid ""
"Derived classes and clients can call the following methods to get a data "
"structure representing a stack trace."
msgstr ""
"Härledda klasser och klienter kan anropa följande metoder för att få en "
"datastruktur som representerar en stackspårning."

msgid "Return a list of (frame, lineno) tuples in a stack trace, and a size."
msgstr ""
"Returnera en lista med (frame, lineno)-tupler i en stackspårning och en "
"storlek."

msgid ""
"The most recently called frame is last in the list. The size is the number "
"of frames below the frame where the debugger was invoked."
msgstr ""
"Den senast anropade bildrutan hamnar sist i listan. Storleken är antalet "
"bildrutor under den bildruta där felsökaren startades."

msgid ""
"Return a string with information about a stack entry, which is a ``(frame, "
"lineno)`` tuple.  The return string contains:"
msgstr ""
"Returnerar en sträng med information om en stackpost, som är en ``(frame, "
"lineno)``-tupel.  Retursträngen innehåller:"

msgid "The canonical filename which contains the frame."
msgstr "Det kanoniska filnamnet som innehåller ramen."

msgid "The function name or ``\"<lambda>\"``."
msgstr "Funktionsnamnet eller ``\"<lambda>\"``."

msgid "The input arguments."
msgstr "De ingående argumenten."

msgid "The return value."
msgstr "Returvärdet."

msgid "The line of code (if it exists)."
msgstr "Kodraden (om den finns)."

msgid ""
"The following two methods can be called by clients to use a debugger to "
"debug a :term:`statement`, given as a string."
msgstr ""
"Följande två metoder kan anropas av klienter för att använda en debugger för "
"att debugga en :term:`statement`, angiven som en sträng."

msgid ""
"Debug a statement executed via the :func:`exec` function.  *globals* "
"defaults to :attr:`!__main__.__dict__`, *locals* defaults to *globals*."
msgstr ""
"Felsök en sats som exekveras via funktionen :func:`exec`.  *globals* är "
"standard för :attr:`!__main__.__dict__`, *locals* är standard för *globals*."

msgid ""
"Debug an expression executed via the :func:`eval` function.  *globals* and "
"*locals* have the same meaning as in :meth:`run`."
msgstr ""
"Felsök ett uttryck som exekverats via funktionen :func:`eval`.  *globals* "
"och *locals* har samma betydelse som i :meth:`run`."

msgid "For backwards compatibility.  Calls the :meth:`run` method."
msgstr "För bakåtkompatibilitet.  Anropar metoden :meth:`run`."

msgid "Debug a single function call, and return its result."
msgstr "Felsök ett enstaka funktionsanrop och returnera dess resultat."

msgid "Finally, the module defines the following functions:"
msgstr "Slutligen definierar modulen följande funktioner:"

msgid ""
"Return ``True`` if we should break here, depending on the way the :class:"
"`Breakpoint` *b* was set."
msgstr ""
"Returnerar ``True`` om vi ska bryta här, beroende på hur :class:`Breakpoint` "
"*b* ställdes in."

msgid ""
"If it was set via line number, it checks if :attr:`b.line <bdb.Breakpoint."
"line>` is the same as the one in *frame*. If the breakpoint was set via :"
"attr:`function name <bdb.Breakpoint.funcname>`, we have to check we are in "
"the right *frame* (the right function) and if we are on its first executable "
"line."
msgstr ""
"Om den ställdes in via radnummer kontrolleras om :attr:`b.line <bdb."
"Breakpoint.line>` är samma som den i *frame*. Om brytpunkten ställdes in "
"via :attr:`funktionsnamn <bdb.Breakpoint.funcname>`, måste vi kontrollera "
"att vi är i rätt *frame* (rätt funktion) och om vi är på dess första körbara "
"rad."

msgid ""
"Return ``(active breakpoint, delete temporary flag)`` or ``(None, None)`` as "
"the breakpoint to act upon."
msgstr ""
"Returnerar ``(aktiv brytpunkt, ta bort temporär flagga)`` eller ``(Ingen, "
"Ingen)`` som brytpunkt att agera på."

msgid ""
"The *active breakpoint* is the first entry in :attr:`bplist <bdb.Breakpoint."
"bplist>` for the (:attr:`file <bdb.Breakpoint.file>`, :attr:`line <bdb."
"Breakpoint.line>`) (which must exist) that is :attr:`enabled <bdb.Breakpoint."
"enabled>`, for which :func:`checkfuncname` is true, and that has neither a "
"false :attr:`condition <bdb.Breakpoint.cond>` nor positive :attr:`ignore "
"<bdb.Breakpoint.ignore>` count.  The *flag*, meaning that a temporary "
"breakpoint should be deleted, is ``False`` only when the :attr:`cond <bdb."
"Breakpoint.cond>` cannot be evaluated (in which case, :attr:`ignore <bdb."
"Breakpoint.ignore>` count is ignored)."
msgstr ""
"Den *aktiva brytpunkten* är den första posten i :attr:`bplist <bdb."
"Breakpoint.bplist>` för (:attr:`file <bdb.Breakpoint.file>`, :attr:`line "
"<bdb.Breakpoint.line>`) (som måste finnas) som är :attr:`enabled <bdb."
"Breakpoint.enabled>`, för vilken :func:`checkfuncname` är true, och som "
"varken har en falsk :attr:`condition <bdb.Breakpoint.cond>` eller positiv :"
"attr:`ignore <bdb.Breakpoint.ignore>` count.  Flaggan, som betyder att en "
"tillfällig brytpunkt ska tas bort, är ``False`` endast när :attr:`cond <bdb."
"Breakpoint.cond>` inte kan utvärderas (i vilket fall :attr:`ignore <bdb."
"Breakpoint.ignore>` ignoreras)."

msgid "If no such entry exists, then ``(None, None)`` is returned."
msgstr "Om det inte finns någon sådan post returneras ``(None, None)``."

msgid "Start debugging with a :class:`Bdb` instance from caller's frame."
msgstr "Starta felsökning med en :class:`Bdb`-instans från anroparens ram."

msgid "quitting (bdb.Bdb attribute)"
msgstr "quitting (bdb.Bdb attribute)"
