# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!email` --- An email and MIME handling package"
msgstr ":mod:`!email` --- Ett paket för hantering av e-post och MIME"

msgid "**Source code:** :source:`Lib/email/__init__.py`"
msgstr "**Källkod:** :source:`Lib/email/__init__.py`"

msgid ""
"The :mod:`email` package is a library for managing email messages.  It is "
"specifically *not* designed to do any sending of email messages to SMTP (:"
"rfc:`2821`), NNTP, or other servers; those are functions of modules such as :"
"mod:`smtplib`.  The :mod:`email` package attempts to be as RFC-compliant as "
"possible, supporting :rfc:`5322` and :rfc:`6532`, as well as such MIME-"
"related RFCs as :rfc:`2045`, :rfc:`2046`, :rfc:`2047`, :rfc:`2183`, and :rfc:"
"`2231`."
msgstr ""
"Paketet :mod:`email` är ett bibliotek för hantering av e-postmeddelanden.  "
"Det är specifikt *inte* utformat för att skicka e-postmeddelanden till SMTP "
"(:rfc:`2821`), NNTP eller andra servrar; sådana funktioner finns i moduler "
"som :mod:`smtplib`.  Paketet :mod:`email` försöker vara så RFC-kompatibelt "
"som möjligt och stöder :rfc:`5322` och :rfc:`6532`, samt sådana MIME-"
"relaterade RFC:er som :rfc:`2045`, :rfc:`2046`, :rfc:`2047`, :rfc:`2183` "
"och :rfc:`2231`."

msgid ""
"The overall structure of the email package can be divided into three major "
"components, plus a fourth component that controls the behavior of the other "
"components."
msgstr ""
"Den övergripande strukturen i e-postpaketet kan delas in i tre "
"huvudkomponenter, plus en fjärde komponent som styr beteendet hos de andra "
"komponenterna."

msgid ""
"The central component of the package is an \"object model\" that represents "
"email messages.  An application interacts with the package primarily through "
"the object model interface defined in the :mod:`~email.message` sub-module.  "
"The application can use this API to ask questions about an existing email, "
"to construct a new email, or to add or remove email subcomponents that "
"themselves use the same object model interface.  That is, following the "
"nature of email messages and their MIME subcomponents, the email object "
"model is a tree structure of objects that all provide the :class:`~email."
"message.EmailMessage` API."
msgstr ""
"Den centrala komponenten i paketet är en \"objektmodell\" som representerar "
"e-postmeddelanden.  En applikation interagerar med paketet främst genom det "
"gränssnitt för objektmodellen som definieras i undermodulen :mod:`~email."
"message`.  Programmet kan använda detta API för att ställa frågor om ett "
"befintligt e-postmeddelande, för att konstruera ett nytt e-postmeddelande "
"eller för att lägga till eller ta bort underkomponenter till e-"
"postmeddelanden som själva använder samma objektmodellgränssnitt.  Det vill "
"säga, i enlighet med e-postmeddelandenas natur och deras MIME-"
"underkomponenter, är e-postobjektmodellen en trädstruktur av objekt som alla "
"tillhandahåller :class:`~email.message.EmailMessage` API."

msgid ""
"The other two major components of the package are the :mod:`~email.parser` "
"and the :mod:`~email.generator`.  The parser takes the serialized version of "
"an email message (a stream of bytes) and converts it into a tree of :class:"
"`~email.message.EmailMessage` objects.  The generator takes an :class:"
"`~email.message.EmailMessage` and turns it back into a serialized byte "
"stream.  (The parser and generator also handle streams of text characters, "
"but this usage is discouraged as it is too easy to end up with messages that "
"are not valid in one way or another.)"
msgstr ""
"De andra två huvudkomponenterna i paketet är :mod:`~email.parser` och :mod:"
"`~email.generator`.  Parsern tar den serialiserade versionen av ett e-"
"postmeddelande (en ström av bytes) och omvandlar den till ett träd av :class:"
"`~email.message.EmailMessage`-objekt.  Generatorn tar ett :class:`~email."
"message.EmailMessage` och omvandlar det tillbaka till en serialiserad byte-"
"ström.  (Parsern och generatorn hanterar även strömmar av texttecken, men "
"denna användning avrådes eftersom det är alltför lätt att få meddelanden som "
"inte är giltiga på ett eller annat sätt)"

msgid ""
"The control component is the :mod:`~email.policy` module.  Every :class:"
"`~email.message.EmailMessage`, every :mod:`~email.generator`, and every :mod:"
"`~email.parser` has an associated :mod:`~email.policy` object that controls "
"its behavior.  Usually an application only needs to specify the policy when "
"an :class:`~email.message.EmailMessage` is created, either by directly "
"instantiating an :class:`~email.message.EmailMessage`  to create a new "
"email, or by parsing an input stream using a :mod:`~email.parser`.  But the "
"policy can be changed when the message is serialized using a :mod:`~email."
"generator`. This allows, for example, a generic email message to be parsed "
"from disk, but to serialize it using standard SMTP settings when sending it "
"to an email server."
msgstr ""
"Kontrollkomponenten är modulen :mod:`~email.policy`.  Varje :class:`~email."
"message.EmailMessage`, varje :mod:`~email.generator` och varje :mod:`~email."
"parser` har ett associerat :mod:`~email.policy`-objekt som styr dess "
"beteende.  Vanligtvis behöver en applikation bara ange policyn när ett :"
"class:`~email.message.EmailMessage` skapas, antingen genom att direkt "
"instansiera ett :class:`~email.message.EmailMessage` för att skapa ett nytt "
"e-postmeddelande, eller genom att analysera en inmatningsström med hjälp av "
"en :mod:`~email.parser`.  Men policyn kan ändras när meddelandet "
"serialiseras med hjälp av en :mod:`~email.generator`. Detta gör att t.ex. "
"ett generiskt e-postmeddelande kan analyseras från disk, men serialiseras "
"med standard SMTP-inställningar när det skickas till en e-postserver."

msgid ""
"The email package does its best to hide the details of the various governing "
"RFCs from the application.  Conceptually the application should be able to "
"treat the email message as a structured tree of unicode text and binary "
"attachments, without having to worry about how these are represented when "
"serialized.  In practice, however, it is often necessary to be aware of at "
"least some of the rules governing MIME messages and their structure, "
"specifically the names and nature of the MIME \"content types\" and how they "
"identify multipart documents.  For the most part this knowledge should only "
"be required for more complex applications, and even then it should only be "
"the high level structure in question, and not the details of how those "
"structures are represented.  Since MIME content types are used widely in "
"modern internet software (not just email), this will be a familiar concept "
"to many programmers."
msgstr ""
"E-postpaketet gör sitt bästa för att dölja detaljerna i de olika styrande "
"RFC:erna för applikationen.  Konceptuellt bör programmet kunna behandla e-"
"postmeddelandet som ett strukturerat träd av Unicode-text och binära "
"bilagor, utan att behöva oroa sig för hur dessa representeras när de "
"serialiseras.  I praktiken är det dock ofta nödvändigt att känna till "
"åtminstone några av de regler som styr MIME-meddelanden och deras struktur, "
"särskilt namnen på och karaktären hos MIME:s \"innehållstyper\" och hur de "
"identifierar flerdelade dokument.  För det mesta bör denna kunskap endast "
"krävas för mer komplexa tillämpningar, och även då bör det endast vara den "
"övergripande strukturen som avses, och inte detaljerna i hur dessa "
"strukturer representeras.  Eftersom MIME-innehållstyper används i stor "
"utsträckning i modern internetprogramvara (inte bara e-post) kommer detta "
"att vara ett bekant koncept för många programmerare."

msgid ""
"The following sections describe the functionality of the :mod:`email` "
"package. We start with the :mod:`~email.message` object model, which is the "
"primary interface an application will use, and follow that with the :mod:"
"`~email.parser` and :mod:`~email.generator` components.  Then we cover the :"
"mod:`~email.policy` controls, which completes the treatment of the main "
"components of the library."
msgstr ""
"I följande avsnitt beskrivs funktionaliteten i paketet :mod:`email`. Vi "
"börjar med objektmodellen :mod:`~email.message`, som är det primära "
"gränssnittet som en applikation kommer att använda, och fortsätter med "
"komponenterna :mod:`~email.parser` och :mod:`~email.generator`.  Sedan tar "
"vi upp :mod:`~email.policy`-kontrollerna, vilket avslutar behandlingen av "
"bibliotekets huvudkomponenter."

msgid ""
"The next three sections cover the exceptions the package may raise and the "
"defects (non-compliance with the RFCs) that the :mod:`~email.parser` may "
"detect.  Then we cover the :mod:`~email.headerregistry` and the :mod:`~email."
"contentmanager` sub-components, which provide tools for doing more detailed "
"manipulation of headers and payloads, respectively.  Both of these "
"components contain features relevant to consuming and producing non-trivial "
"messages, but also document their extensibility APIs, which will be of "
"interest to advanced applications."
msgstr ""
"I de tre följande avsnitten beskrivs de undantag som paketet kan ge upphov "
"till och de defekter (bristande överensstämmelse med RFC) som :mod:`~email."
"parser` kan upptäcka.  Därefter beskrivs underkomponenterna :mod:`~email."
"headerregistry` och :mod:`~email.contentmanager`, som tillhandahåller "
"verktyg för mer detaljerad hantering av rubriker respektive nyttolaster.  "
"Båda dessa komponenter innehåller funktioner som är relevanta för att "
"konsumera och producera icke-triviala meddelanden, men dokumenterar också "
"sina API:er för utvidgning, vilket kommer att vara av intresse för "
"avancerade applikationer."

msgid ""
"Following those is a set of examples of using the fundamental parts of the "
"APIs covered in the preceding sections."
msgstr ""
"Därefter följer en uppsättning exempel på hur man använder de grundläggande "
"delarna av de API:er som behandlas i de föregående avsnitten."

msgid ""
"The foregoing represent the modern (unicode friendly) API of the email "
"package. The remaining sections, starting with the :class:`~email.message."
"Message` class, cover the legacy :data:`~email.policy.compat32` API that "
"deals much more directly with the details of how email messages are "
"represented.  The :data:`~email.policy.compat32` API does *not* hide the "
"details of the RFCs from the application, but for applications that need to "
"operate at that level, they can be useful tools.  This documentation is also "
"relevant for applications that are still using the :mod:`~email.policy."
"compat32` API for backward compatibility reasons."
msgstr ""
"Ovanstående representerar det moderna (unicodevänliga) API:et för e-"
"postpaketet. De återstående avsnitten, som börjar med klassen :class:`~email."
"message.Message`, täcker det äldre :data:`~email.policy.compat32`-API:t som "
"mycket mer direkt behandlar detaljerna i hur e-postmeddelanden "
"representeras.  API:et :data:`~email.policy.compat32` döljer *inte* "
"detaljerna i RFC:erna från programmet, men för program som behöver arbeta på "
"den nivån kan de vara användbara verktyg.  Denna dokumentation är också "
"relevant för program som fortfarande använder API:et :mod:`~email.policy."
"compat32` av bakåtkompatibilitetsskäl."

msgid ""
"Docs reorganized and rewritten to promote the new :class:`~email.message."
"EmailMessage`/:class:`~email.policy.EmailPolicy` API."
msgstr ""
"Dokument omorganiserade och omskrivna för att främja det nya :class:`~email."
"message.EmailMessage`/:class:`~email.policy.EmailPolicy` API:et."

msgid "Contents of the :mod:`email` package documentation:"
msgstr "Innehåll i dokumentationen för paketet :mod:`email`:"

msgid "Legacy API:"
msgstr "Äldre API:"

msgid "Module :mod:`smtplib`"
msgstr "Modul :mod:`smtplib`"

msgid "SMTP (Simple Mail Transport Protocol) client"
msgstr "SMTP-klient (Simple Mail Transport Protocol)"

msgid "Module :mod:`poplib`"
msgstr "Modul :mod:`poplib`"

msgid "POP (Post Office Protocol) client"
msgstr "POP-klient (Post Office Protocol)"

msgid "Module :mod:`imaplib`"
msgstr "Modul :mod:`imaplib`"

msgid "IMAP (Internet Message Access Protocol) client"
msgstr "IMAP-klient (Internet Message Access Protocol)"

msgid "Module :mod:`mailbox`"
msgstr "Modul :mod:`mailbox`"

msgid ""
"Tools for creating, reading, and managing collections of messages on disk "
"using a variety standard formats."
msgstr ""
"Verktyg för att skapa, läsa och hantera samlingar av meddelanden på disk med "
"hjälp av olika standardformat."
