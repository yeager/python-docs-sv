# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!http.cookies` --- HTTP state management"
msgstr ":mod:`!http.cookies` --- Hantering av HTTP-tillstånd"

msgid "**Source code:** :source:`Lib/http/cookies.py`"
msgstr "**Källkod:** :source:`Lib/http/cookies.py`"

msgid ""
"The :mod:`http.cookies` module defines classes for abstracting the concept "
"of cookies, an HTTP state management mechanism. It supports both simple "
"string-only cookies, and provides an abstraction for having any serializable "
"data-type as cookie value."
msgstr ""
"Modulen :mod:`http.cookies` definierar klasser för abstraktion av begreppet "
"cookies, en HTTP-mekanism för tillståndshantering. Den stöder både enkla "
"cookies med enbart strängar och ger en abstraktion för att ha vilken "
"serialiserbar datatyp som helst som cookie-värde."

msgid ""
"The module formerly strictly applied the parsing rules described in the :rfc:"
"`2109` and :rfc:`2068` specifications.  It has since been discovered that "
"MSIE 3.0x didn't follow the character rules outlined in those specs; many "
"current-day browsers and servers have also relaxed parsing rules when it "
"comes to cookie handling.  As a result, this module now uses parsing rules "
"that are a bit less strict than they once were."
msgstr ""
"Modulen tillämpade tidigare strikt de parsing-regler som beskrivs i "
"specifikationerna :rfc:`2109` och :rfc:`2068`.  Det har sedan dess upptäckts "
"att MSIE 3.0x inte följde de teckenregler som beskrivs i dessa "
"specifikationer; många av dagens webbläsare och servrar har också lättat på "
"tolkningsreglerna när det gäller hantering av cookies.  Som ett resultat av "
"detta använder den här modulen nu parsingregler som är lite mindre strikta "
"än de en gång var."

msgid ""
"The character set, :data:`string.ascii_letters`, :data:`string.digits` and "
"``!#$%&'*+-.^_`|~:`` denote the set of valid characters allowed by this "
"module in a cookie name (as :attr:`~Morsel.key`)."
msgstr ""
"Teckenuppsättningen, :data:`string.ascii_letters`, :data:`string.digits` och "
"``!#$%&'*+-.^_`|~:`` betecknar den uppsättning giltiga tecken som tillåts av "
"denna modul i ett cookie-namn (som :attr:`~Morsel.key`)."

msgid "Allowed ':' as a valid cookie name character."
msgstr "Tillåtet ':' som giltigt tecken för cookie-namn."

msgid ""
"On encountering an invalid cookie, :exc:`CookieError` is raised, so if your "
"cookie data comes from a browser you should always prepare for invalid data "
"and catch :exc:`CookieError` on parsing."
msgstr ""
"Om en ogiltig cookie påträffas uppstår :exc:`CookieError`, så om dina cookie-"
"data kommer från en webbläsare bör du alltid förbereda dig för ogiltiga data "
"och fånga :exc:`CookieError` vid parsning."

msgid ""
"Exception failing because of :rfc:`2109` invalidity: incorrect attributes, "
"incorrect :mailheader:`Set-Cookie` header, etc."
msgstr ""
"Undantaget misslyckas på grund av :rfc:`2109` invaliditet: felaktiga "
"attribut, felaktig :mailheader:`Set-Cookie` header, etc."

msgid ""
"This class is a dictionary-like object whose keys are strings and whose "
"values are :class:`Morsel` instances. Note that upon setting a key to a "
"value, the value is first converted to a :class:`Morsel` containing the key "
"and the value."
msgstr ""
"Denna klass är ett ordboksliknande objekt vars nycklar är strängar och vars "
"värden är :class:`Morsel`-instanser. Observera att när en nyckel sätts till "
"ett värde konverteras värdet först till en :class:`Morsel` som innehåller "
"nyckeln och värdet."

msgid "If *input* is given, it is passed to the :meth:`load` method."
msgstr "Om *input* anges skickas den till metoden :meth:`load`."

msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:`~BaseCookie."
"value_decode` and :meth:`~BaseCookie.value_encode`. :class:`!SimpleCookie` "
"supports strings as cookie values. When setting the value, :class:`!"
"SimpleCookie` calls the builtin :func:`str` to convert the value to a "
"string. Values received from HTTP are kept as strings."
msgstr ""
"Denna klass härstammar från :class:`BaseCookie` och åsidosätter :meth:"
"`~BaseCookie.value_decode` och :meth:`~BaseCookie.value_encode`. :class:`!"
"SimpleCookie` stöder strängar som cookie-värden. När värdet ställs in "
"anropar :class:`!SimpleCookie` den inbyggda :func:`str` för att konvertera "
"värdet till en sträng. Värden som tas emot från HTTP behålls som strängar."

msgid "Module :mod:`http.cookiejar`"
msgstr "Modul :mod:`http.cookiejar`"

msgid ""
"HTTP cookie handling for web *clients*.  The :mod:`http.cookiejar` and :mod:"
"`http.cookies` modules do not depend on each other."
msgstr ""
"Hantering av HTTP-cookies för *webbklienter*.  Modulerna :mod:`http."
"cookiejar` och :mod:`http.cookies` är inte beroende av varandra."

msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ":rfc:`2109` - HTTP:s mekanism för tillståndshantering"

msgid "This is the state management specification implemented by this module."
msgstr ""
"Detta är den specifikation för tillståndshantering som implementeras av "
"denna modul."

msgid "Cookie Objects"
msgstr "Objekt för kakor"

msgid ""
"Return a tuple ``(real_value, coded_value)`` from a string representation. "
"``real_value`` can be any type. This method does no decoding in :class:"
"`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Returnerar en tupel ``(real_value, coded_value)`` från en "
"strängrepresentation. ```real_value`` kan vara vilken typ som helst. Denna "
"metod gör ingen avkodning i :class:`BaseCookie` --- den finns så att den kan "
"åsidosättas."

msgid ""
"Return a tuple ``(real_value, coded_value)``. *val* can be any type, but "
"``coded_value`` will always be converted to a string. This method does no "
"encoding in :class:`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Returnerar en tupel ``(real_value, coded_value)``. *val* kan vara vilken typ "
"som helst, men ``coded_value`` kommer alltid att konverteras till en sträng. "
"Denna metod gör ingen kodning i :class:`BaseCookie` --- den finns så att den "
"kan åsidosättas."

msgid ""
"In general, it should be the case that :meth:`value_encode` and :meth:"
"`value_decode` are inverses on the range of *value_decode*."
msgstr ""
"I allmänhet bör det vara så att :meth:`value_encode` och :meth:"
"`value_decode` är inverser på området för *value_decode*."

msgid ""
"Return a string representation suitable to be sent as HTTP headers. *attrs* "
"and *header* are sent to each :class:`Morsel`'s :meth:`~Morsel.output` "
"method. *sep* is used to join the headers together, and is by default the "
"combination ``'\\r\\n'`` (CRLF)."
msgstr ""
"Returnerar en strängrepresentation som kan skickas som HTTP-rubriker. "
"*attrs* och *header* skickas till varje :class:`Morsel`:s :meth:`~Morsel."
"output`-metod. *sep* används för att sammanfoga rubrikerna och är som "
"standard kombinationen ``'\\r\\n'`` (CRLF)."

msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP headers was sent."
msgstr ""
"Returnerar en inbäddningsbar JavaScript-snutt som, om den körs i en "
"webbläsare som stöder JavaScript, kommer att fungera på samma sätt som om "
"HTTP-rubrikerna hade skickats."

msgid "The meaning for *attrs* is the same as in :meth:`output`."
msgstr "Betydelsen för *attrs* är densamma som i :meth:`output`."

msgid ""
"If *rawdata* is a string, parse it as an ``HTTP_COOKIE`` and add the values "
"found there as :class:`Morsel`\\ s. If it is a dictionary, it is equivalent "
"to::"
msgstr ""
"Om *rawdata* är en sträng, tolka den som en ``HTTP_COOKIE`` och lägg till de "
"värden som hittas där som :class:`Morsel`\\ s. Om det är en ordbok, "
"motsvarar det::"

msgid ""
"for k, v in rawdata.items():\n"
"    cookie[k] = v"
msgstr ""
"för k, v i rawdata.items():\n"
"    cookie[k] = v"

msgid "Morsel Objects"
msgstr "Morselobjekt"

msgid "Abstract a key/value pair, which has some :rfc:`2109` attributes."
msgstr "Abstract ett nyckel/värde-par, som har vissa :rfc:`2109` attribut."

msgid ""
"Morsels are dictionary-like objects, whose set of keys is constant --- the "
"valid :rfc:`2109` attributes, which are:"
msgstr ""
"Morsels är ordboksliknande objekt, vars uppsättning nycklar är konstant --- "
"de giltiga :rfc:`2109`-attributen, som är:"

msgid ""
"The attribute :attr:`httponly` specifies that the cookie is only transferred "
"in HTTP requests, and is not accessible through JavaScript. This is intended "
"to mitigate some forms of cross-site scripting."
msgstr ""
"Attributet :attr:`httponly` anger att cookien endast överförs i HTTP-"
"förfrågningar och inte är tillgänglig via JavaScript. Detta är avsett att "
"mildra vissa former av cross-site scripting."

msgid ""
"The attribute :attr:`samesite` controls when the browser sends the cookie "
"with cross-site requests. This helps to mitigate CSRF attacks. Valid values "
"are \"Strict\" (only sent with same-site requests), \"Lax\" (sent with same-"
"site requests and top-level navigations), and \"None\" (sent with same-site "
"and cross-site requests). When using \"None\", the \"secure\" attribute must "
"also be set, as required by modern browsers."
msgstr ""
"Attributet :attr:`samesite` styr när webbläsaren skickar cookien med cross-"
"site-förfrågningar. Detta bidrar till att mildra CSRF-attacker. Giltiga "
"värden är \"Strict\" (skickas endast med förfrågningar på samma webbplats), "
"\"Lax\" (skickas med förfrågningar på samma webbplats och navigering på "
"toppnivå) och \"None\" (skickas med förfrågningar på samma webbplats och "
"mellan olika webbplatser). När \"None\" används måste även attributet "
"\"secure\" anges, vilket krävs av moderna webbläsare."

msgid ""
"The attribute :attr:`partitioned` indicates to user agents that these cross-"
"site cookies *should* only be available in the same top-level context that "
"the cookie was first set in. For this to be accepted by the user agent, you "
"**must** also set ``Secure``."
msgstr ""
"Attributet :attr:`partitioned` anger för användaragenter att dessa cross-"
"site cookies *bör* endast vara tillgängliga i samma sammanhang på högsta "
"nivå som cookien först sattes i. För att detta ska accepteras av "
"användaragenten måste du **även** ange ``Secure``."

msgid ""
"In addition, it is recommended to use the ``__Host`` prefix when setting "
"partitioned cookies to make them bound to the hostname and not the "
"registrable domain. Read `CHIPS (Cookies Having Independent Partitioned "
"State)`_ for full details and examples."
msgstr ""
"Dessutom rekommenderas det att använda prefixet ``__Host`` när du ställer in "
"partitionerade cookies för att göra dem bundna till värdnamnet och inte den "
"registrerbara domänen. Läs `CHIPS (Cookies Having Independent Partitioned "
"State)`_ för fullständiga detaljer och exempel."

msgid "The keys are case-insensitive and their default value is ``''``."
msgstr "Nycklarna är skiftlägesokänsliga och deras standardvärde är ``''``."

msgid ""
":meth:`!__eq__` now takes :attr:`~Morsel.key` and :attr:`~Morsel.value` into "
"account."
msgstr ""
":meth:`!__eq__` tar nu hänsyn till :attr:`~Morsel.key` och :attr:`~Morsel."
"value`."

msgid ""
"Attributes :attr:`~Morsel.key`, :attr:`~Morsel.value` and :attr:`~Morsel."
"coded_value` are read-only.  Use :meth:`~Morsel.set` for setting them."
msgstr ""
"Attributen :attr:`~Morsel.key`, :attr:`~Morsel.value` och :attr:`~Morsel."
"coded_value` är skrivskyddade.  Använd :meth:`~Morsel.set` för att ställa in "
"dem."

msgid "Added support for the :attr:`samesite` attribute."
msgstr "Lagt till stöd för attributet :attr:`samesite`."

msgid "Added support for the :attr:`partitioned` attribute."
msgstr "Lagt till stöd för attributet :attr:`partitioned`."

msgid "The value of the cookie."
msgstr "Värdet på cookien."

msgid "The encoded value of the cookie --- this is what should be sent."
msgstr "Det kodade värdet av cookien --- det är detta som ska skickas."

msgid "The name of the cookie."
msgstr "Namnet på cookien."

msgid "Set the *key*, *value* and *coded_value* attributes."
msgstr "Ange attributen *key*, *value* och *coded_value*."

msgid "Whether *K* is a member of the set of keys of a :class:`Morsel`."
msgstr "Om *K* ingår i uppsättningen nycklar i en :class:`Morsel`."

msgid ""
"Return a string representation of the Morsel, suitable to be sent as an HTTP "
"header. By default, all the attributes are included, unless *attrs* is "
"given, in which case it should be a list of attributes to use. *header* is "
"by default ``\"Set-Cookie:\"``."
msgstr ""
"Returnerar en strängrepresentation av Morsel, lämplig att skicka som en HTTP-"
"header. Som standard ingår alla attribut, såvida inte *attrs* anges, i "
"vilket fall det ska vara en lista över attribut som ska användas. *header* "
"är som standard ``\"Set-Cookie:\"``."

msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP header was sent."
msgstr ""
"Returnerar en inbäddningsbar JavaScript-snutt som, om den körs i en "
"webbläsare som stöder JavaScript, kommer att fungera på samma sätt som om "
"HTTP-headern skickades."

msgid ""
"Return a string representing the Morsel, without any surrounding HTTP or "
"JavaScript."
msgstr ""
"Returnera en sträng som representerar Morsel, utan någon omgivande HTTP "
"eller JavaScript."

msgid ""
"Update the values in the Morsel dictionary with the values in the dictionary "
"*values*.  Raise an error if any of the keys in the *values* dict is not a "
"valid :rfc:`2109` attribute."
msgstr ""
"Uppdatera värdena i Morsel-ordlistan med värdena i ordlistan *values*.  "
"Utlös ett fel om någon av nycklarna i *values* inte är ett giltigt :rfc:"
"`2109`-attribut."

msgid "an error is raised for invalid keys."
msgstr "ett fel uppstår om nyckeln är ogiltig."

msgid "Return a shallow copy of the Morsel object."
msgstr "Returnerar en ytlig kopia av Morsel-objektet."

msgid "return a Morsel object instead of a dict."
msgstr "returnera ett Morsel-objekt istället för en dict."

msgid ""
"Raise an error if key is not a valid :rfc:`2109` attribute, otherwise behave "
"the same as :meth:`dict.setdefault`."
msgstr ""
"Utlöser ett fel om key inte är ett giltigt :rfc:`2109`-attribut, annars "
"samma beteende som :meth:`dict.setdefault`."

msgid "Example"
msgstr "Exempel"

msgid ""
"The following example demonstrates how to use the :mod:`http.cookies` module."
msgstr "I följande exempel visas hur du använder modulen :mod:`http.cookies`."

msgid ""
">>> from http import cookies\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"fig\"] = \"newton\"\n"
">>> C[\"sugar\"] = \"wafer\"\n"
">>> print(C) # generate HTTP headers\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> print(C.output()) # same thing\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"rocky\"] = \"road\"\n"
">>> C[\"rocky\"][\"path\"] = \"/cookie\"\n"
">>> print(C.output(header=\"Cookie:\"))\n"
"Cookie: rocky=road; Path=/cookie\n"
">>> print(C.output(attrs=[], header=\"Cookie:\"))\n"
"Cookie: rocky=road\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load(\"chips=ahoy; vienna=finger\") # load from a string (HTTP "
"header)\n"
">>> print(C)\n"
"Set-Cookie: chips=ahoy\n"
"Set-Cookie: vienna=finger\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load('keebler=\"E=everybody; L=\\\\\"Loves\\\\\"; fudge=\\\\012;\";')\n"
">>> print(C)\n"
"Set-Cookie: keebler=\"E=everybody; L=\\\"Loves\\\"; fudge=\\012;\"\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"oreo\"] = \"doublestuff\"\n"
">>> C[\"oreo\"][\"path\"] = \"/\"\n"
">>> print(C)\n"
"Set-Cookie: oreo=doublestuff; Path=/\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"twix\"] = \"none for you\"\n"
">>> C[\"twix\"].value\n"
"'none for you'\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"number\"] = 7 # equivalent to C[\"number\"] = str(7)\n"
">>> C[\"string\"] = \"seven\"\n"
">>> C[\"number\"].value\n"
"'7'\n"
">>> C[\"string\"].value\n"
"'seven'\n"
">>> print(C)\n"
"Set-Cookie: number=7\n"
"Set-Cookie: string=seven"
msgstr ""
">>> from http import cookies\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"fig\"] = \"newton\"\n"
">>> C[\"sugar\"] = \"wafer\"\n"
">>> print(C) # generate HTTP headers\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> print(C.output()) # same thing\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"rocky\"] = \"road\"\n"
">>> C[\"rocky\"][\"path\"] = \"/cookie\"\n"
">>> print(C.output(header=\"Cookie:\"))\n"
"Cookie: rocky=road; Path=/cookie\n"
">>> print(C.output(attrs=[], header=\"Cookie:\"))\n"
"Cookie: rocky=road\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load(\"chips=ahoy; vienna=finger\") # load from a string (HTTP "
"header)\n"
">>> print(C)\n"
"Set-Cookie: chips=ahoy\n"
"Set-Cookie: vienna=finger\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load('keebler=\"E=everybody; L=\\\\\"Loves\\\\\"; fudge=\\\\012;\";')\n"
">>> print(C)\n"
"Set-Cookie: keebler=\"E=everybody; L=\\\"Loves\\\"; fudge=\\012;\"\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"oreo\"] = \"doublestuff\"\n"
">>> C[\"oreo\"][\"path\"] = \"/\"\n"
">>> print(C)\n"
"Set-Cookie: oreo=doublestuff; Path=/\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"twix\"] = \"none for you\"\n"
">>> C[\"twix\"].value\n"
"'none for you'\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"number\"] = 7 # equivalent to C[\"number\"] = str(7)\n"
">>> C[\"string\"] = \"seven\"\n"
">>> C[\"number\"].value\n"
"'7'\n"
">>> C[\"string\"].value\n"
"'seven'\n"
">>> print(C)\n"
"Set-Cookie: number=7\n"
"Set-Cookie: string=seven"
