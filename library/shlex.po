# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!shlex` --- Simple lexical analysis"
msgstr ":mod:`!shlex` --- Enkel lexikal analys"

msgid "**Source code:** :source:`Lib/shlex.py`"
msgstr "**Källkod:** :source:`Lib/shlex.py`"

msgid ""
"The :class:`~shlex.shlex` class makes it easy to write lexical analyzers for "
"simple syntaxes resembling that of the Unix shell.  This will often be "
"useful for writing minilanguages, (for example, in run control files for "
"Python applications) or for parsing quoted strings."
msgstr ""
"Klassen :class:`~shlex.shlex` gör det enkelt att skriva lexikala "
"analysatorer för enkla syntaxer som liknar den i Unix-skalet.  Detta är ofta "
"användbart för att skriva minilanguages (till exempel i körkontrollfiler för "
"Python-program) eller för att analysera citerade strängar."

msgid "The :mod:`shlex` module defines the following functions:"
msgstr "Modulen :mod:`shlex` definierar följande funktioner:"

msgid ""
"Split the string *s* using shell-like syntax. If *comments* is :const:"
"`False` (the default), the parsing of comments in the given string will be "
"disabled (setting the :attr:`~shlex.commenters` attribute of the :class:"
"`~shlex.shlex` instance to the empty string).  This function operates in "
"POSIX mode by default, but uses non-POSIX mode if the *posix* argument is "
"false."
msgstr ""
"Dela upp strängen *s* med shell-liknande syntax. Om *comments* är :const:"
"`False` (standard), inaktiveras tolkningen av kommentarer i den angivna "
"strängen (attributet :attr:`~shlex.commenters` i :class:`~shlex.shlex`-"
"instansen sätts till den tomma strängen).  Denna funktion arbetar i POSIX-"
"läge som standard, men använder icke-POSIX-läge om argumentet *posix* är "
"falskt."

msgid ""
"Passing ``None`` for *s* argument now raises an exception, rather than "
"reading :data:`sys.stdin`."
msgstr ""
"Att ange ``None`` för *s*-argumentet ger nu upphov till ett undantag, "
"istället för att läsa :data:`sys.stdin`."

msgid ""
"Concatenate the tokens of the list *split_command* and return a string. This "
"function is the inverse of :func:`split`."
msgstr ""
"Sammanfoga symbolerna i listan *split_command* och returnera en sträng. "
"Denna funktion är inversen av :func:`split`."

msgid ""
"The returned value is shell-escaped to protect against injection "
"vulnerabilities (see :func:`quote`)."
msgstr ""
"Det returnerade värdet är shell-escaped för att skydda mot "
"injektionssårbarheter (se :func:`quote`)."

msgid ""
"Return a shell-escaped version of the string *s*.  The returned value is a "
"string that can safely be used as one token in a shell command line, for "
"cases where you cannot use a list."
msgstr ""
"Returnerar en shell-escaped version av strängen *s*.  Det returnerade värdet "
"är en sträng som säkert kan användas som en token i en kommandorad i ett "
"skal, i de fall där du inte kan använda en lista."

msgid "The ``shlex`` module is **only designed for Unix shells**."
msgstr "Modulen ``shlex`` är **endast avsedd för Unix-skal**."

msgid ""
"The :func:`quote` function is not guaranteed to be correct on non-POSIX "
"compliant shells or shells from other operating systems such as Windows. "
"Executing commands quoted by this module on such shells can open up the "
"possibility of a command injection vulnerability."
msgstr ""
"Funktionen :func:`quote` garanteras inte vara korrekt i skal som inte är "
"kompatibla med POSIX eller i skal från andra operativsystem, t.ex. Windows. "
"Om kommandon som citeras av den här modulen körs i sådana skal kan det leda "
"till en sårbarhet genom kommandoinjektion."

msgid ""
"Consider using functions that pass command arguments with lists such as :"
"func:`subprocess.run` with ``shell=False``."
msgstr ""
"Överväg att använda funktioner som skickar kommandoparametrar med listor, t."
"ex. :func:`subprocess.run` med ``shell=False``."

msgid "This idiom would be unsafe:"
msgstr "Detta idiom skulle vara osäkert:"

msgid ":func:`quote` lets you plug the security hole:"
msgstr ":func:`quote` låter dig täppa till säkerhetshålet:"

msgid "The quoting is compatible with UNIX shells and with :func:`split`:"
msgstr "Citeringen är kompatibel med UNIX-shell och med :func:`split`:"

msgid "The :mod:`shlex` module defines the following class:"
msgstr "Modulen :mod:`shlex` definierar följande klass:"

msgid ""
"A :class:`~shlex.shlex` instance or subclass instance is a lexical analyzer "
"object.  The initialization argument, if present, specifies where to read "
"characters from.  It must be a file-/stream-like object with :meth:`~io."
"TextIOBase.read` and :meth:`~io.TextIOBase.readline` methods, or a string.  "
"If no argument is given, input will be taken from ``sys.stdin``. The second "
"optional argument is a filename string, which sets the initial value of the :"
"attr:`~shlex.infile` attribute.  If the *instream* argument is omitted or "
"equal to ``sys.stdin``, this second argument defaults to \"stdin\".  The "
"*posix* argument defines the operational mode: when *posix* is not true "
"(default), the :class:`~shlex.shlex` instance will operate in compatibility "
"mode.  When operating in POSIX mode, :class:`~shlex.shlex` will try to be as "
"close as possible to the POSIX shell parsing rules.  The *punctuation_chars* "
"argument provides a way to make the behaviour even closer to how real shells "
"parse.  This can take a number of values: the default value, ``False``, "
"preserves the behaviour seen under Python 3.5 and earlier.  If set to "
"``True``, then parsing of the characters ``();<>|&`` is changed: any run of "
"these characters (considered punctuation characters) is returned as a single "
"token.  If set to a non-empty string of characters, those characters will be "
"used as the punctuation characters.  Any characters in the :attr:`wordchars` "
"attribute that appear in *punctuation_chars* will be removed from :attr:"
"`wordchars`.  See :ref:`improved-shell-compatibility` for more information. "
"*punctuation_chars* can be set only upon :class:`~shlex.shlex` instance "
"creation and can't be modified later."
msgstr ""
"En :class:`~shlex.shlex`-instans eller underklass-instans är ett lexikaliskt "
"analysobjekt.  Initialiseringsargumentet, om det finns, anger varifrån "
"tecken ska läsas.  Det måste vara ett fil-/strömliknande objekt med "
"metoderna :meth:`~io.TextIOBase.read` och :meth:`~io.TextIOBase.readline`, "
"eller en sträng.  Om inget argument anges kommer indata att hämtas från "
"``sys.stdin``. Det andra valfria argumentet är en filnamnssträng som anger "
"det initiala värdet för attributet :attr:`~shlex.infile`.  Om argumentet "
"*instream* utelämnas eller är lika med ``sys.stdin``, är detta andra "
"argument standardvärdet \"stdin\".  Argumentet *posix* definierar "
"driftläget: när *posix* inte är sant (standard), kommer :class:`~shlex."
"shlex`-instansen att fungera i kompatibilitetsläge.  I POSIX-läge kommer :"
"class:`~shlex.shlex` att försöka ligga så nära POSIX-skalets parsningsregler "
"som möjligt.  Argumentet *punctuation_chars* ger ett sätt att göra beteendet "
"ännu närmare hur riktiga skal parsar.  Detta kan anta ett antal värden: "
"standardvärdet, ``False``, bevarar det beteende som ses under Python 3.5 och "
"tidigare.  Om det sätts till ``True``, ändras tolkningen av tecknen ``();<>|"
"&``: varje serie av dessa tecken (som betraktas som skiljetecken) returneras "
"som en enda token.  Om den är inställd på en icke-tom sträng av tecken, "
"kommer dessa tecken att användas som skiljetecken.  Alla tecken i "
"attributet :attr:`wordchars` som förekommer i *punctuation_chars* kommer att "
"tas bort från :attr:`wordchars`.  Se :ref:`improved-shell-compatibility` för "
"mer information. *punctuation_chars* kan endast ställas in när :class:"
"`~shlex.shlex` instansen skapas och kan inte ändras senare."

msgid "The *punctuation_chars* parameter was added."
msgstr "Parametern *punctuation_chars* har lagts till."

msgid "Module :mod:`configparser`"
msgstr "Modul :mod:`configparser`"

msgid ""
"Parser for configuration files similar to the Windows :file:`.ini` files."
msgstr "Parser för konfigurationsfiler som liknar Windows :file:`.ini`-filer."

msgid "shlex Objects"
msgstr "shlex Objekt"

msgid "A :class:`~shlex.shlex` instance has the following methods:"
msgstr "En :class:`~shlex.shlex`-instans har följande metoder:"

msgid ""
"Return a token.  If tokens have been stacked using :meth:`push_token`, pop a "
"token off the stack.  Otherwise, read one from the input stream.  If reading "
"encounters an immediate end-of-file, :attr:`eof` is returned (the empty "
"string (``''``) in non-POSIX mode, and ``None`` in POSIX mode)."
msgstr ""
"Returnerar en token.  Om tokens har staplats med hjälp av :meth:"
"`push_token`, plocka en token från stapeln.  I annat fall, läs en från "
"inmatningsströmmen.  Om läsningen stöter på ett omedelbart filslut "
"returneras :attr:`eof` (den tomma strängen (``''``) i icke-POSIX-läge och "
"``None`` i POSIX-läge)."

msgid "Push the argument onto the token stack."
msgstr "Lägg argumentet på token-stacken."

msgid ""
"Read a raw token.  Ignore the pushback stack, and do not interpret source "
"requests.  (This is not ordinarily a useful entry point, and is documented "
"here only for the sake of completeness.)"
msgstr ""
"Läs en rå token.  Ignorera pushback-stacken och tolka inte "
"källförfrågningar.  (Detta är normalt inte en användbar ingångspunkt och "
"dokumenteras här endast för fullständighetens skull)"

msgid ""
"When :class:`~shlex.shlex` detects a source request (see :attr:`source` "
"below) this method is given the following token as argument, and expected to "
"return a tuple consisting of a filename and an open file-like object."
msgstr ""
"När :class:`~shlex.shlex` upptäcker en källa (se :attr:`source` nedan) får "
"denna metod följande token som argument, och förväntas returnera en tupel "
"bestående av ett filnamn och ett öppet filliknande objekt."

msgid ""
"Normally, this method first strips any quotes off the argument.  If the "
"result is an absolute pathname, or there was no previous source request in "
"effect, or the previous source was a stream (such as ``sys.stdin``), the "
"result is left alone.  Otherwise, if the result is a relative pathname, the "
"directory part of the name of the file immediately before it on the source "
"inclusion stack is prepended (this behavior is like the way the C "
"preprocessor handles ``#include \"file.h\"``)."
msgstr ""
"Normalt tar den här metoden först bort alla citattecken från argumentet.  Om "
"resultatet är ett absolut sökvägsnamn, eller om det inte fanns någon "
"tidigare källbegäran, eller om den tidigare källan var en ström (t.ex. ``sys."
"stdin``), lämnas resultatet i fred.  I annat fall, om resultatet är ett "
"relativt sökvägsnamn, läggs katalogdelen av namnet på filen omedelbart före "
"det i källinkluderingsstapeln till (detta beteende liknar det sätt på vilket "
"C-förprocessorn hanterar ``#include \"file.h\"``)."

msgid ""
"The result of the manipulations is treated as a filename, and returned as "
"the first component of the tuple, with :func:`open` called on it to yield "
"the second component. (Note: this is the reverse of the order of arguments "
"in instance initialization!)"
msgstr ""
"Resultatet av manipuleringarna behandlas som ett filnamn och returneras som "
"den första komponenten i tupeln, med :func:`open` anropad för att ge den "
"andra komponenten. (Obs: detta är omvänd ordning på argumenten vid "
"initiering av instanser!)"

msgid ""
"This hook is exposed so that you can use it to implement directory search "
"paths, addition of file extensions, and other namespace hacks. There is no "
"corresponding 'close' hook, but a shlex instance will call the :meth:`~io."
"IOBase.close` method of the sourced input stream when it returns EOF."
msgstr ""
"Denna krok är exponerad så att du kan använda den för att implementera "
"katalogsökvägar, tillägg av filändelser och andra namnrymdshack. Det finns "
"ingen motsvarande \"close\"-krok, men en shlex-instans kommer att anropa :"
"meth:`~io.IOBase.close`-metoden för den hämtade inmatningsströmmen när den "
"returnerar EOF."

msgid ""
"For more explicit control of source stacking, use the :meth:`push_source` "
"and :meth:`pop_source` methods."
msgstr ""
"För mer explicit kontroll av källans stapling, använd metoderna :meth:"
"`push_source` och :meth:`pop_source`."

msgid ""
"Push an input source stream onto the input stack.  If the filename argument "
"is specified it will later be available for use in error messages.  This is "
"the same method used internally by the :meth:`sourcehook` method."
msgstr ""
"Skjuter upp en inmatningskällström på inmatningsstapeln.  Om "
"filnamnsargumentet anges kommer det senare att vara tillgängligt för "
"användning i felmeddelanden.  Detta är samma metod som används internt av "
"metoden :meth:`sourcehook`."

msgid ""
"Pop the last-pushed input source from the input stack. This is the same "
"method used internally when the lexer reaches EOF on a stacked input stream."
msgstr ""
"Plocka bort den senast inmatade källan från inmatningsstapeln. Detta är "
"samma metod som används internt när lexaren når EOF på en staplad "
"inmatningsström."

msgid ""
"This method generates an error message leader in the format of a Unix C "
"compiler error label; the format is ``'\"%s\", line %d: '``, where the "
"``%s`` is replaced with the name of the current source file and the ``%d`` "
"with the current input line number (the optional arguments can be used to "
"override these)."
msgstr ""
"Denna metod genererar en felmeddelandeledare i formatet för en Unix C-"
"kompilators feletikett; formatet är ``'\"%s\", rad %d: '``, där ``%s`` "
"ersätts med namnet på den aktuella källfilen och ``%d`` med det aktuella "
"radnumret för inmatningen (de valfria argumenten kan användas för att "
"åsidosätta dessa)."

msgid ""
"This convenience is provided to encourage :mod:`shlex` users to generate "
"error messages in the standard, parseable format understood by Emacs and "
"other Unix tools."
msgstr ""
"Detta är ett sätt att uppmuntra :mod:`shlex`-användare att generera "
"felmeddelanden i ett standardformat som kan tolkas av Emacs och andra Unix-"
"verktyg."

msgid ""
"Instances of :class:`~shlex.shlex` subclasses have some public instance "
"variables which either control lexical analysis or can be used for debugging:"
msgstr ""
"Instanser av underklasserna :class:`~shlex.shlex` har några offentliga "
"instansvariabler som antingen styr den lexikala analysen eller kan användas "
"för felsökning:"

msgid ""
"The string of characters that are recognized as comment beginners. All "
"characters from the comment beginner to end of line are ignored. Includes "
"just ``'#'`` by default."
msgstr ""
"Den teckensträng som identifieras som början på en kommentar. Alla tecken "
"från kommentarens början till slutet av raden ignoreras. Inkluderar bara "
"``'#'``` som standard."

msgid ""
"The string of characters that will accumulate into multi-character tokens.  "
"By default, includes all ASCII alphanumerics and underscore.  In POSIX mode, "
"the accented characters in the Latin-1 set are also included.  If :attr:"
"`punctuation_chars` is not empty, the characters ``~-./*?=``, which can "
"appear in filename specifications and command line parameters, will also be "
"included in this attribute, and any characters which appear in "
"``punctuation_chars`` will be removed from ``wordchars`` if they are present "
"there. If :attr:`whitespace_split` is set to ``True``, this will have no "
"effect."
msgstr ""
"Den teckensträng som kommer att ackumuleras till flerteckentokens.  Som "
"standard ingår alla alfanumeriska ASCII-tecken och understreck.  I POSIX-"
"läge ingår även de accentuerade tecknen i Latin-1-uppsättningen.  Om :attr:"
"`punctuation_chars` inte är tomt, kommer tecknen ``~-./*?=``, som kan "
"förekomma i filnamnsspecifikationer och kommandoradsparametrar, också att "
"inkluderas i detta attribut, och alla tecken som förekommer i "
"``punctuation_chars`` kommer att tas bort från ``wordchars`` om de "
"förekommer där. Om :attr:`whitespace_split` är satt till ``True``, kommer "
"detta inte att ha någon effekt."

msgid ""
"Characters that will be considered whitespace and skipped.  Whitespace "
"bounds tokens.  By default, includes space, tab, linefeed and carriage-"
"return."
msgstr ""
"Tecken som ska betraktas som blanksteg och hoppas över.  Blanksteg avgränsar "
"tokens.  Som standard ingår mellanslag, tabb, radmatning och carriage-return."

msgid ""
"Characters that will be considered as escape. This will be only used in "
"POSIX mode, and includes just ``'\\'`` by default."
msgstr ""
"Tecken som kommer att betraktas som escape. Detta kommer endast att användas "
"i POSIX-läge, och inkluderar bara ``'\\'``` som standard."

msgid ""
"Characters that will be considered string quotes.  The token accumulates "
"until the same quote is encountered again (thus, different quote types "
"protect each other as in the shell.)  By default, includes ASCII single and "
"double quotes."
msgstr ""
"Tecken som kommer att betraktas som strängcitat.  Token ackumuleras tills "
"samma citattecken påträffas igen (olika citattyper skyddar alltså varandra "
"som i skalet.) Som standard ingår ASCII enkla och dubbla citattecken."

msgid ""
"Characters in :attr:`quotes` that will interpret escape characters defined "
"in :attr:`escape`.  This is only used in POSIX mode, and includes just "
"``'\"'`` by default."
msgstr ""
"Tecken i :attr:`quotes` som kommer att tolka escape-tecken definierade i :"
"attr:`escape`.  Detta används endast i POSIX-läge och inkluderar bara "
"``'\"'`` som standard."

msgid ""
"If ``True``, tokens will only be split in whitespaces.  This is useful, for "
"example, for parsing command lines with :class:`~shlex.shlex`, getting "
"tokens in a similar way to shell arguments.  When used in combination with :"
"attr:`punctuation_chars`, tokens will be split on whitespace in addition to "
"those characters."
msgstr ""
"Om ``True``, kommer tokens endast att delas upp i blanksteg.  Detta är "
"användbart, till exempel, för att analysera kommandorader med :class:`~shlex."
"shlex`, och få tokens på ett liknande sätt som skalargument.  När det "
"används i kombination med :attr:`punctuation_chars`, kommer tokens att delas "
"upp på blanksteg utöver dessa tecken."

msgid ""
"The :attr:`punctuation_chars` attribute was made compatible with the :attr:"
"`whitespace_split` attribute."
msgstr ""
"Attributet :attr:`punctuation_chars` har gjorts kompatibelt med attributet :"
"attr:`whitespace_split`."

msgid ""
"The name of the current input file, as initially set at class instantiation "
"time or stacked by later source requests.  It may be useful to examine this "
"when constructing error messages."
msgstr ""
"Namnet på den aktuella indatafilen, som ursprungligen ställdes in vid "
"klassens instantiering eller staplades av senare källförfrågningar.  Det kan "
"vara användbart att undersöka detta när man konstruerar felmeddelanden."

msgid ""
"The input stream from which this :class:`~shlex.shlex` instance is reading "
"characters."
msgstr ""
"Den inmatningsström från vilken denna :class:`~shlex.shlex`-instans läser "
"tecken."

msgid ""
"This attribute is ``None`` by default.  If you assign a string to it, that "
"string will be recognized as a lexical-level inclusion request similar to "
"the ``source`` keyword in various shells.  That is, the immediately "
"following token will be opened as a filename and input will be taken from "
"that stream until EOF, at which point the :meth:`~io.IOBase.close` method of "
"that stream will be called and the input source will again become the "
"original input stream.  Source requests may be stacked any number of levels "
"deep."
msgstr ""
"Detta attribut är ``None`` som standard.  Om du tilldelar det en sträng "
"kommer den strängen att tolkas som en inkluderingsbegäran på lexikal nivå, "
"på samma sätt som nyckelordet ``ource`` i olika skal.  Det vill säga, den "
"omedelbart följande token öppnas som ett filnamn och indata tas från den "
"strömmen till EOF, varvid :meth:`~io.IOBase.close`-metoden för den strömmen "
"anropas och indatakällan åter blir den ursprungliga indataströmmen.  "
"Källförfrågningar kan staplas på valfritt antal nivåer."

msgid ""
"If this attribute is numeric and ``1`` or more, a :class:`~shlex.shlex` "
"instance will print verbose progress output on its behavior.  If you need to "
"use this, you can read the module source code to learn the details."
msgstr ""
"Om det här attributet är numeriskt och ``1`` eller mer, kommer en :class:"
"`~shlex.shlex`-instans att skriva ut utförliga förloppsdata om sitt "
"beteende.  Om du behöver använda detta kan du läsa modulens källkod för att "
"få mer information."

msgid "Source line number (count of newlines seen so far plus one)."
msgstr "Källans radnummer (antal nya rader som hittills setts plus ett)."

msgid ""
"The token buffer.  It may be useful to examine this when catching exceptions."
msgstr ""
"Buffert för token.  Det kan vara användbart att undersöka detta när man "
"fångar upp undantag."

msgid ""
"Token used to determine end of file. This will be set to the empty string "
"(``''``), in non-POSIX mode, and to ``None`` in POSIX mode."
msgstr ""
"Token som används för att avgöra slutet på filen. Detta kommer att sättas "
"till den tomma strängen (``''``) i icke-POSIX-läge och till ``None`` i POSIX-"
"läge."

msgid ""
"A read-only property. Characters that will be considered punctuation. Runs "
"of punctuation characters will be returned as a single token. However, note "
"that no semantic validity checking will be performed: for example, '>>>' "
"could be returned as a token, even though it may not be recognised as such "
"by shells."
msgstr ""
"En skrivskyddad egenskap. Tecken som kommer att betraktas som skiljetecken. "
"Runs av skiljetecken returneras som en enda token. Observera dock att ingen "
"semantisk validitetskontroll kommer att utföras: till exempel kan '>>>' "
"returneras som en token, även om det kanske inte känns igen som en sådan av "
"shells."

msgid "Parsing Rules"
msgstr "Parsing-regler"

msgid ""
"When operating in non-POSIX mode, :class:`~shlex.shlex` will try to obey to "
"the following rules."
msgstr ""
"Vid drift i icke-POSIX-läge kommer :class:`~shlex.shlex` att försöka följa "
"följande regler."

msgid ""
"Quote characters are not recognized within words (``Do\"Not\"Separate`` is "
"parsed as the single word ``Do\"Not\"Separate``);"
msgstr ""
"Citationstecken identifieras inte inom ord (``Do\"Not\"Separate`` tolkas som "
"det enskilda ordet ``Do\"Not\"Separate``);"

msgid "Escape characters are not recognized;"
msgstr "Escape-tecken identifieras inte;"

msgid ""
"Enclosing characters in quotes preserve the literal value of all characters "
"within the quotes;"
msgstr ""
"Om tecken omsluts av citattecken bevaras det bokstavliga värdet av alla "
"tecken inom citattecknen;"

msgid ""
"Closing quotes separate words (``\"Do\"Separate`` is parsed as ``\"Do\"`` "
"and ``Separate``);"
msgstr ""
"Avslutande citat separerar ord (``\"Do\"Separate`` tolkas som ``\"Do\"`` och "
"``Separate``);"

msgid ""
"If :attr:`~shlex.whitespace_split` is ``False``, any character not declared "
"to be a word character, whitespace, or a quote will be returned as a single-"
"character token. If it is ``True``, :class:`~shlex.shlex` will only split "
"words in whitespaces;"
msgstr ""
"Om :attr:`~shlex.whitespace_split` är ``False``, kommer alla tecken som inte "
"är deklarerade som ordtecken, blanksteg eller citat att returneras som en "
"token med ett tecken. Om det är ``True``, kommer :class:`~shlex.shlex` "
"endast att dela ord i blanksteg;"

msgid "EOF is signaled with an empty string (``''``);"
msgstr "EOF signaleras med en tom sträng (``''``);"

msgid "It's not possible to parse empty strings, even if quoted."
msgstr ""
"Det är inte möjligt att analysera tomma strängar, inte ens om de är citerade."

msgid ""
"When operating in POSIX mode, :class:`~shlex.shlex` will try to obey to the "
"following parsing rules."
msgstr ""
"I POSIX-läge kommer :class:`~shlex.shlex` att försöka följa följande "
"parsingregler."

msgid ""
"Quotes are stripped out, and do not separate words "
"(``\"Do\"Not\"Separate\"`` is parsed as the single word ``DoNotSeparate``);"
msgstr ""
"Citationstecken tas bort och separerar inte ord (``\"Do\"Not\"Separate\"`` "
"tolkas som det enskilda ordet ``DoNotSeparate``);"

msgid ""
"Non-quoted escape characters (e.g. ``'\\'``) preserve the literal value of "
"the next character that follows;"
msgstr ""
"Icke-citerade escape-tecken (t.ex. ``'\\'``) bevarar det bokstavliga värdet "
"av nästa tecken som följer;"

msgid ""
"Enclosing characters in quotes which are not part of :attr:`~shlex."
"escapedquotes` (e.g. ``\"'\"``) preserve the literal value of all characters "
"within the quotes;"
msgstr ""
"Om tecken omsluts av citattecken som inte ingår i :attr:`~shlex."
"escapedquotes` (t.ex. ``\"'\"``) bevaras det bokstavliga värdet av alla "
"tecken inom citattecknen;"

msgid ""
"Enclosing characters in quotes which are part of :attr:`~shlex."
"escapedquotes` (e.g. ``'\"'``) preserves the literal value of all characters "
"within the quotes, with the exception of the characters mentioned in :attr:"
"`~shlex.escape`.  The escape characters retain its special meaning only when "
"followed by the quote in use, or the escape character itself. Otherwise the "
"escape character will be considered a normal character."
msgstr ""
"Om tecken omsluts av citattecken som ingår i :attr:`~shlex.escapedquotes` (t."
"ex. ``'\"'``) bevaras det bokstavliga värdet av alla tecken inom "
"citattecknen, med undantag för de tecken som nämns i :attr:`~shlex.escape`.  "
"Escape-tecknen behåller sin speciella betydelse endast när de följs av det "
"använda citatet eller själva escape-tecknet. I annat fall betraktas escape-"
"tecknet som ett normalt tecken."

msgid "EOF is signaled with a :const:`None` value;"
msgstr "EOF signaleras med ett :const:`None`-värde;"

msgid "Quoted empty strings (``''``) are allowed."
msgstr "Kvoterade tomma strängar (``''``) är tillåtna."

msgid "Improved Compatibility with Shells"
msgstr "Förbättrad kompatibilitet med skal"

msgid ""
"The :class:`shlex` class provides compatibility with the parsing performed "
"by common Unix shells like ``bash``, ``dash``, and ``sh``.  To take "
"advantage of this compatibility, specify the ``punctuation_chars`` argument "
"in the constructor.  This defaults to ``False``, which preserves pre-3.6 "
"behaviour. However, if it is set to ``True``, then parsing of the characters "
"``();<>|&`` is changed: any run of these characters is returned as a single "
"token.  While this is short of a full parser for shells (which would be out "
"of scope for the standard library, given the multiplicity of shells out "
"there), it does allow you to perform processing of command lines more easily "
"than you could otherwise.  To illustrate, you can see the difference in the "
"following snippet:"
msgstr ""
"Klassen :class:`shlex` ger kompatibilitet med den parsning som utförs av "
"vanliga Unix-skal som ``bash``, ``dash`` och ``sh``.  För att dra nytta av "
"denna kompatibilitet, ange argumentet ``punctuation_chars`` i "
"konstruktören.  Standardvärdet är ``False``, vilket bevarar beteendet före "
"3.6. Om det sätts till ``True`` ändras dock parsningen av tecknen ``();<>|"
"&``: varje serie av dessa tecken returneras som en enda token.  Även om "
"detta inte är en fullständig parser för skal (vilket skulle vara utanför "
"ramen för standardbiblioteket, med tanke på den mångfald av skal som finns), "
"gör det att du kan utföra bearbetning av kommandorader enklare än du annars "
"skulle kunna.  För att illustrera kan du se skillnaden i följande utdrag:"

msgid ""
">>> import shlex\n"
">>> text = \"a && b; c && d || e; f >'abc'; (def \\\"ghi\\\")\"\n"
">>> s = shlex.shlex(text, posix=True)\n"
">>> s.whitespace_split = True\n"
">>> list(s)\n"
"['a', '&&', 'b;', 'c', '&&', 'd', '||', 'e;', 'f', '>abc;', '(def', 'ghi)']\n"
">>> s = shlex.shlex(text, posix=True, punctuation_chars=True)\n"
">>> s.whitespace_split = True\n"
">>> list(s)\n"
"['a', '&&', 'b', ';', 'c', '&&', 'd', '||', 'e', ';', 'f', '>', 'abc', ';',\n"
"'(', 'def', 'ghi', ')']"
msgstr ""
">>> import shlex\n"
">>> text = \"a && b; c && d || e; f >'abc'; (def \\\"ghi\\\")\"\n"
">>> s = shlex.shlex(text, posix=True)\n"
">>> s.whitespace_split = Sann\n"
">>> list(s)\n"
"['a', '&&', 'b;', 'c', '&&', 'd', '||', 'e;', 'f', '>abc;', '(def', 'ghi)']\n"
">>> s = shlex.shlex(text, posix=True, punctuation_chars=True)\n"
">>> s.whitespace_split = True\n"
">>> list(s)\n"
"['a', '&&', 'b', ';', 'c', '&&', 'd', '||', 'e', ';', 'f', '>', 'abc', ';',\n"
"'(', 'def', 'ghi', ')']"

msgid ""
"Of course, tokens will be returned which are not valid for shells, and "
"you'll need to implement your own error checks on the returned tokens."
msgstr ""
"Naturligtvis kommer tokens att returneras som inte är giltiga för skal, och "
"du måste implementera dina egna felkontroller på de returnerade tokens."

msgid ""
"Instead of passing ``True`` as the value for the punctuation_chars "
"parameter, you can pass a string with specific characters, which will be "
"used to determine which characters constitute punctuation. For example::"
msgstr ""
"I stället för att skicka ``True`` som värde för parametern punctuation_chars "
"kan du skicka en sträng med specifika tecken som används för att avgöra "
"vilka tecken som utgör skiljetecken. Till exempel::"

msgid ""
">>> import shlex\n"
">>> s = shlex.shlex(\"a && b || c\", punctuation_chars=\"|\")\n"
">>> list(s)\n"
"['a', '&', '&', 'b', '||', 'c']"
msgstr ""
">>> import shlex\n"
">>> s = shlex.shlex(\"a && b || c\", punctuation_chars=\"|\")\n"
">>> list(s)\n"
"['a', '&', '&', 'b', '||', 'c']"

msgid ""
"When ``punctuation_chars`` is specified, the :attr:`~shlex.wordchars` "
"attribute is augmented with the characters ``~-./*?=``.  That is because "
"these characters can appear in file names (including wildcards) and command-"
"line arguments (e.g. ``--color=auto``). Hence::"
msgstr ""
"När ``punctuation_chars`` anges, utökas attributet :attr:`~shlex.wordchars` "
"med tecknen ``~-./*?=``.  Det beror på att dessa tecken kan förekomma i "
"filnamn (inklusive jokertecken) och kommandoradsargument (t.ex. ``--"
"color=auto``). Därav::"

msgid ""
">>> import shlex\n"
">>> s = shlex.shlex('~/a && b-c --color=auto || d *.py?',\n"
"...                 punctuation_chars=True)\n"
">>> list(s)\n"
"['~/a', '&&', 'b-c', '--color=auto', '||', 'd', '*.py?']"
msgstr ""
">>> import shlex\n"
">>> s = shlex.shlex('~/a && b-c --color=auto || d *.py?',\n"
"... skiljetecken_teckensnitt=True)\n"
">>> list(s)\n"
"['~/a', '&&', 'b-c', '--color=auto', '||', 'd', '*.py?']"

msgid ""
"However, to match the shell as closely as possible, it is recommended to "
"always use ``posix`` and :attr:`~shlex.whitespace_split` when using :attr:"
"`~shlex.punctuation_chars`, which will negate :attr:`~shlex.wordchars` "
"entirely."
msgstr ""
"För att matcha skalet så nära som möjligt rekommenderas dock att man alltid "
"använder ``posix`` och :attr:`~shlex.whitespace_split` när man använder :"
"attr:`~shlex.punctuation_chars`, vilket gör att :attr:`~shlex.wordchars` "
"helt försvinner."

msgid ""
"For best effect, ``punctuation_chars`` should be set in conjunction with "
"``posix=True``. (Note that ``posix=False`` is the default for :class:`~shlex."
"shlex`.)"
msgstr ""
"För bästa effekt bör ``punctuation_chars`` ställas in tillsammans med "
"``posix=True``. (Observera att ``posix=False`` är standard för :class:"
"`~shlex.shlex`)"
