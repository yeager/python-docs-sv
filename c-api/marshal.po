# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Data marshalling support"
msgstr "Stöd för datahantering"

msgid ""
"These routines allow C code to work with serialized objects using the same "
"data format as the :mod:`marshal` module.  There are functions to write data "
"into the serialization format, and additional functions that can be used to "
"read the data back.  Files used to store marshalled data must be opened in "
"binary mode."
msgstr ""
"Dessa rutiner gör det möjligt för C-kod att arbeta med serialiserade objekt "
"som använder samma dataformat som modulen :mod:`marshal`.  Det finns "
"funktioner för att skriva data till serialiseringsformatet och ytterligare "
"funktioner som kan användas för att läsa tillbaka data.  Filer som används "
"för att lagra marshallade data måste öppnas i binärt läge."

msgid "Numeric values are stored with the least significant byte first."
msgstr "Numeriska värden lagras med den minst signifikanta byten först."

msgid ""
"The module supports several versions of the data format; see the :py:mod:"
"`Python module documentation <marshal>` for details."
msgstr ""
"Modulen stöder flera versioner av dataformatet; se :py:mod:`Python-modulens "
"dokumentation <marshal>` för mer information."

msgid "The current format version. See :py:data:`marshal.version`."
msgstr "Den aktuella formatversionen. Se :py:data:`marshal.version`."

msgid ""
"Marshal a :c:expr:`long` integer, *value*, to *file*.  This will only write "
"the least-significant 32 bits of *value*; regardless of the size of the "
"native :c:expr:`long` type.  *version* indicates the file format."
msgstr ""
"Marshala ett :c:expr:`long` heltal, *värde*, till *fil*.  Detta kommer "
"endast att skriva de minst signifikanta 32 bitarna av *värde*; oavsett "
"storleken på den ursprungliga :c:expr:`long`-typen.  *version* anger "
"filformatet."

msgid ""
"This function can fail, in which case it sets the error indicator. Use :c:"
"func:`PyErr_Occurred` to check for that."
msgstr ""
"Den här funktionen kan misslyckas, i vilket fall den anger felindikatorn. "
"Använd :c:func:`PyErr_Occurred` för att kontrollera detta."

msgid ""
"Marshal a Python object, *value*, to *file*. *version* indicates the file "
"format."
msgstr ""
"Överför ett Python-objekt, *värde*, till *fil*. *version* anger filformatet."

msgid ""
"Return a bytes object containing the marshalled representation of *value*. "
"*version* indicates the file format."
msgstr ""
"Returnerar ett bytesobjekt som innehåller den marshallade representationen "
"av *värde*. *version* anger filformatet."

msgid "The following functions allow marshalled values to be read back in."
msgstr ""
"Följande funktioner gör det möjligt att läsa in marshallade värden igen."

msgid ""
"Return a C :c:expr:`long` from the data stream in a :c:expr:`FILE*` opened "
"for reading.  Only a 32-bit value can be read in using this function, "
"regardless of the native size of :c:expr:`long`."
msgstr ""
"Returnerar ett C :c:expr:`long` från dataströmmen i en :c:expr:`FILE*` som "
"öppnats för läsning.  Endast ett 32-bitars värde kan läsas in med den här "
"funktionen, oavsett den ursprungliga storleken på :c:expr:`long`."

msgid ""
"On error, sets the appropriate exception (:exc:`EOFError`) and returns "
"``-1``."
msgstr ""
"Vid fel, anger lämpligt undantag (:exc:`EOFError`) och returnerar ``-1``."

msgid ""
"Return a C :c:expr:`short` from the data stream in a :c:expr:`FILE*` opened "
"for reading.  Only a 16-bit value can be read in using this function, "
"regardless of the native size of :c:expr:`short`."
msgstr ""
"Returnerar ett C :c:expr:`short` från dataströmmen i en :c:expr:`FILE*` som "
"öppnats för läsning.  Endast ett 16-bitars värde kan läsas in med den här "
"funktionen, oavsett den ursprungliga storleken på :c:expr:`short`."

msgid ""
"Return a Python object from the data stream in a :c:expr:`FILE*` opened for "
"reading."
msgstr ""
"Returnerar ett Python-objekt från dataströmmen i en :c:expr:`FILE*` som "
"öppnats för läsning."

msgid ""
"On error, sets the appropriate exception (:exc:`EOFError`, :exc:`ValueError` "
"or :exc:`TypeError`) and returns ``NULL``."
msgstr ""
"Vid fel, anger lämpligt undantag (:exc:`EOFError`, :exc:`ValueError` eller :"
"exc:`TypeError`) och returnerar ``NULL``."

msgid ""
"Return a Python object from the data stream in a :c:expr:`FILE*` opened for "
"reading.  Unlike :c:func:`PyMarshal_ReadObjectFromFile`, this function "
"assumes that no further objects will be read from the file, allowing it to "
"aggressively load file data into memory so that the de-serialization can "
"operate from data in memory rather than reading a byte at a time from the "
"file.  Only use these variant if you are certain that you won't be reading "
"anything else from the file."
msgstr ""
"Returnerar ett Python-objekt från dataströmmen i en :c:expr:`FILE*` som "
"öppnats för läsning.  Till skillnad från :c:func:"
"`PyMarshal_ReadObjectFromFile` antar denna funktion att inga fler objekt "
"kommer att läsas från filen, vilket gör det möjligt att aggressivt ladda "
"fildata i minnet så att de-serialiseringen kan fungera från data i minnet "
"snarare än att läsa en byte i taget från filen.  Använd endast denna variant "
"om du är säker på att du inte kommer att läsa något annat från filen."

msgid ""
"Return a Python object from the data stream in a byte buffer containing "
"*len* bytes pointed to by *data*."
msgstr ""
"Returnerar ett Python-objekt från dataströmmen i en bytebuffert som "
"innehåller *len* bytes som pekas ut av *data*."
