# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Top-level components"
msgstr ""

msgid ""
"The Python interpreter can get its input from a number of sources: from a "
"script passed to it as standard input or as program argument, typed in "
"interactively, from a module source file, etc.  This chapter gives the "
"syntax used in these cases."
msgstr ""

msgid "Complete Python programs"
msgstr ""

msgid ""
"While a language specification need not prescribe how the language "
"interpreter is invoked, it is useful to have a notion of a complete Python "
"program.  A complete Python program is executed in a minimally initialized "
"environment: all built-in and standard modules are available, but none have "
"been initialized, except for :mod:`sys` (various system services), :mod:"
"`builtins` (built-in functions, exceptions and ``None``) and :mod:"
"`__main__`.  The latter is used to provide the local and global namespace "
"for execution of the complete program."
msgstr ""

msgid ""
"The syntax for a complete Python program is that for file input, described "
"in the next section."
msgstr ""

msgid ""
"The interpreter may also be invoked in interactive mode; in this case, it "
"does not read and execute a complete program but reads and executes one "
"statement (possibly compound) at a time.  The initial environment is "
"identical to that of a complete program; each statement is executed in the "
"namespace of :mod:`__main__`."
msgstr ""

msgid ""
"A complete program can be passed to the interpreter in three forms: with "
"the :option:`-c` *string* command line option, as a file passed as the first "
"command line argument, or as standard input.  If the file or standard input "
"is a tty device, the interpreter enters interactive mode; otherwise, it "
"executes the file as a complete program."
msgstr ""

msgid "File input"
msgstr ""

msgid "All input read from non-interactive files has the same form:"
msgstr ""

msgid "This syntax is used in the following situations:"
msgstr ""

msgid "when parsing a complete Python program (from a file or from a string);"
msgstr ""

msgid "when parsing a module;"
msgstr ""

msgid "when parsing a string passed to the :func:`exec` function;"
msgstr ""

msgid "Interactive input"
msgstr ""

msgid "Input in interactive mode is parsed using the following grammar:"
msgstr ""

msgid ""
"Note that a (top-level) compound statement must be followed by a blank line "
"in interactive mode; this is needed to help the parser detect the end of the "
"input."
msgstr ""

msgid "Expression input"
msgstr ""

msgid ""
":func:`eval` is used for expression input.  It ignores leading whitespace. "
"The string argument to :func:`eval` must have the following form:"
msgstr ""

msgid "interpreter"
msgstr ""

msgid "program"
msgstr ""

msgid "module"
msgstr ""

msgid "sys"
msgstr ""

msgid "__main__"
msgstr ""

msgid "builtins"
msgstr ""

msgid "interactive mode"
msgstr ""

msgid "UNIX"
msgstr ""

msgid "Windows"
msgstr ""

msgid "command line"
msgstr ""

msgid "standard input"
msgstr ""

msgid "input"
msgstr ""

msgid "built-in function"
msgstr ""

msgid "eval"
msgstr ""
