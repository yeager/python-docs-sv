# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!pickletools` --- Tools for pickle developers"
msgstr ":mod:`!pickletools` --- Verktyg för pickle-utvecklare"

msgid "**Source code:** :source:`Lib/pickletools.py`"
msgstr "**Källkod:** :source:`Lib/pickletools.py`"

msgid ""
"This module contains various constants relating to the intimate details of "
"the :mod:`pickle` module, some lengthy comments about the implementation, "
"and a few useful functions for analyzing pickled data.  The contents of this "
"module are useful for Python core developers who are working on the :mod:"
"`pickle`; ordinary users of the :mod:`pickle` module probably won't find "
"the :mod:`pickletools` module relevant."
msgstr ""
"Den här modulen innehåller olika konstanter som rör de intima detaljerna i "
"modulen :mod:`pickle`, några långa kommentarer om implementationen och några "
"användbara funktioner för att analysera pickled data.  Innehållet i denna "
"modul är användbart för Python core-utvecklare som arbetar med :mod:"
"`pickle`; vanliga användare av :mod:`pickle`-modulen kommer förmodligen inte "
"att finna :mod:`pickletools`-modulen relevant."

msgid "Command-line usage"
msgstr "Användning av kommandoraden"

msgid ""
"When invoked from the command line, ``python -m pickletools`` will "
"disassemble the contents of one or more pickle files.  Note that if you want "
"to see the Python object stored in the pickle rather than the details of "
"pickle format, you may want to use ``-m pickle`` instead. However, when the "
"pickle file that you want to examine comes from an untrusted source, ``-m "
"pickletools`` is a safer option because it does not execute pickle bytecode."
msgstr ""
"När ``python -m pickletools`` anropas från kommandoraden kommer innehållet i "
"en eller flera pickle-filer att demonteras.  Observera att om du vill se "
"Python-objektet som lagras i pickle snarare än detaljerna i pickle-formatet, "
"kanske du vill använda ``-m pickle`` istället. Men när pickle-filen som du "
"vill undersöka kommer från en opålitlig källa är ``-m pickletools`` ett "
"säkrare alternativ eftersom den inte exekverar pickle-bytekod."

msgid "For example, with a tuple ``(1, 2)`` pickled in file ``x.pickle``:"
msgstr ""
"Till exempel med en tupel ``(1, 2)`` som är inlagd i filen ``x.pickle``:"

msgid ""
"$ python -m pickle x.pickle\n"
"(1, 2)\n"
"\n"
"$ python -m pickletools x.pickle\n"
"    0: \\x80 PROTO      3\n"
"    2: K    BININT1    1\n"
"    4: K    BININT1    2\n"
"    6: \\x86 TUPLE2\n"
"    7: q    BINPUT     0\n"
"    9: .    STOP\n"
"highest protocol among opcodes = 2"
msgstr ""
"$ python -m pickle x.pickle\n"
"(1, 2)\n"
"\n"
"$ python -m pickletools x.pickle\n"
"    0: \\x80 PROTO      3\n"
"    2: K    BININT1    1\n"
"    4: K    BININT1    2\n"
"    6: \\x86 TUPLE2\n"
"    7: q    BINPUT     0\n"
"    9: .    STOP\n"
"highest protocol among opcodes = 2"

msgid "Command-line options"
msgstr "Alternativ för kommandoraden"

msgid "Annotate each line with a short opcode description."
msgstr "Kommentera varje rad med en kort opcode-beskrivning."

msgid "Name of a file where the output should be written."
msgstr "Namn på en fil där utdata ska skrivas."

msgid "The number of blanks by which to indent a new MARK level."
msgstr "Det antal blanksteg som ska användas för att dra in en ny MARK-nivå."

msgid ""
"When multiple objects are disassembled, preserve memo between disassemblies."
msgstr "När flera objekt demonteras ska memo sparas mellan demonteringarna."

msgid ""
"When more than one pickle file is specified, print given preamble before "
"each disassembly."
msgstr ""
"När mer än en pickle-fil anges, skriv ut den angivna ingressen före varje "
"demontering."

msgid ""
"A pickle file to read, or ``-`` to indicate reading from standard input."
msgstr ""
"En pickle-fil som ska läsas, eller ``-`` för att ange läsning från "
"standardinmatning."

msgid "Programmatic interface"
msgstr "Programmatiskt gränssnitt"

msgid ""
"Outputs a symbolic disassembly of the pickle to the file-like object *out*, "
"defaulting to ``sys.stdout``.  *pickle* can be a string or a file-like "
"object.  *memo* can be a Python dictionary that will be used as the pickle's "
"memo; it can be used to perform disassemblies across multiple pickles "
"created by the same pickler. Successive levels, indicated by ``MARK`` "
"opcodes in the stream, are indented by *indentlevel* spaces.  If a nonzero "
"value is given to *annotate*, each opcode in the output is annotated with a "
"short description.  The value of *annotate* is used as a hint for the column "
"where annotation should start."
msgstr ""
"Skickar ut en symbolisk demontering av pickle till det filliknande objektet "
"*out*, som standard till ``sys.stdout``.  *pickle* kan vara en sträng eller "
"ett filliknande objekt.  *memo* kan vara en Python-ordbok som kommer att "
"användas som pickles memo; den kan användas för att utföra demontering av "
"flera pickles som skapats av samma pickler. Successiva nivåer, som indikeras "
"av ``MARK`` opkoder i flödet, är indragna med *indentlevel* mellanslag.  Om "
"*annotate* ges ett värde som inte är noll, kommenteras varje opcode i utdata "
"med en kort beskrivning.  Värdet på *annotate* används som en ledtråd för "
"den kolumn där annoteringen ska börja."

msgid "Added the *annotate* parameter."
msgstr "Parametern *annotate* har lagts till."

msgid ""
"Provides an :term:`iterator` over all of the opcodes in a pickle, returning "
"a sequence of ``(opcode, arg, pos)`` triples.  *opcode* is an instance of "
"an :class:`OpcodeInfo` class; *arg* is the decoded value, as a Python "
"object, of the opcode's argument; *pos* is the position at which this opcode "
"is located. *pickle* can be a string or a file-like object."
msgstr ""
"Tillhandahåller en :term:`iterator` över alla opkoder i en pickle, och "
"returnerar en sekvens av ``(opcode, arg, pos)`` tripplar.  *opcode* är en "
"instans av en :class:`OpcodeInfo`-klass; *arg* är det avkodade värdet, som "
"ett Python-objekt, av opcodens argument; *pos* är den position där denna "
"opcode finns. *pickle* kan vara en sträng eller ett filliknande objekt."

msgid ""
"Returns a new equivalent pickle string after eliminating unused ``PUT`` "
"opcodes. The optimized pickle is shorter, takes less transmission time, "
"requires less storage space, and unpickles more efficiently."
msgstr ""
"Returnerar en ny likvärdig pickle-sträng efter eliminering av oanvända "
"``PUT``-opkoder. Den optimerade pickle-strängen är kortare, tar kortare tid "
"att överföra, kräver mindre lagringsutrymme och avpicklas mer effektivt."
