# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!email.message`: Representing an email message"
msgstr ":mod:`!email.message`: Representerar ett e-postmeddelande"

msgid "**Source code:** :source:`Lib/email/message.py`"
msgstr "**Källkod:** :source:`Lib/email/message.py`"

msgid "[1]_"
msgstr "[1]_"

msgid ""
"The central class in the :mod:`email` package is the :class:`EmailMessage` "
"class, imported from the :mod:`email.message` module.  It is the base class "
"for the :mod:`email` object model.  :class:`EmailMessage` provides the core "
"functionality for setting and querying header fields, for accessing message "
"bodies, and for creating or modifying structured messages."
msgstr ""
"Den centrala klassen i paketet :mod:`email` är klassen :class:"
"`EmailMessage`, som importeras från modulen :mod:`email.message`.  Det är "
"basklassen för objektmodellen :mod:`email`. :class:`EmailMessage` "
"tillhandahåller kärnfunktionaliteten för att ställa in och fråga efter "
"rubrikfält, för att komma åt meddelandekroppar och för att skapa eller ändra "
"strukturerade meddelanden."

msgid ""
"An email message consists of *headers* and a *payload* (which is also "
"referred to as the *content*).  Headers are :rfc:`5322` or :rfc:`6532` style "
"field names and values, where the field name and value are separated by a "
"colon.  The colon is not part of either the field name or the field value.  "
"The payload may be a simple text message, or a binary object, or a "
"structured sequence of sub-messages each with their own set of headers and "
"their own payload.  The latter type of payload is indicated by the message "
"having a MIME type such as :mimetype:`multipart/\\*` or :mimetype:`message/"
"rfc822`."
msgstr ""
"Ett e-postmeddelande består av *headers* och en *payload* (som också kallas "
"för *content*).  Headers är fältnamn och värden i stil med :rfc:`5322` "
"eller :rfc:`6532`, där fältnamnet och värdet separeras med ett kolon.  "
"Kolonet är inte en del av vare sig fältnamnet eller fältvärdet.  Nyttolasten "
"kan vara ett enkelt textmeddelande, ett binärt objekt eller en strukturerad "
"sekvens av undermeddelanden, vart och ett med sin egen uppsättning rubriker "
"och sin egen nyttolast.  Den senare typen av nyttolast indikeras av att "
"meddelandet har en MIME-typ som :mimetype:`multipart/\\*` eller :mimetype:"
"`message/rfc822`."

msgid ""
"The conceptual model provided by an :class:`EmailMessage` object is that of "
"an ordered dictionary of headers coupled with a *payload* that represents "
"the :rfc:`5322` body of the message, which might be a list of sub-"
"``EmailMessage`` objects.  In addition to the normal dictionary methods for "
"accessing the header names and values, there are methods for accessing "
"specialized information from the headers (for example the MIME content "
"type), for operating on the payload, for generating a serialized version of "
"the message, and for recursively walking over the object tree."
msgstr ""
"Den konceptuella modell som tillhandahålls av ett :class:`EmailMessage`-"
"objekt är en ordnad ordbok med rubriker kopplad till en *payload* som "
"representerar :rfc:`5322`-meddelandets kropp, som kan vara en lista över "
"under-`EmailMessage``-objekt.  Förutom de vanliga ordboksmetoderna för att "
"komma åt namn och värden på rubrikerna finns det metoder för att komma åt "
"specialiserad information från rubrikerna (t.ex. MIME-innehållstypen), för "
"att arbeta med nyttolasten, för att generera en serialiserad version av "
"meddelandet och för att rekursivt gå igenom objektträdet."

msgid ""
"The :class:`EmailMessage` dictionary-like interface is indexed by the header "
"names, which must be ASCII values.  The values of the dictionary are strings "
"with some extra methods.  Headers are stored and returned in case-preserving "
"form, but field names are matched case-insensitively.  The keys are ordered, "
"but unlike a real dict, there can be duplicates.  Additional methods are "
"provided for working with headers that have duplicate keys."
msgstr ""
"Det ordboksliknande gränssnittet :class:`EmailMessage` indexeras av "
"headernamnen, som måste vara ASCII-värden.  Värdena i ordboken är strängar "
"med några extra metoder.  Headers lagras och returneras i "
"skiftlägesbevarande form, men fältnamn matchas skiftlägesokänsligt.  "
"Nycklarna är ordnade, men till skillnad från en riktig dict kan det finnas "
"dubbletter.  Ytterligare metoder tillhandahålls för att arbeta med rubriker "
"som har dubbla nycklar."

msgid ""
"The *payload* is either a string or bytes object, in the case of simple "
"message objects, or a list of :class:`EmailMessage` objects, for MIME "
"container documents such as :mimetype:`multipart/\\*` and :mimetype:`message/"
"rfc822` message objects."
msgstr ""
"*payload* är antingen en sträng eller ett bytesobjekt, när det gäller enkla "
"meddelandeobjekt, eller en lista med :class:`EmailMessage`-objekt, för MIME-"
"containerdokument som :mimetype:`multipart/\\*` och :mimetype:`message/"
"rfc822`-meddelandeobjekt."

msgid ""
"If *policy* is specified use the rules it specifies to update and serialize "
"the representation of the message.  If *policy* is not set, use the :class:"
"`~email.policy.default` policy, which follows the rules of the email RFCs "
"except for line endings (instead of the RFC mandated ``\\r\\n``, it uses the "
"Python standard ``\\n`` line endings).  For more information see the :mod:"
"`~email.policy` documentation."
msgstr ""
"Om *policy* anges används de regler som anges i policyn för att uppdatera "
"och serialisera representationen av meddelandet.  Om *policy* inte anges "
"används :class:`~email.policy.default`-policyn, som följer reglerna i RFC "
"för e-post utom för radavslutningar (istället för RFC-mandatet ``\\r\\n`` "
"används Python-standarden ``\\n`` för radavslutningar).  För mer information "
"se :mod:`~email.policy`-dokumentationen."

msgid ""
"Return the entire message flattened as a string.  When optional *unixfrom* "
"is true, the envelope header is included in the returned string.  *unixfrom* "
"defaults to ``False``.  For backward compatibility with the base :class:"
"`~email.message.Message` class *maxheaderlen* is accepted, but defaults to "
"``None``, which means that by default the line length is controlled by the :"
"attr:`~email.policy.Policy.max_line_length` of the policy.  The *policy* "
"argument may be used to override the default policy obtained from the "
"message instance.  This can be used to control some of the formatting "
"produced by the method, since the specified *policy* will be passed to the :"
"class:`~email.generator.Generator`."
msgstr ""
"Returnerar hela meddelandet plattat som en sträng.  När det valfria "
"*unixfrom* är true inkluderas kuvertrubriken i den returnerade strängen.  "
"*unixfrom* är som standard ``False``.  För bakåtkompatibilitet med "
"basklassen :class:`~email.message.Message` accepteras *maxheaderlen*, men "
"standardvärdet är ``None``, vilket innebär att radlängden som standard styrs "
"av policyns :attr:`~email.policy.Policy.max_line_length`.  Argumentet "
"*policy* kan användas för att åsidosätta den standardpolicy som hämtas från "
"meddelandeinstansen.  Detta kan användas för att styra en del av den "
"formatering som produceras av metoden, eftersom den angivna *policy* kommer "
"att skickas till :class:`~email.generator.Generator`."

msgid ""
"Flattening the message may trigger changes to the :class:`EmailMessage` if "
"defaults need to be filled in to complete the transformation to a string "
"(for example, MIME boundaries may be generated or modified)."
msgstr ""
"Att göra meddelandet plattare kan leda till ändringar i :class:"
"`EmailMessage` om standardvärden måste fyllas i för att slutföra "
"omvandlingen till en sträng (till exempel kan MIME-gränser genereras eller "
"ändras)."

msgid ""
"Note that this method is provided as a convenience and may not be the most "
"useful way to serialize messages in your application, especially if you are "
"dealing with multiple messages.  See :class:`email.generator.Generator` for "
"a more flexible API for serializing messages.  Note also that this method is "
"restricted to producing messages serialized as \"7 bit clean\" when :attr:"
"`~email.policy.EmailPolicy.utf8` is ``False``, which is the default."
msgstr ""
"Observera att den här metoden tillhandahålls som en bekvämlighet och kanske "
"inte är det mest användbara sättet att serialisera meddelanden i din "
"applikation, särskilt om du hanterar flera meddelanden.  Se :class:`email."
"generator.Generator` för ett mer flexibelt API för serialisering av "
"meddelanden.  Observera också att denna metod är begränsad till att "
"producera meddelanden serialiserade som \"7 bit clean\" när :attr:`~email."
"policy.EmailPolicy.utf8` är ``False``, vilket är standard."

msgid ""
"the default behavior when *maxheaderlen* is not specified was changed from "
"defaulting to 0 to defaulting to the value of *max_line_length* from the "
"policy."
msgstr ""
"standardbeteendet när *maxheaderlen* inte anges ändrades från standardvärdet "
"0 till standardvärdet *max_line_length* från policyn."

msgid ""
"Equivalent to ``as_string(policy=self.policy.clone(utf8=True))``.  Allows "
"``str(msg)`` to produce a string containing the serialized message in a "
"readable format."
msgstr ""
"Motsvarar ``as_string(policy=self.policy.clone(utf8=True))``.  Tillåter "
"``str(msg)`` att producera en sträng som innehåller det serialiserade "
"meddelandet i ett läsbart format."

msgid ""
"the method was changed to use ``utf8=True``, thus producing an :rfc:`6531`-"
"like message representation, instead of being a direct alias for :meth:"
"`as_string`."
msgstr ""
"metoden ändrades så att den använder ``utf8=True``, vilket ger en :rfc:"
"`6531`-liknande meddelanderepresentation, istället för att vara ett direkt "
"alias för :meth:`as_string`."

msgid ""
"Return the entire message flattened as a bytes object.  When optional "
"*unixfrom* is true, the envelope header is included in the returned string.  "
"*unixfrom* defaults to ``False``.  The *policy* argument may be used to "
"override the default policy obtained from the message instance. This can be "
"used to control some of the formatting produced by the method, since the "
"specified *policy* will be passed to the :class:`~email.generator."
"BytesGenerator`."
msgstr ""
"Returnerar hela meddelandet plattat som ett bytesobjekt.  När det valfria "
"*unixfrom* är true inkluderas kuvertrubriken i den returnerade strängen.  "
"*unixfrom* är som standard ``False``.  Argumentet *policy* kan användas för "
"att åsidosätta den standardpolicy som hämtas från meddelandeinstansen. Detta "
"kan användas för att kontrollera en del av formateringen som produceras av "
"metoden, eftersom den angivna *policyn* kommer att skickas till :class:"
"`~email.generator.BytesGenerator`."

msgid ""
"Note that this method is provided as a convenience and may not be the most "
"useful way to serialize messages in your application, especially if you are "
"dealing with multiple messages.  See :class:`email.generator.BytesGenerator` "
"for a more flexible API for serializing messages."
msgstr ""
"Observera att denna metod tillhandahålls som en bekvämlighet och kanske inte "
"är det mest användbara sättet att serialisera meddelanden i din applikation, "
"särskilt om du hanterar flera meddelanden.  Se :class:`email.generator."
"BytesGenerator` för ett mer flexibelt API för serialisering av meddelanden."

msgid ""
"Equivalent to :meth:`.as_bytes`.  Allows ``bytes(msg)`` to produce a bytes "
"object containing the serialized message."
msgstr ""
"Motsvarar :meth:`.as_bytes`.  Tillåter ``bytes(msg)`` att producera ett "
"bytes-objekt som innehåller det serialiserade meddelandet."

msgid ""
"Return ``True`` if the message's payload is a list of sub-\\ :class:"
"`EmailMessage` objects, otherwise return ``False``.  When :meth:"
"`is_multipart` returns ``False``, the payload should be a string object "
"(which might be a CTE encoded binary payload).  Note that :meth:"
"`is_multipart` returning ``True`` does not necessarily mean that \"msg."
"get_content_maintype() == 'multipart'\" will return the ``True``. For "
"example, ``is_multipart`` will return ``True`` when the :class:"
"`EmailMessage` is of type ``message/rfc822``."
msgstr ""
"Returnerar ``True`` om meddelandets nyttolast är en lista med sub-objekt av :"
"class:`EmailMessage`, annars returneras ``False``.  När :meth:`is_multipart` "
"returnerar ``False``, bör nyttolasten vara ett strängobjekt (som kan vara en "
"CTE-kodad binär nyttolast).  Observera att om :meth:`is_multipart` "
"returnerar ``True`` betyder det inte nödvändigtvis att \"msg."
"get_content_maintype() == 'multipart'\" kommer att returnera ``True``. Till "
"exempel kommer ``is_multipart`` att returnera ``True`` när :class:"
"`EmailMessage` är av typen ``message/rfc822``."

msgid ""
"Set the message's envelope header to *unixfrom*, which should be a string.  "
"(See :class:`~mailbox.mboxMessage` for a brief description of this header.)"
msgstr ""
"Ställer in meddelandets kuverthuvud till *unixfrom*, som ska vara en "
"sträng.  (Se :class:`~mailbox.mboxMessage` för en kort beskrivning av detta "
"huvud)"

msgid ""
"Return the message's envelope header.  Defaults to ``None`` if the envelope "
"header was never set."
msgstr ""
"Returnerar meddelandets kuverthuvud.  Standardvärdet är ``None`` om "
"kuverthuvudet aldrig har angetts."

msgid ""
"The following methods implement the mapping-like interface for accessing the "
"message's headers.  Note that there are some semantic differences between "
"these methods and a normal mapping (i.e. dictionary) interface.  For "
"example, in a dictionary there are no duplicate keys, but here there may be "
"duplicate message headers.  Also, in dictionaries there is no guaranteed "
"order to the keys returned by :meth:`keys`, but in an :class:`EmailMessage` "
"object, headers are always returned in the order they appeared in the "
"original message, or in which they were added to the message later.  Any "
"header deleted and then re-added is always appended to the end of the header "
"list."
msgstr ""
"Följande metoder implementerar det mappningsliknande gränssnittet för "
"åtkomst till meddelandets rubriker.  Observera att det finns vissa "
"semantiska skillnader mellan dessa metoder och ett normalt "
"mappningsgränssnitt (dvs. ett dictionary-gränssnitt).  I en dictionary finns "
"det t.ex. inga duplicerade nycklar, men här kan det finnas duplicerade "
"meddelandehuvuden.  I ordböcker finns det inte heller någon garanterad "
"ordning på de nycklar som returneras av :meth:`keys`, men i ett :class:"
"`EmailMessage`-objekt returneras alltid rubrikerna i den ordning de förekom "
"i det ursprungliga meddelandet eller i den ordning de senare lades till i "
"meddelandet.  En header som tagits bort och sedan lagts till igen läggs "
"alltid till i slutet av headerlistan."

msgid ""
"These semantic differences are intentional and are biased toward convenience "
"in the most common use cases."
msgstr ""
"Dessa semantiska skillnader är avsiktliga och syftar till att underlätta i "
"de vanligaste användningsfallen."

msgid ""
"Note that in all cases, any envelope header present in the message is not "
"included in the mapping interface."
msgstr ""
"Observera att i samtliga fall ingår inte eventuella kuvertrubriker som finns "
"i meddelandet i mappningsgränssnittet."

msgid "Return the total number of headers, including duplicates."
msgstr "Returnerar det totala antalet headers, inklusive dubbletter."

msgid ""
"Return ``True`` if the message object has a field named *name*. Matching is "
"done without regard to case and *name* does not include the trailing colon.  "
"Used for the ``in`` operator.  For example::"
msgstr ""
"Returnerar ``True`` om meddelandeobjektet har ett fält med namnet *name*. "
"Matchning sker utan hänsyn till skiftlägesskillnader och *namn* innehåller "
"inte efterföljande kolon.  Används för operatorn ``in``.  Till exempel::"

msgid ""
"if 'message-id' in myMessage:\n"
"   print('Message-ID:', myMessage['message-id'])"
msgstr ""
"if 'message-id' in myMessage:\n"
"   print('Message-ID:', myMessage['message-id'])"

msgid ""
"Return the value of the named header field.  *name* does not include the "
"colon field separator.  If the header is missing, ``None`` is returned; a :"
"exc:`KeyError` is never raised."
msgstr ""
"Returnerar värdet för det namngivna rubrikfältet.  *name* inkluderar inte "
"fältseparatorn kolon.  Om rubrikfältet saknas returneras ``None``; ett :exc:"
"`KeyError` genereras aldrig."

msgid ""
"Note that if the named field appears more than once in the message's "
"headers, exactly which of those field values will be returned is undefined.  "
"Use the :meth:`get_all` method to get the values of all the extant headers "
"named *name*."
msgstr ""
"Observera att om det namngivna fältet förekommer mer än en gång i "
"meddelandets rubriker, är det odefinierat exakt vilket av dessa fältvärden "
"som kommer att returneras.  Använd metoden :meth:`get_all` för att hämta "
"värdena för alla befintliga rubriker med namnet *namn*."

msgid ""
"Using the standard (non-``compat32``) policies, the returned value is an "
"instance of a subclass of :class:`email.headerregistry.BaseHeader`."
msgstr ""
"Med standardprinciperna (icke-``compat32``) är det returnerade värdet en "
"instans av en underklass till :class:`email.headerregistry.BaseHeader`."

msgid ""
"Add a header to the message with field name *name* and value *val*.  The "
"field is appended to the end of the message's existing headers."
msgstr ""
"Lägg till en rubrik i meddelandet med fältnamnet *name* och värdet *val*.  "
"Fältet läggs till i slutet av meddelandets befintliga rubriker."

msgid ""
"Note that this does *not* overwrite or delete any existing header with the "
"same name.  If you want to ensure that the new header is the only one "
"present in the message with field name *name*, delete the field first, e.g.::"
msgstr ""
"Observera att detta *inte* skriver över eller raderar någon befintlig header "
"med samma namn.  Om du vill vara säker på att det nya sidhuvudet är det enda "
"som finns i meddelandet med fältnamnet *namn*, raderar du fältet först, t."
"ex.::"

msgid ""
"del msg['subject']\n"
"msg['subject'] = 'Python roolz!'"
msgstr ""
"del msg['subject']\n"
"msg['subject'] = 'Python roolz!'"

msgid ""
"If the :mod:`policy <email.policy>` defines certain headers to be unique (as "
"the standard policies do), this method may raise a :exc:`ValueError` when an "
"attempt is made to assign a value to such a header when one already exists.  "
"This behavior is intentional for consistency's sake, but do not depend on it "
"as we may choose to make such assignments do an automatic deletion of the "
"existing header in the future."
msgstr ""
"Om :mod:`policy <email.policy>` definierar att vissa rubriker ska vara unika "
"(som standardpolicyerna gör), kan den här metoden ge upphov till ett :exc:"
"`ValueError` när ett försök görs att tilldela ett värde till en sådan rubrik "
"när det redan finns ett.  Detta beteende är avsiktligt för konsekvensens "
"skull, men var inte beroende av det eftersom vi kan välja att göra sådana "
"tilldelningar till en automatisk radering av den befintliga rubriken i "
"framtiden."

msgid ""
"Delete all occurrences of the field with name *name* from the message's "
"headers.  No exception is raised if the named field isn't present in the "
"headers."
msgstr ""
"Ta bort alla förekomster av fältet med namnet *namn* från meddelandets "
"rubriker.  Inget undantag görs om det namngivna fältet inte finns med i "
"sidhuvudet."

msgid "Return a list of all the message's header field names."
msgstr "Returnerar en lista med alla namn på fält i meddelandets header."

msgid "Return a list of all the message's field values."
msgstr "Returnerar en lista med alla fältvärden i meddelandet."

msgid ""
"Return a list of 2-tuples containing all the message's field headers and "
"values."
msgstr ""
"Returnerar en lista med 2-tuples som innehåller alla meddelandets "
"fältrubriker och värden."

msgid ""
"Return the value of the named header field.  This is identical to :meth:"
"`~object.__getitem__` except that optional *failobj* is returned if the "
"named header is missing (*failobj* defaults to ``None``)."
msgstr ""
"Returnerar värdet för det namngivna rubrikfältet.  Detta är identiskt med :"
"meth:`~object.__getitem__` förutom att den valfria *failobj* returneras om "
"det namngivna huvudfältet saknas (*failobj* är som standard ``None``)."

msgid "Here are some additional useful header related methods:"
msgstr "Här är några ytterligare användbara metoder för header:"

msgid ""
"Return a list of all the values for the field named *name*. If there are no "
"such named headers in the message, *failobj* is returned (defaults to "
"``None``)."
msgstr ""
"Returnerar en lista med alla värden för fältet med namnet *name*. Om det "
"inte finns några sådana namngivna rubriker i meddelandet returneras "
"*failobj* (standardvärde är ``None``)."

msgid ""
"Extended header setting.  This method is similar to :meth:`__setitem__` "
"except that additional header parameters can be provided as keyword "
"arguments.  *_name* is the header field to add and *_value* is the *primary* "
"value for the header."
msgstr ""
"Utökad inställning av sidhuvud.  Den här metoden liknar :meth:`__setitem__` "
"förutom att ytterligare rubrikparametrar kan anges som nyckelordsargument.  "
"*_name* är rubrikfältet som ska läggas till och *_value* är det *primära* "
"värdet för rubriken."

msgid ""
"For each item in the keyword argument dictionary *_params*, the key is taken "
"as the parameter name, with underscores converted to dashes (since dashes "
"are illegal in Python identifiers).  Normally, the parameter will be added "
"as ``key=\"value\"`` unless the value is ``None``, in which case only the "
"key will be added."
msgstr ""
"För varje objekt i nyckelordets argumentordbok *_params* tas nyckeln som "
"parameternamn, med understrykningar konverterade till bindestreck (eftersom "
"bindestreck är olagliga i Python-identifierare).  Normalt kommer parametern "
"att läggas till som ``key=\"value\"`` om inte värdet är ``None``, i vilket "
"fall endast nyckeln kommer att läggas till."

msgid ""
"If the value contains non-ASCII characters, the charset and language may be "
"explicitly controlled by specifying the value as a three tuple in the format "
"``(CHARSET, LANGUAGE, VALUE)``, where ``CHARSET`` is a string naming the "
"charset to be used to encode the value, ``LANGUAGE`` can usually be set to "
"``None`` or the empty string (see :rfc:`2231` for other possibilities), and "
"``VALUE`` is the string value containing non-ASCII code points.  If a three "
"tuple is not passed and the value contains non-ASCII characters, it is "
"automatically encoded in :rfc:`2231` format using a ``CHARSET`` of ``utf-8`` "
"and a ``LANGUAGE`` of ``None``."
msgstr ""
"Om värdet innehåller icke-ASCII-tecken kan teckenuppsättningen och språket "
"styras explicit genom att ange värdet som en tredelad tupel i formatet "
"``(CHARSET, LANGUAGE, VALUE)``, där ``CHARSET`` är en sträng som namnger den "
"teckenuppsättning som ska användas för att koda värdet, ``LANGUAGE`` kan "
"vanligtvis sättas till ``None`` eller den tomma strängen (se :rfc:`2231` för "
"andra möjligheter), och ``VALUE`` är strängvärdet som innehåller icke-ASCII-"
"kodpunkter.  Om en tupel med tre inte skickas och värdet innehåller icke-"
"ASCII-tecken, kodas det automatiskt i :rfc:`2231`-format med ``CHARSET`` "
"``utf-8`` och ``LANGUAGE`` ``None``."

msgid "Here is an example::"
msgstr "Här är ett exempel::"

msgid "msg.add_header('Content-Disposition', 'attachment', filename='bud.gif')"
msgstr ""
"msg.add_header('Content-Disposition', 'attachment', filename='bud.gif')"

msgid "This will add a header that looks like ::"
msgstr "Detta kommer att lägga till en rubrik som ser ut som ::"

msgid "Content-Disposition: attachment; filename=\"bud.gif\""
msgstr "Content-Disposition: attachment; filename=\"bud.gif\""

msgid "An example of the extended interface with non-ASCII characters::"
msgstr "Ett exempel på det utökade gränssnittet med icke-ASCII-tecken::"

msgid ""
"msg.add_header('Content-Disposition', 'attachment',\n"
"               filename=('iso-8859-1', '', 'Fußballer.ppt'))"
msgstr ""
"msg.add_header('Content-Disposition', 'attachment',\n"
"               filename=('iso-8859-1', '', 'Fußballer.ppt'))"

msgid ""
"Replace a header.  Replace the first header found in the message that "
"matches *_name*, retaining header order and field name case of the original "
"header.  If no matching header is found, raise a :exc:`KeyError`."
msgstr ""
"Ersätt ett huvud.  Ersätt den första headern som hittas i meddelandet som "
"matchar *_namn*, med bibehållen headerordning och fältnamn i "
"originalheaderns versaler.  Om inget matchande huvud hittas, uppstår ett :"
"exc:`KeyError`."

msgid ""
"Return the message's content type, coerced to lower case of the form :"
"mimetype:`maintype/subtype`.  If there is no :mailheader:`Content-Type` "
"header in the message return the value returned by :meth:"
"`get_default_type`.  If the :mailheader:`Content-Type` header is invalid, "
"return ``text/plain``."
msgstr ""
"Returnerar meddelandets innehållstyp, tvingad till gemener av formen :"
"mimetype:`maintype/subtype`.  Om det inte finns något :mailheader:`Content-"
"Type`-huvud i meddelandet returneras det värde som returneras av :meth:"
"`get_default_type`.  Om rubriken :mailheader:`Content-Type` är ogiltig, "
"returneras ``text/plain``."

msgid ""
"(According to :rfc:`2045`, messages always have a default type, :meth:"
"`get_content_type` will always return a value.  :rfc:`2045` defines a "
"message's default type to be :mimetype:`text/plain` unless it appears inside "
"a :mimetype:`multipart/digest` container, in which case it would be :"
"mimetype:`message/rfc822`.  If the :mailheader:`Content-Type` header has an "
"invalid type specification, :rfc:`2045` mandates that the default type be :"
"mimetype:`text/plain`.)"
msgstr ""
"(Enligt :rfc:`2045` har meddelanden alltid en standardtyp, :meth:"
"`get_content_type` kommer alltid att returnera ett värde. :rfc:`2045` "
"definierar ett meddelandes standardtyp till att vara :mimetype:`text/plain` "
"såvida det inte visas i en :mimetype:`multipart/digest`-container, i vilket "
"fall det skulle vara :mimetype:`message/rfc822`.  Om rubriken :mailheader:"
"`Content-Type` har en ogiltig typspecifikation, föreskriver :rfc:`2045` att "
"standardtypen skall vara :mimetype:`text/plain`)"

msgid ""
"Return the message's main content type.  This is the :mimetype:`maintype` "
"part of the string returned by :meth:`get_content_type`."
msgstr ""
"Returnerar meddelandets huvudsakliga innehållstyp.  Detta är :mimetype:"
"`maintype`-delen av strängen som returneras av :meth:`get_content_type`."

msgid ""
"Return the message's sub-content type.  This is the :mimetype:`subtype` part "
"of the string returned by :meth:`get_content_type`."
msgstr ""
"Returnerar meddelandets typ av underinnehåll.  Detta är :mimetype:`subtype`-"
"delen av strängen som returneras av :meth:`get_content_type`."

msgid ""
"Return the default content type.  Most messages have a default content type "
"of :mimetype:`text/plain`, except for messages that are subparts of :"
"mimetype:`multipart/digest` containers.  Such subparts have a default "
"content type of :mimetype:`message/rfc822`."
msgstr ""
"Returnerar den förvalda innehållstypen.  De flesta meddelanden har "
"standardinnehållstypen :mimetype:`text/plain`, utom meddelanden som är "
"underdelar av behållare av typen :mimetype:`multipart/digest`.  Sådana "
"underdelar har en standardinnehållstyp av typen :mimetype:`message/rfc822`."

msgid ""
"Set the default content type.  *ctype* should either be :mimetype:`text/"
"plain` or :mimetype:`message/rfc822`, although this is not enforced.  The "
"default content type is not stored in the :mailheader:`Content-Type` header, "
"so it only affects the return value of the ``get_content_type`` methods when "
"no :mailheader:`Content-Type` header is present in the message."
msgstr ""
"Ställer in standardinnehållstypen.  *ctype* bör antingen vara :mimetype:"
"`text/plain` eller :mimetype:`message/rfc822`, även om detta inte är "
"obligatoriskt.  Standardinnehållstypen lagras inte i :mailheader:`Content-"
"Type`-rubriken, så den påverkar bara returvärdet för metoderna "
"``get_content_type`` när ingen :mailheader:`Content-Type`-rubrik finns i "
"meddelandet."

msgid ""
"Set a parameter in the :mailheader:`Content-Type` header.  If the parameter "
"already exists in the header, replace its value with *value*. When *header* "
"is ``Content-Type`` (the default) and the header does not yet exist in the "
"message, add it, set its value to :mimetype:`text/plain`, and append the new "
"parameter value.  Optional *header* specifies an alternative header to :"
"mailheader:`Content-Type`."
msgstr ""
"Ställer in en parameter i :mailheader:`Content-Type`-huvudet.  Om parametern "
"redan finns i rubriken ersätts dess värde med *värde*. När *header* är "
"``Content-Type`` (standard) och rubriken ännu inte finns i meddelandet, lägg "
"till den, sätt dess värde till :mimetype:`text/plain` och lägg till det nya "
"parametervärdet.  Det valfria *header* anger ett alternativt huvud till :"
"mailheader:`Content-Type`."

msgid ""
"If the value contains non-ASCII characters, the charset and language may be "
"explicitly specified using the optional *charset* and *language* "
"parameters.  Optional *language* specifies the :rfc:`2231` language, "
"defaulting to the empty string.  Both *charset* and *language* should be "
"strings.  The default is to use the ``utf8`` *charset* and ``None`` for the "
"*language*."
msgstr ""
"Om värdet innehåller icke-ASCII-tecken kan teckenuppsättning och språk anges "
"explicit med hjälp av de valfria parametrarna *charset* och *language*.  Den "
"valfria parametern *language* anger språket enligt :rfc:`2231` och är som "
"standard den tomma strängen.  Både *charset* och *language* bör vara "
"strängar.  Standardinställningen är att använda ``utf8`` *charset* och "
"``None`` för *language*."

msgid ""
"If *replace* is ``False`` (the default) the header is moved to the end of "
"the list of headers.  If *replace* is ``True``, the header will be updated "
"in place."
msgstr ""
"Om *replace* är ``False`` (standard) flyttas rubriken till slutet av listan "
"med rubriker.  Om *replace* är ``True`` kommer rubriken att uppdateras på "
"plats."

msgid ""
"Use of the *requote* parameter with :class:`EmailMessage` objects is "
"deprecated."
msgstr ""
"Användningen av parametern *requote* med :class:`EmailMessage`-objekt är "
"föråldrad."

msgid ""
"Note that existing parameter values of headers may be accessed through the :"
"attr:`~email.headerregistry.ParameterizedMIMEHeader.params` attribute of the "
"header value (for example, ``msg['Content-Type'].params['charset']``)."
msgstr ""
"Observera att befintliga parametervärden för rubriker kan nås via "
"attributet :attr:`~email.headerregistry.ParameterizedMIMEHeader.params` för "
"rubrikvärdet (t.ex. ``msg['Content-Type'].params['charset']``)."

msgid "``replace`` keyword was added."
msgstr "nyckelordet ``replace`` har lagts till."

msgid ""
"Remove the given parameter completely from the :mailheader:`Content-Type` "
"header.  The header will be re-written in place without the parameter or its "
"value.  Optional *header* specifies an alternative to :mailheader:`Content-"
"Type`."
msgstr ""
"Tar bort den angivna parametern helt från :mailheader:`Content-Type`-"
"huvudet.  Rubriken kommer att skrivas om på plats utan parametern eller dess "
"värde.  Det valfria *header* anger ett alternativ till :mailheader:`Content-"
"Type`."

msgid ""
"Return the value of the ``filename`` parameter of the :mailheader:`Content-"
"Disposition` header of the message.  If the header does not have a "
"``filename`` parameter, this method falls back to looking for the ``name`` "
"parameter on the :mailheader:`Content-Type` header.  If neither is found, or "
"the header is missing, then *failobj* is returned. The returned string will "
"always be unquoted as per :func:`email.utils.unquote`."
msgstr ""
"Returnerar värdet på parametern ``filename`` i :mailheader:`Content-"
"Disposition`-rubriken i meddelandet.  Om rubriken inte har någon parameter "
"för ``filename``, går denna metod tillbaka till att leta efter parametern "
"``name`` i rubriken :mailheader:`Content-Type`.  Om ingen av dessa hittas, "
"eller om rubriken saknas, returneras *failobj*. Den returnerade strängen "
"kommer alltid att vara ociterad enligt :func:`email.utils.unquote`."

msgid ""
"Return the value of the ``boundary`` parameter of the :mailheader:`Content-"
"Type` header of the message, or *failobj* if either the header is missing, "
"or has no ``boundary`` parameter.  The returned string will always be "
"unquoted as per :func:`email.utils.unquote`."
msgstr ""
"Returnerar värdet på parametern ``boundary`` i :mailheader:`Content-Type`-"
"rubriken i meddelandet, eller *failobj* om rubriken saknas eller inte har "
"någon parameter för ``boundary``.  Den returnerade strängen kommer alltid "
"att vara ociterad enligt :func:`email.utils.unquote`."

msgid ""
"Set the ``boundary`` parameter of the :mailheader:`Content-Type` header to "
"*boundary*.  :meth:`set_boundary` will always quote *boundary* if "
"necessary.  A :exc:`~email.errors.HeaderParseError` is raised if the message "
"object has no :mailheader:`Content-Type` header."
msgstr ""
"Ställ in parametern ``boundary`` i rubriken :mailheader:`Content-Type` till "
"*boundary*. :meth:`set_boundary` kommer alltid att citera *boundary* om det "
"behövs.  Ett :exc:`~email.errors.HeaderParseError` uppstår om "
"meddelandeobjektet inte har något :mailheader:`Content-Type`-huvud."

msgid ""
"Note that using this method is subtly different from deleting the old :"
"mailheader:`Content-Type` header and adding a new one with the new boundary "
"via :meth:`add_header`, because :meth:`set_boundary` preserves the order of "
"the :mailheader:`Content-Type` header in the list of headers."
msgstr ""
"Observera att denna metod skiljer sig något från att ta bort den gamla :"
"mailheader:`Content-Type`-rubriken och lägga till en ny med den nya gränsen "
"via :meth:`add_header`, eftersom :meth:`set_boundary` bevarar ordningen på :"
"mailheader:`Content-Type`-rubriken i listan över rubriker."

msgid ""
"Return the ``charset`` parameter of the :mailheader:`Content-Type` header, "
"coerced to lower case.  If there is no :mailheader:`Content-Type` header, or "
"if that header has no ``charset`` parameter, *failobj* is returned."
msgstr ""
"Returnerar parametern ``charset`` för rubriken :mailheader:`Content-Type`, "
"omgjord till gemener.  Om det inte finns någon :mailheader:`Content-Type` "
"header, eller om den headern inte har någon ``charset`` parameter, "
"returneras *failobj*."

msgid ""
"Return a list containing the character set names in the message.  If the "
"message is a :mimetype:`multipart`, then the list will contain one element "
"for each subpart in the payload, otherwise, it will be a list of length 1."
msgstr ""
"Returnerar en lista som innehåller teckenuppsättningsnamnen i meddelandet.  "
"Om meddelandet är en :mimetype:`multipart`, kommer listan att innehålla ett "
"element för varje underdel i nyttolasten, annars kommer det att vara en "
"lista med längden 1."

msgid ""
"Each item in the list will be a string which is the value of the ``charset`` "
"parameter in the :mailheader:`Content-Type` header for the represented "
"subpart.  If the subpart has no :mailheader:`Content-Type` header, no "
"``charset`` parameter, or is not of the :mimetype:`text` main MIME type, "
"then that item in the returned list will be *failobj*."
msgstr ""
"Varje post i listan kommer att vara en sträng som är värdet på parametern "
"``charset`` i rubriken :mailheader:`Content-Type` för den representerade "
"underdelen.  Om underdelen inte har något :mailheader:`Content-Type`-huvud, "
"ingen ``charset``-parameter eller inte är av huvud-MIME-typen :mimetype:"
"`text`, kommer den posten i den returnerade listan att vara *failobj*."

msgid ""
"Return ``True`` if there is a :mailheader:`Content-Disposition` header and "
"its (case insensitive) value is ``attachment``, ``False`` otherwise."
msgstr ""
"Returnerar ``True`` om det finns en :mailheader:`Content-Disposition` header "
"och dess (skiftlägesokänsliga) värde är ``attachment``, annars ``False``."

msgid ""
"is_attachment is now a method instead of a property, for consistency with :"
"meth:`~email.message.Message.is_multipart`."
msgstr ""
"is_attachment är nu en metod istället för en egenskap, för överensstämmelse "
"med :meth:`~email.message.Message.is_multipart`."

msgid ""
"Return the lowercased value (without parameters) of the message's :"
"mailheader:`Content-Disposition` header if it has one, or ``None``.  The "
"possible values for this method are *inline*, *attachment* or ``None`` if "
"the message follows :rfc:`2183`."
msgstr ""
"Returnerar det gemena värdet (utan parametrar) av meddelandets :mailheader:"
"`Content-Disposition`-huvud om det har ett sådant, eller ``None``.  De "
"möjliga värdena för denna metod är *inline*, *attachment* eller ``None`` om "
"meddelandet följer :rfc:`2183`."

msgid ""
"The following methods relate to interrogating and manipulating the content "
"(payload) of the message."
msgstr ""
"Följande metoder avser avfrågning och manipulering av innehållet "
"(nyttolasten) i meddelandet."

msgid ""
"The :meth:`walk` method is an all-purpose generator which can be used to "
"iterate over all the parts and subparts of a message object tree, in depth-"
"first traversal order.  You will typically use :meth:`walk` as the iterator "
"in a ``for`` loop; each iteration returns the next subpart."
msgstr ""
"Metoden :meth:`walk` är en allroundgenerator som kan användas för att "
"iterera över alla delar och underdelar i ett meddelandeobjektträd, i "
"djupförsta traversalordning.  Du kommer vanligtvis att använda :meth:`walk` "
"som iterator i en ``for``-loop; varje iteration returnerar nästa underdel."

msgid ""
"Here's an example that prints the MIME type of every part of a multipart "
"message structure:"
msgstr ""
"Här är ett exempel som skriver ut MIME-typen för varje del i en flerdelad "
"meddelandestruktur:"

msgid ""
">>> for part in msg.walk():\n"
"...     print(part.get_content_type())\n"
"multipart/report\n"
"text/plain\n"
"message/delivery-status\n"
"text/plain\n"
"text/plain\n"
"message/rfc822\n"
"text/plain"
msgstr ""
">>> for part in msg.walk():\n"
"...     print(part.get_content_type())\n"
"multipart/report\n"
"text/plain\n"
"message/delivery-status\n"
"text/plain\n"
"text/plain\n"
"message/rfc822\n"
"text/plain"

msgid ""
"``walk`` iterates over the subparts of any part where :meth:`is_multipart` "
"returns ``True``, even though ``msg.get_content_maintype() == 'multipart'`` "
"may return ``False``.  We can see this in our example by making use of the "
"``_structure`` debug helper function:"
msgstr ""
"``walk`` itererar över underdelarna av alla delar där :meth:`is_multipart`` "
"returnerar ``True``, även om ``msg.get_content_maintype() == 'multipart'`` "
"kan returnera ``False``.  Vi kan se detta i vårt exempel genom att använda "
"hjälpfunktionen ``_structure`` debug:"

msgid ""
">>> from email.iterators import _structure\n"
">>> for part in msg.walk():\n"
"...     print(part.get_content_maintype() == 'multipart',\n"
"...           part.is_multipart())\n"
"True True\n"
"False False\n"
"False True\n"
"False False\n"
"False False\n"
"False True\n"
"False False\n"
">>> _structure(msg)\n"
"multipart/report\n"
"    text/plain\n"
"    message/delivery-status\n"
"        text/plain\n"
"        text/plain\n"
"    message/rfc822\n"
"        text/plain"
msgstr ""
">>> from email.iterators import _structure\n"
">>> for part in msg.walk():\n"
"...     print(part.get_content_maintype() == 'multipart',\n"
"...           part.is_multipart())\n"
"True True\n"
"False False\n"
"False True\n"
"False False\n"
"False False\n"
"False True\n"
"False False\n"
">>> _structure(msg)\n"
"multipart/report\n"
"    text/plain\n"
"    message/delivery-status\n"
"        text/plain\n"
"        text/plain\n"
"    message/rfc822\n"
"        text/plain"

msgid ""
"Here the ``message`` parts are not ``multiparts``, but they do contain "
"subparts. ``is_multipart()`` returns ``True`` and ``walk`` descends into the "
"subparts."
msgstr ""
"Här är ``message`` delarna inte ``multiparts``, men de innehåller subparts. "
"``is_multipart()`` returnerar ``True`` och ``walk`` går ner i underdelarna."

msgid ""
"Return the MIME part that is the best candidate to be the \"body\" of the "
"message."
msgstr ""
"Returnerar den MIME-del som är den bästa kandidaten för att vara \"body\" i "
"meddelandet."

msgid ""
"*preferencelist* must be a sequence of strings from the set ``related``, "
"``html``, and ``plain``, and indicates the order of preference for the "
"content type of the part returned."
msgstr ""
"*preferencelist* måste vara en sekvens av strängar från uppsättningen "
"``related``, ``html`` och ``plain``, och anger preferensordningen för "
"innehållstypen för den returnerade delen."

msgid ""
"Start looking for candidate matches with the object on which the "
"``get_body`` method is called."
msgstr ""
"Börja leta efter kandidatmatchningar med det objekt som metoden ``get_body`` "
"anropas på."

msgid ""
"If ``related`` is not included in *preferencelist*, consider the root part "
"(or subpart of the root part) of any related encountered as a candidate if "
"the (sub-)part matches a preference."
msgstr ""
"Om ``related`` inte ingår i *preferencelist*, betrakta rotdelen (eller "
"underdelen av rotdelen) av alla relaterade som påträffas som en kandidat om "
"(under)delen matchar en preferens."

msgid ""
"When encountering a ``multipart/related``, check the ``start`` parameter and "
"if a part with a matching :mailheader:`Content-ID` is found, consider only "
"it when looking for candidate matches.  Otherwise consider only the first "
"(default root) part of the ``multipart/related``."
msgstr ""
"När du stöter på en ``multipart/related``, kontrollera ``start`` parametern "
"och om en del med en matchande :mailheader:`Content-ID` hittas, beakta "
"endast den när du letar efter kandidatmatchningar.  I annat fall beaktas "
"endast den första (standardrot) delen av ``multipart/related``."

msgid ""
"If a part has a :mailheader:`Content-Disposition` header, only consider the "
"part a candidate match if the value of the header is ``inline``."
msgstr ""
"Om en del har ett :mailheader:`Content-Disposition`-huvud, ska delen endast "
"betraktas som en kandidatmatchning om värdet på huvudet är ``inline``."

msgid ""
"If none of the candidates matches any of the preferences in "
"*preferencelist*, return ``None``."
msgstr ""
"Om ingen av kandidaterna matchar någon av preferenserna i *preferencelist*, "
"returneras ``None``."

msgid ""
"Notes: (1) For most applications the only *preferencelist* combinations that "
"really make sense are ``('plain',)``, ``('html', 'plain')``, and the default "
"``('related', 'html', 'plain')``.  (2) Because matching starts with the "
"object on which ``get_body`` is called, calling ``get_body`` on a "
"``multipart/related`` will return the object itself unless *preferencelist* "
"has a non-default value. (3) Messages (or message parts) that do not specify "
"a :mailheader:`Content-Type` or whose :mailheader:`Content-Type` header is "
"invalid will be treated as if they are of type ``text/plain``, which may "
"occasionally cause ``get_body`` to return unexpected results."
msgstr ""
"Anmärkningar: (1) För de flesta tillämpningar är de enda *preferencelist*-"
"kombinationerna som verkligen är meningsfulla ``('plain',)``, ``('html', "
"'plain')`` och standardalternativet ``('related', 'html', 'plain')``.  (2) "
"Eftersom matchningen börjar med det objekt som ``get_body`` anropas på, "
"kommer anrop av ``get_body`` på en ``multipart/related`` att returnera "
"själva objektet om inte *preferencelist* har ett annat värde än "
"standardvärdet. (3) Meddelanden (eller meddelandedelar) som inte anger "
"någon :mailheader:`Content-Type` eller vars :mailheader:`Content-Type`-"
"rubrik är ogiltig kommer att behandlas som om de vore av typen ``text/"
"plain``, vilket ibland kan leda till att ``get_body`` ger oväntade resultat."

msgid ""
"Return an iterator over all of the immediate sub-parts of the message that "
"are not candidate \"body\" parts.  That is, skip the first occurrence of "
"each of ``text/plain``, ``text/html``, ``multipart/related``, or ``multipart/"
"alternative`` (unless they are explicitly marked as attachments via :"
"mailheader:`Content-Disposition: attachment`), and return all remaining "
"parts.  When applied directly to a ``multipart/related``, return an iterator "
"over the all the related parts except the root part (ie: the part pointed to "
"by the ``start`` parameter, or the first part if there is no ``start`` "
"parameter or the ``start`` parameter doesn't match the :mailheader:`Content-"
"ID` of any of the parts).  When applied directly to a ``multipart/"
"alternative`` or a non-``multipart``, return an empty iterator."
msgstr ""
"Returnerar en iterator över alla omedelbara underdelar av meddelandet som "
"inte är kandidat-\"body\"-delar.  Det vill säga, hoppa över den första "
"förekomsten av var och en av ``text/plain``, ``text/html``, ``multipart/"
"related``, eller ``multipart/alternative`` (såvida de inte uttryckligen är "
"markerade som bilagor via :mailheader:`Content-Disposition: attachment`), "
"och returnera alla återstående delar.  När det tillämpas direkt på en "
"``multipart/related``, returneras en iterator över alla relaterade delar "
"utom rotdelen (dvs. den del som pekas ut av parametern ``start``, eller den "
"första delen om det inte finns någon parameter ``start`` eller om parametern "
"``start`` inte matchar :mailheader:`Content-ID` för någon av delarna).  När "
"den tillämpas direkt på en ``multipart/alternative`` eller en icke-"
"``multipart``, returneras en tom iterator."

msgid ""
"Return an iterator over all of the immediate sub-parts of the message, which "
"will be empty for a non-``multipart``.  (See also :meth:`~email.message."
"EmailMessage.walk`.)"
msgstr ""
"Returnerar en iterator över alla omedelbara underdelar av meddelandet, som "
"kommer att vara tom för en icke-``multipart``.  (Se även :meth:`~email."
"message.EmailMessage.walk`.)"

msgid ""
"Call the :meth:`~email.contentmanager.ContentManager.get_content` method of "
"the *content_manager*, passing self as the message object, and passing along "
"any other arguments or keywords as additional arguments.  If "
"*content_manager* is not specified, use the ``content_manager`` specified by "
"the current :mod:`~email.policy`."
msgstr ""
"Anropa metoden :meth:`~email.contentmanager.ContentManager.get_content` för "
"*content_manager*, med self som meddelandeobjekt och eventuella andra "
"argument eller nyckelord som ytterligare argument.  Om *content_manager* "
"inte anges, används den ``content_manager`` som anges av den aktuella :mod:"
"`~email.policy`."

msgid ""
"Call the :meth:`~email.contentmanager.ContentManager.set_content` method of "
"the *content_manager*, passing self as the message object, and passing along "
"any other arguments or keywords as additional arguments.  If "
"*content_manager* is not specified, use the ``content_manager`` specified by "
"the current :mod:`~email.policy`."
msgstr ""
"Anropa metoden :meth:`~email.contentmanager.ContentManager.set_content` för "
"*content_manager*, med self som meddelandeobjekt och eventuella andra "
"argument eller nyckelord som ytterligare argument.  Om *content_manager* "
"inte anges, används den ``content_manager`` som anges av den aktuella :mod:"
"`~email.policy`."

msgid ""
"Convert a non-``multipart`` message into a ``multipart/related`` message, "
"moving any existing :mailheader:`Content-` headers and payload into a (new) "
"first part of the ``multipart``.  If *boundary* is specified, use it as the "
"boundary string in the multipart, otherwise leave the boundary to be "
"automatically created when it is needed (for example, when the message is "
"serialized)."
msgstr ""
"Konverterar ett icke-``multipart``meddelande till ett ``multipart/"
"related``meddelande, flyttar alla befintliga :mailheader:`Content-`-rubriker "
"och payload till en (ny) första del av ``multipart``.  Om *boundary* anges, "
"använd den som gränssträng i multipart, annars kan gränsen skapas "
"automatiskt när den behövs (t.ex. när meddelandet serialiseras)."

msgid ""
"Convert a non-``multipart`` or a ``multipart/related`` into a ``multipart/"
"alternative``, moving any existing :mailheader:`Content-` headers and "
"payload into a (new) first part of the ``multipart``.  If *boundary* is "
"specified, use it as the boundary string in the multipart, otherwise leave "
"the boundary to be automatically created when it is needed (for example, "
"when the message is serialized)."
msgstr ""
"Konverterar en icke-``multipart`` eller en ``multipart/related`` till en "
"``multipart/alternative``, flyttar alla befintliga :mailheader:`Content-`-"
"rubriker och nyttolast till en (ny) första del av ``multipart``.  Om "
"*boundary* anges, använd den som gränssträng i multipart, annars kan gränsen "
"skapas automatiskt när den behövs (t.ex. när meddelandet serialiseras)."

msgid ""
"Convert a non-``multipart``, a ``multipart/related``, or a ``multipart-"
"alternative`` into a ``multipart/mixed``, moving any existing :mailheader:"
"`Content-` headers and payload into a (new) first part of the "
"``multipart``.  If *boundary* is specified, use it as the boundary string in "
"the multipart, otherwise leave the boundary to be automatically created when "
"it is needed (for example, when the message is serialized)."
msgstr ""
"Konverterar en icke-``multipart``, en ``multipart/related``, eller en "
"``multipart-alternative`` till en ``multipart/mixed``, flyttar alla "
"befintliga :mailheader:`Content-`-rubriker och payload till en (ny) första "
"del av ``multipart``.  Om *boundary* anges, används den som gränssträng i "
"multipart, annars lämnas gränsen för att skapas automatiskt när den behövs "
"(till exempel när meddelandet serialiseras)."

msgid ""
"If the message is a ``multipart/related``, create a new message object, pass "
"all of the arguments to its :meth:`set_content` method, and :meth:`~email."
"message.Message.attach` it to the ``multipart``.  If the message is a non-"
"``multipart``, call :meth:`make_related` and then proceed as above.  If the "
"message is any other type of ``multipart``, raise a :exc:`TypeError`. If "
"*content_manager* is not specified, use the ``content_manager`` specified by "
"the current :mod:`~email.policy`. If the added part has no :mailheader:"
"`Content-Disposition` header, add one with the value ``inline``."
msgstr ""
"Om meddelandet är ett ``multipart/related``, skapa ett nytt "
"meddelandeobjekt, skicka alla argument till dess :meth:`set_content`-metod "
"och :meth:`~email.message.Message.attach` det till ``multipart``.  Om "
"meddelandet är en icke-``multipart``, anropa :meth:`make_related` och "
"fortsätt sedan enligt ovan.  Om meddelandet är någon annan typ av "
"``multipart``, utlöses ett :exc:`TypeError`. Om *content_manager* inte "
"anges, används den ``content_manager`` som anges av den aktuella :mod:"
"`~email.policy`. Om den tillagda delen inte har någon :mailheader:`Content-"
"Disposition` header, lägg till en med värdet ``inline``."

msgid ""
"If the message is a ``multipart/alternative``, create a new message object, "
"pass all of the arguments to its :meth:`set_content` method, and :meth:"
"`~email.message.Message.attach` it to the ``multipart``.  If the message is "
"a non-``multipart`` or ``multipart/related``, call :meth:`make_alternative` "
"and then proceed as above.  If the message is any other type of "
"``multipart``, raise a :exc:`TypeError`. If *content_manager* is not "
"specified, use the ``content_manager`` specified by the current :mod:`~email."
"policy`."
msgstr ""
"Om meddelandet är ett ``multipart/alternative``, skapa ett nytt "
"meddelandeobjekt, skicka alla argument till dess :meth:`set_content`-metod "
"och :meth:`~email.message.Message.attach` det till ``multipart``.  Om "
"meddelandet inte är en ``multipart`` eller ``multipart/related``, anropa :"
"meth:`make_alternative` och fortsätt sedan enligt ovan.  Om meddelandet är "
"någon annan typ av ``multipart``, utlöses ett :exc:`TypeError`. Om "
"*content_manager* inte anges, används den ``content_manager`` som anges av "
"den aktuella :mod:`~email.policy`."

msgid ""
"If the message is a ``multipart/mixed``, create a new message object, pass "
"all of the arguments to its :meth:`set_content` method, and :meth:`~email."
"message.Message.attach` it to the ``multipart``.  If the message is a non-"
"``multipart``, ``multipart/related``, or ``multipart/alternative``, call :"
"meth:`make_mixed` and then proceed as above. If *content_manager* is not "
"specified, use the ``content_manager`` specified by the current :mod:`~email."
"policy`.  If the added part has no :mailheader:`Content-Disposition` header, "
"add one with the value ``attachment``.  This method can be used both for "
"explicit attachments (:mailheader:`Content-Disposition: attachment`) and "
"``inline`` attachments (:mailheader:`Content-Disposition: inline`), by "
"passing appropriate options to the ``content_manager``."
msgstr ""
"Om meddelandet är ett ``multipart/mixed``, skapa ett nytt meddelandeobjekt, "
"skicka alla argument till dess :meth:`set_content`-metod och :meth:`~email."
"message.Message.attach` det till ``multipart``.  Om meddelandet inte är en "
"``multipart``, ``multipart/related``, eller ``multipart/alternative``, "
"anropa :meth:`make_mixed` och fortsätt sedan enligt ovan. Om "
"*content_manager* inte anges, används den ``content_manager`` som anges av "
"den aktuella :mod:`~email.policy`.  Om den tillagda delen inte har någon :"
"mailheader:`Content-Disposition` header, lägg till en med värdet "
"``attachment``.  Denna metod kan användas både för explicita bilagor (:"
"mailheader:`Content-Disposition: attachment`) och ``inline`` bilagor (:"
"mailheader:`Content-Disposition: inline`), genom att passera lämpliga "
"alternativ till ``content_manager``."

msgid "Remove the payload and all of the headers."
msgstr "Ta bort nyttolasten och alla rubriker."

msgid ""
"Remove the payload and all of the :mailheader:`!Content-` headers, leaving "
"all other headers intact and in their original order."
msgstr ""
"Ta bort nyttolasten och alla :mailheader:`!Content-`-rubriker, och lämna "
"alla andra rubriker intakta och i sin ursprungliga ordning."

msgid ":class:`EmailMessage` objects have the following instance attributes:"
msgstr ":class:`EmailMessage`-objekt har följande instansattribut:"

msgid ""
"The format of a MIME document allows for some text between the blank line "
"following the headers, and the first multipart boundary string. Normally, "
"this text is never visible in a MIME-aware mail reader because it falls "
"outside the standard MIME armor.  However, when viewing the raw text of the "
"message, or when viewing the message in a non-MIME aware reader, this text "
"can become visible."
msgstr ""
"Formatet för ett MIME-dokument tillåter viss text mellan blankraden efter "
"rubrikerna och den första multipart boundary-strängen. Normalt är denna text "
"aldrig synlig i en MIME-medveten e-postläsare eftersom den faller utanför "
"MIME-standarden.  Men när man tittar på råtexten i meddelandet, eller när "
"man tittar på meddelandet i en läsare som inte är MIME-medveten, kan denna "
"text bli synlig."

msgid ""
"The *preamble* attribute contains this leading extra-armor text for MIME "
"documents.  When the :class:`~email.parser.Parser` discovers some text after "
"the headers but before the first boundary string, it assigns this text to "
"the message's *preamble* attribute.  When the :class:`~email.generator."
"Generator` is writing out the plain text representation of a MIME message, "
"and it finds the message has a *preamble* attribute, it will write this text "
"in the area between the headers and the first boundary.  See :mod:`email."
"parser` and :mod:`email.generator` for details."
msgstr ""
"Attributet *preamble* innehåller denna ledande extra pansartext för MIME-"
"dokument.  När :class:`~email.parser.Parser` upptäcker text efter rubrikerna "
"men före den första gränssträngen, tilldelar den denna text till "
"meddelandets *preamble*-attribut.  När :class:`~email.generator.Generator` "
"skriver ut klartextrepresentationen av ett MIME-meddelande och upptäcker att "
"meddelandet har ett *preamble*-attribut, skriver den denna text i området "
"mellan rubrikerna och den första gränssträngen.  Se :mod:`email.parser` och :"
"mod:`email.generator` för mer information."

msgid ""
"Note that if the message object has no preamble, the *preamble* attribute "
"will be ``None``."
msgstr ""
"Observera att om meddelandeobjektet inte har någon preamble, kommer "
"attributet *preamble* att vara ``None``."

msgid ""
"The *epilogue* attribute acts the same way as the *preamble* attribute, "
"except that it contains text that appears between the last boundary and the "
"end of the message.  As with the :attr:`~EmailMessage.preamble`, if there is "
"no epilog text this attribute will be ``None``."
msgstr ""
"Attributet *epilogue* fungerar på samma sätt som attributet *preamble*, "
"förutom att det innehåller text som visas mellan den sista avgränsningen och "
"slutet av meddelandet.  Precis som med :attr:`~EmailMessage.preamble`, om "
"det inte finns någon epilogtext kommer detta attribut att vara ``None``."

msgid ""
"The *defects* attribute contains a list of all the problems found when "
"parsing this message.  See :mod:`email.errors` for a detailed description of "
"the possible parsing defects."
msgstr ""
"Attributet *defects* innehåller en lista över alla problem som upptäcktes "
"när meddelandet analyserades.  Se :mod:`email.errors` för en detaljerad "
"beskrivning av de möjliga defekterna vid tolkningen."

msgid ""
"This class represents a subpart of a MIME message.  It is identical to :"
"class:`EmailMessage`, except that no :mailheader:`MIME-Version` headers are "
"added when :meth:`~EmailMessage.set_content` is called, since sub-parts do "
"not need their own :mailheader:`MIME-Version` headers."
msgstr ""
"Denna klass representerar en underdel av ett MIME-meddelande.  Den är "
"identisk med :class:`EmailMessage`, förutom att inga :mailheader:`MIME-"
"Version`-rubriker läggs till när :meth:`~EmailMessage.set_content` anropas, "
"eftersom underdelar inte behöver sina egna :mailheader:`MIME-Version`-"
"rubriker."

msgid "Footnotes"
msgstr "Fotnoter"

msgid ""
"Originally added in 3.4 as a :term:`provisional module <provisional "
"package>`.  Docs for legacy message class moved to :ref:`compat32_message`."
msgstr ""
"Ursprungligen tillagd i 3.4 som en :term:``provisorisk modul <provisional "
"package>``.  Dokumentationen för den äldre meddelandeklassen flyttades till :"
"ref:`compat32_message`."
