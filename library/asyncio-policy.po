# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Policies"
msgstr "Policys"

msgid ""
"Policies are deprecated and will be removed in Python 3.16. Users are "
"encouraged to use the :func:`asyncio.run` function or the :class:`asyncio."
"Runner` with *loop_factory* to use the desired loop implementation."
msgstr ""
"Policies är föråldrade och kommer att tas bort i Python 3.16. Användare "
"uppmuntras att använda funktionen :func:`asyncio.run` eller :class:`asyncio."
"Runner` med *loop_factory* för att använda önskad loopimplementering."

msgid ""
"An event loop policy is a global object used to get and set the current :ref:"
"`event loop <asyncio-event-loop>`, as well as create new event loops. The "
"default policy can be :ref:`replaced <asyncio-policy-get-set>` with :ref:"
"`built-in alternatives <asyncio-policy-builtin>` to use different event loop "
"implementations, or substituted by a :ref:`custom policy <asyncio-custom-"
"policies>` that can override these behaviors."
msgstr ""
"En policy för en händelseslinga är ett globalt objekt som används för att "
"hämta och ställa in den aktuella :ref:`händelseslingan <asyncio-event-"
"loop>`, samt för att skapa nya händelseslingor. Standardpolicyn kan :ref:"
"`ersättas <asyncio-policy-get-set>` med :ref:`inbyggda alternativ <asyncio-"
"policy-builtin>` för att använda olika implementeringar av händelseslingor, "
"eller ersättas av en :ref:`anpassad policy <asyncio-custom-policies>` som "
"kan åsidosätta dessa beteenden."

msgid ""
"The :ref:`policy object <asyncio-policy-objects>` gets and sets a separate "
"event loop per *context*. This is per-thread by default, though custom "
"policies could define *context* differently."
msgstr ""
":ref:`Policyobjekt <asyncio-policy-objects>` hämtar och ställer in en "
"separat händelseslinga per *kontext*. Detta är per tråd som standard, men "
"anpassade policyer kan definiera *kontext* på ett annat sätt."

msgid ""
"Custom event loop policies can control the behavior of :func:"
"`get_event_loop`, :func:`set_event_loop`, and :func:`new_event_loop`."
msgstr ""
"Anpassade principer för händelseslingor kan styra beteendet hos :func:"
"`get_event_loop`, :func:`set_event_loop` och :func:`new_event_loop`."

msgid ""
"Policy objects should implement the APIs defined in the :class:"
"`AbstractEventLoopPolicy` abstract base class."
msgstr ""
"Policyobjekt bör implementera de API:er som definieras i den abstrakta "
"basklassen :class:`AbstractEventLoopPolicy`."

msgid "Getting and Setting the Policy"
msgstr "Hämta och ställa in policyn"

msgid ""
"The following functions can be used to get and set the policy for the "
"current process:"
msgstr ""
"Följande funktioner kan användas för att hämta och ställa in policyn för den "
"aktuella processen:"

msgid "Return the current process-wide policy."
msgstr "Returnera den aktuella processomfattande policyn."

msgid ""
"The :func:`get_event_loop_policy` function is deprecated and will be removed "
"in Python 3.16."
msgstr ""
"Funktionen :func:`get_event_loop_policy` är föråldrad och kommer att tas "
"bort i Python 3.16."

msgid "Set the current process-wide policy to *policy*."
msgstr "Ställ in den aktuella processomfattande policyn till *policy*."

msgid "If *policy* is set to ``None``, the default policy is restored."
msgstr "Om *policy* är inställd på ``None`` återställs standardpolicyn."

msgid ""
"The :func:`set_event_loop_policy` function is deprecated and will be removed "
"in Python 3.16."
msgstr ""
"Funktionen :func:`set_event_loop_policy` är föråldrad och kommer att tas "
"bort i Python 3.16."

msgid "Policy Objects"
msgstr "Policyobjekt"

msgid "The abstract event loop policy base class is defined as follows:"
msgstr ""
"Den abstrakta basklassen för policyn för händelseslingor definieras enligt "
"följande:"

msgid "An abstract base class for asyncio policies."
msgstr "En abstrakt basklass för asyncio-policyer."

msgid "Get the event loop for the current context."
msgstr "Hämta händelseslingan för det aktuella sammanhanget."

msgid ""
"Return an event loop object implementing the :class:`AbstractEventLoop` "
"interface."
msgstr ""
"Returnerar ett objekt med en händelseslinga som implementerar gränssnittet :"
"class:`AbstractEventLoop`."

msgid "This method should never return ``None``."
msgstr "Denna metod bör aldrig returnera ``None``."

msgid "Set the event loop for the current context to *loop*."
msgstr "Ställ in händelseslingan för den aktuella kontexten till *loop*."

msgid "Create and return a new event loop object."
msgstr "Skapa och returnera ett nytt objekt för händelseslingan."

msgid ""
"The :class:`AbstractEventLoopPolicy` class is deprecated and will be removed "
"in Python 3.16."
msgstr ""
"Klassen :class:`AbstractEventLoopPolicy` är föråldrad och kommer att tas "
"bort i Python 3.16."

msgid "asyncio ships with the following built-in policies:"
msgstr "asyncio levereras med följande inbyggda policyer:"

msgid ""
"The default asyncio policy.  Uses :class:`SelectorEventLoop` on Unix and :"
"class:`ProactorEventLoop` on Windows."
msgstr ""
"Standardpolicyn för asyncio.  Använder :class:`SelectorEventLoop` på Unix "
"och :class:`ProactorEventLoop` på Windows."

msgid ""
"There is no need to install the default policy manually. asyncio is "
"configured to use the default policy automatically."
msgstr ""
"Det finns inget behov av att installera standardpolicyn manuellt. asyncio är "
"konfigurerat för att använda standardpolicyn automatiskt."

msgid "On Windows, :class:`ProactorEventLoop` is now used by default."
msgstr "På Windows används nu :class:`ProactorEventLoop` som standard."

msgid ""
"The :meth:`get_event_loop` method of the default asyncio policy now raises "
"a :exc:`RuntimeError` if there is no set event loop."
msgstr ""
"Metoden :meth:`get_event_loop` i standardpolicyn för asyncio ger nu upphov "
"till ett :exc:`RuntimeError` om det inte finns någon angiven händelseslinga."

msgid ""
"The :class:`DefaultEventLoopPolicy` class is deprecated and will be removed "
"in Python 3.16."
msgstr ""
"Klassen :class:`DefaultEventLoopPolicy` är föråldrad och kommer att tas bort "
"i Python 3.16."

msgid ""
"An alternative event loop policy that uses the :class:`SelectorEventLoop` "
"event loop implementation."
msgstr ""
"En alternativ policy för händelseslinga som använder implementeringen av "
"händelseslingan :class:`SelectorEventLoop`."

msgid "Availability"
msgstr "Tillgänglighet"

msgid ""
"The :class:`WindowsSelectorEventLoopPolicy` class is deprecated and will be "
"removed in Python 3.16."
msgstr ""
"Klassen :class:`WindowsSelectorEventLoopPolicy` är föråldrad och kommer att "
"tas bort i Python 3.16."

msgid ""
"An alternative event loop policy that uses the :class:`ProactorEventLoop` "
"event loop implementation."
msgstr ""
"En alternativ policy för händelseslinga som använder implementeringen av "
"händelseslingan :class:`ProactorEventLoop`."

msgid ""
"The :class:`WindowsProactorEventLoopPolicy` class is deprecated and will be "
"removed in Python 3.16."
msgstr ""
"Klassen :class:`WindowsProactorEventLoopPolicy` är föråldrad och kommer att "
"tas bort i Python 3.16."

msgid "Custom Policies"
msgstr "Anpassade policyer"

msgid ""
"To implement a new event loop policy, it is recommended to subclass :class:"
"`DefaultEventLoopPolicy` and override the methods for which custom behavior "
"is wanted, e.g.::"
msgstr ""
"För att implementera en ny policy för händelseslingor rekommenderas att man "
"subklassar :class:`DefaultEventLoopPolicy` och åsidosätter de metoder för "
"vilka man vill ha ett anpassat beteende, t.ex.::"

msgid ""
"class MyEventLoopPolicy(asyncio.DefaultEventLoopPolicy):\n"
"\n"
"    def get_event_loop(self):\n"
"        \"\"\"Get the event loop.\n"
"\n"
"        This may be None or an instance of EventLoop.\n"
"        \"\"\"\n"
"        loop = super().get_event_loop()\n"
"        # Do something with loop ...\n"
"        return loop\n"
"\n"
"asyncio.set_event_loop_policy(MyEventLoopPolicy())"
msgstr ""
"class MyEventLoopPolicy(asyncio.DefaultEventLoopPolicy):\n"
"\n"
"    def get_event_loop(self):\n"
"        \"\"\"Hämta händelseslingan.\n"
"\n"
"        Detta kan vara None eller en instans av EventLoop.\n"
"        \"\"\"\n"
"        loop = super().get_event_loop()\n"
"        # Gör något med slingan ...\n"
"        return loop\n"
"\n"
"asyncio.set_event_loop_policy(MyEventLoopPolicy())"
