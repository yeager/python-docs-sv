# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Mapping Protocol"
msgstr "Mappningsprotokoll"

msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""
"Se även :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` och :c:func:"
"`PyObject_DelItem`."

msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes "
"with a :meth:`~object.__getitem__` method, since in general it is impossible "
"to determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"Returnerar ``1`` om objektet tillhandahåller mappningsprotokollet eller "
"stöder slicing, och ``0`` annars.  Observera att den returnerar ``1`` för "
"Python-klasser med en :meth:`~object.__getitem__`-metod, eftersom det i "
"allmänhet är omöjligt att avgöra vilken typ av nycklar som klassen stöder. "
"Denna funktion lyckas alltid."

msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Returnerar antalet nycklar i objektet *o* om det lyckas, och ``-1`` om det "
"misslyckas. Detta är likvärdigt med Python-uttrycket ``len(o)``."

msgid ""
"This is the same as :c:func:`PyObject_GetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_GetItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"Variant of :c:func:`PyObject_GetItem` which doesn't raise :exc:`KeyError` if "
"the key is not found."
msgstr ""
"Variant av :c:func:`PyObject_GetItem` som inte ger upphov till :exc:"
"`KeyError` om nyckeln inte hittas."

msgid ""
"If the key is found, return ``1`` and set *\\*result* to a new :term:`strong "
"reference` to the corresponding value. If the key is not found, return ``0`` "
"and set *\\*result* to ``NULL``; the :exc:`KeyError` is silenced. If an "
"error other than :exc:`KeyError` is raised, return ``-1`` and set "
"*\\*result* to ``NULL``."
msgstr ""
"Om nyckeln hittas returneras ``1`` och *\\*result* sätts till en ny :term:"
"`strong reference` till motsvarande värde. Om nyckeln inte hittas, "
"returneras ``0`` och *\\*result* sätts till ``NULL``; :exc:`KeyError` "
"tystas. Om ett annat fel än :exc:`KeyError` uppstår, returneras ``-1`` och "
"*\\*result* sätts till ``NULL``."

msgid ""
"This is the same as :c:func:`PyMapping_GetOptionalItem`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyMapping_GetOptionalItem`, men *key* anges "
"som en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:"
"expr:`PyObject*`."

msgid ""
"This is the same as :c:func:`PyObject_SetItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_SetItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid "This is an alias of :c:func:`PyObject_DelItem`."
msgstr "Detta är ett alias för :c:func:`PyObject_DelItem`."

msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyObject_DelItem`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:expr:"
"`PyObject*`."

msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. On failure, return "
"``-1``."
msgstr ""
"Returnerar ``1`` om mappningsobjektet har nyckeln *key* och ``0`` annars. "
"Detta är likvärdigt med Python-uttrycket ``key in o``. Vid misslyckande "
"returneras ``-1``."

msgid ""
"This is the same as :c:func:`PyMapping_HasKeyWithError`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than "
"a :c:expr:`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyMapping_HasKeyWithError`, men *key* anges "
"som en :c:expr:`const char*` UTF-8-kodad bytessträng, i stället för en :c:"
"expr:`PyObject*`."

msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"Returnerar ``1`` om mappningsobjektet har nyckeln *key* och ``0`` annars. "
"Detta motsvarar Python-uttrycket ``key in o``. Denna funktion lyckas alltid."

msgid ""
"Exceptions which occur when this calls :meth:`~object.__getitem__` method "
"are silently ignored. For proper error handling, use :c:func:"
"`PyMapping_HasKeyWithError`, :c:func:`PyMapping_GetOptionalItem` or :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""
"Undantag som uppstår när detta anropar :meth:`~object.__getitem__`-metoden "
"ignoreras i tysthet. För korrekt felhantering, använd :c:func:"
"`PyMapping_HasKeyWithError`, :c:func:`PyMapping_GetOptionalItem` eller :c:"
"func:`PyObject_GetItem()` istället."

msgid ""
"This is the same as :c:func:`PyMapping_HasKey`, but *key* is specified as a :"
"c:expr:`const char*` UTF-8 encoded bytes string, rather than a :c:expr:"
"`PyObject*`."
msgstr ""
"Detta är samma sak som :c:func:`PyMapping_HasKey`, men *key* anges som en :c:"
"expr:`const char*` UTF-8-kodad bytessträng, i stället för ett :c:expr:"
"`PyObject*`."

msgid ""
"Exceptions that occur when this calls :meth:`~object.__getitem__` method or "
"while creating the temporary :class:`str` object are silently ignored. For "
"proper error handling, use :c:func:`PyMapping_HasKeyStringWithError`, :c:"
"func:`PyMapping_GetOptionalItemString` or :c:func:`PyMapping_GetItemString` "
"instead."
msgstr ""
"Undantag som inträffar när detta anropar :meth:`~object.__getitem__`-metoden "
"eller när det tillfälliga :class:`str`-objektet skapas ignoreras i tysthet. "
"För korrekt felhantering, använd :c:func:`PyMapping_HasKeyStringWithError`, :"
"c:func:`PyMapping_GetOptionalItemString` eller :c:func:"
"`PyMapping_GetItemString` istället."

msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"Vid framgång returneras en lista över nycklarna i objektet *o*.  Vid "
"misslyckande returneras ``NULL``."

msgid "Previously, the function returned a list or a tuple."
msgstr "Tidigare returnerade funktionen en lista eller en tupel."

msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"Vid framgång returneras en lista över värdena i objektet *o*.  Vid "
"misslyckande returneras ``NULL``."

msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"Vid framgång returneras en lista över objekten i objektet *o*, där varje "
"objekt är en tupel som innehåller ett nyckel-värdepar.  Vid misslyckande "
"returneras ``NULL``."

msgid "built-in function"
msgstr "inbyggd funktion"

msgid "len"
msgstr "len"
