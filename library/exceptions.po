# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Built-in Exceptions"
msgstr "Inbyggda undantag"

msgid ""
"In Python, all exceptions must be instances of a class that derives from :"
"class:`BaseException`.  In a :keyword:`try` statement with an :keyword:"
"`except` clause that mentions a particular class, that clause also handles "
"any exception classes derived from that class (but not exception classes "
"from which *it* is derived).  Two exception classes that are not related via "
"subclassing are never equivalent, even if they have the same name."
msgstr ""
"I Python måste alla undantag vara instanser av en klass som härstammar från :"
"class:`BaseException`.  I en :keyword:`try`-sats med en :keyword:`except`-"
"klausul som nämner en viss klass, hanterar den klausulen också alla "
"undantagsklasser som härrör från den klassen (men inte undantagsklasser som "
"*den* härrör från).  Två undantagsklasser som inte är relaterade via "
"subklassning är aldrig likvärdiga, även om de har samma namn."

msgid ""
"The built-in exceptions listed in this chapter can be generated by the "
"interpreter or built-in functions.  Except where mentioned, they have an "
"\"associated value\" indicating the detailed cause of the error.  This may "
"be a string or a tuple of several items of information (e.g., an error code "
"and a string explaining the code).  The associated value is usually passed "
"as arguments to the exception class's constructor."
msgstr ""
"De inbyggda undantagen som listas i detta kapitel kan genereras av tolken "
"eller inbyggda funktioner.  Förutom där det nämns har de ett \"associerat "
"värde\" som anger den detaljerade orsaken till felet.  Detta kan vara en "
"sträng eller en tupel av flera informationsobjekt (t.ex. en felkod och en "
"sträng som förklarar koden).  Det associerade värdet skickas vanligtvis som "
"argument till undantagsklassens konstruktor."

msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"Användarkod kan skapa inbyggda undantag.  Detta kan användas för att testa "
"en undantagshanterare eller för att rapportera ett feltillstånd \"precis "
"som\" den situation där tolken skapar samma undantag; men tänk på att det "
"inte finns något som hindrar användarkoden från att skapa ett olämpligt fel."

msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the :exc:"
"`Exception` class or one of its subclasses, and not from :exc:"
"`BaseException`.  More information on defining exceptions is available in "
"the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"De inbyggda undantagsklasserna kan subklassas för att definiera nya "
"undantag; programmerare uppmuntras att härleda nya undantag från klassen :"
"exc:`Exception` eller någon av dess subklasser, och inte från :exc:"
"`BaseException`.  Mer information om hur man definierar undantag finns i "
"Python Tutorial under :ref:`tut-userexceptions`."

msgid "Exception context"
msgstr "Kontext för undantag"

msgid ""
"Three attributes on exception objects provide information about the context "
"in which the exception was raised:"
msgstr ""
"Tre attribut på undantagsobjekt ger information om i vilket sammanhang "
"undantaget uppstod:"

msgid ""
"When raising a new exception while another exception is already being "
"handled, the new exception's :attr:`!__context__` attribute is automatically "
"set to the handled exception.  An exception may be handled when an :keyword:"
"`except` or :keyword:`finally` clause, or a :keyword:`with` statement, is "
"used."
msgstr ""
"När ett nytt undantag skapas medan ett annat undantag redan hanteras, sätts "
"det nya undantagets :attr:`!__context__`-attribut automatiskt till det "
"hanterade undantaget.  Ett undantag kan hanteras när en :keyword:`except`- "
"eller :keyword:`finally`-sats, eller en :keyword:`with`-sats, används."

msgid ""
"This implicit exception context can be supplemented with an explicit cause "
"by using :keyword:`!from` with :keyword:`raise`::"
msgstr ""
"Denna implicita undantagskontext kan kompletteras med en explicit orsak "
"genom att använda :keyword:`!from` med :keyword:`raise`::"

msgid "raise new_exc from original_exc"
msgstr "höja new_exc från original_exc"

msgid ""
"The expression following :keyword:`from<raise>` must be an exception or "
"``None``. It will be set as :attr:`!__cause__` on the raised exception. "
"Setting :attr:`!__cause__` also implicitly sets the :attr:`!"
"__suppress_context__` attribute to ``True``, so that using ``raise new_exc "
"from None`` effectively replaces the old exception with the new one for "
"display purposes (e.g. converting :exc:`KeyError` to :exc:`AttributeError`), "
"while leaving the old exception available in :attr:`!__context__` for "
"introspection when debugging."
msgstr ""
"Uttrycket som följer efter :keyword:`from<raise>` måste vara ett undantag "
"eller ``None``. Det kommer att ställas in som :attr:`!__cause__` på det "
"uppkomna undantaget. Att ställa in :attr:`!__cause__` ställer också implicit "
"in :attr:`!__suppress_context__` attributet till ``True``, så att genom att "
"använda ``raise new_exc from None`` ersätts effektivt det gamla undantaget "
"med det nya för visningsändamål (t.ex. konvertera :exc:`KeyError` till :exc:"
"`AttributeError`), medan det gamla undantaget lämnas tillgängligt i :attr:`!"
"__context__` för introspektion vid felsökning."

msgid ""
"The default traceback display code shows these chained exceptions in "
"addition to the traceback for the exception itself. An explicitly chained "
"exception in :attr:`!__cause__` is always shown when present. An implicitly "
"chained exception in :attr:`!__context__` is shown only if :attr:`!"
"__cause__` is :const:`None` and :attr:`!__suppress_context__` is false."
msgstr ""
"Standardkoden för visning av spårning visar dessa kedjade undantag utöver "
"spårningen av själva undantaget. Ett explicit kedjat undantag i :attr:`!"
"__cause__` visas alltid när det finns. Ett implicit kedjat undantag i :attr:"
"`!__context__` visas endast om :attr:`!__cause__` är :const:`None` och :attr:"
"`!__suppress_context__` är false."

msgid ""
"In either case, the exception itself is always shown after any chained "
"exceptions so that the final line of the traceback always shows the last "
"exception that was raised."
msgstr ""
"I båda fallen visas alltid själva undantaget efter eventuella kedjade "
"undantag, så att den sista raden i traceback alltid visar det sista "
"undantaget som uppstod."

msgid "Inheriting from built-in exceptions"
msgstr "Ärver från inbyggda undantag"

msgid ""
"User code can create subclasses that inherit from an exception type. It's "
"recommended to only subclass one exception type at a time to avoid any "
"possible conflicts between how the bases handle the ``args`` attribute, as "
"well as due to possible memory layout incompatibilities."
msgstr ""
"Användarkod kan skapa subklasser som ärver från en undantagstyp. Det "
"rekommenderas att endast subklassa en undantagstyp åt gången för att undvika "
"eventuella konflikter mellan hur baserna hanterar attributet ``args``, samt "
"på grund av eventuella inkompatibiliteter i minneslayouten."

msgid ""
"Most built-in exceptions are implemented in C for efficiency, see: :source:"
"`Objects/exceptions.c`.  Some have custom memory layouts which makes it "
"impossible to create a subclass that inherits from multiple exception types. "
"The memory layout of a type is an implementation detail and might change "
"between Python versions, leading to new conflicts in the future.  Therefore, "
"it's recommended to avoid subclassing multiple exception types altogether."
msgstr ""
"De flesta inbyggda undantag är implementerade i C för effektivitetens skull, "
"se: :source:`Objects/exceptions.c`.  Vissa har anpassade minneslayouter "
"vilket gör det omöjligt att skapa en subklass som ärver från flera "
"undantagstyper. Minneslayouten för en typ är en implementationsdetalj och "
"kan ändras mellan Python-versioner, vilket leder till nya konflikter i "
"framtiden.  Därför rekommenderas det att undvika att underklassa flera "
"undantagstyper helt och hållet."

msgid "Base classes"
msgstr "Basklasser"

msgid ""
"The following exceptions are used mostly as base classes for other "
"exceptions."
msgstr "Följande undantag används mest som basklasser för andra undantag."

msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If :"
"func:`str` is called on an instance of this class, the representation of the "
"argument(s) to the instance are returned, or the empty string when there "
"were no arguments."
msgstr ""
"Basklassen för alla inbyggda undantag.  Den är inte avsedd att ärvas direkt "
"av användardefinierade klasser (för det, använd :exc:`Exception`).  Om :func:"
"`str` anropas på en instans av den här klassen returneras representationen "
"av argumentet/argumenten till instansen, eller den tomma strängen om det "
"inte fanns några argument."

msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`OSError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"Den tupel av argument som ges till undantagskonstruktören.  Vissa inbyggda "
"undantag (som :exc:`OSError`) förväntar sig ett visst antal argument och "
"tilldelar en speciell betydelse till elementen i denna tupel, medan andra "
"vanligtvis bara anropas med en enda sträng som ger ett felmeddelande."

msgid ""
"This method sets *tb* as the new traceback for the exception and returns the "
"exception object.  It was more commonly used before the exception chaining "
"features of :pep:`3134` became available.  The following example shows how "
"we can convert an instance of ``SomeException`` into an instance of "
"``OtherException`` while preserving the traceback.  Once raised, the current "
"frame is pushed onto the traceback of the ``OtherException``, as would have "
"happened to the traceback of the original ``SomeException`` had we allowed "
"it to propagate to the caller. ::"
msgstr ""
"Den här metoden anger *tb* som ny traceback för undantaget och returnerar "
"undantagsobjektet.  Den användes oftare innan exception chaining-"
"funktionerna i :pep:`3134` blev tillgängliga.  Följande exempel visar hur vi "
"kan konvertera en instans av ``SomeException`` till en instans av "
"``OtherException`` samtidigt som vi bevarar spårningen.  När den väl har "
"uppstått, skjuts den aktuella ramen till spårningen av ``OtherException``, "
"vilket skulle ha hänt med spårningen av den ursprungliga ``SomeException`` "
"om vi hade tillåtit den att fortplanta sig till den som anropar. ::"

msgid ""
"try:\n"
"    ...\n"
"except SomeException:\n"
"    tb = sys.exception().__traceback__\n"
"    raise OtherException(...).with_traceback(tb)"
msgstr ""
"försök:\n"
"    ...\n"
"except SomeException:\n"
"    tb = sys.exception().__traceback__\n"
"    raise AnnanAttent(...).med_traceback(tb)"

msgid ""
"A writable field that holds the :ref:`traceback object <traceback-objects>` "
"associated with this exception. See also: :ref:`raise`."
msgstr ""
"Ett skrivbart fält som innehåller :ref:`traceback-objektet <traceback-"
"objects>` som är associerat med detta undantag. Se även: :ref:`raise`."

msgid ""
"Add the string ``note`` to the exception's notes which appear in the "
"standard traceback after the exception string. A :exc:`TypeError` is raised "
"if ``note`` is not a string."
msgstr ""
"Lägg till strängen ``note`` i undantagets anteckningar som visas i "
"standardåterrapporteringen efter undantagssträngen. Ett :exc:`TypeError` "
"uppstår om ``note`` inte är en sträng."

msgid ""
"A list of the notes of this exception, which were added with :meth:"
"`add_note`. This attribute is created when :meth:`add_note` is called."
msgstr ""
"En lista över anteckningarna för detta undantag, som lades till med :meth:"
"`add_note`. Detta attribut skapas när :meth:`add_note` anropas."

msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"Alla inbyggda undantag som inte är systemundantag härrör från denna klass.  "
"Alla användardefinierade undantag bör också härledas från denna klass."

msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."
msgstr ""
"Basklass för de inbyggda undantag som uppstår vid olika aritmetiska fel: :"
"exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:`FloatingPointError`."

msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
"Uppstår när en :ref:`buffer <bufferobjects>`-relaterad åtgärd inte kan "
"utföras."

msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"Basklassen för de undantag som uppstår när en nyckel eller ett index som "
"används i en mappning eller sekvens är ogiltigt: :exc:`IndexError`, :exc:"
"`KeyError`.  Detta kan tas upp direkt av :func:`codecs.lookup`."

msgid "Concrete exceptions"
msgstr "Betongundantag"

msgid "The following exceptions are the exceptions that are usually raised."
msgstr "Följande undantag är de undantag som vanligtvis tas upp."

msgid "Raised when an :keyword:`assert` statement fails."
msgstr "Uppstår när en :keyword:`assert`-sats misslyckas."

msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"Utlöses när en attributreferens (se :ref:`attribut-referenser`) eller "
"attributtilldelning misslyckas.  (När ett objekt inte stöder "
"attributreferenser eller attributtilldelningar alls, genereras :exc:"
"`TypeError`)"

msgid ""
"The optional *name* and *obj* keyword-only arguments set the corresponding "
"attributes:"
msgstr ""
"De valfria argumenten *name* och *obj*, som endast innehåller nyckelord, "
"anger motsvarande attribut:"

msgid "The name of the attribute that was attempted to be accessed."
msgstr "Namnet på det attribut som man försökte få åtkomst till."

msgid "The object that was accessed for the named attribute."
msgstr "Det objekt som användes för det namngivna attributet."

msgid "Added the :attr:`name` and :attr:`obj` attributes."
msgstr "Lagt till attributen :attr:`name` och :attr:`obj`."

msgid ""
"Raised when the :func:`input` function hits an end-of-file condition (EOF) "
"without reading any data. (Note: the :meth:`!io.IOBase.read` and :meth:`io."
"IOBase.readline` methods return an empty string when they hit EOF.)"
msgstr ""
"Utlöses när funktionen :func:`input` träffar ett filändsvillkor (EOF) utan "
"att läsa några data. (Obs: metoderna :meth:`!io.IOBase.read` och :meth:`io."
"IOBase.readline` returnerar en tom sträng när de träffar EOF)"

msgid "Not currently used."
msgstr "Används inte för närvarande."

msgid ""
"Raised when a :term:`generator` or :term:`coroutine` is closed; see :meth:"
"`generator.close` and :meth:`coroutine.close`.  It directly inherits from :"
"exc:`BaseException` instead of :exc:`Exception` since it is technically not "
"an error."
msgstr ""
"Uppstår när en :term:`generator` eller :term:`coroutine` stängs; se :meth:"
"`generator.close` och :meth:`coroutine.close`.  Den ärver direkt från :exc:"
"`BaseException` istället för :exc:`Exception` eftersom det tekniskt sett "
"inte är ett fel."

msgid ""
"Raised when the :keyword:`import` statement has troubles trying to load a "
"module.  Also raised when the \"from list\" in ``from ... import`` has a "
"name that cannot be found."
msgstr ""
"Utlöses när :keyword:`import`-satsen har problem med att ladda en modul.  "
"Uppstår också när \"from-listan\" i ``from ... import`` har ett namn som "
"inte kan hittas."

msgid ""
"The optional *name* and *path* keyword-only arguments set the corresponding "
"attributes:"
msgstr ""
"De valfria argumenten *name* och *path*, som endast innehåller nyckelord, "
"anger motsvarande attribut:"

msgid "The name of the module that was attempted to be imported."
msgstr "Namnet på den modul som man försökte importera."

msgid "The path to any file which triggered the exception."
msgstr "Sökvägen till den fil som utlöste undantaget."

msgid "Added the :attr:`name` and :attr:`path` attributes."
msgstr "Lagt till attributen :attr:`name` och :attr:`path`."

msgid ""
"A subclass of :exc:`ImportError` which is raised by :keyword:`import` when a "
"module could not be located.  It is also raised when ``None`` is found in :"
"data:`sys.modules`."
msgstr ""
"En underklass till :exc:`ImportError` som skapas av :keyword:`import` när en "
"modul inte kunde hittas.  Det visas också när ``None`` hittas i :data:`sys."
"modules`."

msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not an "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"Uppstår när ett sekvenssubskript är utanför intervallet.  (Slice-index "
"trunkeras i tysthet för att hamna inom det tillåtna intervallet; om ett "
"index inte är ett heltal väcks :exc:`TypeError`)"

msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"Utlöses när en mappningsnyckel (ordbok) inte finns i uppsättningen av "
"befintliga nycklar."

msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or :"
"kbd:`Delete`).  During execution, a check for interrupts is made regularly. "
"The exception inherits from :exc:`BaseException` so as to not be "
"accidentally caught by code that catches :exc:`Exception` and thus prevent "
"the interpreter from exiting."
msgstr ""
"Uppstår när användaren trycker på avbrottstangenten (normalt :kbd:`Control-"
"C` eller :kbd:`Delete`).  Under exekveringen görs regelbundet en kontroll av "
"avbrott. Undantaget ärver från :exc:`BaseException` så att det inte av "
"misstag fångas upp av kod som fångar upp :exc:`Exception` och därmed hindrar "
"tolken från att avsluta."

msgid ""
"Catching a :exc:`KeyboardInterrupt` requires special consideration. Because "
"it can be raised at unpredictable points, it may, in some circumstances, "
"leave the running program in an inconsistent state. It is generally best to "
"allow :exc:`KeyboardInterrupt` to end the program as quickly as possible or "
"avoid raising it entirely. (See :ref:`handlers-and-exceptions`.)"
msgstr ""
"Att fånga ett :exc:`KeyboardInterrupt` kräver särskild hänsyn. Eftersom den "
"kan utlösas vid oförutsägbara tidpunkter kan den under vissa omständigheter "
"lämna det pågående programmet i ett inkonsekvent tillstånd. Det är i "
"allmänhet bäst att låta :exc:`KeyboardInterrupt` avsluta programmet så "
"snabbt som möjligt eller helt undvika att utlösa det. (Se :ref:`handlers-and-"
"exceptions`.)"

msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's :c:func:"
"`malloc` function), the interpreter may not always be able to completely "
"recover from this situation; it nevertheless raises an exception so that a "
"stack traceback can be printed, in case a run-away program was the cause."
msgstr ""
"Utlöses när en operation får slut på minne men situationen fortfarande kan "
"räddas (genom att radera vissa objekt).  Det associerade värdet är en sträng "
"som anger vilken typ av (intern) operation som fick slut på minne. Observera "
"att på grund av den underliggande minneshanteringsarkitekturen (C:s :c:func:"
"`malloc`-funktion) kan tolken kanske inte alltid helt återhämta sig från "
"denna situation; den väcker ändå ett undantag så att en stackspårning kan "
"skrivas ut, ifall ett skenande program var orsaken."

msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"Utlöses när ett lokalt eller globalt namn inte hittas.  Detta gäller endast "
"okvalificerade namn.  Det associerade värdet är ett felmeddelande som "
"innehåller det namn som inte kunde hittas."

msgid "The optional *name* keyword-only argument sets the attribute:"
msgstr "Det valfria argumentet *name* keyword-only anger attributet:"

msgid "The name of the variable that was attempted to be accessed."
msgstr "Namnet på den variabel som man försökte få åtkomst till."

msgid "Added the :attr:`name` attribute."
msgstr "Lagt till attributet :attr:`name`."

msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method, or while the class is being "
"developed to indicate that the real implementation still needs to be added."
msgstr ""
"Detta undantag härrör från :exc:`RuntimeError`.  I användardefinierade "
"basklasser bör abstrakta metoder ge upphov till detta undantag när de kräver "
"att härledda klasser åsidosätter metoden, eller medan klassen utvecklas för "
"att indikera att den verkliga implementationen fortfarande behöver läggas "
"till."

msgid ""
"It should not be used to indicate that an operator or method is not meant to "
"be supported at all -- in that case either leave the operator / method "
"undefined or, if a subclass, set it to :data:`None`."
msgstr ""
"Det ska inte användas för att ange att en operator eller metod inte ska "
"stödjas alls - i så fall ska operatorn/metoden antingen lämnas odefinierad "
"eller, om det är en subklass, anges till :data:`None`."

msgid ""
":exc:`!NotImplementedError` and :data:`!NotImplemented` are not "
"interchangeable. This exception should only be used as described above; see :"
"data:`NotImplemented` for details on correct usage of the built-in constant."
msgstr ""
":exc:`!NotImplementedError` och :data:`!NotImplemented` är inte utbytbara. "
"Detta undantag bör endast användas enligt beskrivningen ovan; se :data:"
"`NotImplemented` för detaljer om korrekt användning av den inbyggda "
"konstanten."

msgid ""
"This exception is raised when a system function returns a system-related "
"error, including I/O failures such as \"file not found\" or \"disk "
"full\" (not for illegal argument types or other incidental errors)."
msgstr ""
"Detta undantag uppstår när en systemfunktion returnerar ett systemrelaterat "
"fel, inklusive I/O-fel som \"file not found\" eller \"disk full\" (inte för "
"olagliga argumenttyper eller andra tillfälliga fel)."

msgid ""
"The second form of the constructor sets the corresponding attributes, "
"described below.  The attributes default to :const:`None` if not specified.  "
"For backwards compatibility, if three arguments are passed, the :attr:"
"`~BaseException.args` attribute contains only a 2-tuple of the first two "
"constructor arguments."
msgstr ""
"Den andra formen av konstruktorn ställer in motsvarande attribut, som "
"beskrivs nedan.  Attributen har som standard :const:`None` om de inte "
"specificeras.  För bakåtkompatibilitet, om tre argument skickas, innehåller "
"attributet :attr:`~BaseException.args` endast en 2-tupel av de två första "
"konstruktörsargumenten."

msgid ""
"The constructor often actually returns a subclass of :exc:`OSError`, as "
"described in `OS exceptions`_ below.  The particular subclass depends on the "
"final :attr:`.errno` value.  This behaviour only occurs when constructing :"
"exc:`OSError` directly or via an alias, and is not inherited when "
"subclassing."
msgstr ""
"Konstruktorn returnerar ofta faktiskt en underklass av :exc:`OSError`, som "
"beskrivs i `OS-undantag`_ nedan.  Den specifika underklassen beror på det "
"slutliga :attr:`.errno`-värdet.  Detta beteende uppstår endast när man "
"konstruerar :exc:`OSError` direkt eller via ett alias, och ärvs inte vid "
"subklassning."

msgid "A numeric error code from the C variable :c:data:`errno`."
msgstr "En numerisk felkod från C-variabeln :c:data:`errno`."

msgid ""
"Under Windows, this gives you the native Windows error code.  The :attr:`."
"errno` attribute is then an approximate translation, in POSIX terms, of that "
"native error code."
msgstr ""
"Under Windows ger detta dig den ursprungliga Windows-felkoden.  Attributet :"
"attr:`.errno` är då en ungefärlig översättning, i POSIX-termer, av den "
"ursprungliga felkoden."

msgid ""
"Under Windows, if the *winerror* constructor argument is an integer, the :"
"attr:`.errno` attribute is determined from the Windows error code, and the "
"*errno* argument is ignored.  On other platforms, the *winerror* argument is "
"ignored, and the :attr:`winerror` attribute does not exist."
msgstr ""
"Under Windows, om konstruktörsargumentet *winerror* är ett heltal, bestäms "
"attributet :attr:`.errno` från Windows felkod och argumentet *errno* "
"ignoreras.  På andra plattformar ignoreras *winerror*-argumentet och "
"attributet :attr:`winerror` existerar inte."

msgid ""
"The corresponding error message, as provided by the operating system.  It is "
"formatted by the C functions :c:func:`!perror` under POSIX, and :c:func:`!"
"FormatMessage` under Windows."
msgstr ""
"Det motsvarande felmeddelandet, som tillhandahålls av operativsystemet.  Det "
"formateras av C-funktionerna :c:func:`!perror` under POSIX och :c:func:`!"
"FormatMessage` under Windows."

msgid ""
"For exceptions that involve a file system path (such as :func:`open` or :"
"func:`os.unlink`), :attr:`filename` is the file name passed to the function. "
"For functions that involve two file system paths (such as :func:`os."
"rename`), :attr:`filename2` corresponds to the second file name passed to "
"the function."
msgstr ""
"För undantag som involverar en filsystemssökväg (t.ex. :func:`open` eller :"
"func:`os.unlink`) är :attr:`filename` det filnamn som skickas till "
"funktionen. För funktioner som involverar två filsystemssökvägar (t.ex. :"
"func:`os.rename`) motsvarar :attr:`filename2` det andra filnamnet som "
"skickas till funktionen."

msgid ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` and :exc:`!mmap.error` have been merged into :"
"exc:`OSError`, and the constructor may return a subclass."
msgstr ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` och :exc:`!mmap.error` har slagits samman till :"
"exc:`OSError`, och konstruktören kan returnera en underklass."

msgid ""
"The :attr:`filename` attribute is now the original file name passed to the "
"function, instead of the name encoded to or decoded from the :term:"
"`filesystem encoding and error handler`. Also, the *filename2* constructor "
"argument and attribute was added."
msgstr ""
"Attributet :attr:`filename` är nu det ursprungliga filnamnet som skickas "
"till funktionen, istället för det namn som kodats till eller avkodats från :"
"term:`filsystem encoding and error handler`. Dessutom har "
"konstruktörsargumentet och attributet *filename2* lagts till."

msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for integers (which would rather raise :exc:"
"`MemoryError` than give up).  However, for historical reasons, OverflowError "
"is sometimes raised for integers that are outside a required range.   "
"Because of the lack of standardization of floating-point exception handling "
"in C, most floating-point operations are not checked."
msgstr ""
"Utlöses när resultatet av en aritmetisk operation är för stort för att kunna "
"representeras.  Detta kan inte inträffa för heltal (som hellre ger upphov "
"till :exc:`MemoryError` än ger upp).  Av historiska skäl visas dock ibland "
"OverflowError för heltal som ligger utanför ett önskat intervall.   På grund "
"av bristen på standardisering av undantagshantering för flyttal i C "
"kontrolleras inte de flesta flyttalsoperationer."

msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when an "
"operation is blocked during interpreter shutdown also known as :term:`Python "
"finalization <interpreter shutdown>`."
msgstr ""
"Detta undantag härstammar från :exc:`RuntimeError`.  Det uppstår när en "
"operation blockeras under nedstängning av tolken, även känt som :term:"
"`Python finalization <interpreter shutdown>`."

msgid ""
"Examples of operations which can be blocked with a :exc:"
"`PythonFinalizationError` during the Python finalization:"
msgstr ""
"Exempel på operationer som kan blockeras med ett :exc:"
"`PythonFinalizationError` under Python-finaliseringen:"

msgid "Creating a new Python thread."
msgstr "Skapar en ny Python-tråd."

msgid ":meth:`Joining <threading.Thread.join>` a running daemon thread."
msgstr ":meth:`Joining <threading.Thread.join>` en pågående daemon-tråd."

msgid ":func:`os.fork`."
msgstr ":func:`os.fork`."

msgid "See also the :func:`sys.is_finalizing` function."
msgstr "Se även funktionen :func:`sys.is_finalizing`."

msgid "Previously, a plain :exc:`RuntimeError` was raised."
msgstr "Tidigare gavs ett vanligt :exc:`RuntimeError`."

msgid ":meth:`threading.Thread.join` can now raise this exception."
msgstr ":meth:`threading.Thread.join` kan nu ge upphov till detta undantag."

msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when the "
"interpreter detects that the maximum recursion depth (see :func:`sys."
"getrecursionlimit`) is exceeded."
msgstr ""
"Detta undantag härstammar från :exc:`RuntimeError`.  Det uppstår när tolken "
"upptäcker att det maximala rekursionsdjupet (se :func:`sys."
"getrecursionlimit`) har överskridits."

msgid ""
"This exception is raised when a weak reference proxy, created by the :func:"
"`weakref.proxy` function, is used to access an attribute of the referent "
"after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
"Detta undantag uppstår när en proxy för svaga referenser, skapad av "
"funktionen :func:`weakref.proxy`, används för att komma åt ett attribut hos "
"referenten efter att den har samlats in. För mer information om svaga "
"referenser, se modulen :mod:`weakref`."

msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went "
"wrong."
msgstr ""
"Utlöses när ett fel upptäcks som inte faller inom någon av de andra "
"kategorierna.  Det associerade värdet är en sträng som anger exakt vad som "
"gick fel."

msgid ""
"Raised by built-in function :func:`next` and an :term:`iterator`\\'s :meth:"
"`~iterator.__next__` method to signal that there are no further items "
"produced by the iterator."
msgstr ""
"Utlöses av den inbyggda funktionen :func:`next` och en :term:`iterator`:s :"
"meth:`~iterator.__next__`-metod för att signalera att det inte finns några "
"fler objekt som produceras av iteratorn."

msgid ""
"The exception object has a single attribute :attr:`!value`, which is given "
"as an argument when constructing the exception, and defaults to :const:"
"`None`."
msgstr ""
"Undantagsobjektet har ett enda attribut :attr:`!value`, som anges som ett "
"argument när undantaget konstrueras och som standard är :const:`None`."

msgid ""
"When a :term:`generator` or :term:`coroutine` function returns, a new :exc:"
"`StopIteration` instance is raised, and the value returned by the function "
"is used as the :attr:`value` parameter to the constructor of the exception."
msgstr ""
"När en :term:`generator` eller :term:`coroutine`-funktion returneras, skapas "
"en ny :exc:`StopIteration`-instans och det värde som returneras av "
"funktionen används som :attr:`value`-parameter i konstruktören för "
"undantaget."

msgid ""
"If a generator code directly or indirectly raises :exc:`StopIteration`, it "
"is converted into a :exc:`RuntimeError` (retaining the :exc:`StopIteration` "
"as the new exception's cause)."
msgstr ""
"Om en generatorkod direkt eller indirekt ger upphov till :exc:"
"`StopIteration`, konverteras den till en :exc:`RuntimeError` (med :exc:"
"`StopIteration` som orsak till det nya undantaget)."

msgid ""
"Added ``value`` attribute and the ability for generator functions to use it "
"to return a value."
msgstr ""
"Lagt till attributet ``value`` och möjligheten för generatorfunktioner att "
"använda det för att returnera ett värde."

msgid ""
"Introduced the RuntimeError transformation via ``from __future__ import "
"generator_stop``, see :pep:`479`."
msgstr ""
"Införde transformationen RuntimeError via ``from __future__ import "
"generator_stop``, se :pep:`479``."

msgid ""
"Enable :pep:`479` for all code by default: a :exc:`StopIteration` error "
"raised in a generator is transformed into a :exc:`RuntimeError`."
msgstr ""
"Aktivera :pep:`479` för all kod som standard: ett :exc:`StopIteration`-fel "
"som uppstår i en generator omvandlas till ett :exc:`RuntimeError`."

msgid ""
"Must be raised by :meth:`~object.__anext__` method of an :term:`asynchronous "
"iterator` object to stop the iteration."
msgstr ""
"Måste tas fram av :meth:`~object.__anext__`-metoden för ett :term:`asynkron "
"iterator`-objekt för att stoppa iterationen."

msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an :"
"keyword:`import` statement, in a call to the built-in functions :func:"
"`compile`, :func:`exec`, or :func:`eval`, or when reading the initial script "
"or standard input (also interactively)."
msgstr ""
"Utlöses när parsern stöter på ett syntaxfel.  Detta kan inträffa i en :"
"keyword:`import`-sats, i ett anrop till de inbyggda funktionerna :func:"
"`compile`, :func:`exec` eller :func:`eval`, eller vid läsning av det "
"inledande skriptet eller standardinmatningen (även interaktivt)."

msgid ""
"The :func:`str` of the exception instance returns only the error message. "
"Details is a tuple whose members are also available as separate attributes."
msgstr ""
"Undantagsinstansens :func:`str` returnerar endast felmeddelandet. Details är "
"en tupel vars medlemmar också är tillgängliga som separata attribut."

msgid "The name of the file the syntax error occurred in."
msgstr "Namnet på den fil där syntaxfelet inträffade."

msgid ""
"Which line number in the file the error occurred in. This is 1-indexed: the "
"first line in the file has a ``lineno`` of 1."
msgstr ""
"Vilket radnummer i filen som felet uppstod i. Detta är 1-indexerat: den "
"första raden i filen har en ``lineno`` på 1."

msgid ""
"The column in the line where the error occurred. This is 1-indexed: the "
"first character in the line has an ``offset`` of 1."
msgstr ""
"Kolumnen i raden där felet inträffade. Detta är 1-indexerat: det första "
"tecknet på raden har en ``offset`` på 1."

msgid "The source code text involved in the error."
msgstr "Den källkodstext som är inblandad i felet."

msgid ""
"Which line number in the file the error occurred ends in. This is 1-indexed: "
"the first line in the file has a ``lineno`` of 1."
msgstr ""
"Vilket radnummer i filen som felet inträffade slutar på. Detta är 1-"
"indexerat: den första raden i filen har en ``lineno`` på 1."

msgid ""
"The column in the end line where the error occurred finishes. This is 1-"
"indexed: the first character in the line has an ``offset`` of 1."
msgstr ""
"Kolumnen i slutraden där felet uppstod avslutas. Detta är 1-indexerat: det "
"första tecknet på raden har en ``offset`` på 1."

msgid ""
"For errors in f-string fields, the message is prefixed by \"f-string: \" and "
"the offsets are offsets in a text constructed from the replacement "
"expression.  For example, compiling f'Bad {a b} field' results in this args "
"attribute: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, 5))."
msgstr ""
"För fel i fält med f-strängar inleds meddelandet med \"f-sträng: \" och "
"offseten är offseten i en text som konstruerats utifrån "
"ersättningsuttrycket.  Exempelvis resulterar kompilering av f'Bad {a b} "
"field' i detta args-attribut: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, "
"5))."

msgid "Added the :attr:`end_lineno` and :attr:`end_offset` attributes."
msgstr "Lagt till attributen :attr:`end_lineno` och :attr:`end_offset`."

msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"Basklass för syntaxfel relaterade till felaktig indragning.  Detta är en "
"underklass till :exc:`SyntaxError`."

msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"Utlöses när indentation innehåller en inkonsekvent användning av tabbar och "
"mellanslag. Detta är en underklass till :exc:`IndentationError`."

msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is "
"a string indicating what went wrong (in low-level terms). In :term:"
"`CPython`, this could be raised by incorrectly using Python's C API, such as "
"returning a ``NULL`` value without an exception set."
msgstr ""
"Utlöses när tolken hittar ett internt fel, men situationen inte ser så "
"allvarlig ut att den får den att ge upp allt hopp. Det associerade värdet är "
"en sträng som anger vad som gick fel (i lågnivåtermer). I :term:`CPython` "
"kan detta uppstå genom felaktig användning av Pythons C API, t.ex. att "
"returnera ett ``NULL``-värde utan en undantagsuppsättning."

msgid ""
"If you're confident that this exception wasn't your fault, or the fault of a "
"package you're using, you should report this to the author or maintainer of "
"your Python interpreter. Be sure to report the version of the Python "
"interpreter (``sys.version``; it is also printed at the start of an "
"interactive Python session), the exact error message (the exception's "
"associated value) and if possible the source of the program that triggered "
"the error."
msgstr ""
"Om du är säker på att detta undantag inte var ditt fel, eller felet i ett "
"paket som du använder, bör du rapportera detta till författaren eller "
"underhållaren av din Python-tolk. Var noga med att rapportera versionen av "
"Python-tolken (``sys.version``; den skrivs också ut i början av en "
"interaktiv Python-session), det exakta felmeddelandet (undantagets "
"associerade värde) och om möjligt källan till det program som utlöste felet."

msgid ""
"This exception is raised by the :func:`sys.exit` function.  It inherits "
"from :exc:`BaseException` instead of :exc:`Exception` so that it is not "
"accidentally caught by code that catches :exc:`Exception`.  This allows the "
"exception to properly propagate up and cause the interpreter to exit.  When "
"it is not handled, the Python interpreter exits; no stack traceback is "
"printed.  The constructor accepts the same optional argument passed to :func:"
"`sys.exit`. If the value is an integer, it specifies the system exit status "
"(passed to C's :c:func:`!exit` function); if it is ``None``, the exit status "
"is zero; if it has another type (such as a string), the object's value is "
"printed and the exit status is one."
msgstr ""
"Detta undantag skapas av funktionen :func:`sys.exit`.  Det ärver från :exc:"
"`BaseException` istället för :exc:`Exception` så att det inte av misstag "
"fångas upp av kod som fångar upp :exc:`Exception`.  Detta gör att undantaget "
"kan spridas ordentligt uppåt och få tolken att avsluta.  När det inte "
"hanteras avslutas Python-tolken; ingen stack traceback skrivs ut.  "
"Konstruktören accepterar samma valfria argument som skickas till :func:`sys."
"exit`. Om värdet är ett heltal anger det systemets exitstatus (skickas till "
"C:s funktion :c:func:`!exit`); om det är ``None`` är exitstatusen noll; om "
"det har en annan typ (t.ex. en sträng) skrivs objektets värde ut och "
"exitstatusen är ett."

msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
"Ett anrop till :func:`sys.exit` översätts till ett undantag så att "
"rensningshanterare (:keyword:`finally`-klausuler i :keyword:`try`-satser) "
"kan köras och så att en debugger kan köra ett skript utan att riskera att "
"förlora kontrollen.  Funktionen :func:`os._exit` kan användas om det är "
"absolut nödvändigt att avsluta omedelbart (t.ex. i barnprocessen efter ett "
"anrop till :func:`os.fork`)."

msgid ""
"The exit status or error message that is passed to the constructor. "
"(Defaults to ``None``.)"
msgstr ""
"Utgångsstatus eller felmeddelande som skickas till konstruktören. "
"(Standardvärdet är ``None``.)"

msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"Utlöses när en operation eller funktion tillämpas på ett objekt av olämplig "
"typ.  Det associerade värdet är en sträng som ger information om felaktig "
"typmatchning."

msgid ""
"This exception may be raised by user code to indicate that an attempted "
"operation on an object is not supported, and is not meant to be. If an "
"object is meant to support a given operation but has not yet provided an "
"implementation, :exc:`NotImplementedError` is the proper exception to raise."
msgstr ""
"Detta undantag kan skapas av användarkod för att indikera att ett försök att "
"utföra en operation på ett objekt inte stöds och inte heller är avsett att "
"stödjas. Om ett objekt är avsett att stödja en viss operation men ännu inte "
"har tillhandahållit en implementering, är :exc:`NotImplementedError` det "
"korrekta undantaget."

msgid ""
"Passing arguments of the wrong type (e.g. passing a :class:`list` when an :"
"class:`int` is expected) should result in a :exc:`TypeError`, but passing "
"arguments with the wrong value (e.g. a number outside expected boundaries) "
"should result in a :exc:`ValueError`."
msgstr ""
"Att skicka argument av fel typ (t.ex. att skicka en :class:`list` när en :"
"class:`int` förväntas) bör resultera i ett :exc:`TypeError`, men att skicka "
"argument med fel värde (t.ex. ett tal utanför förväntade gränser) bör "
"resultera i ett :exc:`ValueError`."

msgid ""
"Raised when a reference is made to a local variable in a function or method, "
"but no value has been bound to that variable.  This is a subclass of :exc:"
"`NameError`."
msgstr ""
"Utlöses när en referens görs till en lokal variabel i en funktion eller "
"metod, men inget värde har bundits till variabeln.  Detta är en underklass "
"till :exc:`NameError`."

msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Utlöses när ett Unicode-relaterat kodnings- eller avkodningsfel inträffar.  "
"Det är en underklass till :exc:`ValueError`."

msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` har attribut som beskriver kodnings- eller "
"avkodningsfelet.  Till exempel ger ``err.object[err.start:err.end]`` den "
"specifika ogiltiga indata som codec misslyckades med."

msgid "The name of the encoding that raised the error."
msgstr "Namnet på den kodning som orsakade felet."

msgid "A string describing the specific codec error."
msgstr "En sträng som beskriver det specifika codec-felet."

msgid "The object the codec was attempting to encode or decode."
msgstr "Det objekt som codec försökte koda eller avkoda."

msgid "The first index of invalid data in :attr:`object`."
msgstr "Det första indexet för ogiltiga data i :attr:`object`."

msgid ""
"This value should not be negative as it is interpreted as an absolute offset "
"but this constraint is not enforced at runtime."
msgstr ""
"Detta värde bör inte vara negativt eftersom det tolkas som en absolut "
"förskjutning, men denna begränsning tillämpas inte under körning."

msgid "The index after the last invalid data in :attr:`object`."
msgstr "Indexet efter den sista ogiltiga uppgiften i :attr:`object`."

msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Uppstår när ett Unicode-relaterat fel inträffar under kodningen.  Det är en "
"underklass till :exc:`UnicodeError`."

msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Uppstår när ett Unicode-relaterat fel inträffar under avkodningen.  Det är "
"en underklass till :exc:`UnicodeError`."

msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Uppstår när ett Unicode-relaterat fel inträffar under översättningen.  Det "
"är en underklass till :exc:`UnicodeError`."

msgid ""
"Raised when an operation or function receives an argument that has the right "
"type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"Utlöses när en operation eller funktion får ett argument som har rätt typ "
"men ett olämpligt värde, och situationen inte beskrivs av ett mer precist "
"undantag som :exc:`IndexError`."

msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the "
"operation."
msgstr ""
"Uppstår när det andra argumentet i en divisions- eller modulooperation är "
"noll.  Det associerade värdet är en sträng som anger typen av operander och "
"operation."

msgid ""
"The following exceptions are kept for compatibility with previous versions; "
"starting from Python 3.3, they are aliases of :exc:`OSError`."
msgstr ""
"Följande undantag finns kvar för kompatibilitet med tidigare versioner; från "
"och med Python 3.3 är de alias för :exc:`OSError`."

msgid "Only available on Windows."
msgstr "Endast tillgängligt på Windows."

msgid "OS exceptions"
msgstr "OS-undantag"

msgid ""
"The following exceptions are subclasses of :exc:`OSError`, they get raised "
"depending on the system error code."
msgstr ""
"Följande undantag är underklasser till :exc:`OSError`, de aktiveras beroende "
"på systemets felkod."

msgid ""
"Raised when an operation would block on an object (e.g. socket) set for non-"
"blocking operation. Corresponds to :c:data:`errno` :py:const:`~errno."
"EAGAIN`, :py:const:`~errno.EALREADY`, :py:const:`~errno.EWOULDBLOCK` and :py:"
"const:`~errno.EINPROGRESS`."
msgstr ""
"Uppstår när en operation skulle blockera ett objekt (t.ex. socket) som är "
"inställt för icke-blockerande operationer. Motsvarar :c:data:`errno` :py:"
"const:`~errno.EAGAIN`, :py:const:`~errno.EALREADY`, :py:const:`~errno."
"EWOULDBLOCK` och :py:const:`~errno.EINPROGRESS`."

msgid ""
"In addition to those of :exc:`OSError`, :exc:`BlockingIOError` can have one "
"more attribute:"
msgstr ""
"Utöver de attribut som finns för :exc:`OSError` kan :exc:`BlockingIOError` "
"ha ytterligare ett attribut:"

msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked.  This attribute is available when using the buffered I/O classes "
"from the :mod:`io` module."
msgstr ""
"Ett heltal som innehåller antalet tecken som skrevs till strömmen innan den "
"blockerades.  Detta attribut är tillgängligt när du använder de buffrade I/O-"
"klasserna från modulen :mod:`io`."

msgid ""
"Raised when an operation on a child process failed. Corresponds to :c:data:"
"`errno` :py:const:`~errno.ECHILD`."
msgstr ""
"Utlöses när en åtgärd på en underordnad process misslyckades. Motsvarar :c:"
"data:`errno` :py:const:`~errno.ECHILD`."

msgid "A base class for connection-related issues."
msgstr "En basklass för anslutningsrelaterade frågor."

msgid ""
"Subclasses are :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :exc:"
"`ConnectionRefusedError` and :exc:`ConnectionResetError`."
msgstr ""
"Underklasser är :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :exc:"
"`ConnectionRefusedError` och :exc:`ConnectionResetError`."

msgid ""
"A subclass of :exc:`ConnectionError`, raised when trying to write on a pipe "
"while the other end has been closed, or trying to write on a socket which "
"has been shutdown for writing. Corresponds to :c:data:`errno` :py:const:"
"`~errno.EPIPE` and :py:const:`~errno.ESHUTDOWN`."
msgstr ""
"En underklass till :exc:`ConnectionError`, som uppstår när man försöker "
"skriva på en pipe medan den andra änden har stängts, eller när man försöker "
"skriva på en socket som har stängts för skrivning. Motsvarar :c:data:"
"`errno` :py:const:`~errno.EPIPE` och :py:const:`~errno.ESHUTDOWN`."

msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"aborted by the peer. Corresponds to :c:data:`errno` :py:const:`~errno."
"ECONNABORTED`."
msgstr ""
"En underklass till :exc:`ConnectionError`, som uppstår när ett "
"anslutningsförsök avbryts av motparten. Motsvarar :c:data:`errno` :py:const:"
"`~errno.ECONNABORTED`."

msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"refused by the peer. Corresponds to :c:data:`errno` :py:const:`~errno."
"ECONNREFUSED`."
msgstr ""
"En underklass till :exc:`ConnectionError`, som uppstår när ett "
"anslutningsförsök nekas av motparten. Motsvarar :c:data:`errno` :py:const:"
"`~errno.ECONNREFUSED`."

msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection is reset by "
"the peer. Corresponds to :c:data:`errno` :py:const:`~errno.ECONNRESET`."
msgstr ""
"En underklass till :exc:`ConnectionError`, som uppstår när en anslutning "
"återställs av motparten. Motsvarar :c:data:`errno` :py:const:`~errno."
"ECONNRESET`."

msgid ""
"Raised when trying to create a file or directory which already exists. "
"Corresponds to :c:data:`errno` :py:const:`~errno.EEXIST`."
msgstr ""
"Utlöses när man försöker skapa en fil eller katalog som redan finns. "
"Motsvarar :c:data:`errno` :py:const:`~errno.EEXIST`."

msgid ""
"Raised when a file or directory is requested but doesn't exist. Corresponds "
"to :c:data:`errno` :py:const:`~errno.ENOENT`."
msgstr ""
"Utlöses när en fil eller katalog begärs men inte finns. Motsvarar :c:data:"
"`errno` :py:const:`~errno.ENOENT`."

msgid ""
"Raised when a system call is interrupted by an incoming signal. Corresponds "
"to :c:data:`errno` :py:const:`~errno.EINTR`."
msgstr ""
"Utlöses när ett systemanrop avbryts av en inkommande signal. Motsvarar :c:"
"data:`errno` :py:const:`~errno.EINTR`."

msgid ""
"Python now retries system calls when a syscall is interrupted by a signal, "
"except if the signal handler raises an exception (see :pep:`475` for the "
"rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"Python gör nu om systemanrop när ett syscall avbryts av en signal, utom om "
"signalhanteraren gör ett undantag (se :pep:`475` för motivering), istället "
"för att göra :exc:`InterruptedError`."

msgid ""
"Raised when a file operation (such as :func:`os.remove`) is requested on a "
"directory. Corresponds to :c:data:`errno` :py:const:`~errno.EISDIR`."
msgstr ""
"Utlöses när en filoperation (t.ex. :func:`os.remove`) begärs på en katalog. "
"Motsvarar :c:data:`errno` :py:const:`~errno.EISDIR`."

msgid ""
"Raised when a directory operation (such as :func:`os.listdir`) is requested "
"on something which is not a directory.  On most POSIX platforms, it may also "
"be raised if an operation attempts to open or traverse a non-directory file "
"as if it were a directory. Corresponds to :c:data:`errno` :py:const:`~errno."
"ENOTDIR`."
msgstr ""
"Utlöses när en katalogoperation (t.ex. :func:`os.listdir`) begärs på något "
"som inte är en katalog.  På de flesta POSIX-plattformar kan det också uppstå "
"om en åtgärd försöker öppna eller gå igenom en fil som inte är en katalog "
"som om den vore en katalog. Motsvarar :c:data:`errno` :py:const:`~errno."
"ENOTDIR`."

msgid ""
"Raised when trying to run an operation without the adequate access rights - "
"for example filesystem permissions. Corresponds to :c:data:`errno` :py:const:"
"`~errno.EACCES`, :py:const:`~errno.EPERM`, and :py:const:`~errno."
"ENOTCAPABLE`."
msgstr ""
"Utlöses när man försöker köra en operation utan tillräckliga rättigheter - "
"till exempel filsystembehörighet. Motsvarar :c:data:`errno` :py:const:"
"`~errno.EACCES`, :py:const:`~errno.EPERM`, och :py:const:`~errno."
"ENOTCAPABLE`."

msgid ""
"WASI's :py:const:`~errno.ENOTCAPABLE` is now mapped to :exc:"
"`PermissionError`."
msgstr ""
"WASI:s :py:const:`~errno.ENOTCAPABLE` mappas nu till :exc:`PermissionError`."

msgid ""
"Raised when a given process doesn't exist. Corresponds to :c:data:`errno` :"
"py:const:`~errno.ESRCH`."
msgstr ""
"Utlöses när en viss process inte existerar. Motsvarar :c:data:`errno` :py:"
"const:`~errno.ESRCH`."

msgid ""
"Raised when a system function timed out at the system level. Corresponds to :"
"c:data:`errno` :py:const:`~errno.ETIMEDOUT`."
msgstr ""
"Utlöses när en systemfunktion timade ut på systemnivå. Motsvarar :c:data:"
"`errno` :py:const:`~errno.ETIMEDOUT`."

msgid "All the above :exc:`OSError` subclasses were added."
msgstr "Alla ovanstående :exc:`OSError`-subklasser lades till."

msgid ":pep:`3151` - Reworking the OS and IO exception hierarchy"
msgstr ":pep:`3151` - Omarbetning av undantagshierarkin för OS och IO"

msgid "Warnings"
msgstr "Varningar"

msgid ""
"The following exceptions are used as warning categories; see the :ref:"
"`warning-categories` documentation for more details."
msgstr ""
"Följande undantag används som varningskategorier; se :ref:`warning-"
"categories`-dokumentationen för mer information."

msgid "Base class for warning categories."
msgstr "Basklass för varningskategorier."

msgid "Base class for warnings generated by user code."
msgstr "Basklass för varningar som genereras av användarkod."

msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for other Python developers."
msgstr ""
"Basklass för varningar om föråldrade funktioner när dessa varningar är "
"avsedda för andra Python-utvecklare."

msgid ""
"Ignored by the default warning filters, except in the ``__main__`` module (:"
"pep:`565`). Enabling the :ref:`Python Development Mode <devmode>` shows this "
"warning."
msgstr ""
"Ignoreras av standardvarningsfiltren, utom i modulen ``__main__`` (:pep:"
"`565``). Om du aktiverar :ref:``Python Development Mode <devmode>`` visas "
"denna varning."

msgid "The deprecation policy is described in :pep:`387`."
msgstr "Policyn för utfasning beskrivs i :pep:`387`."

msgid ""
"Base class for warnings about features which are obsolete and expected to be "
"deprecated in the future, but are not deprecated at the moment."
msgstr ""
"Basklass för varningar om funktioner som är föråldrade och förväntas bli "
"utdaterade i framtiden, men som inte är utdaterade för tillfället."

msgid ""
"This class is rarely used as emitting a warning about a possible upcoming "
"deprecation is unusual, and :exc:`DeprecationWarning` is preferred for "
"already active deprecations."
msgstr ""
"Denna klass används sällan eftersom det är ovanligt att skicka ut en varning "
"om en eventuell kommande deprecation, och :exc:`DeprecationWarning` föredras "
"för redan aktiva deprecations."

msgid ""
"Ignored by the default warning filters. Enabling the :ref:`Python "
"Development Mode <devmode>` shows this warning."
msgstr ""
"Ignoreras av standardvarningsfiltren. Om du aktiverar :ref:`Python "
"Development Mode <devmode>` visas den här varningen."

msgid "Base class for warnings about dubious syntax."
msgstr "Basklass för varningar om tvivelaktig syntax."

msgid "Base class for warnings about dubious runtime behavior."
msgstr "Basklass för varningar om tvivelaktigt beteende under körtid."

msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Basklass för varningar om föråldrade funktioner när dessa varningar är "
"avsedda för slutanvändare av program som är skrivna i Python."

msgid "Base class for warnings about probable mistakes in module imports."
msgstr "Basklass för varningar om troliga misstag i modulimporten."

msgid "Base class for warnings related to Unicode."
msgstr "Basklass för varningar relaterade till Unicode."

msgid "Base class for warnings related to encodings."
msgstr "Basklass för varningar relaterade till kodning."

msgid "See :ref:`io-encoding-warning` for details."
msgstr "Se :ref:`io-encoding-warning` för mer information."

msgid ""
"Base class for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Basklass för varningar relaterade till :class:`bytes` och :class:`bytearray`."

msgid "Base class for warnings related to resource usage."
msgstr "Basklass för varningar relaterade till resursanvändning."

msgid "Exception groups"
msgstr "Undantagsgrupper"

msgid ""
"The following are used when it is necessary to raise multiple unrelated "
"exceptions. They are part of the exception hierarchy so they can be handled "
"with :keyword:`except` like all other exceptions. In addition, they are "
"recognised by :keyword:`except*<except_star>`, which matches their subgroups "
"based on the types of the contained exceptions."
msgstr ""
"Följande används när det är nödvändigt att skapa flera orelaterade undantag. "
"De är en del av undantagshierarkin så de kan hanteras med :keyword:`except` "
"som alla andra undantag. Dessutom känns de igen av :keyword:"
"`except*<except_star>`, som matchar deras undergrupper baserat på typerna av "
"de undantag som ingår."

msgid ""
"Both of these exception types wrap the exceptions in the sequence ``excs``. "
"The ``msg`` parameter must be a string. The difference between the two "
"classes is that :exc:`BaseExceptionGroup` extends :exc:`BaseException` and "
"it can wrap any exception, while :exc:`ExceptionGroup` extends :exc:"
"`Exception` and it can only wrap subclasses of :exc:`Exception`. This design "
"is so that ``except Exception`` catches an :exc:`ExceptionGroup` but not :"
"exc:`BaseExceptionGroup`."
msgstr ""
"Båda dessa undantagstyper packar in undantagen i sekvensen ``excs``. "
"Parametern ``msg`` måste vara en sträng. Skillnaden mellan de två klasserna "
"är att :exc:`BaseExceptionGroup` extenderar :exc:`BaseException` och kan "
"fånga alla undantag, medan :exc:`ExceptionGroup` extenderar :exc:`Exception` "
"och bara kan fånga subklasser av :exc:`Exception`. Denna design är så att "
"``except Exception`` fångar en :exc:`ExceptionGroup` men inte :exc:"
"`BaseExceptionGroup`."

msgid ""
"The :exc:`BaseExceptionGroup` constructor returns an :exc:`ExceptionGroup` "
"rather than a :exc:`BaseExceptionGroup` if all contained exceptions are :exc:"
"`Exception` instances, so it can be used to make the selection automatic. "
"The :exc:`ExceptionGroup` constructor, on the other hand, raises a :exc:"
"`TypeError` if any contained exception is not an :exc:`Exception` subclass."
msgstr ""
"Konstruktören :exc:`BaseExceptionGroup` returnerar en :exc:`ExceptionGroup` "
"i stället för en :exc:`BaseExceptionGroup` om alla undantag som ingår är :"
"exc:`Exception`-instanser, så den kan användas för att göra urvalet "
"automatiskt. Konstruktören för :exc:`ExceptionGroup`, å andra sidan, ger "
"upphov till ett :exc:`TypeError` om något undantag som ingår inte är en "
"underklass till :exc:`Exception`."

msgid "The ``msg`` argument to the constructor. This is a read-only attribute."
msgstr ""
"Argumentet ``msg`` till konstruktören. Detta är ett skrivskyddat attribut."

msgid ""
"A tuple of the exceptions in the ``excs`` sequence given to the constructor. "
"This is a read-only attribute."
msgstr ""
"En tupel av undantagen i sekvensen ``excs`` som ges till konstruktören. "
"Detta är ett skrivskyddat attribut."

msgid ""
"Returns an exception group that contains only the exceptions from the "
"current group that match *condition*, or ``None`` if the result is empty."
msgstr ""
"Returnerar en undantagsgrupp som bara innehåller de undantag från den "
"aktuella gruppen som matchar *villkor*, eller ``None`` om resultatet är tomt."

msgid ""
"The condition can be an exception type or tuple of exception types, in which "
"case each exception is checked for a match using the same check that is used "
"in an ``except`` clause.  The condition can also be a callable (other than a "
"type object) that accepts an exception as its single argument and returns "
"true for the exceptions that should be in the subgroup."
msgstr ""
"Villkoret kan vara en undantagstyp eller en tupel av undantagstyper, i "
"vilket fall varje undantag kontrolleras för matchning med samma kontroll som "
"används i en ``except``-klausul.  Villkoret kan också vara en callable "
"(annat än ett typobjekt) som accepterar ett undantag som enda argument och "
"returnerar true för de undantag som bör ingå i undergruppen."

msgid ""
"The nesting structure of the current exception is preserved in the result, "
"as are the values of its :attr:`message`, :attr:`~BaseException."
"__traceback__`, :attr:`~BaseException.__cause__`, :attr:`~BaseException."
"__context__` and :attr:`~BaseException.__notes__` fields. Empty nested "
"groups are omitted from the result."
msgstr ""
"Det aktuella undantagets nestningsstruktur bevaras i resultatet, liksom "
"värdena i fälten :attr:`message`, :attr:`~BaseException.__traceback__`, :"
"attr:`~BaseException.__cause__`, :attr:`~BaseException.__context__` och :"
"attr:`~BaseException.__notes__`. Tomma nästlade grupper utelämnas från "
"resultatet."

msgid ""
"The condition is checked for all exceptions in the nested exception group, "
"including the top-level and any nested exception groups. If the condition is "
"true for such an exception group, it is included in the result in full."
msgstr ""
"Villkoret kontrolleras för alla undantag i den nästlade undantagsgruppen, "
"inklusive den översta nivån och alla nästlade undantagsgrupper. Om villkoret "
"är sant för en sådan undantagsgrupp ingår den i resultatet i sin helhet."

msgid "``condition`` can be any callable which is not a type object."
msgstr ""
"``condition`` kan vara vilken callable som helst som inte är ett typobjekt."

msgid ""
"Like :meth:`subgroup`, but returns the pair ``(match, rest)`` where "
"``match`` is ``subgroup(condition)`` and ``rest`` is the remaining non-"
"matching part."
msgstr ""
"Som :meth:`subgroup`, men returnerar paret ``(match, rest)`` där ``match`` "
"är ``subgroup(condition)`` och ``rest`` är den återstående icke-matchande "
"delen."

msgid ""
"Returns an exception group with the same :attr:`message`, but which wraps "
"the exceptions in ``excs``."
msgstr ""
"Returnerar en undantagsgrupp med samma :attr:`message`, men som omsluter "
"undantagen i ``excs``."

msgid ""
"This method is used by :meth:`subgroup` and :meth:`split`, which are used in "
"various contexts to break up an exception group. A subclass needs to "
"override it in order to make :meth:`subgroup` and :meth:`split` return "
"instances of the subclass rather than :exc:`ExceptionGroup`."
msgstr ""
"Den här metoden används av :meth:`subgroup` och :meth:`split`, som används i "
"olika sammanhang för att bryta upp en undantagsgrupp. En subklass måste "
"åsidosätta den för att få :meth:`subgroup` och :meth:`split` att returnera "
"instanser av subklassen istället för :exc:`ExceptionGroup`."

msgid ""
":meth:`subgroup` and :meth:`split` copy the :attr:`~BaseException."
"__traceback__`, :attr:`~BaseException.__cause__`, :attr:`~BaseException."
"__context__` and :attr:`~BaseException.__notes__` fields from the original "
"exception group to the one returned by :meth:`derive`, so these fields do "
"not need to be updated by :meth:`derive`."
msgstr ""
":meth:`subgroup` och :meth:`split` kopierar fälten :attr:`~BaseException."
"__traceback__`, :attr:`~BaseException.__cause__`, :attr:`~BaseException."
"__context__` och :attr:`~BaseException.__notes__` från den ursprungliga "
"undantagsgruppen till den som returneras av :meth:`derive`, så dessa fält "
"behöver inte uppdateras av :meth:`derive`."

msgid ""
">>> class MyGroup(ExceptionGroup):\n"
"...     def derive(self, excs):\n"
"...         return MyGroup(self.message, excs)\n"
"...\n"
">>> e = MyGroup(\"eg\", [ValueError(1), TypeError(2)])\n"
">>> e.add_note(\"a note\")\n"
">>> e.__context__ = Exception(\"context\")\n"
">>> e.__cause__ = Exception(\"cause\")\n"
">>> try:\n"
"...    raise e\n"
"... except Exception as e:\n"
"...    exc = e\n"
"...\n"
">>> match, rest = exc.split(ValueError)\n"
">>> exc, exc.__context__, exc.__cause__, exc.__notes__\n"
"(MyGroup('eg', [ValueError(1), TypeError(2)]), Exception('context'), "
"Exception('cause'), ['a note'])\n"
">>> match, match.__context__, match.__cause__, match.__notes__\n"
"(MyGroup('eg', [ValueError(1)]), Exception('context'), Exception('cause'), "
"['a note'])\n"
">>> rest, rest.__context__, rest.__cause__, rest.__notes__\n"
"(MyGroup('eg', [TypeError(2)]), Exception('context'), Exception('cause'), "
"['a note'])\n"
">>> exc.__traceback__ is match.__traceback__ is rest.__traceback__\n"
"True"
msgstr ""
">>> klass MyGroup(ExceptionGroup):\n"
"... def derive(self, excs):\n"
"... return MyGroup(self.message, excs)\n"
"...\n"
">>> e = MyGroup(\"eg\", [ValueError(1), TypeError(2)])\n"
">>> e.add_note(\"en anteckning\")\n"
">>> e.__kontext__ = Undantag(\"kontext\")\n"
">>> e.__cause__ = Undantag(\"orsak\")\n"
">>> försök:\n"
"... raise e\n"
"... except Exception as e:\n"
"... exc = e\n"
"...\n"
">>> match, rest = exc.split(ValueError)\n"
">>> exc, exc.__kontext__, exc.__orsak__, exc.__noter__\n"
"(MyGroup('eg', [ValueError(1), TypeError(2)]), Exception('context'), "
"Exception('cause'), ['a note'])\n"
">>> match, match.__kontext__, match.__orsak__, match.__noter__\n"
"(MyGroup('eg', [ValueError(1)]), Exception('context'), Exception('cause'), "
"['a note'])\n"
">>> rest, rest.__kontext__, rest.__orsak__, rest.__noter__\n"
"(MyGroup('eg', [TypeError(2)]), Exception('context'), Exception('cause'), "
"['a note'])\n"
">>> exc.__traceback__ är match.__traceback__ är rest.__traceback__\n"
"Sant"

msgid ""
"Note that :exc:`BaseExceptionGroup` defines :meth:`~object.__new__`, so "
"subclasses that need a different constructor signature need to override that "
"rather than :meth:`~object.__init__`. For example, the following defines an "
"exception group subclass which accepts an exit_code and constructs the "
"group's message from it. ::"
msgstr ""
"Observera att :exc:`BaseExceptionGroup` definierar :meth:`~object.__new__`, "
"så underklasser som behöver en annan konstruktörsignatur måste åsidosätta "
"den i stället för :meth:`~object.__init__`. Följande definierar till exempel "
"en exception group-underklass som tar emot en exit_code och konstruerar "
"gruppens meddelande utifrån den. ::"

msgid ""
"class Errors(ExceptionGroup):\n"
"   def __new__(cls, errors, exit_code):\n"
"      self = super().__new__(Errors, f\"exit code: {exit_code}\", errors)\n"
"      self.exit_code = exit_code\n"
"      return self\n"
"\n"
"   def derive(self, excs):\n"
"      return Errors(excs, self.exit_code)"
msgstr ""
"class Errors(ExceptionGroup):\n"
"   def __new__(cls, errors, exit_code):\n"
"      self = super().__new__(Errors, f\"utgångskod: {exit_code}\", errors)\n"
"      self.exit_code = exit_code\n"
"      return self\n"
"\n"
"   def derive(self, excs):\n"
"      return Errors(excs, self.exit_code)"

msgid ""
"Like :exc:`ExceptionGroup`, any subclass of :exc:`BaseExceptionGroup` which "
"is also a subclass of :exc:`Exception` can only wrap instances of :exc:"
"`Exception`."
msgstr ""
"Liksom :exc:`ExceptionGroup` kan en subklass av :exc:`BaseExceptionGroup` "
"som också är en subklass av :exc:`Exception` bara omsluta instanser av :exc:"
"`Exception`."

msgid "Exception hierarchy"
msgstr "Undantagshierarki"

msgid "The class hierarchy for built-in exceptions is:"
msgstr "Klasshierarkin för inbyggda undantag är:"

msgid ""
"BaseException\n"
" ├── BaseExceptionGroup\n"
" ├── GeneratorExit\n"
" ├── KeyboardInterrupt\n"
" ├── SystemExit\n"
" └── Exception\n"
"      ├── ArithmeticError\n"
"      │    ├── FloatingPointError\n"
"      │    ├── OverflowError\n"
"      │    └── ZeroDivisionError\n"
"      ├── AssertionError\n"
"      ├── AttributeError\n"
"      ├── BufferError\n"
"      ├── EOFError\n"
"      ├── ExceptionGroup [BaseExceptionGroup]\n"
"      ├── ImportError\n"
"      │    └── ModuleNotFoundError\n"
"      ├── LookupError\n"
"      │    ├── IndexError\n"
"      │    └── KeyError\n"
"      ├── MemoryError\n"
"      ├── NameError\n"
"      │    └── UnboundLocalError\n"
"      ├── OSError\n"
"      │    ├── BlockingIOError\n"
"      │    ├── ChildProcessError\n"
"      │    ├── ConnectionError\n"
"      │    │    ├── BrokenPipeError\n"
"      │    │    ├── ConnectionAbortedError\n"
"      │    │    ├── ConnectionRefusedError\n"
"      │    │    └── ConnectionResetError\n"
"      │    ├── FileExistsError\n"
"      │    ├── FileNotFoundError\n"
"      │    ├── InterruptedError\n"
"      │    ├── IsADirectoryError\n"
"      │    ├── NotADirectoryError\n"
"      │    ├── PermissionError\n"
"      │    ├── ProcessLookupError\n"
"      │    └── TimeoutError\n"
"      ├── ReferenceError\n"
"      ├── RuntimeError\n"
"      │    ├── NotImplementedError\n"
"      │    ├── PythonFinalizationError\n"
"      │    └── RecursionError\n"
"      ├── StopAsyncIteration\n"
"      ├── StopIteration\n"
"      ├── SyntaxError\n"
"      │    └── IndentationError\n"
"      │         └── TabError\n"
"      ├── SystemError\n"
"      ├── TypeError\n"
"      ├── ValueError\n"
"      │    └── UnicodeError\n"
"      │         ├── UnicodeDecodeError\n"
"      │         ├── UnicodeEncodeError\n"
"      │         └── UnicodeTranslateError\n"
"      └── Warning\n"
"           ├── BytesWarning\n"
"           ├── DeprecationWarning\n"
"           ├── EncodingWarning\n"
"           ├── FutureWarning\n"
"           ├── ImportWarning\n"
"           ├── PendingDeprecationWarning\n"
"           ├── ResourceWarning\n"
"           ├── RuntimeWarning\n"
"           ├── SyntaxWarning\n"
"           ├── UnicodeWarning\n"
"           └── UserWarning\n"
msgstr ""
"BaseException\n"
" ├── BaseExceptionGroup\n"
" ├─── GeneratorExit\n"
" keyboardInterrupt\n"
" ├── SystemExit\n"
" └── Undantag\n"
"      aritmetiskt fel (ArithmeticError)\n"
"      │ ├── FloatingPointError\n"
"      │ ├── Överflödesfel\n"
"      │ └── NollDivisionsFel\n"
"      ├── AssertionError\n"
"      ├── AttributFel\n"
"      ├── Buffertfel\n"
"      ├── EOFError\n"
"      ├── ExceptionGroup [BaseExceptionGroup]\n"
"      ├── ImportFel\n"
"      │ └── ModulFinnsInteFel\n"
"      ├── LookupError\n"
"      │ ├── IndexError\n"
"      │ └── KeyError\n"
"      ├─── MemoryError\n"
"      ├── NamnFel\n"
"      │ └── ObundetLokaltFel\n"
"      ├── OSError\n"
"      │ ├── BlockerandeIOFel\n"
"      │ ├── ChildProcessError\n"
"      │ ├── AnslutningFel\n"
"      │ │ ├── BrokenPipeError\n"
"      │ │ ├── ConnectionAbortedError\n"
"      │ │ ├── ConnectionRefusedError\n"
"      │ │ └── ConnectionResetError\n"
"      │ ├── FileExistsError\n"
"      │ ├── FileNotFoundError\n"
"      │ ├── AvbrutetFel\n"
"      │ ├── IsADirectoryError\n"
"      │ ├── InteADirectoryError\n"
"      │ ├── PermissionError\n"
"      │ ├── ProcessLookupError\n"
"      │ └── TimeoutError\n"
"      ├── ReferensFel\n"
"      ├── RuntimeError\n"
"      │ ├── InteImplementeratFel\n"
"      │ ├── PythonFinalizationError\n"
"      │ └── Rekursionsfel\n"
"      ├── StopAsyncIteration\n"
"      ├── StopIteration\n"
"      ├── SyntaxFel\n"
"      │ └── Indragningsfel\n"
"      │ └── TabError\n"
"      ├─── Systemfel\n"
"      ├── TypeError\n"
"      ├── VärdeFel\n"
"      │ └── UnicodeFel\n"
"      │ ├── UnicodeDecodeError\n"
"      │ ├── UnicodeEncodeError\n"
"      │ └── UnicodeTranslateError\n"
"      └── Varning\n"
"           bytesvarning\n"
"           ├── Avvecklingsvarning\n"
"           kodningsvarning\n"
"           ├── Framtida varning\n"
"           ├── Importvarning\n"
"           ├── VäntarPåAvvecklingVarning\n"
"           ├── Resursvarning\n"
"           runtimeWarning\n"
"           syntaxvarning\n"
"           unicodeWarning\n"
"           └── Användarvarning\n"

msgid "statement"
msgstr "uttalande"

msgid "try"
msgstr "försök"

msgid "except"
msgstr "utom"

msgid "raise"
msgstr "höja"

msgid "exception"
msgstr "undantag"

msgid "chaining"
msgstr "kedja"

msgid "__cause__ (exception attribute)"
msgstr "__cause__ (attribut för undantag)"

msgid "__context__ (exception attribute)"
msgstr "__kontext__ (undantagsattribut)"

msgid "__suppress_context__ (exception attribute)"
msgstr "__suppress_context__ (undantagsattribut)"

msgid "assert"
msgstr "assert"

msgid "module"
msgstr "modul"

msgid "errno"
msgstr "errno"
