# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!linecache` --- Random access to text lines"
msgstr ":mod:`!linecache` --- Slumpmässig tillgång till textrader"

msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**Källkod:** :source:`Lib/linecache.py`"

msgid ""
"The :mod:`linecache` module allows one to get any line from a Python source "
"file, while attempting to optimize internally, using a cache, the common "
"case where many lines are read from a single file.  This is used by the :mod:"
"`traceback` module to retrieve source lines for inclusion in  the formatted "
"traceback."
msgstr ""
"Modulen :mod:`linecache` gör det möjligt att hämta valfri rad från en Python-"
"källfil, samtidigt som man försöker optimera internt med hjälp av en cache, "
"i det vanliga fallet när många rader läses från en enda fil.  Detta används "
"av modulen :mod:`traceback` för att hämta källrader som ska ingå i den "
"formaterade spårningen."

msgid ""
"The :func:`tokenize.open` function is used to open files. This function "
"uses :func:`tokenize.detect_encoding` to get the encoding of the file; in "
"the absence of an encoding token, the file encoding defaults to UTF-8."
msgstr ""
"Funktionen :func:`tokenize.open` används för att öppna filer. Denna funktion "
"använder :func:`tokenize.detect_encoding` för att hämta filens kodning; i "
"avsaknad av en kodningstoken är filens kodning som standard UTF-8."

msgid "The :mod:`linecache` module defines the following functions:"
msgstr "Modulen :mod:`linecache` definierar följande funktioner:"

msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"Hämta rad *lineno* från filen med namnet *filnamn*. Denna funktion kommer "
"aldrig att ge upphov till ett undantag --- den kommer att returnera ``''`` "
"vid fel (det avslutande newline-tecknet kommer att inkluderas för de rader "
"som hittas)."

msgid ""
"If *filename* indicates a frozen module (starting with ``'<frozen '``), the "
"function will attepmt to get the real file name from "
"``module_globals['__file__']`` if *module_globals* is not ``None``."
msgstr ""
"Om *filnamn* anger en fryst modul (som börjar med ``'<frozen``), kommer "
"funktionen att försöka få det riktiga filnamnet från "
"``module_globals['__file__']`` om *module_globals* inte är ``None``."

msgid ""
"If a file named *filename* is not found, the function first checks for a :"
"pep:`302` ``__loader__`` in *module_globals*. If there is such a loader and "
"it defines a ``get_source`` method, then that determines the source lines "
"(if ``get_source()`` returns ``None``, then ``''`` is returned). Finally, if "
"*filename* is a relative filename, it is looked up relative to the entries "
"in the module search path, ``sys.path``."
msgstr ""
"Om en fil med namnet *filnamn* inte hittas, söker funktionen först efter en :"
"pep:`302` ``__loader__`` i *module_globals*. Om det finns en sådan laddare "
"och den definierar en ``get_source``-metod, så bestämmer den källraderna (om "
"``get_source()`` returnerar ``None``, så returneras ``''``). Slutligen, om "
"*filnamn* är ett relativt filnamn, söks det upp i förhållande till posterna "
"i modulens sökväg, ``sys.path``."

msgid "Support *filename* of frozen modules."
msgstr "Stöd för *filnamn* på frysta moduler."

msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"Rensa cacheminnet.  Använd den här funktionen om du inte längre behöver "
"rader från filer som tidigare lästs med :func:`getline`."

msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""
"Kontrollera att cacheminnet är giltigt.  Använd den här funktionen om filer "
"i cacheminnet kan ha ändrats på disken och du behöver den uppdaterade "
"versionen.  Om *filnamn* utelämnas kontrolleras alla poster i cacheminnet."

msgid ""
"Capture enough detail about a non-file-based module to permit getting its "
"lines later via :func:`getline` even if *module_globals* is ``None`` in the "
"later call. This avoids doing I/O until a line is actually needed, without "
"having to carry the module globals around indefinitely."
msgstr ""
"Fånga tillräckligt med detaljer om en icke-filbaserad modul för att kunna "
"hämta dess rader senare via :func:`getline` även om *module_globals* är "
"``None`` i det senare anropet. Detta undviker att göra I/O tills en rad "
"faktiskt behövs, utan att behöva bära modulglobalerna runt på obestämd tid."

msgid "Example::"
msgstr "Exempel::"

msgid ""
">>> import linecache\n"
">>> linecache.getline(linecache.__file__, 8)\n"
"'import sys\\n'"
msgstr ""
">>> import linecache\n"
">>> linecache.getline(linecache.__file__, 8)\n"
"'import sys\\n'"

msgid "module"
msgstr "module"

msgid "search"
msgstr "search"

msgid "path"
msgstr "path"
