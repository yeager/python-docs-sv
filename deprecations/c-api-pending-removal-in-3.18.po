# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Pending removal in Python 3.18"
msgstr "Väntar på borttagning i Python 3.18"

msgid "Deprecated private functions (:gh:`128863`):"
msgstr "Föråldrade privata funktioner (:gh:`128863`):"

msgid ":c:func:`!_PyBytes_Join`: use :c:func:`PyBytes_Join`."
msgstr ":c:func:`!_PyBytes_Join`: använd :c:func:`PyBytes_Join`."

msgid ""
":c:func:`!_PyDict_GetItemStringWithError`: use :c:func:"
"`PyDict_GetItemStringRef`."
msgstr ""
":c:func:`!_PyDict_GetItemStringWithError`: använd :c:func:"
"`PyDict_GetItemStringRef`."

msgid ":c:func:`!_PyDict_Pop()`: :c:func:`PyDict_Pop`."
msgstr ":c:func:`!_PyDict_Pop()`: :c:func:`PyDict_Pop`."

msgid ":c:func:`!_PyLong_Sign()`: use :c:func:`PyLong_GetSign`."
msgstr ":c:func:`!_PyLong_Sign()`: använd :c:func:`PyLong_GetSign`."

msgid ""
":c:func:`!_PyLong_FromDigits` and :c:func:`!_PyLong_New`: use :c:func:"
"`PyLongWriter_Create`."
msgstr ""
":c:func:`!_PyLong_FromDigits` och :c:func:`!_PyLong_New`: använd :c:func:"
"`PyLongWriter_Create`."

msgid ""
":c:func:`!_PyThreadState_UncheckedGet`: use :c:func:"
"`PyThreadState_GetUnchecked`."
msgstr ""
":c:func:`!_PyThreadState_UncheckedGet`: använd :c:func:"
"`PyThreadState_GetUnchecked`."

msgid ":c:func:`!_PyUnicode_AsString`: use :c:func:`PyUnicode_AsUTF8`."
msgstr ":c:func:`!_PyUnicode_AsString`: använd :c:func:`PyUnicode_AsUTF8`."

msgid ""
":c:func:`!_PyUnicodeWriter_Init`: replace ``_PyUnicodeWriter_Init(&writer)`` "
"with :c:func:`writer = PyUnicodeWriter_Create(0) <PyUnicodeWriter_Create>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_Init`: ersätt ``_PyUnicodeWriter_Init(&writer)`` "
"med :c:func:`writer = PyUnicodeWriter_Create(0) <PyUnicodeWriter_Create>`."

msgid ""
":c:func:`!_PyUnicodeWriter_Finish`: replace "
"``_PyUnicodeWriter_Finish(&writer)`` with :c:func:"
"`PyUnicodeWriter_Finish(writer) <PyUnicodeWriter_Finish>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_Finish`: ersätt "
"``_PyUnicodeWriter_Finish(&writer)`` med :c:func:"
"`PyUnicodeWriter_Finish(writer) <PyUnicodeWriter_Finish>`."

msgid ""
":c:func:`!_PyUnicodeWriter_Dealloc`: replace "
"``_PyUnicodeWriter_Dealloc(&writer)`` with :c:func:"
"`PyUnicodeWriter_Discard(writer) <PyUnicodeWriter_Discard>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_Dealloc`: ersätt "
"``_PyUnicodeWriter_Dealloc(&writer)`` med :c:func:"
"`PyUnicodeWriter_Discard(writer) <PyUnicodeWriter_Discard>`."

msgid ""
":c:func:`!_PyUnicodeWriter_WriteChar`: replace "
"``_PyUnicodeWriter_WriteChar(&writer, ch)`` with :c:func:"
"`PyUnicodeWriter_WriteChar(writer, ch) <PyUnicodeWriter_WriteChar>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteChar`: ersätt "
"``_PyUnicodeWriter_WriteChar(&writer, ch)`` med :c:func:"
"`PyUnicodeWriter_WriteChar(writer, ch) <PyUnicodeWriter_WriteChar>`."

msgid ""
":c:func:`!_PyUnicodeWriter_WriteStr`: replace "
"``_PyUnicodeWriter_WriteStr(&writer, str)`` with :c:func:"
"`PyUnicodeWriter_WriteStr(writer, str) <PyUnicodeWriter_WriteStr>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteStr`: ersätt "
"``_PyUnicodeWriter_WriteStr(&writer, str)`` med :c:func:"
"`PyUnicodeWriter_WriteStr(writer, str) <PyUnicodeWriter_WriteStr>`."

msgid ""
":c:func:`!_PyUnicodeWriter_WriteSubstring`: replace "
"``_PyUnicodeWriter_WriteSubstring(&writer, str, start, end)`` with :c:func:"
"`PyUnicodeWriter_WriteSubstring(writer, str, start, end) "
"<PyUnicodeWriter_WriteSubstring>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteSubstring`: ersätt "
"``_PyUnicodeWriter_WriteSubstring(&writer, str, start, end)`` med :c:func:"
"`PyUnicodeWriter_WriteSubstring(writer, str, start, end) "
"<PyUnicodeWriter_WriteSubstring>`."

msgid ""
":c:func:`!_PyUnicodeWriter_WriteASCIIString`: replace "
"``_PyUnicodeWriter_WriteASCIIString(&writer, str)`` with :c:func:"
"`PyUnicodeWriter_WriteUTF8(writer, str) <PyUnicodeWriter_WriteUTF8>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteASCIIString`: ersätt "
"``_PyUnicodeWriter_WriteASCIIString(&writer, str)`` med :c:func:"
"`PyUnicodeWriter_WriteUTF8(writer, str) <PyUnicodeWriter_WriteUTF8>`."

msgid ""
":c:func:`!_PyUnicodeWriter_WriteLatin1String`: replace "
"``_PyUnicodeWriter_WriteLatin1String(&writer, str)`` with :c:func:"
"`PyUnicodeWriter_WriteUTF8(writer, str) <PyUnicodeWriter_WriteUTF8>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteLatin1String`: ersätt "
"``_PyUnicodeWriter_WriteLatin1String(&writer, str)`` med :c:func:"
"`PyUnicodeWriter_WriteUTF8(writer, str) <PyUnicodeWriter_WriteUTF8>`."

msgid ":c:func:`!_PyUnicodeWriter_Prepare`: (no replacement)."
msgstr ":c:func:`!_PyUnicodeWriter_Prepare`: (ingen ersättning)."

msgid ":c:func:`!_PyUnicodeWriter_PrepareKind`: (no replacement)."
msgstr ":c:func:`!_PyUnicodeWriter_PrepareKind`: (ingen ersättning)."

msgid ":c:func:`!_Py_HashPointer`: use :c:func:`Py_HashPointer`."
msgstr ":c:func:`!_Py_HashPointer`: använd :c:func:`Py_HashPointer`."

msgid ":c:func:`!_Py_fopen_obj`: use :c:func:`Py_fopen`."
msgstr ":c:func:`!_Py_fopen_obj`: använd :c:func:`Py_fopen`."

msgid ""
"The `pythoncapi-compat project <https://github.com/python/pythoncapi-compat/"
">`__ can be used to get these new public functions on Python 3.13 and older."
msgstr ""
"Projektet `pythoncapi-compat <https://github.com/python/pythoncapi-compat/"
">`__ kan användas för att få dessa nya offentliga funktioner på Python 3.13 "
"och äldre."
