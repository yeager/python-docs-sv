# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "What's New In Python 3.2"
msgstr "Vad är nytt i Python 3.2"

msgid "Author"
msgstr "Författare"

msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

msgid ""
"This article explains the new features in Python 3.2 as compared to 3.1. "
"Python 3.2 was released on February 20, 2011. It focuses on a few highlights "
"and gives a few examples.  For full details, see the `Misc/NEWS <https://"
"github.com/python/cpython/blob/076ca6c3c8df3030307e548d9be792ce3c1c6eea/Misc/"
"NEWS>`__ file."
msgstr ""
"I den här artikeln förklaras de nya funktionerna i Python 3.2 jämfört med "
"3.1. Python 3.2 släpptes den 20 februari 2011. Den fokuserar på några få "
"höjdpunkter och ger några exempel.  För fullständig information, se filen "
"`Misc/NEWS <https://github.com/python/cpython/"
"blob/076ca6c3c8df3030307e548d9be792ce3c1c6eea/Misc/NEWS>`__."

msgid ":pep:`392` - Python 3.2 Release Schedule"
msgstr ":pep:`392` - Python 3.2 Utgivningsschema"

msgid "PEP 384: Defining a Stable ABI"
msgstr "PEP 384: Att definiera en stabil ABI"

msgid ""
"In the past, extension modules built for one Python version were often not "
"usable with other Python versions. Particularly on Windows, every feature "
"release of Python required rebuilding all extension modules that one wanted "
"to use. This requirement was the result of the free access to Python "
"interpreter internals that extension modules could use."
msgstr ""
"Tidigare var tilläggsmoduler som byggts för en Python-version ofta inte "
"användbara med andra Python-versioner. Särskilt på Windows krävde varje "
"funktionsversion av Python att man byggde om alla tilläggsmoduler som man "
"ville använda. Detta krav var resultatet av den fria tillgången till Pythons "
"tolkinterna som tilläggsmoduler kunde använda."

msgid ""
"With Python 3.2, an alternative approach becomes available: extension "
"modules which restrict themselves to a limited API (by defining "
"Py_LIMITED_API) cannot use many of the internals, but are constrained to a "
"set of API functions that are promised to be stable for several releases. As "
"a consequence, extension modules built for 3.2 in that mode will also work "
"with 3.3, 3.4, and so on. Extension modules that make use of details of "
"memory structures can still be built, but will need to be recompiled for "
"every feature release."
msgstr ""
"Med Python 3.2 blir ett alternativt tillvägagångssätt tillgängligt: "
"tilläggsmoduler som begränsar sig till ett begränsat API (genom att "
"definiera Py_LIMITED_API) kan inte använda många av de interna funktionerna, "
"men begränsas till en uppsättning API-funktioner som lovas vara stabila i "
"flera utgåvor. Som en följd av detta kommer tilläggsmoduler som byggts för "
"3.2 i det läget också att fungera med 3.3, 3.4 och så vidare. "
"Tilläggsmoduler som använder detaljer i minnesstrukturer kan fortfarande "
"byggas, men de måste kompileras om för varje funktionsversion."

msgid ":pep:`384` - Defining a Stable ABI"
msgstr ":pep:`384` - Att definiera en stabil ABI"

msgid "PEP written by Martin von Löwis."
msgstr "PEP skriven av Martin von Löwis."

msgid "PEP 389: Argparse Command Line Parsing Module"
msgstr "PEP 389: Argparse-modul för parsning av kommandoraden"

msgid ""
"A new module for command line parsing, :mod:`argparse`, was introduced to "
"overcome the limitations of :mod:`optparse` which did not provide support "
"for positional arguments (not just options), subcommands, required options "
"and other common patterns of specifying and validating options."
msgstr ""
"En ny modul för kommandoradsanalys, :mod:`argparse`, introducerades för att "
"övervinna begränsningarna i :mod:`optparse` som inte hade stöd för "
"positionella argument (inte bara alternativ), underkommandon, obligatoriska "
"alternativ och andra vanliga mönster för att ange och validera alternativ."

msgid ""
"This module has already had widespread success in the community as a third-"
"party module.  Being more fully featured than its predecessor, the :mod:"
"`argparse` module is now the preferred module for command-line processing. "
"The older module is still being kept available because of the substantial "
"amount of legacy code that depends on it."
msgstr ""
"Denna modul har redan haft stor framgång i samhället som en "
"tredjepartsmodul.  Modulen :mod:`argparse` är mer komplett än sin "
"föregångare och är nu den föredragna modulen för kommandoradsbehandling. Den "
"äldre modulen hålls fortfarande tillgänglig på grund av den stora mängd "
"äldre kod som är beroende av den."

msgid ""
"Here's an annotated example parser showing features like limiting results to "
"a set of choices, specifying a *metavar* in the help screen, validating that "
"one or more positional arguments is present, and making a required option::"
msgstr ""
"Här är ett kommenterat exempel på en parser som visar funktioner som att "
"begränsa resultaten till en uppsättning val, ange en *metavar* i "
"hjälpskärmen, validera att ett eller flera positionsargument finns och göra "
"ett obligatoriskt alternativ::"

msgid ""
"import argparse\n"
"parser = argparse.ArgumentParser(\n"
"            description = 'Manage servers',         # main description for "
"help\n"
"            epilog = 'Tested on Solaris and Linux') # displayed after help\n"
"parser.add_argument('action',                       # argument name\n"
"            choices = ['deploy', 'start', 'stop'],  # three allowed values\n"
"            help = 'action on each target')         # help msg\n"
"parser.add_argument('targets',\n"
"            metavar = 'HOSTNAME',                   # var name used in help "
"msg\n"
"            nargs = '+',                            # require one or more "
"targets\n"
"            help = 'url for target machines')       # help msg explanation\n"
"parser.add_argument('-u', '--user',                 # -u or --user option\n"
"            required = True,                        # make it a required "
"argument\n"
"            help = 'login as user')"
msgstr ""
"import argparse\n"
"parser = argparse.ArgumentParser(\n"
"            description = 'Manage servers',         # main description for "
"help\n"
"            epilog = 'Tested on Solaris and Linux') # displayed after help\n"
"parser.add_argument('action',                       # argument name\n"
"            choices = ['deploy', 'start', 'stop'],  # three allowed values\n"
"            help = 'action on each target')         # help msg\n"
"parser.add_argument('targets',\n"
"            metavar = 'HOSTNAME',                   # var name used in help "
"msg\n"
"            nargs = '+',                            # require one or more "
"targets\n"
"            help = 'url for target machines')       # help msg explanation\n"
"parser.add_argument('-u', '--user',                 # -u or --user option\n"
"            required = True,                        # make it a required "
"argument\n"
"            help = 'login as user')"

msgid "Example of calling the parser on a command string::"
msgstr "Exempel på anrop av parsern på en kommandosträng::"

msgid ""
">>> cmd = 'deploy sneezy.example.com sleepy.example.com -u skycaptain'\n"
">>> result = parser.parse_args(cmd.split())\n"
">>> result.action\n"
"'deploy'\n"
">>> result.targets\n"
"['sneezy.example.com', 'sleepy.example.com']\n"
">>> result.user\n"
"'skycaptain'"
msgstr ""
">>> cmd = 'deploy sneezy.example.com sleepy.example.com -u skycaptain'\n"
">>> resultat = parser.parse_args(cmd.split())\n"
">>> resultat.åtgärd\n"
"'deploy'\n"
">>> resultat.mål\n"
"['sneezy.example.com', 'sleepy.example.com']\n"
">>> resultat.användare\n"
"'skycaptain'"

msgid "Example of the parser's automatically generated help::"
msgstr "Exempel på den automatiskt genererade hjälpen i parsern::"

msgid ""
">>> parser.parse_args('-h'.split())\n"
"\n"
"usage: manage_cloud.py [-h] -u USER\n"
"                       {deploy,start,stop} HOSTNAME [HOSTNAME ...]\n"
"\n"
"Manage servers\n"
"\n"
"positional arguments:\n"
"  {deploy,start,stop}   action on each target\n"
"  HOSTNAME              url for target machines\n"
"\n"
"optional arguments:\n"
"  -h, --help            show this help message and exit\n"
"  -u USER, --user USER  login as user\n"
"\n"
"Tested on Solaris and Linux"
msgstr ""
">>> parser.parse_args('-h'.split())\n"
"\n"
"användning: manage_cloud.py [-h] -u USER\n"
"                       {deploy,start,stop} VÄRDNAMN [VÄRDNAMN ...]\n"
"\n"
"Hantera servrar\n"
"\n"
"positionella argument:\n"
"  {deploy,start,stop} åtgärd för varje mål\n"
"  HOSTNAME url för målmaskiner\n"
"\n"
"valfria argument:\n"
"  -h, --help visa detta hjälpmeddelande och avsluta\n"
"  -u USER, --user USER logga in som användare\n"
"\n"
"Testat på Solaris och Linux"

msgid ""
"An especially nice :mod:`argparse` feature is the ability to define "
"subparsers, each with their own argument patterns and help displays::"
msgstr ""
"En särskilt trevlig :mod:`argparse`-funktion är möjligheten att definiera "
"underparsers, var och en med sina egna argumentmönster och hjälpdisplayer::"

msgid ""
"import argparse\n"
"parser = argparse.ArgumentParser(prog='HELM')\n"
"subparsers = parser.add_subparsers()\n"
"\n"
"parser_l = subparsers.add_parser('launch', help='Launch Control')   # first "
"subgroup\n"
"parser_l.add_argument('-m', '--missiles', action='store_true')\n"
"parser_l.add_argument('-t', '--torpedos', action='store_true')\n"
"\n"
"parser_m = subparsers.add_parser('move', help='Move Vessel',        # second "
"subgroup\n"
"                                 aliases=('steer', 'turn'))         # "
"equivalent names\n"
"parser_m.add_argument('-c', '--course', type=int, required=True)\n"
"parser_m.add_argument('-s', '--speed', type=int, default=0)"
msgstr ""
"import argparse\n"
"parser = argparse.ArgumentParser(prog='HELM')\n"
"subparsers = parser.add_subparsers()\n"
"\n"
"parser_l = subparsers.add_parser('launch', help='Launch Control') # första "
"undergruppen\n"
"parser_l.add_argument('-m', '--missiles', action='store_true')\n"
"parser_l.add_argument('-t', '--torpedos', action='store_true')\n"
"\n"
"parser_m = subparsers.add_parser('move', help='Flytta fartyg', # andra "
"undergruppen\n"
"                                 alias=('styra', 'vända'))         # "
"likvärdiga namn\n"
"parser_m.add_argument('-c', '--course', type=int, required=True)\n"
"parser_m.add_argument('-s', '--speed', type=int, default=0)"

msgid ""
"$ ./helm.py --help                         # top level help (launch and "
"move)\n"
"$ ./helm.py launch --help                  # help for launch options\n"
"$ ./helm.py launch --missiles              # set missiles=True and "
"torpedos=False\n"
"$ ./helm.py steer --course 180 --speed 5   # set movement parameters"
msgstr ""
"$ ./helm.py --help # hjälp på högsta nivå (start och flytt)\n"
"$ ./helm.py launch --help # hjälp för avfyrningsalternativ\n"
"$ ./helm.py launch --missiles # ställ in missiler=True och torpeder=False\n"
"$ ./helm.py steer --kurs 180 --hastighet 5 # ställ in rörelseparametrar"

msgid ":pep:`389` - New Command Line Parsing Module"
msgstr ":pep:`389` - Ny modul för parsning av kommandorader"

msgid "PEP written by Steven Bethard."
msgstr "PEP skriven av Steven Bethard."

msgid ""
":ref:`upgrading-optparse-code` for details on the differences from :mod:"
"`optparse`."
msgstr ""
":ref:`upgrading-optparse-code` för detaljer om skillnaderna från :mod:"
"`optparse`."

msgid "PEP 391:  Dictionary Based Configuration for Logging"
msgstr "PEP 391:  Ordboksbaserad konfiguration för loggning"

msgid ""
"The :mod:`logging` module provided two kinds of configuration, one style "
"with function calls for each option or another style driven by an external "
"file saved in a :mod:`configparser` format.  Those options did not provide "
"the flexibility to create configurations from JSON or YAML files, nor did "
"they support incremental configuration, which is needed for specifying "
"logger options from a command line."
msgstr ""
"Modulen :mod:`logging` tillhandahöll två typer av konfigurering, en stil med "
"funktionsanrop för varje alternativ eller en annan stil som drivs av en "
"extern fil som sparas i formatet :mod:`configparser`.  Dessa alternativ gav "
"inte flexibiliteten att skapa konfigurationer från JSON- eller YAML-filer, "
"och de stödde inte heller inkrementell konfiguration, vilket behövs för att "
"ange loggaralternativ från en kommandorad."

msgid ""
"To support a more flexible style, the module now offers :func:`logging."
"config.dictConfig` for specifying logging configuration with plain Python "
"dictionaries.  The configuration options include formatters, handlers, "
"filters, and loggers.  Here's a working example of a configuration "
"dictionary::"
msgstr ""
"För att stödja en mer flexibel stil erbjuder modulen nu :func:`logging."
"config.dictConfig` för att ange loggningskonfiguration med vanliga Python-"
"ordböcker.  Konfigurationsalternativen inkluderar formaterare, hanterare, "
"filter och loggar.  Här är ett fungerande exempel på en "
"konfigurationsordbok::"

msgid ""
"{\"version\": 1,\n"
" \"formatters\": {\"brief\": {\"format\": \"%(levelname)-8s: %(name)-15s: "
"%(message)s\"},\n"
"                \"full\": {\"format\": \"%(asctime)s %(name)-15s "
"%(levelname)-8s %(message)s\"}\n"
"                },\n"
" \"handlers\": {\"console\": {\n"
"                   \"class\": \"logging.StreamHandler\",\n"
"                   \"formatter\": \"brief\",\n"
"                   \"level\": \"INFO\",\n"
"                   \"stream\": \"ext://sys.stdout\"},\n"
"              \"console_priority\": {\n"
"                   \"class\": \"logging.StreamHandler\",\n"
"                   \"formatter\": \"full\",\n"
"                   \"level\": \"ERROR\",\n"
"                   \"stream\": \"ext://sys.stderr\"}\n"
"              },\n"
" \"root\": {\"level\": \"DEBUG\", \"handlers\": [\"console\", "
"\"console_priority\"]}}"
msgstr ""
"{\"version\": 1,\n"
" \"formatter\": {\"brief\": {\"format\": \"%(levelname)-8s: %(name)-15s: "
"%(message)s\"},\n"
"                \"full\": {\"format\": \"%(asctime)s %(name)-15s "
"%(levelname)-8s %(message)s\"}\n"
"                },\n"
" \"handlers\": {\"console\": {\n"
"                   \"class\": \"logging.StreamHandler\",\n"
"                   \"formatter\": \"brief\",\n"
"                   \"level\": \"INFO\",\n"
"                   \"stream\": \"ext://sys.stdout\"},\n"
"              \"console_priority\": {\n"
"                   \"class\": \"logging.StreamHandler\",\n"
"                   \"formatter\": \"full\",\n"
"                   \"level\": \"ERROR\",\n"
"                   \"stream\": \"ext://sys.stderr\"}\n"
"              },\n"
" \"root\": {\"level\": \"DEBUG\", \"handlers\": [\"console\", "
"\"console_priority\"]}}"

msgid ""
"If that dictionary is stored in a file called :file:`conf.json`, it can be "
"loaded and called with code like this::"
msgstr ""
"Om ordlistan lagras i en fil som heter :file:`conf.json`, kan den laddas och "
"anropas med kod som denna::"

msgid ""
">>> import json, logging.config\n"
">>> with open('conf.json') as f:\n"
"...     conf = json.load(f)\n"
"...\n"
">>> logging.config.dictConfig(conf)\n"
">>> logging.info(\"Transaction completed normally\")\n"
"INFO    : root           : Transaction completed normally\n"
">>> logging.critical(\"Abnormal termination\")\n"
"2011-02-17 11:14:36,694 root            CRITICAL Abnormal termination"
msgstr ""
">>> import json, loggning.config\n"
">>> med open('conf.json') som f:\n"
"... conf = json.load(f)\n"
"...\n"
">>> logging.config.dictConfig(conf)\n"
">>> logging.info(\"Transaktionen slutfördes normalt\")\n"
"INFO : root : Transaktionen slutfördes normalt\n"
">>> logging.critical(\"Onormal avslutning\")\n"
"2011-02-17 11:14:36,694 root CRITICAL Onormal avslutning"

msgid ":pep:`391` - Dictionary Based Configuration for Logging"
msgstr ":pep:`391` - Konfiguration baserad på ordbok för loggning"

msgid "PEP written by Vinay Sajip."
msgstr "PEP skriven av Vinay Sajip."

msgid "PEP 3148:  The ``concurrent.futures`` module"
msgstr "PEP 3148: Modulen ``concurrent.futures``"

msgid ""
"Code for creating and managing concurrency is being collected in a new top-"
"level namespace, *concurrent*.  Its first member is a *futures* package "
"which provides a uniform high-level interface for managing threads and "
"processes."
msgstr ""
"Kod för att skapa och hantera samtidighet samlas i ett nytt namnområde på "
"högsta nivå, *concurrent*.  Dess första medlem är ett *futures*-paket som "
"tillhandahåller ett enhetligt gränssnitt på hög nivå för hantering av trådar "
"och processer."

msgid ""
"The design for :mod:`concurrent.futures` was inspired by the *java.util."
"concurrent* package.  In that model, a running call and its result are "
"represented by a :class:`~concurrent.futures.Future` object that abstracts "
"features common to threads, processes, and remote procedure calls.  That "
"object supports status checks (running or done), timeouts, cancellations, "
"adding callbacks, and access to results or exceptions."
msgstr ""
"Utformningen av :mod:`concurrent.futures` har inspirerats av paketet *java."
"util.concurrent*.  I den modellen representeras ett pågående anrop och dess "
"resultat av ett :class:`~concurrent.futures.Future`-objekt som abstraherar "
"funktioner som är gemensamma för trådar, processer och fjärrproceduranrop.  "
"Objektet stöder statuskontroller (körs eller görs), timeouts, avbrytanden, "
"tillägg av callbacks och åtkomst till resultat eller undantag."

msgid ""
"The primary offering of the new module is a pair of executor classes for "
"launching and managing calls.  The goal of the executors is to make it "
"easier to use existing tools for making parallel calls. They save the effort "
"needed to setup a pool of resources, launch the calls, create a results "
"queue, add time-out handling, and limit the total number of threads, "
"processes, or remote procedure calls."
msgstr ""
"Den nya modulen består främst av ett par exekverande klasser för att starta "
"och hantera anrop.  Målet med exekveringsmodulerna är att göra det enklare "
"att använda befintliga verktyg för att göra parallella anrop. De sparar det "
"arbete som krävs för att konfigurera en resurspool, starta anrop, skapa en "
"resultatkö, lägga till timeout-hantering och begränsa det totala antalet "
"trådar, processer eller fjärrproceduranrop."

msgid ""
"Ideally, each application should share a single executor across multiple "
"components so that process and thread limits can be centrally managed.  This "
"solves the design challenge that arises when each component has its own "
"competing strategy for resource management."
msgstr ""
"Helst bör varje applikation dela en enda exekverare mellan flera komponenter "
"så att process- och trådgränser kan hanteras centralt.  Detta löser den "
"designutmaning som uppstår när varje komponent har sin egen konkurrerande "
"strategi för resurshantering."

msgid ""
"Both classes share a common interface with three methods: :meth:`~concurrent."
"futures.Executor.submit` for scheduling a callable and returning a :class:"
"`~concurrent.futures.Future` object; :meth:`~concurrent.futures.Executor."
"map` for scheduling many asynchronous calls at a time, and :meth:"
"`~concurrent.futures.Executor.shutdown` for freeing resources.  The class is "
"a :term:`context manager` and can be used in a :keyword:`with` statement to "
"assure that resources are automatically released when currently pending "
"futures are done executing."
msgstr ""
"Båda klasserna har ett gemensamt gränssnitt med tre metoder: :meth:"
"`~concurrent.futures.Executor.submit` för att schemalägga ett anrop och "
"returnera ett :class:`~concurrent.futures.Future`-objekt; :meth:`~concurrent."
"futures.Executor.map` för att schemalägga många asynkrona anrop åt gången, "
"och :meth:`~concurrent.futures.Executor.shutdown` för att frigöra resurser.  "
"Klassen är en :term:`context manager` och kan användas i en :keyword:`with`-"
"sats för att säkerställa att resurser automatiskt frigörs när pågående "
"futures är klara med exekveringen."

msgid ""
"A simple of example of :class:`~concurrent.futures.ThreadPoolExecutor` is a "
"launch of four parallel threads for copying files::"
msgstr ""
"Ett enkelt exempel på :class:`~concurrent.futures.ThreadPoolExecutor` är en "
"start av fyra parallella trådar för kopiering av filer::"

msgid ""
"import concurrent.futures, shutil\n"
"with concurrent.futures.ThreadPoolExecutor(max_workers=4) as e:\n"
"    e.submit(shutil.copy, 'src1.txt', 'dest1.txt')\n"
"    e.submit(shutil.copy, 'src2.txt', 'dest2.txt')\n"
"    e.submit(shutil.copy, 'src3.txt', 'dest3.txt')\n"
"    e.submit(shutil.copy, 'src3.txt', 'dest4.txt')"
msgstr ""
"import concurrent.futures, shutil\n"
"with concurrent.futures.ThreadPoolExecutor(max_workers=4) as e:\n"
"    e.submit(shutil.copy, 'src1.txt', 'dest1.txt')\n"
"    e.submit(shutil.copy, 'src2.txt', 'dest2.txt')\n"
"    e.submit(shutil.copy, 'src3.txt', 'dest3.txt')\n"
"    e.submit(shutil.copy, 'src3.txt', 'dest4.txt')"

msgid ":pep:`3148` - Futures -- Execute Computations Asynchronously"
msgstr ":pep:`3148` - Futures -- Utför beräkningar asynkront"

msgid "PEP written by Brian Quinlan."
msgstr "PEP skriven av Brian Quinlan."

msgid ""
":ref:`Code for Threaded Parallel URL reads<threadpoolexecutor-example>`, an "
"example using threads to fetch multiple web pages in parallel."
msgstr ""
":ref:`Kod för parallell URL-läsning med trådar<threadpoolexecutor-example>`, "
"ett exempel där trådar används för att hämta flera webbsidor parallellt."

msgid ""
":ref:`Code for computing prime numbers in parallel<processpoolexecutor-"
"example>`, an example demonstrating :class:`~concurrent.futures."
"ProcessPoolExecutor`."
msgstr ""
":ref:`Kod för beräkning av primtal i parallell<processpoolexecutor-"
"example>`, ett exempel som demonstrerar :class:`~concurrent.futures."
"ProcessPoolExecutor`."

msgid "PEP 3147:  PYC Repository Directories"
msgstr "PEP 3147: Kataloger för PYC-förvar"

msgid ""
"Python's scheme for caching bytecode in *.pyc* files did not work well in "
"environments with multiple Python interpreters.  If one interpreter "
"encountered a cached file created by another interpreter, it would recompile "
"the source and overwrite the cached file, thus losing the benefits of "
"caching."
msgstr ""
"Pythons system för att cachelagra bytekod i *.pyc*-filer fungerade inte bra "
"i miljöer med flera Python-tolkar.  Om en tolk stötte på en cachad fil som "
"skapats av en annan tolk, skulle den kompilera om källkoden och skriva över "
"den cachade filen, och därmed förlora fördelarna med cachning."

msgid ""
"The issue of \"pyc fights\" has become more pronounced as it has become "
"commonplace for Linux distributions to ship with multiple versions of "
"Python. These conflicts also arise with CPython alternatives such as Unladen "
"Swallow."
msgstr ""
"Frågan om \"pyc-fighter\" har blivit mer uttalad eftersom det har blivit "
"vanligt att Linux-distributioner levereras med flera versioner av Python. "
"Dessa konflikter uppstår också med CPython-alternativ som Unladen Swallow."

msgid ""
"To solve this problem, Python's import machinery has been extended to use "
"distinct filenames for each interpreter.  Instead of Python 3.2 and Python "
"3.3 and Unladen Swallow each competing for a file called \"mymodule.pyc\", "
"they will now look for \"mymodule.cpython-32.pyc\", \"mymodule.cpython-33."
"pyc\", and \"mymodule.unladen10.pyc\".  And to prevent all of these new "
"files from cluttering source directories, the *pyc* files are now collected "
"in a \"__pycache__\" directory stored under the package directory."
msgstr ""
"För att lösa detta problem har Pythons importmaskineri utökats så att olika "
"filnamn används för varje tolk.  I stället för att Python 3.2 och Python 3.3 "
"och Unladen Swallow konkurrerar om en fil som heter \"mymodule.pyc\", kommer "
"de nu att leta efter \"mymodule.cpython-32.pyc\", \"mymodule.cpython-33."
"pyc\" och \"mymodule.unladen10.pyc\".  Och för att förhindra att alla dessa "
"nya filer rör till källkatalogerna samlas *pyc*-filerna nu i en "
"\"__pycache__\"-katalog som lagras under paketkatalogen."

msgid ""
"Aside from the filenames and target directories, the new scheme has a few "
"aspects that are visible to the programmer:"
msgstr ""
"Bortsett från filnamnen och målkatalogerna har det nya systemet några "
"aspekter som är synliga för programmeraren:"

msgid ""
"Imported modules now have a :attr:`~module.__cached__` attribute which "
"stores the name of the actual file that was imported:"
msgstr ""
"Importerade moduler har nu ett :attr:`~module.__cached__`-attribut som "
"lagrar namnet på den faktiska filen som importerades:"

msgid ""
"The tag that is unique to each interpreter is accessible from the :mod:`!"
"imp` module:"
msgstr ""
"Den tagg som är unik för varje tolk är tillgänglig från modulen :mod:`!imp`:"

msgid ""
"Scripts that try to deduce source filename from the imported file now need "
"to be smarter.  It is no longer sufficient to simply strip the \"c\" from a "
"\".pyc\" filename.  Instead, use the new functions in the :mod:`!imp` module:"
msgstr ""
"Skript som försöker härleda källfilnamnet från den importerade filen måste "
"nu vara smartare.  Det räcker inte längre att bara ta bort \"c\" från ett \"."
"pyc\"-filnamn.  Använd istället de nya funktionerna i modulen :mod:`!imp`:"

msgid ""
"The :mod:`py_compile` and :mod:`compileall` modules have been updated to "
"reflect the new naming convention and target directory.  The command-line "
"invocation of *compileall* has new options: ``-i`` for specifying a list of "
"files and directories to compile and ``-b`` which causes bytecode files to "
"be written to their legacy location rather than *__pycache__*."
msgstr ""
"Modulerna :mod:`py_compile` och :mod:`compileall` har uppdaterats för att "
"återspegla den nya namnkonventionen och målkatalogen.  "
"Kommandoradsuppmaningen *compileall* har nya alternativ: ``-i`` för att ange "
"en lista över filer och kataloger som ska kompileras och ``-b`` som gör att "
"bytecode-filer skrivs till sin gamla plats i stället för till *__pycache__*."

msgid ""
"The :mod:`importlib.abc` module has been updated with new :term:`abstract "
"base classes <abstract base class>` for loading bytecode files.  The "
"obsolete ABCs, :class:`!PyLoader` and :class:`!PyPycLoader`, have been "
"deprecated (instructions on how to stay Python 3.1 compatible are included "
"with the documentation)."
msgstr ""
"Modulen :mod:`importlib.abc` har uppdaterats med nya :term:`abstract base "
"classes <abstract base class>` för laddning av bytecode-filer.  De "
"föråldrade ABC:erna, :class:`!PyLoader` och :class:`!PyPycLoader`, har "
"utgått (instruktioner om hur man håller sig kompatibel med Python 3.1 finns "
"i dokumentationen)."

msgid ":pep:`3147` - PYC Repository Directories"
msgstr ":pep:`3147` - Kataloger för PYC-förvar"

msgid "PEP written by Barry Warsaw."
msgstr "PEP skriven av Barry Warsaw."

msgid "PEP 3149: ABI Version Tagged .so Files"
msgstr "PEP 3149: ABI-version märkta .so-filer"

msgid ""
"The PYC repository directory allows multiple bytecode cache files to be co-"
"located.  This PEP implements a similar mechanism for shared object files by "
"giving them a common directory and distinct names for each version."
msgstr ""
"PYC-repository-katalogen gör det möjligt att samlokalisera flera bytecode-"
"cache-filer.  Denna PEP implementerar en liknande mekanism för delade "
"objektfiler genom att ge dem en gemensam katalog och distinkta namn för "
"varje version."

msgid ""
"The common directory is \"pyshared\" and the file names are made distinct by "
"identifying the Python implementation (such as CPython, PyPy, Jython, etc.), "
"the major and minor version numbers, and optional build flags (such as \"d\" "
"for debug, \"m\" for pymalloc, \"u\" for wide-unicode).  For an arbitrary "
"package \"foo\", you may see these files when the distribution package is "
"installed::"
msgstr ""
"Den gemensamma katalogen är \"pyshared\" och filnamnen särskiljs genom att "
"identifiera Python-implementationen (t.ex. CPython, PyPy, Jython etc.), "
"versionsnumren för major och minor samt valfria build-flaggor (t.ex. \"d\" "
"för debug, \"m\" för pymalloc, \"u\" för wide-unicode).  För ett godtyckligt "
"paket \"foo\" kan du se dessa filer när distributionspaketet installeras::"

msgid ""
"/usr/share/pyshared/foo.cpython-32m.so\n"
"/usr/share/pyshared/foo.cpython-33md.so"
msgstr ""
"/usr/share/pyshared/foo.cpython-32m.so\n"
"/usr/share/pyshared/foo.cpython-33md.so"

msgid ""
"In Python itself, the tags are accessible from functions in the :mod:"
"`sysconfig` module::"
msgstr ""
"I Python är taggarna tillgängliga från funktioner i modulen :mod:"
"`sysconfig`::"

msgid ""
">>> import sysconfig\n"
">>> sysconfig.get_config_var('SOABI')       # find the version tag\n"
"'cpython-32mu'\n"
">>> sysconfig.get_config_var('EXT_SUFFIX')  # find the full filename "
"extension\n"
"'.cpython-32mu.so'"
msgstr ""
">>> import sysconfig\n"
">>> sysconfig.get_config_var('SOABI')       # find the version tag\n"
"'cpython-32mu'\n"
">>> sysconfig.get_config_var('EXT_SUFFIX')  # find the full filename "
"extension\n"
"'.cpython-32mu.so'"

msgid ":pep:`3149` - ABI Version Tagged .so Files"
msgstr ":pep:`3149` - ABI-version taggade .so-filer"

msgid "PEP 3333: Python Web Server Gateway Interface v1.0.1"
msgstr "PEP 3333: Python Web Server Gateway-gränssnitt v1.0.1"

msgid ""
"This informational PEP clarifies how bytes/text issues are to be handled by "
"the WSGI protocol.  The challenge is that string handling in Python 3 is "
"most conveniently handled with the :class:`str` type even though the HTTP "
"protocol is itself bytes oriented."
msgstr ""
"Denna informativa PEP klargör hur bytes/text-frågor ska hanteras av WSGI-"
"protokollet.  Utmaningen är att stränghantering i Python 3 hanteras mest "
"bekvämt med typen :class:`str` även om HTTP-protokollet i sig är "
"bytesorienterat."

msgid ""
"The PEP differentiates so-called *native strings* that are used for request/"
"response headers and metadata versus *byte strings* which are used for the "
"bodies of requests and responses."
msgstr ""
"PEP:n skiljer mellan så kallade *native strings* som används för rubriker "
"och metadata för begäran/svar och *byte strings* som används för huvuddelen "
"av begäran och svar."

msgid ""
"The *native strings* are always of type :class:`str` but are restricted to "
"code points between *U+0000* through *U+00FF* which are translatable to "
"bytes using *Latin-1* encoding.  These strings are used for the keys and "
"values in the environment dictionary and for response headers and statuses "
"in the :func:`!start_response` function.  They must follow :rfc:`2616` with "
"respect to encoding. That is, they must either be *ISO-8859-1* characters or "
"use :rfc:`2047` MIME encoding."
msgstr ""
"De *inbyggda strängarna* är alltid av typen :class:`str` men begränsas till "
"kodpunkter mellan *U+0000* och *U+00FF* som kan översättas till byte med "
"hjälp av *Latin-1*-kodning.  Dessa strängar används för nycklar och värden i "
"miljöordlistan och för svarsrubriker och status i funktionen :func:`!"
"start_response`.  De måste följa :rfc:`2616` med avseende på kodning. Det "
"vill säga, de måste antingen vara *ISO-8859-1*-tecken eller använda :rfc:"
"`2047` MIME-kodning."

msgid ""
"For developers porting WSGI applications from Python 2, here are the salient "
"points:"
msgstr ""
"För utvecklare som portar WSGI-applikationer från Python 2, här är de "
"viktigaste punkterna:"

msgid ""
"If the app already used strings for headers in Python 2, no change is needed."
msgstr ""
"Om appen redan använde strängar för rubriker i Python 2 behövs ingen ändring."

msgid ""
"If instead, the app encoded output headers or decoded input headers, then "
"the headers will need to be re-encoded to Latin-1.  For example, an output "
"header encoded in utf-8 was using ``h.encode('utf-8')`` now needs to convert "
"from bytes to native strings using ``h.encode('utf-8').decode('latin-1')``."
msgstr ""
"Om appen i stället kodade utdatahuvuden eller avkodade inmatningshuvuden "
"måste huvudena kodas om till Latin-1.  Till exempel måste en utdatahuvud som "
"kodats i utf-8 med hjälp av ``h.encode('utf-8')`` nu konverteras från bytes "
"till inbyggda strängar med ``h.encode('utf-8').decode('latin-1')``."

msgid ""
"Values yielded by an application or sent using the :meth:`!write` method "
"must be byte strings.  The :func:`!start_response` function and environ must "
"use native strings.  The two cannot be mixed."
msgstr ""
"Värden som ges ut av en applikation eller skickas med metoden :meth:`!write` "
"måste vara byte-strängar.  Funktionen :func:`!start_response` och environ "
"måste använda inbyggda strängar.  De två kan inte blandas."

msgid ""
"For server implementers writing CGI-to-WSGI pathways or other CGI-style "
"protocols, the users must to be able access the environment using native "
"strings even though the underlying platform may have a different "
"convention.  To bridge this gap, the :mod:`wsgiref` module has a new "
"function, :func:`wsgiref.handlers.read_environ` for transcoding CGI "
"variables from :data:`os.environ` into native strings and returning a new "
"dictionary."
msgstr ""
"För serverimplementerare som skriver CGI-till-WSGI-vägar eller andra CGI-"
"liknande protokoll måste användarna kunna komma åt miljön med hjälp av "
"inbyggda strängar även om den underliggande plattformen kan ha en annan "
"konvention.  För att överbrygga detta gap har modulen :mod:`wsgiref` en ny "
"funktion, :func:`wsgiref.handlers.read_environ` för omkodning av CGI-"
"variabler från :data:`os.environ` till inbyggda strängar och returnering av "
"en ny ordbok."

msgid ":pep:`3333` - Python Web Server Gateway Interface v1.0.1"
msgstr ":pep:`3333` - Python Web Server Gateway-gränssnitt v1.0.1"

msgid "PEP written by Phillip Eby."
msgstr "PEP skriven av Phillip Eby."

msgid "Other Language Changes"
msgstr "Andra språkliga förändringar"

msgid "Some smaller changes made to the core Python language are:"
msgstr "Några mindre ändringar som gjorts i Python-språkets kärna är:"

msgid ""
"String formatting for :func:`format` and :meth:`str.format` gained new "
"capabilities for the format character **#**.  Previously, for integers in "
"binary, octal, or hexadecimal, it caused the output to be prefixed with "
"'0b', '0o', or '0x' respectively.  Now it can also handle floats, complex, "
"and Decimal, causing the output to always have a decimal point even when no "
"digits follow it."
msgstr ""
"Strängformatering för :func:`format` och :meth:`str.format` har fått nya "
"möjligheter för formattecknet **#**.  Tidigare, för heltal i binär, oktal "
"eller hexadecimal, orsakade det att utdata prefixades med '0b', '0o' eller "
"'0x' respektive.  Nu kan den även hantera flyttal, komplex och decimal, "
"vilket gör att utdata alltid har en decimalpunkt även om inga siffror följer "
"efter den."

msgid ""
"(Suggested by Mark Dickinson and implemented by Eric Smith in :issue:`7094`.)"
msgstr ""
"(Föreslagen av Mark Dickinson och implementerad av Eric Smith i :issue:"
"`7094`.)"

msgid ""
"There is also a new :meth:`str.format_map` method that extends the "
"capabilities of the existing :meth:`str.format` method by accepting "
"arbitrary :term:`mapping` objects.  This new method makes it possible to use "
"string formatting with any of Python's many dictionary-like objects such as :"
"class:`~collections.defaultdict`, :class:`~shelve.Shelf`, :class:"
"`~configparser.ConfigParser`, or :mod:`dbm`.  It is also useful with custom :"
"class:`dict` subclasses that normalize keys before look-up or that supply a :"
"meth:`__missing__` method for unknown keys::"
msgstr ""
"Det finns också en ny metod :meth:`str.format_map` som utökar möjligheterna "
"med den befintliga metoden :meth:`str.format` genom att acceptera "
"godtyckliga :term:`mapping`-objekt.  Den här nya metoden gör det möjligt att "
"använda strängformatering med något av Pythons många ordboksliknande objekt "
"som :class:`~collections.defaultdict`, :class:`~shelve.Shelf`, :class:"
"`~configparser.ConfigParser` eller :mod:`dbm`.  Det är också användbart med "
"anpassade :class:`dict`-underklasser som normaliserar nycklar före "
"uppslagning eller som tillhandahåller en :meth:`__missing__`-metod för "
"okända nycklar::"

msgid ""
">>> import shelve\n"
">>> d = shelve.open('tmp.shl')\n"
">>> 'The {project_name} status is {status} as of {date}'.format_map(d)\n"
"'The testing project status is green as of February 15, 2011'\n"
"\n"
">>> class LowerCasedDict(dict):\n"
"...     def __getitem__(self, key):\n"
"...         return dict.__getitem__(self, key.lower())\n"
"...\n"
">>> lcd = LowerCasedDict(part='widgets', quantity=10)\n"
">>> 'There are {QUANTITY} {Part} in stock'.format_map(lcd)\n"
"'There are 10 widgets in stock'\n"
"\n"
">>> class PlaceholderDict(dict):\n"
"...     def __missing__(self, key):\n"
"...         return '<{}>'.format(key)\n"
"...\n"
">>> 'Hello {name}, welcome to {location}'.format_map(PlaceholderDict())\n"
"'Hello <name>, welcome to <location>'"
msgstr ""
"&gt;&gt;&gt; import shelve\n"
"&gt;&gt;&gt; d = shelve.open('tmp.shl')\n"
"&gt;&gt;&gt; 'Status för {project_name} är {status} från och med {date}'."
"format_map(d)\n"
"\"Testprojektets status är grön från och med den 15 februari 2011\n"
"\n"
"&gt;&gt;&gt; klass LowerCasedDict(dict):\n"
"... def __getitem__(self, key):\n"
"... return dict.__getitem__(self, key.lower())\n"
"...\n"
"&gt;&gt;&gt; lcd = LowerCasedDict(part='widgets', quantity=10)\n"
"&gt;&gt;&gt; 'Det finns {QUANTITY} {Part} i lager'.format_map(lcd)\n"
"'Det finns 10 widgets i lager'\n"
"\n"
"&gt;&gt;&gt; klass PlaceholderDict(dict):\n"
"... def __missing__(self, key):\n"
"... return '&lt;{}&gt;'.format(nyckel)\n"
"...\n"
"&gt;&gt;&gt; 'Hej {name}, välkommen till {location}'."
"format_map(PlatshållareDict())\n"
"'Hej <name>, välkommen till <location>'"

msgid ""
"(Suggested by Raymond Hettinger and implemented by Eric Smith in :issue:"
"`6081`.)"
msgstr ""
"(Föreslagen av Raymond Hettinger och implementerad av Eric Smith i :issue:"
"`6081`.)"

msgid ""
"The interpreter can now be started with a quiet option, ``-q``, to prevent "
"the copyright and version information from being displayed in the "
"interactive mode.  The option can be introspected using the :data:`sys."
"flags` attribute:"
msgstr ""
"Tolken kan nu startas med ett tyst alternativ, ``-q``, som förhindrar att "
"information om copyright och version visas i det interaktiva läget.  "
"Alternativet kan introspekteras med hjälp av attributet :data:`sys.flags`:"

msgid ""
"$ python -q\n"
">>> sys.flags\n"
"sys.flags(debug=0, division_warning=0, inspect=0, interactive=0,\n"
"optimize=0, dont_write_bytecode=0, no_user_site=0, no_site=0,\n"
"ignore_environment=0, verbose=0, bytes_warning=0, quiet=1)"
msgstr ""
"$ python -q\n"
">>> sys.flags\n"
"sys.flags(debug=0, division_warning=0, inspect=0, interactive=0,\n"
"optimize=0, dont_write_bytecode=0, no_user_site=0, no_site=0,\n"
"ignore_environment=0, verbose=0, bytes_warning=0, quiet=1)"

msgid "(Contributed by Marcin Wojdyr in :issue:`1772833`)."
msgstr "(Bidrag från Marcin Wojdyr i :issue:`1772833`)."

msgid ""
"The :func:`hasattr` function works by calling :func:`getattr` and detecting "
"whether an exception is raised.  This technique allows it to detect methods "
"created dynamically by :meth:`~object.__getattr__` or :meth:`~object."
"__getattribute__` which would otherwise be absent from the class "
"dictionary.  Formerly, *hasattr* would catch any exception, possibly masking "
"genuine errors.  Now, *hasattr* has been tightened to only catch :exc:"
"`AttributeError` and let other exceptions pass through::"
msgstr ""
"Funktionen :func:`hasattr` fungerar genom att anropa :func:`getattr` och "
"upptäcka om ett undantag uppstår.  Denna teknik gör det möjligt att upptäcka "
"metoder som skapas dynamiskt av :meth:`~object.__getattr__` eller :meth:"
"`~object.__getattribute__` som annars inte skulle finnas med i "
"klassordlistan.  Tidigare skulle *hasattr* fånga upp alla undantag och "
"eventuellt maskera verkliga fel.  Nu har *hasattr* stramats upp så att den "
"bara fångar :exc:`AttributeError` och låter andra undantag passera igenom::"

msgid ""
">>> class A:\n"
"...     @property\n"
"...     def f(self):\n"
"...         return 1 // 0\n"
"...\n"
">>> a = A()\n"
">>> hasattr(a, 'f')\n"
"Traceback (most recent call last):\n"
"  ...\n"
"ZeroDivisionError: integer division or modulo by zero"
msgstr ""
">>> klass A:\n"
"...     @egenskap\n"
"... def f(self):\n"
"... return 1 // 0\n"
"...\n"
">>> a = A()\n"
">>> hasattr(a, 'f')\n"
"Traceback (senaste anropet sist):\n"
"  ...\n"
"ZeroDivisionError: heltalsdivision eller modulo med noll"

msgid ""
"(Discovered by Yury Selivanov and fixed by Benjamin Peterson; :issue:`9666`.)"
msgstr ""
"(Upptäckt av Yury Selivanov och åtgärdad av Benjamin Peterson; :issue:"
"`9666`.)"

msgid ""
"The :func:`str` of a float or complex number is now the same as its :func:"
"`repr`. Previously, the :func:`str` form was shorter but that just caused "
"confusion and is no longer needed now that the shortest possible :func:"
"`repr` is displayed by default:"
msgstr ""
":func:`str` för ett flytande eller komplext tal är nu samma som dess :func:"
"`repr`. Tidigare var :func:`str` kortare men det skapade bara förvirring och "
"behövs inte längre nu när den kortaste möjliga :func:`repr` visas som "
"standard:"

msgid "(Proposed and implemented by Mark Dickinson; :issue:`9337`.)"
msgstr "(Föreslagen och implementerad av Mark Dickinson; :issue:`9337`.)"

msgid ""
":class:`memoryview` objects now have a :meth:`~memoryview.release` method "
"and they also now support the context management protocol.  This allows "
"timely release of any resources that were acquired when requesting a buffer "
"from the original object."
msgstr ""
":class:`memoryview`-objekt har nu en :meth:`~memoryview.release`-metod och "
"de stöder nu också protokollet för kontexthantering.  Detta gör det möjligt "
"att i rätt tid frigöra alla resurser som förvärvades när en buffert begärdes "
"från det ursprungliga objektet."

msgid "(Added by Antoine Pitrou; :issue:`9757`.)"
msgstr "(Tillagd av Antoine Pitrou; :issue:`9757`.)"

msgid ""
"Previously it was illegal to delete a name from the local namespace if it "
"occurs as a free variable in a nested block::"
msgstr ""
"Tidigare var det olagligt att ta bort ett namn från den lokala namnrymden om "
"det förekom som en fri variabel i ett nästlat block::"

msgid ""
"def outer(x):\n"
"    def inner():\n"
"        return x\n"
"    inner()\n"
"    del x"
msgstr ""
"def outer(x):\n"
"    def inner():\n"
"        returnera x\n"
"    inner()\n"
"    del x"

msgid ""
"This is now allowed.  Remember that the target of an :keyword:`except` "
"clause is cleared, so this code which used to work with Python 2.6, raised "
"a :exc:`SyntaxError` with Python 3.1 and now works again::"
msgstr ""
"Detta är nu tillåtet.  Kom ihåg att målet för en :keyword:`except`-sats "
"rensas, så den här koden som brukade fungera med Python 2.6, gav upphov till "
"ett :exc:`SyntaxError` med Python 3.1 och fungerar nu igen::"

msgid ""
"def f():\n"
"    def print_error():\n"
"        print(e)\n"
"    try:\n"
"        something\n"
"    except Exception as e:\n"
"        print_error()\n"
"        # implicit \"del e\" here"
msgstr ""
"def f():\n"
"    def print_error():\n"
"        print(e)\n"
"    försök:\n"
"        något\n"
"    except Exception as e:\n"
"        print_error()\n"
"        # implicit \"del e\" här"

msgid "(See :issue:`4617`.)"
msgstr "(Se :issue:`4617`.)"

msgid ""
":ref:`Struct sequence types <struct-sequence-objects>` are now subclasses of "
"tuple. This means that C structures like those returned by :func:`os.stat`, :"
"func:`time.gmtime`, and :data:`sys.version_info` now work like a :term:"
"`named tuple` and now work with functions and methods that expect a tuple as "
"an argument.  This is a big step forward in making the C structures as "
"flexible as their pure Python counterparts:"
msgstr ""
":ref:`Struct sequence types <struct-sequence-objects>` är nu underklasser "
"till tuple. Detta innebär att C-strukturer som de som returneras av :func:"
"`os.stat`, :func:`time.gmtime` och :data:`sys.version_info` nu fungerar som "
"en :term:`named tuple` och nu fungerar med funktioner och metoder som "
"förväntar sig en tuple som argument.  Detta är ett stort steg framåt när det "
"gäller att göra C-strukturerna lika flexibla som deras rena Python-"
"motsvarigheter:"

msgid ""
"(Suggested by Arfrever Frehtes Taifersar Arahesis and implemented by "
"Benjamin Peterson in :issue:`8413`.)"
msgstr ""
"(Föreslagen av Arfrever Frehtes Taifersar Arahesis och implementerad av "
"Benjamin Peterson i :issue:`8413`.)"

msgid ""
"Warnings are now easier to control using the :envvar:`PYTHONWARNINGS` "
"environment variable as an alternative to using ``-W`` at the command line:"
msgstr ""
"Det är nu lättare att kontrollera varningar med hjälp av miljövariabeln :"
"envvar:`PYTHONWARNINGS` som ett alternativ till att använda ``-W`` på "
"kommandoraden:"

msgid ""
"$ export PYTHONWARNINGS='ignore::RuntimeWarning::,once::UnicodeWarning::'"
msgstr ""
"$ export PYTHONWARNINGS='ignore::RuntimeWarning::,once::UnicodeWarning::'"

msgid ""
"(Suggested by Barry Warsaw and implemented by Philip Jenvey in :issue:"
"`7301`.)"
msgstr ""
"(Föreslagen av Barry Warsaw och implementerad av Philip Jenvey i :issue:"
"`7301`.)"

msgid ""
"A new warning category, :exc:`ResourceWarning`, has been added.  It is "
"emitted when potential issues with resource consumption or cleanup are "
"detected.  It is silenced by default in normal release builds but can be "
"enabled through the means provided by the :mod:`warnings` module, or on the "
"command line."
msgstr ""
"En ny varningskategori, :exc:`ResourceWarning`, har lagts till.  Den "
"utfärdas när potentiella problem med resursförbrukning eller -rensning "
"upptäcks.  Den är avstängd som standard i normala versionsbyggen, men kan "
"aktiveras med hjälp av modulen :mod:`warnings` eller på kommandoraden."

msgid ""
"A :exc:`ResourceWarning` is issued at interpreter shutdown if the :data:`gc."
"garbage` list isn't empty, and if :const:`gc.DEBUG_UNCOLLECTABLE` is set, "
"all uncollectable objects are printed.  This is meant to make the programmer "
"aware that their code contains object finalization issues."
msgstr ""
"En :exc:`ResourceWarning` utfärdas när tolken stängs av om listan :data:`gc."
"garbage` inte är tom, och om :const:`gc.DEBUG_UNCOLLECTABLE` är inställd "
"skrivs alla objekt som inte kan samlas in ut.  Detta är tänkt att göra "
"programmeraren medveten om att deras kod innehåller problem med att avsluta "
"objekt."

msgid ""
"A :exc:`ResourceWarning` is also issued when a :term:`file object` is "
"destroyed without having been explicitly closed.  While the deallocator for "
"such object ensures it closes the underlying operating system resource "
"(usually, a file descriptor), the delay in deallocating the object could "
"produce various issues, especially under Windows.  Here is an example of "
"enabling the warning from the command line:"
msgstr ""
"En :exc:`ResourceWarning` utfärdas också när ett :term:`filobjekt` förstörs "
"utan att uttryckligen ha stängts.  Även om deallokeringen för ett sådant "
"objekt säkerställer att den underliggande operativsystemresursen (vanligtvis "
"en filbeskrivare) stängs, kan fördröjningen i deallokeringen av objektet ge "
"upphov till olika problem, särskilt under Windows.  Här är ett exempel på "
"hur du aktiverar varningen från kommandoraden:"

msgid ""
"$ python -q -Wdefault\n"
">>> f = open(\"foo\", \"wb\")\n"
">>> del f\n"
"__main__:1: ResourceWarning: unclosed file <_io.BufferedWriter name='foo'>"
msgstr ""
"$ python -q -Wdefault\n"
">>> f = öppen(\"foo\", \"wb\")\n"
">>> del f\n"
"__main__:1: ResourceWarning: ej stängd fil <_io.BufferedWriter name='foo'>"

msgid ""
"(Added by Antoine Pitrou and Georg Brandl in :issue:`10093` and :issue:"
"`477863`.)"
msgstr ""
"(Tillagd av Antoine Pitrou och Georg Brandl i :issue:`10093` och :issue:"
"`477863`.)"

msgid ""
":class:`range` objects now support *index* and *count* methods. This is part "
"of an effort to make more objects fully implement the :class:`collections."
"Sequence <collections.abc.Sequence>` :term:`abstract base class`.  As a "
"result, the language will have a more uniform API.  In addition, :class:"
"`range` objects now support slicing and negative indices, even with values "
"larger than :data:`sys.maxsize`.  This makes *range* more interoperable with "
"lists::"
msgstr ""
":class:`range`-objekt har nu stöd för metoderna *index* och *count*. Detta "
"är en del av ett försök att få fler objekt att fullt ut implementera :class:"
"`collections.Sequence <collections.abc.Sequence>` :term:`abstrakt "
"basklass`.  Som ett resultat kommer språket att ha ett mer enhetligt API.  "
"Dessutom stöder :class:`range`-objekt nu skivning och negativa index, även "
"med värden som är större än :data:`sys.maxsize`.  Detta gör *range* mer "
"kompatibelt med listor::"

msgid ""
">>> range(0, 100, 2).count(10)\n"
"1\n"
">>> range(0, 100, 2).index(10)\n"
"5\n"
">>> range(0, 100, 2)[5]\n"
"10\n"
">>> range(0, 100, 2)[0:5]\n"
"range(0, 10, 2)"
msgstr ""
">>> intervall(0, 100, 2).räkna(10)\n"
"1\n"
">>> intervall(0, 100, 2).index(10)\n"
"5\n"
">>> intervall(0, 100, 2)[5]\n"
"10\n"
">>> intervall(0, 100, 2)[0:5]\n"
"intervall(0, 10, 2)"

msgid ""
"(Contributed by Daniel Stutzbach in :issue:`9213`, by Alexander Belopolsky "
"in :issue:`2690`, and by Nick Coghlan in :issue:`10889`.)"
msgstr ""
"(Bidrag från Daniel Stutzbach i :issue:`9213`, av Alexander Belopolsky i :"
"issue:`2690`, och av Nick Coghlan i :issue:`10889`.)"

msgid ""
"The :func:`callable` builtin function from Py2.x was resurrected.  It "
"provides a concise, readable alternative to using an :term:`abstract base "
"class` in an expression like ``isinstance(x, collections.Callable)``:"
msgstr ""
"Den inbyggda funktionen :func:`callable` från Py2.x har återuppstått.  Den "
"ger ett kortfattat och läsbart alternativ till att använda en :term:"
"`abstrakt basklass` i ett uttryck som ``isinstance(x, collections."
"Callable)``:"

msgid "(See :issue:`10518`.)"
msgstr "(Se :issue:`10518`.)"

msgid ""
"Python's import mechanism can now load modules installed in directories with "
"non-ASCII characters in the path name.  This solved an aggravating problem "
"with home directories for users with non-ASCII characters in their usernames."
msgstr ""
"Pythons importmekanism kan nu läsa in moduler som är installerade i "
"kataloger med icke-ASCII-tecken i sökvägsnamnet.  Detta löste ett "
"irriterande problem med hemkataloger för användare med icke-ASCII-tecken i "
"sina användarnamn."

msgid "(Required extensive work by Victor Stinner in :issue:`9425`.)"
msgstr "(Krävde omfattande arbete av Victor Stinner i :issue:`9425`.)"

msgid "New, Improved, and Deprecated Modules"
msgstr "Nya, förbättrade och utfasade moduler"

msgid ""
"Python's standard library has undergone significant maintenance efforts and "
"quality improvements."
msgstr ""
"Pythons standardbibliotek har genomgått betydande underhållsinsatser och "
"kvalitetsförbättringar."

msgid ""
"The biggest news for Python 3.2 is that the :mod:`email` package, :mod:"
"`mailbox` module, and :mod:`!nntplib` modules now work correctly with the "
"bytes/text model in Python 3.  For the first time, there is correct handling "
"of messages with mixed encodings."
msgstr ""
"Den största nyheten för Python 3.2 är att :mod:`email`-paketet, :mod:"
"`mailbox`-modulen och :mod:`!nntplib`-modulerna nu fungerar korrekt med "
"bytes/text-modellen i Python 3.  För första gången finns det korrekt "
"hantering av meddelanden med blandade kodningar."

msgid ""
"Throughout the standard library, there has been more careful attention to "
"encodings and text versus bytes issues.  In particular, interactions with "
"the operating system are now better able to exchange non-ASCII data using "
"the Windows MBCS encoding, locale-aware encodings, or UTF-8."
msgstr ""
"I hela standardbiblioteket har frågor om kodning och text kontra bytes "
"uppmärksammats mer noggrant.  I synnerhet kan interaktioner med "
"operativsystemet nu bättre utbyta icke-ASCII-data med hjälp av Windows MBCS-"
"kodning, lokalmedvetna kodningar eller UTF-8."

msgid ""
"Another significant win is the addition of substantially better support for "
"*SSL* connections and security certificates."
msgstr ""
"En annan viktig nyhet är att stödet för *SSL*-anslutningar och "
"säkerhetscertifikat har förbättrats avsevärt."

msgid ""
"In addition, more classes now implement a :term:`context manager` to support "
"convenient and reliable resource clean-up using a :keyword:`with` statement."
msgstr ""
"Dessutom implementerar nu fler klasser en :term:`context manager` för att "
"stödja bekväm och tillförlitlig resursrensning med hjälp av en :keyword:"
"`with`-sats."

msgid "email"
msgstr "e-post"

msgid ""
"The usability of the :mod:`email` package in Python 3 has been mostly fixed "
"by the extensive efforts of R. David Murray.  The problem was that emails "
"are typically read and stored in the form of :class:`bytes` rather than :"
"class:`str` text, and they may contain multiple encodings within a single "
"email.  So, the email package had to be extended to parse and generate email "
"messages in bytes format."
msgstr ""
"Användbarheten av :mod:`email`-paketet i Python 3 har till stor del "
"åtgärdats genom R. David Murrays omfattande arbete.  Problemet var att e-"
"postmeddelanden vanligtvis läses och lagras i form av :class:`bytes` snarare "
"än :class:`str` text, och de kan innehålla flera kodningar inom ett enda e-"
"postmeddelande.  Så e-postpaketet måste utökas för att analysera och "
"generera e-postmeddelanden i bytesformat."

msgid ""
"New functions :func:`~email.message_from_bytes` and :func:`~email."
"message_from_binary_file`, and new classes :class:`~email.parser."
"BytesFeedParser` and :class:`~email.parser.BytesParser` allow binary message "
"data to be parsed into model objects."
msgstr ""
"Med de nya funktionerna :func:`~email.message_from_bytes` och :func:`~email."
"message_from_binary_file` samt de nya klasserna :class:`~email.parser."
"BytesFeedParser` och :class:`~email.parser.BytesParser` kan binära "
"meddelandedata analyseras till modellobjekt."

msgid ""
"Given bytes input to the model, :meth:`~email.message.Message.get_payload` "
"will by default decode a message body that has a :mailheader:`Content-"
"Transfer-Encoding` of *8bit* using the charset specified in the MIME headers "
"and return the resulting string."
msgstr ""
"Med bytes som indata till modellen kommer :meth:`~email.message.Message."
"get_payload` som standard att avkoda en meddelandekropp som har en :"
"mailheader:`Content-Transfer-Encoding` på *8bit* med hjälp av den "
"teckenuppsättning som anges i MIME-rubrikerna och returnera den resulterande "
"strängen."

msgid ""
"Given bytes input to the model, :class:`~email.generator.Generator` will "
"convert message bodies that have a :mailheader:`Content-Transfer-Encoding` "
"of *8bit* to instead have a *7bit* :mailheader:`Content-Transfer-Encoding`."
msgstr ""
"Givet bytes som indata till modellen kommer :class:`~email.generator."
"Generator` att konvertera meddelandekroppar som har en :mailheader:`Content-"
"Transfer-Encoding` på *8bit* till att istället ha en *7bit* :mailheader:"
"`Content-Transfer-Encoding`."

msgid ""
"Headers with unencoded non-ASCII bytes are deemed to be :rfc:`2047`\\ -"
"encoded using the *unknown-8bit* character set."
msgstr ""
"Rubriker med okodade icke-ASCII-byte anses vara :rfc:`2047`\\ -kodade med "
"teckenuppsättningen *unknown-8bit*."

msgid ""
"A new class :class:`~email.generator.BytesGenerator` produces bytes as "
"output, preserving any unchanged non-ASCII data that was present in the "
"input used to build the model, including message bodies with a :mailheader:"
"`Content-Transfer-Encoding` of *8bit*."
msgstr ""
"En ny klass :class:`~email.generator.BytesGenerator` producerar bytes som "
"utdata och bevarar alla oförändrade icke-ASCII-data som fanns i indata som "
"användes för att bygga modellen, inklusive meddelandetexter med en :"
"mailheader:`Content-Transfer-Encoding` på *8bit*."

msgid ""
"The :mod:`smtplib` :class:`~smtplib.SMTP` class now accepts a byte string "
"for the *msg* argument to the :meth:`~smtplib.SMTP.sendmail` method, and a "
"new method, :meth:`~smtplib.SMTP.send_message` accepts a :class:`~email."
"message.Message` object and can optionally obtain the *from_addr* and "
"*to_addrs* addresses directly from the object."
msgstr ""
"Klassen :mod:`smtplib` :class:`~smtplib.SMTP` accepterar nu en byte-sträng "
"för *msg*-argumentet till metoden :meth:`~smtplib.SMTP.sendmail`, och en ny "
"metod, :meth:`~smtplib.SMTP.send_message` accepterar ett :class:`~email."
"message.Message`-objekt och kan eventuellt hämta adresserna *from_addr* och "
"*to_addrs* direkt från objektet."

msgid ""
"(Proposed and implemented by R. David Murray, :issue:`4661` and :issue:"
"`10321`.)"
msgstr ""
"(Föreslagen och implementerad av R. David Murray, :issue:`4661` och :issue:"
"`10321`.)"

msgid "elementtree"
msgstr "elementträd"

msgid ""
"The :mod:`xml.etree.ElementTree` package and its :mod:`!xml.etree."
"cElementTree` counterpart have been updated to version 1.3."
msgstr ""
"Paketet :mod:`xml.etree.ElementTree` och dess motsvarighet :mod:`!xml.etree."
"cElementTree` har uppdaterats till version 1.3."

msgid "Several new and useful functions and methods have been added:"
msgstr "Flera nya och användbara funktioner och metoder har lagts till:"

msgid ""
":func:`xml.etree.ElementTree.fromstringlist` which builds an XML document "
"from a sequence of fragments"
msgstr ""
":func:`xml.etree.ElementTree.fromstringlist` som bygger ett XML-dokument "
"från en sekvens av fragment"

msgid ""
":func:`xml.etree.ElementTree.register_namespace` for registering a global "
"namespace prefix"
msgstr ""
":func:`xml.etree.ElementTree.register_namespace` för registrering av ett "
"globalt namnrymdsprefix"

msgid ""
":func:`xml.etree.ElementTree.tostringlist` for string representation "
"including all sublists"
msgstr ""
":func:`xml.etree.ElementTree.tostringlist` för strängrepresentation "
"inklusive alla underlistor"

msgid ""
":meth:`xml.etree.ElementTree.Element.extend` for appending a sequence of "
"zero or more elements"
msgstr ""
":meth:`xml.etree.ElementTree.Element.extend` för att lägga till en sekvens "
"med noll eller fler element"

msgid ""
":meth:`xml.etree.ElementTree.Element.iterfind` searches an element and "
"subelements"
msgstr ""
":meth:`xml.etree.ElementTree.Element.iterfind` söker efter ett element och "
"underelement"

msgid ""
":meth:`xml.etree.ElementTree.Element.itertext` creates a text iterator over "
"an element and its subelements"
msgstr ""
":meth:`xml.etree.ElementTree.Element.itertext` skapar en textiterator över "
"ett element och dess underelement"

msgid ""
":meth:`xml.etree.ElementTree.TreeBuilder.end` closes the current element"
msgstr ""
":meth:`xml.etree.ElementTree.TreeBuilder.end` stänger det aktuella elementet"

msgid ""
":meth:`xml.etree.ElementTree.TreeBuilder.doctype` handles a doctype "
"declaration"
msgstr ""
":meth:`xml.etree.ElementTree.TreeBuilder.doctype` hanterar en doctype-"
"deklaration"

msgid "Two methods have been deprecated:"
msgstr "Två metoder har utgått:"

msgid ":meth:`!xml.etree.ElementTree.getchildren` use ``list(elem)`` instead."
msgstr ""
":meth:`!xml.etree.ElementTree.getchildren` använd ``list(elem)`` istället."

msgid ""
":meth:`!xml.etree.ElementTree.getiterator` use ``Element.iter`` instead."
msgstr ""
":meth:`!xml.etree.ElementTree.getiterator` använd ``Element.iter`` istället."

msgid ""
"For details of the update, see `Introducing ElementTree <https://web.archive."
"org/web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm>`_ on "
"Fredrik Lundh's website."
msgstr ""
"För mer information om uppdateringen, se `Introducing ElementTree <https://"
"web.archive.org/web/20200703234532/http://effbot.org/zone/elementtree-13-"
"intro.htm>`_ på Fredrik Lundhs webbplats."

msgid "(Contributed by Florent Xicluna and Fredrik Lundh, :issue:`6472`.)"
msgstr "(Bidrag från Florent Xicluna och Fredrik Lundh, :issue:`6472`.)"

msgid "functools"
msgstr "functools"

msgid ""
"The :mod:`functools` module includes a new decorator for caching function "
"calls.  :func:`functools.lru_cache` can save repeated queries to an external "
"resource whenever the results are expected to be the same."
msgstr ""
"Modulen :mod:`functools` innehåller en ny dekorator för cachelagring av "
"funktionsanrop. :func:`functools.lru_cache` kan spara upprepade frågor till "
"en extern resurs när resultaten förväntas bli desamma."

msgid ""
"For example, adding a caching decorator to a database query function can "
"save database accesses for popular searches:"
msgstr ""
"Om du till exempel lägger till en cachningsdekorator i en "
"databasfrågefunktion kan du spara databasåtkomst för populära sökningar:"

msgid ""
"To help with choosing an effective cache size, the wrapped function is "
"instrumented for tracking cache statistics:"
msgstr ""
"För att hjälpa till att välja en effektiv cachestorlek är wrapped-funktionen "
"instrumenterad för att spåra cachestatistik:"

msgid ""
"If the phonelist table gets updated, the outdated contents of the cache can "
"be cleared with:"
msgstr ""
"Om telefonlistans tabell uppdateras kan det föråldrade innehållet i "
"cacheminnet rensas med:"

msgid ""
"(Contributed by Raymond Hettinger and incorporating design ideas from Jim "
"Baker, Miki Tebeka, and Nick Coghlan; see `recipe 498245 <https://code."
"activestate.com/recipes/498245-lru-and-lfu-cache-decorators/>`_\\, `recipe "
"577479 <https://code.activestate.com/recipes/577479-simple-caching-decorator/"
">`_\\, :issue:`10586`, and :issue:`10593`.)"
msgstr ""
"(Bidraget kommer från Raymond Hettinger och innehåller designidéer från Jim "
"Baker, Miki Tebeka och Nick Coghlan; se `recipe 498245 <https://code."
"activestate.com/recipes/498245-lru-and-lfu-cache-decorators/>`_\\, `recipe "
"577479 <https://code.activestate.com/recipes/577479-simple-caching-decorator/"
">`_\\, :issue:`10586`, och :issue:`10593`)"

msgid ""
"The :func:`functools.wraps` decorator now adds a :attr:`__wrapped__` "
"attribute pointing to the original callable function.  This allows wrapped "
"functions to be introspected.  It also copies :attr:`~function."
"__annotations__` if defined.  And now it also gracefully skips over missing "
"attributes such as :attr:`~function.__doc__` which might not be defined for "
"the wrapped callable."
msgstr ""
"Dekoratorn :func:`functools.wraps` lägger nu till ett attribut :attr:"
"`__wrapped__` som pekar på den ursprungliga anropsbara funktionen.  Detta "
"gör att inkapslade funktioner kan introspekteras.  Den kopierar också :attr:"
"`~function.__annotations__` om den är definierad.  Och nu hoppar den också "
"elegant över saknade attribut som :attr:`~function.__doc__` som kanske inte "
"är definierade för den inkapslade anropbara funktionen."

msgid ""
"In the above example, the cache can be removed by recovering the original "
"function:"
msgstr ""
"I exemplet ovan kan cacheminnet tas bort genom att återställa den "
"ursprungliga funktionen:"

msgid ""
"(By Nick Coghlan and Terrence Cole; :issue:`9567`, :issue:`3445`, and :issue:"
"`8814`.)"
msgstr ""
"(Av Nick Coghlan och Terrence Cole; :issue:`9567`, :issue:`3445`, och :issue:"
"`8814`.)"

msgid ""
"To help write classes with rich comparison methods, a new decorator :func:"
"`functools.total_ordering` will use existing equality and inequality methods "
"to fill in the remaining methods."
msgstr ""
"För att hjälpa till att skriva klasser med rika jämförelsemetoder kommer en "
"ny dekorator :func:`functools.total_ordering` att använda befintliga metoder "
"för likhet och olikhet för att fylla i de återstående metoderna."

msgid ""
"For example, supplying *__eq__* and *__lt__* will enable :func:`~functools."
"total_ordering` to fill-in *__le__*, *__gt__* and *__ge__*::"
msgstr ""
"Om du till exempel anger *__eq__* och *__lt__* kommer :func:`~functools."
"total_ordering` att fylla i *__le__*, *__gt__* och *__ge__*::"

msgid ""
"@total_ordering\n"
"class Student:\n"
"    def __eq__(self, other):\n"
"        return ((self.lastname.lower(), self.firstname.lower()) ==\n"
"                (other.lastname.lower(), other.firstname.lower()))\n"
"\n"
"    def __lt__(self, other):\n"
"        return ((self.lastname.lower(), self.firstname.lower()) <\n"
"                (other.lastname.lower(), other.firstname.lower()))"
msgstr ""
"@total_beställning\n"
"klass Student:\n"
"    def __eq__(self, other):\n"
"        return ((self.efternamn.lower(), self.förnamn.lower()) ==\n"
"                (other.efternamn.lower(), other.förnamn.lower()))\n"
"\n"
"    def __lt__(self, annan):\n"
"        return ((self.efternamn.lower(), self.förnamn.lower()) <\n"
"                (andra.efternamn.lägre(), andra.förnamn.lägre()))"

msgid ""
"With the *total_ordering* decorator, the remaining comparison methods are "
"filled in automatically."
msgstr ""
"Med dekoratorn *total_ordering* fylls de återstående jämförelsemetoderna i "
"automatiskt."

msgid "(Contributed by Raymond Hettinger.)"
msgstr "(Bidrag från Raymond Hettinger.)"

msgid ""
"To aid in porting programs from Python 2, the :func:`functools.cmp_to_key` "
"function converts an old-style comparison function to modern :term:`key "
"function`:"
msgstr ""
"För att underlätta portning av program från Python 2 konverterar funktionen :"
"func:`functools.cmp_to_key` en gammaldags jämförelsefunktion till modern :"
"term:`key function`:"

msgid ""
"For sorting examples and a brief sorting tutorial, see the `Sorting HowTo "
"<https://wiki.python.org/moin/HowTo/Sorting/>`_ tutorial."
msgstr ""
"Exempel på sortering och en kortfattad sorteringshandledning finns i "
"handledningen `Sorting HowTo <https://wiki.python.org/moin/HowTo/Sorting/>`_."

msgid "itertools"
msgstr "itertools"

msgid ""
"The :mod:`itertools` module has a new :func:`~itertools.accumulate` function "
"modeled on APL's *scan* operator and Numpy's *accumulate* function:"
msgstr ""
"Modulen :mod:`itertools` har en ny funktion :func:`~itertools.accumulate` "
"som bygger på APL:s operator *scan* och Numpys funktion *accumulate*:"

msgid ""
"For an example using :func:`~itertools.accumulate`, see the :ref:`examples "
"for the random module <random-examples>`."
msgstr ""
"Ett exempel på användning av :func:`~itertools.accumulate` finns i :ref:"
"`exempel för slumpmodulen <random-examples>`."

msgid ""
"(Contributed by Raymond Hettinger and incorporating design suggestions from "
"Mark Dickinson.)"
msgstr ""
"(Bidrag från Raymond Hettinger och med designförslag från Mark Dickinson.)"

msgid "collections"
msgstr "samlingar"

msgid ""
"The :class:`collections.Counter` class now has two forms of in-place "
"subtraction, the existing *-=* operator for `saturating subtraction <https://"
"en.wikipedia.org/wiki/Saturation_arithmetic>`_ and the new :meth:"
"`~collections.Counter.subtract` method for regular subtraction.  The former "
"is suitable for `multisets <https://en.wikipedia.org/wiki/Multiset>`_ which "
"only have positive counts, and the latter is more suitable for use cases "
"that allow negative counts:"
msgstr ""
"Klassen :class:`collections.Counter` har nu två former av subtraktion på "
"plats, den befintliga operatorn *-=* för `mättande subtraktion <https://en."
"wikipedia.org/wiki/Saturation_arithmetic>`_ och den nya metoden :meth:"
"`~collections.Counter.subtract` för vanlig subtraktion.  Den förra är "
"lämplig för `multisets <https://en.wikipedia.org/wiki/Multiset>`_ som bara "
"har positiva räkningar, och den senare är mer lämplig för användningsfall "
"som tillåter negativa räkningar:"

msgid ""
"The :class:`collections.OrderedDict` class has a new method :meth:"
"`~collections.OrderedDict.move_to_end` which takes an existing key and moves "
"it to either the first or last position in the ordered sequence."
msgstr ""
"Klassen :class:`collections.OrderedDict` har en ny metod :meth:`~collections."
"OrderedDict.move_to_end` som tar en befintlig nyckel och flyttar den till "
"antingen den första eller sista positionen i den ordnade sekvensen."

msgid ""
"The default is to move an item to the last position.  This is equivalent of "
"renewing an entry with ``od[k] = od.pop(k)``."
msgstr ""
"Standardinställningen är att flytta ett objekt till den sista positionen.  "
"Detta motsvarar att förnya en post med ``od[k] = od.pop(k)``."

msgid ""
"A fast move-to-end operation is useful for resequencing entries.  For "
"example, an ordered dictionary can be used to track order of access by aging "
"entries from the oldest to the most recently accessed."
msgstr ""
"En snabb \"move-to-end\"-operation är användbar för att sekvensera poster.  "
"En ordnad ordbok kan t.ex. användas för att spåra åtkomstordning genom att "
"åldra poster från den äldsta till den senast åtkomna."

msgid ""
"The :class:`collections.deque` class grew two new methods :meth:"
"`~collections.deque.count` and :meth:`~collections.deque.reverse` that make "
"them more substitutable for :class:`list` objects:"
msgstr ""
"Klassen :class:`collections.deque` har fått två nya metoder :meth:"
"`~collections.deque.count` och :meth:`~collections.deque.reverse` som gör "
"dem mer utbytbara mot :class:`list`-objekt:"

msgid "threading"
msgstr "gängning"

msgid ""
"The :mod:`threading` module has a new :class:`~threading.Barrier` "
"synchronization class for making multiple threads wait until all of them "
"have reached a common barrier point.  Barriers are useful for making sure "
"that a task with multiple preconditions does not run until all of the "
"predecessor tasks are complete."
msgstr ""
"Modulen :mod:`threading` har en ny :class:`~threading.Barrier` "
"synkroniseringsklass för att få flera trådar att vänta tills alla har nått "
"en gemensam barriärpunkt.  Barriärer är användbara för att se till att en "
"uppgift med flera förhandsvillkor inte körs förrän alla föregångaruppgifter "
"är klara."

msgid ""
"Barriers can work with an arbitrary number of threads.  This is a "
"generalization of a `Rendezvous <https://en.wikipedia.org/wiki/"
"Synchronous_rendezvous>`_ which is defined for only two threads."
msgstr ""
"Barriärer kan fungera med ett godtyckligt antal trådar.  Detta är en "
"generalisering av en `Rendezvous <https://en.wikipedia.org/wiki/"
"Synchronous_rendezvous>`_ som är definierad för endast två trådar."

msgid ""
"Implemented as a two-phase cyclic barrier, :class:`~threading.Barrier` "
"objects are suitable for use in loops.  The separate *filling* and "
"*draining* phases assure that all threads get released (drained) before any "
"one of them can loop back and re-enter the barrier.  The barrier fully "
"resets after each cycle."
msgstr ""
"Implementerad som en tvåfasig cyklisk barriär är :class:`~threading.Barrier`-"
"objekt lämpliga för användning i loopar.  De separata faserna *fyllning* och "
"*dränering* säkerställer att alla trådar släpps (dräneras) innan någon av "
"dem kan loopa tillbaka och återinträda i barriären.  Barriären återställs "
"helt efter varje cykel."

msgid "Example of using barriers::"
msgstr "Exempel på användning av barriärer::"

msgid ""
"from threading import Barrier, Thread\n"
"\n"
"def get_votes(site):\n"
"    ballots = conduct_election(site)\n"
"    all_polls_closed.wait()        # do not count until all polls are "
"closed\n"
"    totals = summarize(ballots)\n"
"    publish(site, totals)\n"
"\n"
"all_polls_closed = Barrier(len(sites))\n"
"for site in sites:\n"
"    Thread(target=get_votes, args=(site,)).start()"
msgstr ""
"från trådning import Barriär, Tråd\n"
"\n"
"def hämta_röster(webbplats):\n"
"    valsedlar = conduct_election(webbplats)\n"
"    all_polls_closed.wait() # räkna inte förrän alla vallokaler är stängda\n"
"    totals = sammanfatta(valsedlar)\n"
"    publicera(webbplats, totalsummor)\n"
"\n"
"all_polls_closed = Barriär(len(webbplatser))\n"
"för webbplats i webbplatser:\n"
"    Thread(target=get_votes, args=(site,)).start()"

msgid ""
"In this example, the barrier enforces a rule that votes cannot be counted at "
"any polling site until all polls are closed.  Notice how a solution with a "
"barrier is similar to one with :meth:`threading.Thread.join`, but the "
"threads stay alive and continue to do work (summarizing ballots) after the "
"barrier point is crossed."
msgstr ""
"I det här exemplet upprätthåller barriären en regel om att rösterna inte får "
"räknas på någon vallokal förrän alla vallokaler har stängts.  Lägg märke "
"till hur en lösning med en barriär liknar en lösning med :meth:`threading."
"Thread.join`, men trådarna hålls vid liv och fortsätter att utföra arbete "
"(sammanställning av röster) efter att barriärpunkten har passerats."

msgid ""
"If any of the predecessor tasks can hang or be delayed, a barrier can be "
"created with an optional *timeout* parameter.  Then if the timeout period "
"elapses before all the predecessor tasks reach the barrier point, all "
"waiting threads are released and a :exc:`~threading.BrokenBarrierError` "
"exception is raised::"
msgstr ""
"Om någon av de föregående uppgifterna kan hänga sig eller försenas kan en "
"barriär skapas med en valfri *timeout*-parameter.  Om timeout-perioden sedan "
"löper ut innan alla föregångaruppgifter når barriärpunkten, släpps alla "
"väntande trådar och ett :exc:`~threading.BrokenBarrierError`-undantag tas "
"upp::"

msgid ""
"def get_votes(site):\n"
"    ballots = conduct_election(site)\n"
"    try:\n"
"        all_polls_closed.wait(timeout=midnight - time.now())\n"
"    except BrokenBarrierError:\n"
"        lockbox = seal_ballots(ballots)\n"
"        queue.put(lockbox)\n"
"    else:\n"
"        totals = summarize(ballots)\n"
"        publish(site, totals)"
msgstr ""
"def get_votes(webbplats):\n"
"    röstsedlar = conduct_election(webbplats)\n"
"    försök:\n"
"        all_polls_closed.wait(timeout=midnatt - time.now())\n"
"    except BrokenBarrierError:\n"
"        lockbox = försegla_röstsedlar(röstsedlar)\n"
"        queue.put(låda)\n"
"    else:\n"
"        totals = sammanfatta(valsedlar)\n"
"        publicera(webbplats, totalsumma)"

msgid ""
"In this example, the barrier enforces a more robust rule.  If some election "
"sites do not finish before midnight, the barrier times-out and the ballots "
"are sealed and deposited in a queue for later handling."
msgstr ""
"I det här exemplet tillämpar barriären en mer robust regel.  Om vissa "
"vallokaler inte hinner bli klara före midnatt tar barriären timeout och "
"valsedlarna förseglas och läggs i en kö för senare hantering."

msgid ""
"See `Barrier Synchronization Patterns <https://osl.cs.illinois.edu/media/"
"papers/karmani-2009-barrier_synchronization_pattern.pdf>`_ for more examples "
"of how barriers can be used in parallel computing.  Also, there is a simple "
"but thorough explanation of barriers in `The Little Book of Semaphores "
"<https://greenteapress.com/semaphores/LittleBookOfSemaphores.pdf>`_, "
"*section 3.6*."
msgstr ""
"Se `Barrier Synchronization Patterns <https://osl.cs.illinois.edu/media/"
"papers/karmani-2009-barrier_synchronization_pattern.pdf>`_ för fler exempel "
"på hur barriärer kan användas i parallella beräkningar.  Det finns också en "
"enkel men grundlig förklaring av barriärer i `The Little Book of Semaphores "
"<https://greenteapress.com/semaphores/LittleBookOfSemaphores.pdf>`_, "
"*avsnitt 3.6*."

msgid ""
"(Contributed by Kristján Valur Jónsson with an API review by Jeffrey Yasskin "
"in :issue:`8777`.)"
msgstr ""
"(Bidrag från Kristján Valur Jónsson med en API-granskning av Jeffrey Yasskin "
"i :issue:`8777`.)"

msgid "datetime and time"
msgstr "datetime och tid"

msgid ""
"The :mod:`datetime` module has a new type :class:`~datetime.timezone` that "
"implements the :class:`~datetime.tzinfo` interface by returning a fixed UTC "
"offset and timezone name. This makes it easier to create timezone-aware "
"datetime objects::"
msgstr ""
"Modulen :mod:`datetime` har en ny typ :class:`~datetime.timezone` som "
"implementerar gränssnittet :class:`~datetime.tzinfo` genom att returnera en "
"fast UTC-offset och ett tidszonnamn. Detta gör det enklare att skapa "
"tidszonsmedvetna datetime-objekt::"

msgid ""
">>> from datetime import datetime, timezone\n"
"\n"
">>> datetime.now(timezone.utc)\n"
"datetime.datetime(2010, 12, 8, 21, 4, 2, 923754, tzinfo=datetime.timezone."
"utc)\n"
"\n"
">>> datetime.strptime(\"01/01/2000 12:00 +0000\", \"%m/%d/%Y %H:%M %z\")\n"
"datetime.datetime(2000, 1, 1, 12, 0, tzinfo=datetime.timezone.utc)"
msgstr ""
">>> from datetime import datetime, timezone\n"
"\n"
">>> datetime.now(timezone.utc)\n"
"datetime.datetime(2010, 12, 8, 21, 4, 2, 923754, tzinfo=datetime.timezone."
"utc)\n"
"\n"
">>> datetime.strptime(\"01/01/2000 12:00 +0000\", \"%m/%d/%Y %H:%M %z\")\n"
"datetime.datetime(2000, 1, 1, 12, 0, tzinfo=datetime.timezone.utc)"

msgid ""
"Also, :class:`~datetime.timedelta` objects can now be multiplied by :class:"
"`float` and divided by :class:`float` and :class:`int` objects. And :class:"
"`~datetime.timedelta` objects can now divide one another."
msgstr ""
"Dessutom kan :class:`~datetime.timedelta`-objekt nu multipliceras med :class:"
"`float` och divideras med :class:`float` och :class:`int`-objekt. Och :class:"
"`~datetime.timedelta`-objekt kan nu divideras med varandra."

msgid ""
"The :meth:`datetime.date.strftime` method is no longer restricted to years "
"after 1900.  The new supported year range is from 1000 to 9999 inclusive."
msgstr ""
"Metoden :meth:`datetime.date.strftime` är inte längre begränsad till år "
"efter 1900.  Det nya årtalsintervallet som stöds är från 1000 till och med "
"9999."

msgid ""
"Whenever a two-digit year is used in a time tuple, the interpretation has "
"been governed by :data:`!time.accept2dyear`.  The default is ``True`` which "
"means that for a two-digit year, the century is guessed according to the "
"POSIX rules governing the ``%y`` strptime format."
msgstr ""
"När ett tvåsiffrigt årtal används i en tidstupel, har tolkningen styrts av :"
"data:`!time.accept2dyear`.  Standardvärdet är ``True`` vilket innebär att "
"för ett tvåsiffrigt årtal gissas århundradet enligt POSIX-reglerna som styr "
"strptime-formatet ``%y``."

msgid ""
"Starting with Py3.2, use of the century guessing heuristic will emit a :exc:"
"`DeprecationWarning`.  Instead, it is recommended that :data:`!time."
"accept2dyear` be set to ``False`` so that large date ranges can be used "
"without guesswork::"
msgstr ""
"Från och med Py3.2 kommer användning av heuristiken för gissning av "
"århundraden att ge upphov till en :exc:`DeprecationWarning`.  Istället "
"rekommenderas det att :data:`!time.accept2dyear` sätts till ``False`` så att "
"stora datumintervall kan användas utan gissningar::"

msgid ""
">>> import time, warnings\n"
">>> warnings.resetwarnings()      # remove the default warning filters\n"
"\n"
">>> time.accept2dyear = True      # guess whether 11 means 11 or 2011\n"
">>> time.asctime((11, 1, 1, 12, 34, 56, 4, 1, 0))\n"
"Warning (from warnings module):\n"
"  ...\n"
"DeprecationWarning: Century info guessed for a 2-digit year.\n"
"'Fri Jan  1 12:34:56 2011'\n"
"\n"
">>> time.accept2dyear = False     # use the full range of allowable dates\n"
">>> time.asctime((11, 1, 1, 12, 34, 56, 4, 1, 0))\n"
"'Fri Jan  1 12:34:56 11'"
msgstr ""
">>> import tid, varningar\n"
">>> warnings.resetwarnings() # ta bort standardvarningsfiltren\n"
"\n"
">>> time.accept2dyear = True # gissa om 11 betyder 11 eller 2011\n"
">>> time.asctime((11, 1, 1, 12, 34, 56, 4, 1, 0))\n"
"Varning (från modulen warnings):\n"
"  ...\n"
"DeprecationWarning: Century info gissad för ett 2-siffrigt år.\n"
"'Fri Jan 1 12:34:56 2011'\n"
"\n"
">>> time.accept2dyear = False # använd hela intervallet av tillåtna datum\n"
">>> time.asctime((11, 1, 1, 12, 34, 56, 4, 1, 0))\n"
"'Fri Jan 1 12:34:56 11'"

msgid ""
"Several functions now have significantly expanded date ranges.  When :data:`!"
"time.accept2dyear` is false, the :func:`time.asctime` function will accept "
"any year that fits in a C int, while the :func:`time.mktime` and :func:`time."
"strftime` functions will accept the full range supported by the "
"corresponding operating system functions."
msgstr ""
"Flera funktioner har nu betydligt utökade datumintervall.  När :data:`!time."
"accept2dyear` är false kommer funktionen :func:`time.asctime` att acceptera "
"alla årtal som ryms i ett C int, medan funktionerna :func:`time.mktime` och :"
"func:`time.strftime` kommer att acceptera hela det intervall som stöds av "
"motsvarande operativsystemfunktioner."

msgid ""
"(Contributed by Alexander Belopolsky and Victor Stinner in :issue:"
"`1289118`, :issue:`5094`, :issue:`6641`, :issue:`2706`, :issue:`1777412`, :"
"issue:`8013`, and :issue:`10827`.)"
msgstr ""
"(Bidrag från Alexander Belopolsky och Victor Stinner i :issue:`1289118`, :"
"issue:`5094`, :issue:`6641`, :issue:`2706`, :issue:`1777412`, :issue:`8013` "
"och :issue:`10827`.)"

msgid "math"
msgstr "matematik"

msgid ""
"The :mod:`math` module has been updated with six new functions inspired by "
"the C99 standard."
msgstr ""
"Modulen :mod:`math` har uppdaterats med sex nya funktioner som inspirerats "
"av C99-standarden."

msgid ""
"The :func:`~math.isfinite` function provides a reliable and fast way to "
"detect special values.  It returns ``True`` for regular numbers and "
"``False`` for *Nan* or *Infinity*:"
msgstr ""
"Funktionen :func:`~math.isfinite` är ett pålitligt och snabbt sätt att "
"upptäcka speciella värden.  Den returnerar ``True`` för vanliga tal och "
"``False`` för *Nan* eller *Infinity*:"

msgid ""
"The :func:`~math.expm1` function computes ``e**x-1`` for small values of *x* "
"without incurring the loss of precision that usually accompanies the "
"subtraction of nearly equal quantities:"
msgstr ""
"Funktionen :func:`~math.expm1` beräknar ``e**x-1`` för små värden på *x* "
"utan den precisionsförlust som vanligtvis följer med subtraktion av nästan "
"lika stora mängder:"

msgid ""
"The :func:`~math.erf` function computes a probability integral or `Gaussian "
"error function <https://en.wikipedia.org/wiki/Error_function>`_.  The "
"complementary error function, :func:`~math.erfc`, is ``1 - erf(x)``:"
msgstr ""
"Funktionen :func:`~math.erf` beräknar en sannolikhetsintegral eller "
"`Gaussisk felfunktion <https://en.wikipedia.org/wiki/Error_function>`_.  Den "
"komplementära felfunktionen, :func:`~math.erfc`, är ``1 - erf(x)``:"

msgid ""
">>> from math import erf, erfc, sqrt\n"
">>> erf(1.0/sqrt(2.0))   # portion of normal distribution within 1 standard "
"deviation\n"
"0.682689492137086\n"
">>> erfc(1.0/sqrt(2.0))  # portion of normal distribution outside 1 standard "
"deviation\n"
"0.31731050786291404\n"
">>> erf(1.0/sqrt(2.0)) + erfc(1.0/sqrt(2.0))\n"
"1.0"
msgstr ""
">>> from math import erf, erfc, sqrt\n"
">>> erf(1,0/sqrt(2,0))   # del av normalfördelning inom 1 standardavvikelse\n"
"0.682689492137086\n"
">>> erfc(1,0/sqrt(2,0))  # del av normalfördelningen utanför 1 "
"standardavvikelse\n"
"0.31731050786291404\n"
">>> erf(1,0/sqrt(2,0)) + erfc(1,0/sqrt(2,0))\n"
"1.0"

msgid ""
"The :func:`~math.gamma` function is a continuous extension of the factorial "
"function.  See https://en.wikipedia.org/wiki/Gamma_function for details.  "
"Because the function is related to factorials, it grows large even for small "
"values of *x*, so there is also a :func:`~math.lgamma` function for "
"computing the natural logarithm of the gamma function:"
msgstr ""
"Funktionen :func:`~math.gamma` är en kontinuerlig utvidgning av "
"faktorialfunktionen.  Se https://en.wikipedia.org/wiki/Gamma_function för "
"detaljer.  Eftersom funktionen är relaterad till faktorialtal blir den stor "
"även för små värden på *x*, så det finns också en :func:`~math.lgamma`-"
"funktion för att beräkna den naturliga logaritmen av gammafunktionen:"

msgid "(Contributed by Mark Dickinson.)"
msgstr "(Bidrag från Mark Dickinson.)"

msgid "abc"
msgstr "abc"

msgid ""
"The :mod:`abc` module now supports :func:`~abc.abstractclassmethod` and :"
"func:`~abc.abstractstaticmethod`."
msgstr ""
"Modulen :mod:`abc` har nu stöd för :func:`~abc.abstractclassmethod` och :"
"func:`~abc.abstractstaticmethod`."

msgid ""
"These tools make it possible to define an :term:`abstract base class` that "
"requires a particular :func:`classmethod` or :func:`staticmethod` to be "
"implemented::"
msgstr ""
"Dessa verktyg gör det möjligt att definiera en :term:`abstrakt basklass` som "
"kräver att en viss :func:`klassmetod` eller :func:`statiskmetod` "
"implementeras::"

msgid ""
"class Temperature(metaclass=abc.ABCMeta):\n"
"    @abc.abstractclassmethod\n"
"    def from_fahrenheit(cls, t):\n"
"        ...\n"
"    @abc.abstractclassmethod\n"
"    def from_celsius(cls, t):\n"
"        ..."
msgstr ""
"klass Temperatur(metaklass=abc.ABCMeta):\n"
"    @abc.abstractclassmethod\n"
"    def from_fahrenheit(cls, t):\n"
"        ...\n"
"    @abc.abstractclassmethod\n"
"    def from_celsius(cls, t):\n"
"        ..."

msgid "(Patch submitted by Daniel Urban; :issue:`5867`.)"
msgstr "(Patch inlämnad av Daniel Urban; :issue:`5867`.)"

msgid "io"
msgstr "io"

msgid ""
"The :class:`io.BytesIO` has a new method, :meth:`~io.BytesIO.getbuffer`, "
"which provides functionality similar to :func:`memoryview`.  It creates an "
"editable view of the data without making a copy.  The buffer's random access "
"and support for slice notation are well-suited to in-place editing::"
msgstr ""
"Klassen :class:`io.BytesIO` har en ny metod, :meth:`~io.BytesIO.getbuffer`, "
"som ger funktionalitet som liknar :func:`memoryview`.  Den skapar en "
"redigerbar vy av data utan att göra en kopia.  Buffertens slumpmässiga "
"åtkomst och stöd för slice-notation är väl lämpade för redigering på plats::"

msgid ""
">>> REC_LEN, LOC_START, LOC_LEN = 34, 7, 11\n"
"\n"
">>> def change_location(buffer, record_number, location):\n"
"...     start = record_number * REC_LEN + LOC_START\n"
"...     buffer[start: start+LOC_LEN] = location\n"
"\n"
">>> import io\n"
"\n"
">>> byte_stream = io.BytesIO(\n"
"...     b'G3805  storeroom  Main chassis    '\n"
"...     b'X7899  shipping   Reserve cog     '\n"
"...     b'L6988  receiving  Primary sprocket'\n"
"... )\n"
">>> buffer = byte_stream.getbuffer()\n"
">>> change_location(buffer, 1, b'warehouse  ')\n"
">>> change_location(buffer, 0, b'showroom   ')\n"
">>> print(byte_stream.getvalue())\n"
"b'G3805  showroom   Main chassis    '\n"
"b'X7899  warehouse  Reserve cog     '\n"
"b'L6988  receiving  Primary sprocket'"
msgstr ""
">>> REC_LEN, LOC_START, LOC_LEN = 34, 7, 11\n"
"\n"
">>> def change_location(buffert, record_number, plats):\n"
"... start = record_number * REC_LEN + LOC_START\n"
"... buffert[start: start+LOC_LEN] = plats\n"
"\n"
">>> import io\n"
"\n"
">>> byte_stream = io.BytesIO(\n"
"... b'G3805 förråd Huvudchassi '\n"
"... b'X7899 frakt Reservkugghjul '\n"
"... b'L6988 mottagning Primärt kedjehjul'\n"
"... )\n"
">>> buffert = byte_stream.getbuffer()\n"
">>> change_location(buffert, 1, b'lager ')\n"
">>> change_location(buffert, 0, b'showroom ')\n"
">>> print(byte_stream.getvalue())\n"
"b'G3805 utställningslokal Huvudchassi '\n"
"b'X7899 lager Reservkugghjul '\n"
"b'L6988 mottagning Primärt kedjehjul'"

msgid "(Contributed by Antoine Pitrou in :issue:`5506`.)"
msgstr "(Bidrag från Antoine Pitrou i :issue:`5506`.)"

msgid "reprlib"
msgstr "reprlib"

msgid ""
"When writing a :meth:`~object.__repr__` method for a custom container, it is "
"easy to forget to handle the case where a member refers back to the "
"container itself. Python's builtin objects such as :class:`list` and :class:"
"`set` handle self-reference by displaying \"...\" in the recursive part of "
"the representation string."
msgstr ""
"När man skriver en :meth:`~object.__repr__`-metod för en egen container är "
"det lätt att glömma bort att hantera fallet där en medlem refererar tillbaka "
"till containern själv. Pythons inbyggda objekt som :class:`list` och :class:"
"`set` hanterar självreferenser genom att visa \"...\" i den rekursiva delen "
"av representationssträngen."

msgid ""
"To help write such :meth:`~object.__repr__` methods, the :mod:`reprlib` "
"module has a new decorator, :func:`~reprlib.recursive_repr`, for detecting "
"recursive calls to :meth:`!__repr__` and substituting a placeholder string "
"instead::"
msgstr ""
"För att hjälpa till att skriva sådana :meth:`~object.__repr__`-metoder har "
"modulen :mod:`reprlib` en ny dekorator, :func:`~reprlib.recursive_repr`, för "
"att upptäcka rekursiva anrop till :meth:`!__repr__` och ersätta dem med en "
"platshållarsträng::"

msgid ""
">>> class MyList(list):\n"
"...     @recursive_repr()\n"
"...     def __repr__(self):\n"
"...         return '<' + '|'.join(map(repr, self)) + '>'\n"
"...\n"
">>> m = MyList('abc')\n"
">>> m.append(m)\n"
">>> m.append('x')\n"
">>> print(m)\n"
"<'a'|'b'|'c'|...|'x'>"
msgstr ""
">>> klass MyList(lista):\n"
"...     @rekursiv_repr()\n"
"... def __repr__(self):\n"
"... return '<' + '|'.join(map(repr, self)) + '>'\n"
"...\n"
">>> m = MyList('abc')\n"
">>> m.append(m)\n"
">>> m.append('x')\n"
">>> print(m)\n"
"<'a'|'b'|'c'|...|'x'>"

msgid "(Contributed by Raymond Hettinger in :issue:`9826` and :issue:`9840`.)"
msgstr "(Bidrag från Raymond Hettinger i :issue:`9826` och :issue:`9840`.)"

msgid "logging"
msgstr "loggning"

msgid ""
"In addition to dictionary-based configuration described above, the :mod:"
"`logging` package has many other improvements."
msgstr ""
"Förutom den ordboksbaserade konfigurationen som beskrivs ovan innehåller "
"paketet :mod:`logging` många andra förbättringar."

msgid ""
"The logging documentation has been augmented by a :ref:`basic tutorial "
"<logging-basic-tutorial>`\\, an :ref:`advanced tutorial <logging-advanced-"
"tutorial>`\\, and a :ref:`cookbook <logging-cookbook>` of logging recipes.  "
"These documents are the fastest way to learn about logging."
msgstr ""
"Loggningsdokumentationen har utökats med en :ref:`grundläggande handledning "
"<logging-basic-tutorial>`\\, en :ref:`avancerad handledning <logging-"
"advanced-tutorial>`\\, och en :ref:`kokbok <logging-cookbook>` med "
"loggningsrecept.  Dessa dokument är det snabbaste sättet att lära sig mer om "
"loggning."

msgid ""
"The :func:`logging.basicConfig` set-up function gained a *style* argument to "
"support three different types of string formatting.  It defaults to \"%\" "
"for traditional %-formatting, can be set to \"{\" for the new :meth:`str."
"format` style, or can be set to \"$\" for the shell-style formatting "
"provided by :class:`string.Template`.  The following three configurations "
"are equivalent::"
msgstr ""
"Uppsättningsfunktionen :func:`logging.basicConfig` har fått ett *style*-"
"argument för att stödja tre olika typer av strängformatering.  Det är som "
"standard \"%\" för traditionell %-f-formatering, kan sättas till \"{\" för "
"den nya :meth:`str.format`-stilen, eller kan sättas till \"$\" för den shell-"
"stilformatering som tillhandahålls av :class:`string.Template`.  Följande "
"tre konfigurationer är likvärdiga::"

msgid ""
">>> from logging import basicConfig\n"
">>> basicConfig(style='%', format=\"%(name)s -> %(levelname)s: "
"%(message)s\")\n"
">>> basicConfig(style='{', format=\"{name} -> {levelname} {message}\")\n"
">>> basicConfig(style='$', format=\"$name -> $levelname: $message\")"
msgstr ""
">>> from logging import basicConfig\n"
">>> basicConfig(style='%', format=\"%(name)s -> %(levelname)s: "
"%(message)s\")\n"
">>> basicConfig(style='{', format=\"{name} -> {levelname} {message}\")\n"
">>> basicConfig(style='$', format=\"$name -> $levelname: $message\")"

msgid ""
"If no configuration is set-up before a logging event occurs, there is now a "
"default configuration using a :class:`~logging.StreamHandler` directed to :"
"data:`sys.stderr` for events of ``WARNING`` level or higher.  Formerly, an "
"event occurring before a configuration was set-up would either raise an "
"exception or silently drop the event depending on the value of :data:"
"`logging.raiseExceptions`.  The new default handler is stored in :data:"
"`logging.lastResort`."
msgstr ""
"Om ingen konfiguration görs innan en loggningshändelse inträffar finns det "
"nu en standardkonfiguration som använder en :class:`~logging.StreamHandler` "
"riktad till :data:`sys.stderr` för händelser på ``WARNING``-nivå eller "
"högre.  Tidigare skulle en händelse som inträffade innan en konfiguration "
"konfigurerades antingen ge upphov till ett undantag eller tyst släppa "
"händelsen beroende på värdet för :data:`logging.raiseExceptions`.  Den nya "
"standardhanteraren lagras i :data:`logging.lastResort`."

msgid ""
"The use of filters has been simplified.  Instead of creating a :class:"
"`~logging.Filter` object, the predicate can be any Python callable that "
"returns ``True`` or ``False``."
msgstr ""
"Användningen av filter har förenklats.  Istället för att skapa ett :class:"
"`~logging.Filter`-objekt kan predikatet vara vilken Python-kallbar som helst "
"som returnerar ``True`` eller ``False``."

msgid ""
"There were a number of other improvements that add flexibility and simplify "
"configuration.  See the module documentation for a full listing of changes "
"in Python 3.2."
msgstr ""
"Det finns ett antal andra förbättringar som ger ökad flexibilitet och "
"förenklar konfigurationen.  Se moduldokumentationen för en fullständig lista "
"över ändringar i Python 3.2."

msgid "csv"
msgstr "csv"

msgid ""
"The :mod:`csv` module now supports a new dialect, :class:`~csv."
"unix_dialect`, which applies quoting for all fields and a traditional Unix "
"style with ``'\\n'`` as the line terminator.  The registered dialect name is "
"``unix``."
msgstr ""
"Modulen :mod:`csv` stöder nu en ny dialekt, :class:`~csv.unix_dialect`, som "
"använder citattecken för alla fält och en traditionell Unix-stil med "
"``'\\n'`` som radavslutare.  Det registrerade dialektnamnet är ``unix``."

msgid ""
"The :class:`csv.DictWriter` has a new method, :meth:`~csv.DictWriter."
"writeheader` for writing-out an initial row to document the field names::"
msgstr ""
"Klassen :class:`csv.DictWriter` har en ny metod, :meth:`~csv.DictWriter."
"writeheader` för att skriva ut en första rad för att dokumentera fältnamnen::"

msgid ""
">>> import csv, sys\n"
">>> w = csv.DictWriter(sys.stdout, ['name', 'dept'], dialect='unix')\n"
">>> w.writeheader()\n"
"\"name\",\"dept\"\n"
">>> w.writerows([\n"
"...     {'name': 'tom', 'dept': 'accounting'},\n"
"...     {'name': 'susan', 'dept': 'Salesl'}])\n"
"\"tom\",\"accounting\"\n"
"\"susan\",\"sales\""
msgstr ""
">>> import csv, sys\n"
">>> w = csv.DictWriter(sys.stdout, ['name', 'dept'], dialect='unix')\n"
">>> w.writeheader()\n"
"\"namn\",\"dept\"\n"
">>> w.writerows([\n"
"...     {'name': 'tom', 'dept': 'accounting'},\n"
"...     {'name': 'susan', 'dept': 'Salesl'}])\n"
"\"tom\",\"redovisning\"\n"
"\"susan\",\"försäljning\""

msgid ""
"(New dialect suggested by Jay Talbot in :issue:`5975`, and the new method "
"suggested by Ed Abraham in :issue:`1537721`.)"
msgstr ""
"(Ny dialekt föreslagen av Jay Talbot i :issue:`5975`, och den nya metoden "
"föreslagen av Ed Abraham i :issue:`1537721`.)"

msgid "contextlib"
msgstr "contextlib"

msgid ""
"There is a new and slightly mind-blowing tool :class:`~contextlib."
"ContextDecorator` that is helpful for creating a :term:`context manager` "
"that does double duty as a function decorator."
msgstr ""
"Det finns ett nytt och lite häpnadsväckande verktyg :class:`~contextlib."
"ContextDecorator` som är till hjälp för att skapa en :term:`context manager` "
"som gör dubbel tjänst som en funktionsdekorator."

msgid ""
"As a convenience, this new functionality is used by :func:`~contextlib."
"contextmanager` so that no extra effort is needed to support both roles."
msgstr ""
"Som en bekvämlighet används denna nya funktionalitet av :func:`~contextlib."
"contextmanager` så att ingen extra ansträngning behövs för att stödja båda "
"rollerna."

msgid ""
"The basic idea is that both context managers and function decorators can be "
"used for pre-action and post-action wrappers.  Context managers wrap a group "
"of statements using a :keyword:`with` statement, and function decorators "
"wrap a group of statements enclosed in a function.  So, occasionally there "
"is a need to write a pre-action or post-action wrapper that can be used in "
"either role."
msgstr ""
"Den grundläggande idén är att både kontexthanterare och funktionsdekoratorer "
"kan användas för pre-action och post-action wrappers.  Kontexthanterare "
"omsluter en grupp satser med hjälp av ett :keyword:`with`-sats och "
"funktionsdekoratorer omsluter en grupp satser som är inneslutna i en "
"funktion.  Ibland finns det alltså ett behov av att skriva en pre-action "
"eller post-action wrapper som kan användas i båda rollerna."

msgid ""
"For example, it is sometimes useful to wrap functions or groups of "
"statements with a logger that can track the time of entry and time of exit.  "
"Rather than writing both a function decorator and a context manager for the "
"task, the :func:`~contextlib.contextmanager` provides both capabilities in a "
"single definition::"
msgstr ""
"Till exempel är det ibland användbart att paketera funktioner eller grupper "
"av satser med en logger som kan spåra tidpunkten för inmatning och "
"tidpunkten för avslutning.  I stället för att skriva både en "
"funktionsdekorator och en kontexthanterare för uppgiften, ger :func:"
"`~contextlib.contextmanager` båda möjligheterna i en enda definition::"

msgid ""
"from contextlib import contextmanager\n"
"import logging\n"
"\n"
"logging.basicConfig(level=logging.INFO)\n"
"\n"
"@contextmanager\n"
"def track_entry_and_exit(name):\n"
"    logging.info('Entering: %s', name)\n"
"    yield\n"
"    logging.info('Exiting: %s', name)"
msgstr ""
"from contextlib import contextmanager\n"
"import logging\n"
"\n"
"logging.basicConfig(level=logging.INFO)\n"
"\n"
"@contextmanager\n"
"def track_entry_and_exit(name):\n"
"    logging.info('Entering: %s', name)\n"
"    yield\n"
"    logging.info('Exiting: %s', name)"

msgid "Formerly, this would have only been usable as a context manager::"
msgstr ""
"Tidigare skulle detta bara ha kunnat användas som en kontexthanterare::"

msgid ""
"with track_entry_and_exit('widget loader'):\n"
"    print('Some time consuming activity goes here')\n"
"    load_widget()"
msgstr ""
"med track_entry_and_exit('widget loader'):\n"
"    print('En tidskrävande aktivitet sker här')\n"
"    ladda_widget()"

msgid "Now, it can be used as a decorator as well::"
msgstr "Nu kan den även användas som inredningsdetalj::"

msgid ""
"@track_entry_and_exit('widget loader')\n"
"def activity():\n"
"    print('Some time consuming activity goes here')\n"
"    load_widget()"
msgstr ""
"@track_entry_and_exit('widgetladdare')\n"
"def aktivitet():\n"
"    print('Någon tidskrävande aktivitet sker här')\n"
"    ladda_widget()"

msgid ""
"Trying to fulfill two roles at once places some limitations on the "
"technique. Context managers normally have the flexibility to return an "
"argument usable by a :keyword:`with` statement, but there is no parallel for "
"function decorators."
msgstr ""
"Att försöka uppfylla två roller samtidigt innebär vissa begränsningar för "
"tekniken. Kontexthanterare har normalt flexibiliteten att returnera ett "
"argument som kan användas av en :keyword:`with`-sats, men det finns ingen "
"parallell för funktionsdekoratorer."

msgid ""
"In the above example, there is not a clean way for the "
"*track_entry_and_exit* context manager to return a logging instance for use "
"in the body of enclosed statements."
msgstr ""
"I exemplet ovan finns det inte något rent sätt för kontexthanteraren "
"*track_entry_and_exit* att returnera en loggningsinstans för användning i "
"brödtexten i slutna satser."

msgid "(Contributed by Michael Foord in :issue:`9110`.)"
msgstr "(Bidrag från Michael Foord i :issue:`9110`.)"

msgid "decimal and fractions"
msgstr "decimaltal och bråk"

msgid ""
"Mark Dickinson crafted an elegant and efficient scheme for assuring that "
"different numeric datatypes will have the same hash value whenever their "
"actual values are equal (:issue:`8188`)::"
msgstr ""
"Mark Dickinson skapade ett elegant och effektivt system för att säkerställa "
"att olika numeriska datatyper har samma hashvärde när deras faktiska värden "
"är lika (:issue:`8188`)::"

msgid ""
"assert hash(Fraction(3, 2)) == hash(1.5) == \\\n"
"       hash(Decimal(\"1.5\")) == hash(complex(1.5, 0))"
msgstr ""
"assert hash(Fraktion(3, 2)) == hash(1,5) == \\\n"
"       hash(Decimal(\"1,5\")) == hash(komplex(1,5, 0))"

msgid ""
"Some of the hashing details are exposed through a new attribute, :data:`sys."
"hash_info`, which describes the bit width of the hash value, the prime "
"modulus, the hash values for *infinity* and *nan*, and the multiplier used "
"for the imaginary part of a number:"
msgstr ""
"En del av hashdetaljerna visas genom ett nytt attribut, :data:`sys."
"hash_info`, som beskriver hashvärdets bitbredd, primtalsmodulen, hashvärdena "
"för *infinity* och *nan* samt den multiplikator som används för "
"imaginärdelen av ett tal:"

msgid ""
"An early decision to limit the interoperability of various numeric types has "
"been relaxed.  It is still unsupported (and ill-advised) to have implicit "
"mixing in arithmetic expressions such as ``Decimal('1.1') + float('1.1')`` "
"because the latter loses information in the process of constructing the "
"binary float.  However, since existing floating-point value can be converted "
"losslessly to either a decimal or rational representation, it makes sense to "
"add them to the constructor and to support mixed-type comparisons."
msgstr ""
"Ett tidigt beslut om att begränsa interoperabiliteten för olika numeriska "
"typer har lättats upp.  Det är fortfarande inte tillåtet (och inte heller "
"lämpligt) att ha implicit mixning i aritmetiska uttryck som ``Decimal('1.1') "
"+ float('1.1')`` eftersom det senare förlorar information i processen att "
"konstruera den binära floaten.  Men eftersom befintliga flyttalsvärden kan "
"konverteras förlustfritt till antingen en decimal eller rationell "
"representation, är det vettigt att lägga till dem i konstruktorn och stödja "
"jämförelser av blandad typ."

msgid ""
"The :class:`decimal.Decimal` constructor now accepts :class:`float` objects "
"directly so there in no longer a need to use the :meth:`~decimal.Decimal."
"from_float` method (:issue:`8257`)."
msgstr ""
"Konstruktorn :class:`decimal.Decimal` accepterar nu :class:`float`-objekt "
"direkt så det finns inte längre något behov av att använda metoden :meth:"
"`~decimal.Decimal.from_float` (:issue:`8257`)."

msgid ""
"Mixed type comparisons are now fully supported so that :class:`~decimal."
"Decimal` objects can be directly compared with :class:`float` and :class:"
"`fractions.Fraction` (:issue:`2531` and :issue:`8188`)."
msgstr ""
"Jämförelser av blandade typer stöds nu fullt ut så att :class:`~decimal."
"Decimal`-objekt kan jämföras direkt med :class:`float` och :class:`fractions."
"Fraction` (:issue:`2531` och :issue:`8188`)."

msgid ""
"Similar changes were made to :class:`fractions.Fraction` so that the :meth:"
"`~fractions.Fraction.from_float` and :meth:`~fractions.Fraction."
"from_decimal` methods are no longer needed (:issue:`8294`):"
msgstr ""
"Liknande ändringar har gjorts i :class:`fractions.Fraction` så att "
"metoderna :meth:`~fractions.Fraction.from_float` och :meth:`~fractions."
"Fraction.from_decimal` inte längre behövs (:issue:`8294`):"

msgid ""
"Another useful change for the :mod:`decimal` module is that the :attr:"
"`Context.clamp <decimal.Context.clamp>` attribute is now public.  This is "
"useful in creating contexts that correspond to the decimal interchange "
"formats specified in IEEE 754 (see :issue:`8540`)."
msgstr ""
"En annan användbar förändring för modulen :mod:`decimal` är att attributet :"
"attr:`Context.clamp <decimal.Context.clamp>` nu är offentligt.  Detta är "
"användbart för att skapa kontexter som motsvarar de decimala utbytesformat "
"som anges i IEEE 754 (se :issue:`8540`)."

msgid "(Contributed by Mark Dickinson and Raymond Hettinger.)"
msgstr "(Bidrag från Mark Dickinson och Raymond Hettinger.)"

msgid "ftp"
msgstr "ftp"

msgid ""
"The :class:`ftplib.FTP` class now supports the context management protocol "
"to unconditionally consume :exc:`socket.error` exceptions and to close the "
"FTP connection when done::"
msgstr ""
"Klassen :class:`ftplib.FTP` har nu stöd för kontexthanteringsprotokollet för "
"att ovillkorligen konsumera :exc:`socket.error`-undantag och stänga FTP-"
"anslutningen när den är klar:"

msgid ""
">>> from ftplib import FTP\n"
">>> with FTP(\"ftp1.at.proftpd.org\") as ftp:\n"
"        ftp.login()\n"
"        ftp.dir()\n"
"\n"
"'230 Anonymous login ok, restrictions apply.'\n"
"dr-xr-xr-x   9 ftp      ftp           154 May  6 10:43 .\n"
"dr-xr-xr-x   9 ftp      ftp           154 May  6 10:43 ..\n"
"dr-xr-xr-x   5 ftp      ftp          4096 May  6 10:43 CentOS\n"
"dr-xr-xr-x   3 ftp      ftp            18 Jul 10  2008 Fedora"
msgstr ""
">>> from ftplib import FTP\n"
">>> with FTP(\"ftp1.at.proftpd.org\") as ftp:\n"
"        ftp.login()\n"
"        ftp.dir()\n"
"\n"
"'230 Anonymous login ok, restrictions apply.'\n"
"dr-xr-xr-x   9 ftp      ftp           154 May  6 10:43 .\n"
"dr-xr-xr-x   9 ftp      ftp           154 May  6 10:43 ..\n"
"dr-xr-xr-x   5 ftp      ftp          4096 May  6 10:43 CentOS\n"
"dr-xr-xr-x   3 ftp      ftp            18 Jul 10  2008 Fedora"

msgid ""
"Other file-like objects such as :class:`mmap.mmap` and :func:`fileinput."
"input` also grew auto-closing context managers::"
msgstr ""
"Andra filliknande objekt som :class:`mmap.mmap` och :func:`fileinput.input` "
"har också automatiskt stängande kontexthanterare::"

msgid ""
"with fileinput.input(files=('log1.txt', 'log2.txt')) as f:\n"
"    for line in f:\n"
"        process(line)"
msgstr ""
"med fileinput.input(files=('log1.txt', 'log2.txt')) som f:\n"
"    för rad i f:\n"
"        process(rad)"

msgid ""
"(Contributed by Tarek Ziadé and Giampaolo Rodolà in :issue:`4972`, and by "
"Georg Brandl in :issue:`8046` and :issue:`1286`.)"
msgstr ""
"(Bidrag från Tarek Ziadé och Giampaolo Rodolà i :issue:`4972`, och från "
"Georg Brandl i :issue:`8046` och :issue:`1286`.)"

msgid ""
"The :class:`~ftplib.FTP_TLS` class now accepts a *context* parameter, which "
"is a :class:`ssl.SSLContext` object allowing bundling SSL configuration "
"options, certificates and private keys into a single (potentially long-"
"lived) structure."
msgstr ""
"Klassen :class:`~ftplib.FTP_TLS` accepterar nu en *context*-parameter, som "
"är ett :class:`ssl.SSLContext`-objekt som gör det möjligt att samla SSL-"
"konfigurationsalternativ, certifikat och privata nycklar i en enda "
"(potentiellt långlivad) struktur."

msgid "(Contributed by Giampaolo Rodolà; :issue:`8806`.)"
msgstr "(Bidrag från Giampaolo Rodolà; :issue:`8806`.)"

msgid "popen"
msgstr "popen"

msgid ""
"The :func:`os.popen` and :func:`subprocess.Popen` functions now support :"
"keyword:`with` statements for auto-closing of the file descriptors."
msgstr ""
"Funktionerna :func:`os.popen` och :func:`subprocess.Popen` stöder nu :"
"keyword:`with`-satser för automatisk stängning av filbeskrivare."

msgid ""
"(Contributed by Antoine Pitrou and Brian Curtin in :issue:`7461` and :issue:"
"`10554`.)"
msgstr ""
"(Bidrag från Antoine Pitrou och Brian Curtin i :issue:`7461` och :issue:"
"`10554`.)"

msgid "select"
msgstr "välj"

msgid ""
"The :mod:`select` module now exposes a new, constant attribute, :const:"
"`~select.PIPE_BUF`, which gives the minimum number of bytes which are "
"guaranteed not to block when :func:`select.select` says a pipe is ready for "
"writing."
msgstr ""
"Modulen :mod:`select` har nu ett nytt, konstant attribut, :const:`~select."
"PIPE_BUF`, som anger det minsta antal byte som garanterat inte blockeras "
"när :func:`select.select` säger att en pipa är klar för skrivning."

msgid "(Available on Unix systems. Patch by Sébastien Sablé in :issue:`9862`)"
msgstr "(Tillgänglig på Unix-system. Patch av Sébastien Sablé i :issue:`9862`)"

msgid "gzip and zipfile"
msgstr "gzip och zipfil"

msgid ""
":class:`gzip.GzipFile` now implements the :class:`io.BufferedIOBase` :term:"
"`abstract base class` (except for ``truncate()``).  It also has a :meth:"
"`~gzip.GzipFile.peek` method and supports unseekable as well as zero-padded "
"file objects."
msgstr ""
":class:`gzip.GzipFile` implementerar nu :class:`io.BufferedIOBase` :term:"
"`abstrakt basklass` (förutom ``truncate()``)).  Den har också en :meth:"
"`~gzip.GzipFile.peek`-metod och stödjer filobjekt som inte kan tittas på och "
"som är nollfyllda."

msgid ""
"The :mod:`gzip` module also gains the :func:`~gzip.compress` and :func:"
"`~gzip.decompress` functions for easier in-memory compression and "
"decompression.  Keep in mind that text needs to be encoded as :class:`bytes` "
"before compressing and decompressing:"
msgstr ""
"Modulen :mod:`gzip` har även fått funktionerna :func:`~gzip.compress` och :"
"func:`~gzip.decompress` för enklare komprimering och dekomprimering i "
"minnet.  Tänk på att text måste kodas som :class:`bytes` innan komprimering "
"och dekomprimering:"

msgid ""
"(Contributed by Anand B. Pillai in :issue:`3488`; and by Antoine Pitrou, Nir "
"Aides and Brian Curtin in :issue:`9962`, :issue:`1675951`, :issue:`7471` "
"and :issue:`2846`.)"
msgstr ""
"(Bidrag från Anand B. Pillai i :issue:`3488`; och av Antoine Pitrou, Nir "
"Aides och Brian Curtin i :issue:`9962`, :issue:`1675951`, :issue:`7471` och :"
"issue:`2846`.)"

msgid ""
"Also, the :class:`zipfile.ZipExtFile <zipfile.ZipFile.open>` class was "
"reworked internally to represent files stored inside an archive.  The new "
"implementation is significantly faster and can be wrapped in an :class:`io."
"BufferedReader` object for more speedups.  It also solves an issue where "
"interleaved calls to *read* and *readline* gave the wrong results."
msgstr ""
"Klassen :class:`zipfile.ZipExtFile <zipfile.ZipFile.open>` har också "
"omarbetats internt för att representera filer som lagras i ett arkiv.  Den "
"nya implementeringen är betydligt snabbare och kan förpackas i ett :class:"
"`io.BufferedReader`-objekt för att öka hastigheten ytterligare.  Den löser "
"också ett problem där sammanflätade anrop till *read* och *readline* gav fel "
"resultat."

msgid "(Patch submitted by Nir Aides in :issue:`7610`.)"
msgstr "(Patch inlämnad av Nir Aides i :issue:`7610`.)"

msgid "tarfile"
msgstr "tarfil"

msgid ""
"The :class:`~tarfile.TarFile` class can now be used as a context manager.  "
"In addition, its :meth:`~tarfile.TarFile.add` method has a new option, "
"*filter*, that controls which files are added to the archive and allows the "
"file metadata to be edited."
msgstr ""
"Klassen :class:`~tarfile.TarFile` kan nu användas som en kontexthanterare.  "
"Dessutom har dess metod :meth:`~tarfile.TarFile.add` ett nytt alternativ, "
"*filter*, som styr vilka filer som läggs till i arkivet och gör det möjligt "
"att redigera filens metadata."

msgid ""
"The new *filter* option replaces the older, less flexible *exclude* "
"parameter which is now deprecated.  If specified, the optional *filter* "
"parameter needs to be a :term:`keyword argument`.  The user-supplied filter "
"function accepts a :class:`~tarfile.TarInfo` object and returns an updated :"
"class:`~tarfile.TarInfo` object, or if it wants the file to be excluded, the "
"function can return ``None``::"
msgstr ""
"Det nya alternativet *filter* ersätter den äldre, mindre flexibla parametern "
"*exclude* som nu är föråldrad.  Om den anges måste den valfria *filter*-"
"parametern vara en :term:`nyckelordsargument`.  Den användartillhandahållna "
"filterfunktionen accepterar ett :class:`~tarfile.TarInfo`-objekt och "
"returnerar ett uppdaterat :class:`~tarfile.TarInfo`-objekt, eller om den "
"vill att filen ska uteslutas kan funktionen returnera ``None``::"

msgid ""
">>> import tarfile, glob\n"
"\n"
">>> def myfilter(tarinfo):\n"
"...     if tarinfo.isfile():             # only save real files\n"
"...         tarinfo.uname = 'monty'      # redact the user name\n"
"...         return tarinfo\n"
"\n"
">>> with tarfile.open(name='myarchive.tar.gz', mode='w:gz') as tf:\n"
"...     for filename in glob.glob('*.txt'):\n"
"...         tf.add(filename, filter=myfilter)\n"
"...     tf.list()\n"
"-rw-r--r-- monty/501        902 2011-01-26 17:59:11 annotations.txt\n"
"-rw-r--r-- monty/501        123 2011-01-26 17:59:11 general_questions.txt\n"
"-rw-r--r-- monty/501       3514 2011-01-26 17:59:11 prion.txt\n"
"-rw-r--r-- monty/501        124 2011-01-26 17:59:11 py_todo.txt\n"
"-rw-r--r-- monty/501       1399 2011-01-26 17:59:11 semaphore_notes.txt"
msgstr ""
">>> import tarfile, glob\n"
"\n"
">>> def myfilter(tarinfo):\n"
"... if tarinfo.isfile():             # spara bara riktiga filer\n"
"... tarinfo.uname = 'monty' # redigera användarnamnet\n"
"... returnera tarinfo\n"
"\n"
">>> med tarfile.open(name='myarchive.tar.gz', mode='w:gz') som tf:\n"
"... för filnamn i glob.glob('*.txt'):\n"
"... tf.add(filnamn, filter=mittfilter)\n"
"... tf.list()\n"
"-rw-r--r-- monty/501 902 2011-01-26 17:59:11 annotations.txt\n"
"-rw-r--r-- monty/501 123 2011-01-26 17:59:11 allmänna_frågor.txt\n"
"-rw-r--r-- monty/501 3514 2011-01-26 17:59:11 prion.txt\n"
"-rw-r--r-- monty/501 124 2011-01-26 17:59:11 py_todo.txt\n"
"-rw-r--r-- monty/501 1399 2011-01-26 17:59:11 semaphore_notes.txt"

msgid ""
"(Proposed by Tarek Ziadé and implemented by Lars Gustäbel in :issue:`6856`.)"
msgstr ""
"(Föreslagen av Tarek Ziadé och implementerad av Lars Gustäbel i :issue:"
"`6856`.)"

msgid "hashlib"
msgstr "hashlib"

msgid ""
"The :mod:`hashlib` module has two new constant attributes listing the "
"hashing algorithms guaranteed to be present in all implementations and those "
"available on the current implementation::"
msgstr ""
"Modulen :mod:`hashlib` har två nya konstanta attribut som listar de "
"hashingalgoritmer som garanterat finns i alla implementationer och de som är "
"tillgängliga i den aktuella implementationen::"

msgid ""
">>> import hashlib\n"
"\n"
">>> hashlib.algorithms_guaranteed\n"
"{'sha1', 'sha224', 'sha384', 'sha256', 'sha512', 'md5'}\n"
"\n"
">>> hashlib.algorithms_available\n"
"{'md2', 'SHA256', 'SHA512', 'dsaWithSHA', 'mdc2', 'SHA224', 'MD4', "
"'sha256',\n"
"'sha512', 'ripemd160', 'SHA1', 'MDC2', 'SHA', 'SHA384', 'MD2',\n"
"'ecdsa-with-SHA1','md4', 'md5', 'sha1', 'DSA-SHA', 'sha224',\n"
"'dsaEncryption', 'DSA', 'RIPEMD160', 'sha', 'MD5', 'sha384'}"
msgstr ""
">>> import hashlib\n"
"\n"
">>> hashlib.algorithms_guaranteed\n"
"{'sha1', 'sha224', 'sha384', 'sha256', 'sha512', 'md5'}\n"
"\n"
">>> hashlib.algorithms_available\n"
"{'md2', 'SHA256', 'SHA512', 'dsaWithSHA', 'mdc2', 'SHA224', 'MD4', "
"'sha256',\n"
"'sha512', 'ripemd160', 'SHA1', 'MDC2', 'SHA', 'SHA384', 'MD2',\n"
"'ecdsa-with-SHA1','md4', 'md5', 'sha1', 'DSA-SHA', 'sha224',\n"
"'dsaEncryption', 'DSA', 'RIPEMD160', 'sha', 'MD5', 'sha384'}"

msgid "(Suggested by Carl Chenet in :issue:`7418`.)"
msgstr "(Föreslagen av Carl Chenet i :issue:`7418`.)"

msgid "ast"
msgstr "ast"

msgid ""
"The :mod:`ast` module has a wonderful a general-purpose tool for safely "
"evaluating expression strings using the Python literal syntax.  The :func:"
"`ast.literal_eval` function serves as a secure alternative to the builtin :"
"func:`eval` function which is easily abused.  Python 3.2 adds :class:`bytes` "
"and :class:`set` literals to the list of supported types: strings, bytes, "
"numbers, tuples, lists, dicts, sets, booleans, and ``None``."
msgstr ""
"Modulen :mod:`ast` har ett underbart allmänt verktyg för säker utvärdering "
"av uttryckssträngar med Pythons litterala syntax.  Funktionen :func:`ast."
"literal_eval` fungerar som ett säkert alternativ till den inbyggda "
"funktionen :func:`eval` som lätt kan missbrukas.  Python 3.2 lägger till :"
"class:`bytes` och :class:`set` literaler till listan över typer som stöds: "
"strängar, bytes, tal, tupler, listor, dicts, set, booleaner och ``None``."

msgid ""
">>> from ast import literal_eval\n"
"\n"
">>> request = \"{'req': 3, 'func': 'pow', 'args': (2, 0.5)}\"\n"
">>> literal_eval(request)\n"
"{'args': (2, 0.5), 'req': 3, 'func': 'pow'}\n"
"\n"
">>> request = \"os.system('do something harmful')\"\n"
">>> literal_eval(request)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"ValueError: malformed node or string: <_ast.Call object at 0x101739a10>"
msgstr ""
">>> from ast import literal_eval\n"
"\n"
">>> request = \"{'req': 3, 'func': 'pow', 'args': (2, 0.5)}\"\n"
">>> literal_eval(request)\n"
"{'args': (2, 0.5), 'req': 3, 'func': 'pow'}\n"
"\n"
">>> request = \"os.system('do something harmful')\"\n"
">>> literal_eval(request)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"ValueError: malformed node or string: <_ast.Call object at 0x101739a10>"

msgid "(Implemented by Benjamin Peterson and Georg Brandl.)"
msgstr "(Implementerat av Benjamin Peterson och Georg Brandl.)"

msgid "os"
msgstr "os"

msgid ""
"Different operating systems use various encodings for filenames and "
"environment variables.  The :mod:`os` module provides two new functions, :"
"func:`~os.fsencode` and :func:`~os.fsdecode`, for encoding and decoding "
"filenames:"
msgstr ""
"Olika operativsystem använder olika kodningar för filnamn och "
"miljövariabler.  Modulen :mod:`os` tillhandahåller två nya funktioner, :func:"
"`~os.fsencode` och :func:`~os.fsdecode`, för kodning och avkodning av "
"filnamn:"

msgid ""
"Some operating systems allow direct access to encoded bytes in the "
"environment.  If so, the :const:`os.supports_bytes_environ` constant will be "
"true."
msgstr ""
"Vissa operativsystem tillåter direkt åtkomst till kodade bytes i miljön.  Om "
"så är fallet kommer konstanten :const:`os.supports_bytes_environ` att vara "
"true."

msgid ""
"For direct access to encoded environment variables (if available), use the "
"new :func:`os.getenvb` function or use :data:`os.environb` which is a bytes "
"version of :data:`os.environ`."
msgstr ""
"För direktåtkomst till kodade miljövariabler (om sådana finns), använd den "
"nya funktionen :func:`os.getenvb` eller använd :data:`os.environb` som är en "
"bytesversion av :data:`os.environ`."

msgid "(Contributed by Victor Stinner.)"
msgstr "(Bidrag från Victor Stinner.)"

msgid "shutil"
msgstr "shutil"

msgid "The :func:`shutil.copytree` function has two new options:"
msgstr "Funktionen :func:`shutil.copytree` har fått två nya alternativ:"

msgid ""
"*ignore_dangling_symlinks*: when ``symlinks=False`` so that the function "
"copies a file pointed to by a symlink, not the symlink itself. This option "
"will silence the error raised if the file doesn't exist."
msgstr ""
"*ignore_dangling_symlinks*: när ``symlinks=False`` så att funktionen "
"kopierar en fil som en symlänk pekar på, inte själva symlänken. Detta "
"alternativ kommer att tysta felet som uppstår om filen inte existerar."

msgid ""
"*copy_function*: is a callable that will be used to copy files. :func:"
"`shutil.copy2` is used by default."
msgstr ""
"*copy_function*: är en anropbar funktion som kommer att användas för att "
"kopiera filer. :func:`shutil.copy2` används som standard."

msgid "(Contributed by Tarek Ziadé.)"
msgstr "(Bidrag från Tarek Ziadé.)"

msgid ""
"In addition, the :mod:`shutil` module now supports :ref:`archiving "
"operations <archiving-operations>` for zipfiles, uncompressed tarfiles, "
"gzipped tarfiles, and bzipped tarfiles.  And there are functions for "
"registering additional archiving file formats (such as xz compressed "
"tarfiles or custom formats)."
msgstr ""
"Dessutom har modulen :mod:`shutil` nu stöd för :ref:`archiving operations "
"<archiving-operations>` för zipfiler, okomprimerade tarfiler, gzippade "
"tarfiler och bzippade tarfiler.  Det finns även funktioner för att "
"registrera ytterligare filformat för arkivering (t.ex. xz-komprimerade "
"tarfiler eller anpassade format)."

msgid ""
"The principal functions are :func:`~shutil.make_archive` and :func:`~shutil."
"unpack_archive`.  By default, both operate on the current directory (which "
"can be set by :func:`os.chdir`) and on any sub-directories. The archive "
"filename needs to be specified with a full pathname.  The archiving step is "
"non-destructive (the original files are left unchanged)."
msgstr ""
"De viktigaste funktionerna är :func:`~shutil.make_archive` och :func:"
"`~shutil.unpack_archive`.  Som standard arbetar båda i den aktuella "
"katalogen (som kan ställas in med :func:`os.chdir`) och i alla "
"underkataloger. Arkivets filnamn måste specificeras med ett fullständigt "
"sökvägsnamn.  Arkiveringssteget är icke-destruktivt (originalfilerna lämnas "
"oförändrade)."

msgid ""
">>> import shutil, pprint\n"
"\n"
">>> os.chdir('mydata')  # change to the source directory\n"
">>> f = shutil.make_archive('/var/backup/mydata',\n"
"...                         'zip')      # archive the current directory\n"
">>> f                                   # show the name of archive\n"
"'/var/backup/mydata.zip'\n"
">>> os.chdir('tmp')                     # change to an unpacking\n"
">>> shutil.unpack_archive('/var/backup/mydata.zip')  # recover the data\n"
"\n"
">>> pprint.pprint(shutil.get_archive_formats())  # display known formats\n"
"[('bztar', \"bzip2'ed tar-file\"),\n"
" ('gztar', \"gzip'ed tar-file\"),\n"
" ('tar', 'uncompressed tar file'),\n"
" ('zip', 'ZIP file')]\n"
"\n"
">>> shutil.register_archive_format(     # register a new archive format\n"
"...     name='xz',\n"
"...     function=xz.compress,           # callable archiving function\n"
"...     extra_args=[('level', 8)],      # arguments to the function\n"
"...     description='xz compression'\n"
"... )"
msgstr ""
">>> import shutil, pprint\n"
"\n"
">>> os.chdir('mydata') # byt till källkatalogen\n"
">>> f = shutil.make_archive('/var/backup/mydata',\n"
"...                         'zip') # arkivera den aktuella katalogen\n"
">>> f # visa namnet på arkivet\n"
"'/var/backup/mydata.zip'\n"
">>> os.chdir('tmp') # byt till en uppackning\n"
">>> shutil.unpack_archive('/var/backup/mydata.zip') # återställ data\n"
"\n"
">>> pprint.pprint(shutil.get_archive_formats()) # visa kända format\n"
"[('bztar', \"bzip2'ed tar-fil\"),\n"
" ('gztar', \"gzip'ed tar-fil\"),\n"
" ('tar', 'okomprimerad tar-fil'),\n"
" ('zip', 'ZIP-fil')]\n"
"\n"
">>> shutil.register_archive_format( # registrera ett nytt arkivformat\n"
"... namn='xz',\n"
"... function=xz.compress, # anropsbar arkiveringsfunktion\n"
"... extra_args=[('level', 8)], # argument till funktionen\n"
"... description='xz-komprimering'\n"
"... )"

msgid "sqlite3"
msgstr "sqlite3"

msgid ""
"The :mod:`sqlite3` module was updated to pysqlite version 2.6.0.  It has two "
"new capabilities."
msgstr ""
"Modulen :mod:`sqlite3` har uppdaterats till pysqlite version 2.6.0.  Den har "
"två nya funktioner."

msgid ""
"The :attr:`!sqlite3.Connection.in_transit` attribute is true if there is an "
"active transaction for uncommitted changes."
msgstr ""
"Attributet :attr:`!sqlite3.Connection.in_transit` är sant om det finns en "
"aktiv transaktion för ändringar som inte har bekräftats."

msgid ""
"The :meth:`sqlite3.Connection.enable_load_extension` and :meth:`sqlite3."
"Connection.load_extension` methods allows you to load SQLite extensions from "
"\".so\" files.  One well-known extension is the fulltext-search extension "
"distributed with SQLite."
msgstr ""
"Med metoderna :meth:`sqlite3.Connection.enable_load_extension` och :meth:"
"`sqlite3.Connection.load_extension` kan du ladda SQLite-tillägg från \".so\"-"
"filer.  Ett välkänt tillägg är fulltextsökningstillägget som distribueras "
"med SQLite."

msgid "(Contributed by R. David Murray and Shashwat Anand; :issue:`8845`.)"
msgstr "(Bidrag från R. David Murray och Shashwat Anand; :issue:`8845`.)"

msgid "html"
msgstr "html"

msgid ""
"A new :mod:`html` module was introduced with only a single function, :func:"
"`~html.escape`, which is used for escaping reserved characters from HTML "
"markup:"
msgstr ""
"En ny :mod:`html`-modul introducerades med endast en enda funktion, :func:"
"`~html.escape`, som används för att undkomma reserverade tecken från HTML-"
"markup:"

msgid "socket"
msgstr "kortplats"

msgid "The :mod:`socket` module has two new improvements."
msgstr "Modulen :mod:`socket` har fått två nya förbättringar."

msgid ""
"Socket objects now have a :meth:`~socket.socket.detach` method which puts "
"the socket into closed state without actually closing the underlying file "
"descriptor.  The latter can then be reused for other purposes. (Added by "
"Antoine Pitrou; :issue:`8524`.)"
msgstr ""
"Socket-objekt har nu en :meth:`~socket.socket.detach`-metod som sätter "
"sockeln i stängt tillstånd utan att faktiskt stänga den underliggande "
"filbeskrivaren.  Den senare kan sedan återanvändas för andra ändamål. "
"(Tillagd av Antoine Pitrou; :issue:`8524`.)"

msgid ""
":func:`socket.create_connection` now supports the context management "
"protocol to unconditionally consume :exc:`socket.error` exceptions and to "
"close the socket when done. (Contributed by Giampaolo Rodolà; :issue:`9794`.)"
msgstr ""
":func:`socket.create_connection` stöder nu kontexthanteringsprotokollet för "
"att ovillkorligen konsumera :exc:`socket.error` undantag och för att stänga "
"uttaget när det är klart. (Bidrag från Giampaolo Rodolà; :issue:`9794`.)"

msgid "ssl"
msgstr "ssl"

msgid ""
"The :mod:`ssl` module added a number of features to satisfy common "
"requirements for secure (encrypted, authenticated) internet connections:"
msgstr ""
"Modulen :mod:`ssl` lade till ett antal funktioner för att uppfylla vanliga "
"krav på säkra (krypterade, autentiserade) Internetanslutningar:"

msgid ""
"A new class, :class:`~ssl.SSLContext`, serves as a container for persistent "
"SSL data, such as protocol settings, certificates, private keys, and various "
"other options. It includes a :meth:`~ssl.SSLContext.wrap_socket` for "
"creating an SSL socket from an SSL context."
msgstr ""
"En ny klass, :class:`~ssl.SSLContext`, fungerar som en behållare för "
"beständig SSL-data, t.ex. protokollinställningar, certifikat, privata "
"nycklar och olika andra alternativ. Den innehåller en :meth:`~ssl.SSLContext."
"wrap_socket` för att skapa ett SSL-uttag från en SSL-kontext."

msgid ""
"A new function, :func:`!ssl.match_hostname`, supports server identity "
"verification for higher-level protocols by implementing the rules of HTTPS "
"(from :rfc:`2818`) which are also suitable for other protocols."
msgstr ""
"En ny funktion, :func:`!ssl.match_hostname`, stöder verifiering av "
"serveridentitet för protokoll på högre nivå genom att implementera reglerna "
"för HTTPS (från :rfc:`2818`) som också är lämpliga för andra protokoll."

msgid ""
"The :func:`ssl.wrap_socket() <ssl.SSLContext.wrap_socket>` constructor "
"function now takes a *ciphers* argument.  The *ciphers* string lists the "
"allowed encryption algorithms using the format described in the `OpenSSL "
"documentation <https://docs.openssl.org/1.0.2/man1/ciphers/#cipher-list-"
"format>`__."
msgstr ""
"Konstruktorfunktionen :func:`ssl.wrap_socket() <ssl.SSLContext.wrap_socket>` "
"tar nu ett *ciphers*-argument.  Strängen *ciphers* listar de tillåtna "
"krypteringsalgoritmerna i det format som beskrivs i `OpenSSL-dokumentationen "
"<https://docs.openssl.org/1.0.2/man1/ciphers/#cipher-list-format>`__."

msgid ""
"When linked against recent versions of OpenSSL, the :mod:`ssl` module now "
"supports the Server Name Indication extension to the TLS protocol, allowing "
"multiple \"virtual hosts\" using different certificates on a single IP port. "
"This extension is only supported in client mode, and is activated by passing "
"the *server_hostname* argument to :meth:`ssl.SSLContext.wrap_socket`."
msgstr ""
"När modulen :mod:`ssl` länkas mot de senaste versionerna av OpenSSL stöder "
"den nu tillägget Server Name Indication till TLS-protokollet, vilket "
"möjliggör flera \"virtuella värdar\" som använder olika certifikat på en "
"enda IP-port. Detta tillägg stöds endast i klientläge och aktiveras genom "
"att skicka argumentet *server_hostname* till :meth:`ssl.SSLContext."
"wrap_socket`."

msgid ""
"Various options have been added to the :mod:`ssl` module, such as :data:"
"`~ssl.OP_NO_SSLv2` which disables the insecure and obsolete SSLv2 protocol."
msgstr ""
"Olika alternativ har lagts till i modulen :mod:`ssl`, t.ex. :data:`~ssl."
"OP_NO_SSLv2` som inaktiverar det osäkra och föråldrade SSLv2-protokollet."

msgid ""
"The extension now loads all the OpenSSL ciphers and digest algorithms.  If "
"some SSL certificates cannot be verified, they are reported as an \"unknown "
"algorithm\" error."
msgstr ""
"Tillägget laddar nu alla OpenSSL-chiffer och digest-algoritmer.  Om vissa "
"SSL-certifikat inte kan verifieras rapporteras de som ett \"okänd algoritm\"-"
"fel."

msgid ""
"The version of OpenSSL being used is now accessible using the module "
"attributes :const:`ssl.OPENSSL_VERSION` (a string), :const:`ssl."
"OPENSSL_VERSION_INFO` (a 5-tuple), and :const:`ssl.OPENSSL_VERSION_NUMBER` "
"(an integer)."
msgstr ""
"Den version av OpenSSL som används är nu tillgänglig med hjälp av "
"modulattributen :const:`ssl.OPENSSL_VERSION` (en sträng), :const:`ssl."
"OPENSSL_VERSION_INFO` (en 5-tupel) och :const:`ssl.OPENSSL_VERSION_NUMBER` "
"(ett heltal)."

msgid ""
"(Contributed by Antoine Pitrou in :issue:`8850`, :issue:`1589`, :issue:"
"`8322`, :issue:`5639`, :issue:`4870`, :issue:`8484`, and :issue:`8321`.)"
msgstr ""
"(Bidrag från Antoine Pitrou i :issue:`8850`, :issue:`1589`, :issue:`8322`, :"
"issue:`5639`, :issue:`4870`, :issue:`8484` och :issue:`8321`.)"

msgid "nntp"
msgstr "nntp"

msgid ""
"The :mod:`!nntplib` module has a revamped implementation with better bytes "
"and text semantics as well as more practical APIs.  These improvements break "
"compatibility with the nntplib version in Python 3.1, which was partly "
"dysfunctional in itself."
msgstr ""
"Modulen :mod:`!nntplib` har en omarbetad implementation med bättre bytes- "
"och textsemantik samt mer praktiska API:er.  Dessa förbättringar bryter "
"kompatibiliteten med nntplib-versionen i Python 3.1, som i sig själv var "
"delvis dysfunktionell."

msgid ""
"Support for secure connections through both implicit (using :class:`!nntplib."
"NNTP_SSL`) and explicit (using :meth:`!nntplib.NNTP.starttls`) TLS has also "
"been added."
msgstr ""
"Stöd för säkra anslutningar genom både implicit (med :class:`!nntplib."
"NNTP_SSL`) och explicit (med :meth:`!nntplib.NNTP.starttls`) TLS har också "
"lagts till."

msgid ""
"(Contributed by Antoine Pitrou in :issue:`9360` and Andrew Vant in :issue:"
"`1926`.)"
msgstr ""
"(Bidrag från Antoine Pitrou i :issue:`9360` och Andrew Vant i :issue:`1926`.)"

msgid "certificates"
msgstr "certifikat"

msgid ""
":class:`http.client.HTTPSConnection`, :class:`urllib.request.HTTPSHandler` "
"and :func:`urllib.request.urlopen` now take optional arguments to allow for "
"server certificate checking against a set of Certificate Authorities, as "
"recommended in public uses of HTTPS."
msgstr ""
":class:`http.client.HTTPSConnection`, :class:`urllib.request.HTTPSHandler` "
"och :func:`urllib.request.urlopen` tar nu valfria argument för att "
"möjliggöra kontroll av servercertifikat mot en uppsättning "
"certifikatutfärdare, vilket rekommenderas i offentliga användningar av HTTPS."

msgid "(Added by Antoine Pitrou, :issue:`9003`.)"
msgstr "(Tillagd av Antoine Pitrou, :issue:`9003`.)"

msgid "imaplib"
msgstr "imaplib"

msgid ""
"Support for explicit TLS on standard IMAP4 connections has been added "
"through the new :mod:`imaplib.IMAP4.starttls` method."
msgstr ""
"Stöd för explicit TLS på standard IMAP4-anslutningar har lagts till genom "
"den nya metoden :mod:`imaplib.IMAP4.starttls`."

msgid "(Contributed by Lorenzo M. Catucci and Antoine Pitrou, :issue:`4471`.)"
msgstr "(Bidrag från Lorenzo M. Catucci och Antoine Pitrou, :issue:`4471`.)"

msgid "http.client"
msgstr "http.klient"

msgid ""
"There were a number of small API improvements in the :mod:`http.client` "
"module. The old-style HTTP 0.9 simple responses are no longer supported and "
"the *strict* parameter is deprecated in all classes."
msgstr ""
"Det har gjorts ett antal små API-förbättringar i modulen :mod:`http.client`. "
"De gamla enkla HTTP 0.9-svaren stöds inte längre och parametern *strict* är "
"avskriven i alla klasser."

msgid ""
"The :class:`~http.client.HTTPConnection` and :class:`~http.client."
"HTTPSConnection` classes now have a *source_address* parameter for a (host, "
"port) tuple indicating where the HTTP connection is made from."
msgstr ""
"Klasserna :class:`~http.client.HTTPConnection` och :class:`~http.client."
"HTTPSConnection` har nu en *source_address*-parameter för en (host, port)-"
"tupel som anger varifrån HTTP-anslutningen görs."

msgid ""
"Support for certificate checking and HTTPS virtual hosts were added to :"
"class:`~http.client.HTTPSConnection`."
msgstr ""
"Stöd för certifikatkontroll och virtuella HTTPS-värdar har lagts till i :"
"class:`~http.client.HTTPSConnection`."

msgid ""
"The :meth:`~http.client.HTTPConnection.request` method on connection objects "
"allowed an optional *body* argument so that a :term:`file object` could be "
"used to supply the content of the request.  Conveniently, the *body* "
"argument now also accepts an :term:`iterable` object so long as it includes "
"an explicit ``Content-Length`` header.  This extended interface is much more "
"flexible than before."
msgstr ""
"Metoden :meth:`~http.client.HTTPConnection.request` på anslutningsobjekt "
"tillät ett valfritt *body*-argument så att ett :term:`file-objekt` kunde "
"användas för att tillhandahålla innehållet i begäran.  Lämpligt nog "
"accepterar *body*-argumentet nu också ett :term:`iterable`-objekt så länge "
"det innehåller en explicit ``Content-Length``-rubrik.  Detta utökade "
"gränssnitt är mycket mer flexibelt än tidigare."

msgid ""
"To establish an HTTPS connection through a proxy server, there is a new :"
"meth:`~http.client.HTTPConnection.set_tunnel` method that sets the host and "
"port for HTTP Connect tunneling."
msgstr ""
"För att upprätta en HTTPS-anslutning via en proxyserver finns det en ny "
"metod :meth:`~http.client.HTTPConnection.set_tunnel` som anger värd och port "
"för HTTP Connect-tunnel."

msgid ""
"To match the behavior of :mod:`http.server`, the HTTP client library now "
"also encodes headers with ISO-8859-1 (Latin-1) encoding.  It was already "
"doing that for incoming headers, so now the behavior is consistent for both "
"incoming and outgoing traffic. (See work by Armin Ronacher in :issue:"
"`10980`.)"
msgstr ""
"För att matcha beteendet hos :mod:`http.server` kodar HTTP-klientbiblioteket "
"nu även headers med ISO-8859-1 (Latin-1)-kodning.  Det gjorde det redan för "
"inkommande rubriker, så nu är beteendet konsekvent för både inkommande och "
"utgående trafik. (Se arbete av Armin Ronacher i :issue:`10980`.)"

msgid "unittest"
msgstr "unittest"

msgid ""
"The unittest module has a number of improvements supporting test discovery "
"for packages, easier experimentation at the interactive prompt, new testcase "
"methods, improved diagnostic messages for test failures, and better method "
"names."
msgstr ""
"Modulen unittest har ett antal förbättringar som stöder testupptäckt för "
"paket, enklare experimentering vid den interaktiva prompten, nya "
"testfallsmetoder, förbättrade diagnosmeddelanden för testfel och bättre "
"metodnamn."

msgid ""
"The command-line call ``python -m unittest`` can now accept file paths "
"instead of module names for running specific tests (:issue:`10620`).  The "
"new test discovery can find tests within packages, locating any test "
"importable from the top-level directory.  The top-level directory can be "
"specified with the ``-t`` option, a pattern for matching files with ``-p``, "
"and a directory to start discovery with ``-s``:"
msgstr ""
"Kommandoradsanropet ``python -m unittest`` kan nu acceptera filvägar "
"istället för modulnamn för att köra specifika tester (:issue:`10620`).  Den "
"nya testupptäckten kan hitta tester inom paket och lokalisera alla tester "
"som kan importeras från toppnivåkatalogen.  Toppnivåkatalogen kan anges med "
"alternativet ``-t``, ett mönster för att matcha filer med ``-p`` och en "
"katalog för att starta upptäckten med ``-s``:"

msgid "$ python -m unittest discover -s my_proj_dir -p _test.py"
msgstr "$ python -m unittest discover -s min_proj_dir -p _test.py"

msgid "(Contributed by Michael Foord.)"
msgstr "(Bidrag från Michael Foord.)"

msgid ""
"Experimentation at the interactive prompt is now easier because the :class:"
"`unittest.TestCase` class can now be instantiated without arguments:"
msgstr ""
"Det är nu enklare att experimentera i den interaktiva prompten eftersom "
"klassen :class:`unittest.TestCase` nu kan instansieras utan argument:"

msgid ""
"The :mod:`unittest` module has two new methods, :meth:`~unittest.TestCase."
"assertWarns` and :meth:`~unittest.TestCase.assertWarnsRegex` to verify that "
"a given warning type is triggered by the code under test::"
msgstr ""
"Modulen :mod:`unittest` har två nya metoder, :meth:`~unittest.TestCase."
"assertWarns` och :meth:`~unittest.TestCase.assertWarnsRegex` för att "
"verifiera att en viss typ av varning utlöses av den kod som testas::"

msgid ""
"with self.assertWarns(DeprecationWarning):\n"
"    legacy_function('XYZ')"
msgstr ""
"med self.assertWarns(DeprecationWarning):\n"
"    legacy_function('XYZ')"

msgid "(Contributed by Antoine Pitrou, :issue:`9754`.)"
msgstr "(Bidrag från Antoine Pitrou, :issue:`9754`.)"

msgid ""
"Another new method, :meth:`~unittest.TestCase.assertCountEqual` is used to "
"compare two iterables to determine if their element counts are equal "
"(whether the same elements are present with the same number of occurrences "
"regardless of order)::"
msgstr ""
"En annan ny metod, :meth:`~unittest.TestCase.assertCountEqual` används för "
"att jämföra två iterabler för att avgöra om deras elementantal är lika (om "
"samma element finns med samma antal förekomster oavsett ordning)::"

msgid ""
"def test_anagram(self):\n"
"    self.assertCountEqual('algorithm', 'logarithm')"
msgstr ""
"def test_anagram(self):\n"
"    self.assertCountEqual('algoritm', 'logaritm')"

msgid ""
"A principal feature of the unittest module is an effort to produce "
"meaningful diagnostics when a test fails.  When possible, the failure is "
"recorded along with a diff of the output.  This is especially helpful for "
"analyzing log files of failed test runs. However, since diffs can sometime "
"be voluminous, there is a new :attr:`~unittest.TestCase.maxDiff` attribute "
"that sets maximum length of diffs displayed."
msgstr ""
"En av de viktigaste funktionerna i modulen unittest är att skapa meningsfull "
"diagnostik när ett test misslyckas.  När det är möjligt registreras "
"misslyckandet tillsammans med en diff av utdata.  Detta är särskilt "
"användbart vid analys av loggfiler för misslyckade testkörningar. Men "
"eftersom diffar ibland kan vara omfattande finns det ett nytt attribut :attr:"
"`~unittest.TestCase.maxDiff` som anger maximal längd på de diffar som visas."

msgid ""
"In addition, the method names in the module have undergone a number of clean-"
"ups."
msgstr "Dessutom har metodnamnen i modulen genomgått ett antal upprensningar."

msgid ""
"For example, :meth:`~unittest.TestCase.assertRegex` is the new name for :"
"meth:`!assertRegexpMatches` which was misnamed because the test uses :func:"
"`re.search`, not :func:`re.match`.  Other methods using regular expressions "
"are now named using short form \"Regex\" in preference to \"Regexp\" -- this "
"matches the names used in other unittest implementations, matches Python's "
"old name for the :mod:`re` module, and it has unambiguous camel-casing."
msgstr ""
"Till exempel är :meth:`~unittest.TestCase.assertRegex` det nya namnet för :"
"meth:`!assertRegexpMatches` som var felaktigt namngivet eftersom testet "
"använder :func:`re.search`, inte :func:`re.match`.  Andra metoder som "
"använder reguljära uttryck namnges nu med kortformen \"Regex\" istället för "
"\"Regexp\" -- detta matchar namnen som används i andra unittest-"
"implementationer, matchar Pythons gamla namn för :mod:`re`-modulen och har "
"entydig camel-casing."

msgid "(Contributed by Raymond Hettinger and implemented by Ezio Melotti.)"
msgstr "(Bidrag från Raymond Hettinger och implementerat av Ezio Melotti.)"

msgid ""
"To improve consistency, some long-standing method aliases are being "
"deprecated in favor of the preferred names:"
msgstr ""
"För att förbättra konsekvensen kommer vissa gamla metodalias att tas bort "
"till förmån för de föredragna namnen:"

msgid "Old Name"
msgstr "Gammalt namn"

msgid "Preferred Name"
msgstr "Önskat namn"

msgid ":meth:`!assert_`"
msgstr ":meth:`!assert_``"

msgid ":meth:`.assertTrue`"
msgstr ":meth:`.assertTrue`"

msgid ":meth:`!assertEquals`"
msgstr ":meth:`!assertEquals`"

msgid ":meth:`.assertEqual`"
msgstr ":meth:`.assertEqual`"

msgid ":meth:`!assertNotEquals`"
msgstr ":meth:`!assertNotEquals`"

msgid ":meth:`.assertNotEqual`"
msgstr ":meth:`.assertNotEqual`"

msgid ":meth:`!assertAlmostEquals`"
msgstr ":meth:`!assertAlmostEquals`"

msgid ":meth:`.assertAlmostEqual`"
msgstr ":meth:`.assertAlmostEqual`"

msgid ":meth:`!assertNotAlmostEquals`"
msgstr ":meth:`!assertNotAlmostEquals`"

msgid ":meth:`.assertNotAlmostEqual`"
msgstr ":meth:`.assertNotAlmostEqual`"

msgid ""
"Likewise, the ``TestCase.fail*`` methods deprecated in Python 3.1 are "
"expected to be removed in Python 3.3."
msgstr ""
"På samma sätt förväntas metoderna ``TestCase.fail*`` som är föråldrade i "
"Python 3.1 att tas bort i Python 3.3."

msgid "(Contributed by Ezio Melotti; :issue:`9424`.)"
msgstr "(Bidrag från Ezio Melotti; :issue:`9424`.)"

msgid ""
"The :meth:`!assertDictContainsSubset` method was deprecated because it was "
"misimplemented with the arguments in the wrong order.  This created hard-to-"
"debug optical illusions where tests like ``TestCase()."
"assertDictContainsSubset({'a':1, 'b':2}, {'a':1})`` would fail."
msgstr ""
"Metoden :meth:`!assertDictContainsSubset` utrangerades eftersom den var "
"felimplementerad med argumenten i fel ordning.  Detta skapade "
"svårdebuggerade optiska illusioner där tester som ``TestCase()."
"assertDictContainsSubset({'a':1, 'b':2}, {'a':1})`` skulle misslyckas."

msgid "random"
msgstr "slumpvis"

msgid ""
"The integer methods in the :mod:`random` module now do a better job of "
"producing uniform distributions.  Previously, they computed selections with "
"``int(n*random())`` which had a slight bias whenever *n* was not a power of "
"two. Now, multiple selections are made from a range up to the next power of "
"two and a selection is kept only when it falls within the range ``0 <= x < "
"n``.  The functions and methods affected are :func:`~random.randrange`, :"
"func:`~random.randint`, :func:`~random.choice`, :func:`~random.shuffle` and :"
"func:`~random.sample`."
msgstr ""
"Heltalsmetoderna i modulen :mod:`random` gör nu ett bättre jobb med att "
"producera enhetliga fördelningar.  Tidigare beräknade de urval med "
"``int(n*random())`` som hade en liten bias när *n* inte var en tvåpotens. Nu "
"görs flera val från ett intervall upp till nästa tvåpotens och ett val "
"behålls endast när det faller inom intervallet ``0 <= x < n``.  De "
"funktioner och metoder som påverkas är :func:`~random.randrange`, :func:"
"`~random.randint`, :func:`~random.choice`, :func:`~random.shuffle` och :func:"
"`~random.sample`."

msgid "(Contributed by Raymond Hettinger; :issue:`9025`.)"
msgstr "(Bidrag från Raymond Hettinger; :issue:`9025`.)"

msgid "poplib"
msgstr "poplib"

msgid ""
":class:`~poplib.POP3_SSL` class now accepts a *context* parameter, which is "
"a :class:`ssl.SSLContext` object allowing bundling SSL configuration "
"options, certificates and private keys into a single (potentially long-"
"lived) structure."
msgstr ""
"klassen :class:`~poplib.POP3_SSL` accepterar nu en *context*-parameter, som "
"är ett :class:`ssl.SSLContext`-objekt som gör det möjligt att samla SSL-"
"konfigurationsalternativ, certifikat och privata nycklar i en enda "
"(potentiellt långlivad) struktur."

msgid "(Contributed by Giampaolo Rodolà; :issue:`8807`.)"
msgstr "(Bidrag från Giampaolo Rodolà; :issue:`8807`.)"

msgid "asyncore"
msgstr "asynkron"

msgid ""
":class:`!asyncore.dispatcher` now provides a :meth:`!handle_accepted` method "
"returning a ``(sock, addr)`` pair which is called when a connection has "
"actually been established with a new remote endpoint. This is supposed to be "
"used as a replacement for old :meth:`!handle_accept` and avoids the user  to "
"call :meth:`!accept` directly."
msgstr ""
":class:`!asyncore.dispatcher` tillhandahåller nu en :meth:`!handle_accepted`-"
"metod som returnerar ett ``(sock, addr)``-par som anropas när en anslutning "
"faktiskt har upprättats med en ny fjärrslutpunkt. Detta är tänkt att "
"användas som en ersättning för gamla :meth:`!handle_accept` och undviker att "
"användaren anropar :meth:`!accept` direkt."

msgid "(Contributed by Giampaolo Rodolà; :issue:`6706`.)"
msgstr "(Bidrag från Giampaolo Rodolà; :issue:`6706`.)"

msgid "tempfile"
msgstr "tempfil"

msgid ""
"The :mod:`tempfile` module has a new context manager, :class:`~tempfile."
"TemporaryDirectory` which provides easy deterministic cleanup of temporary "
"directories::"
msgstr ""
"Modulen :mod:`tempfile` har en ny kontexthanterare, :class:`~tempfile."
"TemporaryDirectory` som ger enkel deterministisk rensning av temporära "
"kataloger::"

msgid ""
"with tempfile.TemporaryDirectory() as tmpdirname:\n"
"    print('created temporary dir:', tmpdirname)"
msgstr ""
"with tempfile.TemporaryDirectory() as tmpdirname:\n"
"    print('skapade temporär dir:', tmpdirname)"

msgid "(Contributed by Neil Schemenauer and Nick Coghlan; :issue:`5178`.)"
msgstr "(Bidrag från Neil Schemenauer och Nick Coghlan; :issue:`5178`.)"

msgid "inspect"
msgstr "inspektera"

msgid ""
"The :mod:`inspect` module has a new function :func:`~inspect."
"getgeneratorstate` to easily identify the current state of a generator-"
"iterator::"
msgstr ""
"Modulen :mod:`inspect` har fått en ny funktion :func:`~inspect."
"getgeneratorstate` för att enkelt identifiera det aktuella tillståndet för "
"en generator-iterator::"

msgid ""
">>> from inspect import getgeneratorstate\n"
">>> def gen():\n"
"...     yield 'demo'\n"
"...\n"
">>> g = gen()\n"
">>> getgeneratorstate(g)\n"
"'GEN_CREATED'\n"
">>> next(g)\n"
"'demo'\n"
">>> getgeneratorstate(g)\n"
"'GEN_SUSPENDED'\n"
">>> next(g, None)\n"
">>> getgeneratorstate(g)\n"
"'GEN_CLOSED'"
msgstr ""
">>> från inspect import getgeneratorstate\n"
">>> def gen():\n"
"... yield 'demo'\n"
"...\n"
">>> g = gen()\n"
">>> getgeneratorstate(g)\n"
"'GEN_CREATED'\n"
">>> nästa(g)\n"
"'demo'\n"
">>> getgeneratorstate(g)\n"
"'GEN_SUSPENDED'\n"
">>> nästa(g, Ingen)\n"
">>> getgeneratorstate(g)\n"
"'GEN_CLOSED'"

msgid "(Contributed by Rodolpho Eckhardt and Nick Coghlan, :issue:`10220`.)"
msgstr "(Bidrag från Rodolpho Eckhardt och Nick Coghlan, :issue:`10220`.)"

msgid ""
"To support lookups without the possibility of activating a dynamic "
"attribute, the :mod:`inspect` module has a new function, :func:`~inspect."
"getattr_static`. Unlike :func:`hasattr`, this is a true read-only search, "
"guaranteed not to change state while it is searching::"
msgstr ""
"För att stödja uppslagningar utan möjlighet att aktivera ett dynamiskt "
"attribut har modulen :mod:`inspect` en ny funktion, :func:`~inspect."
"getattr_static`. Till skillnad från :func:`hasattr` är detta en äkta "
"skrivskyddad sökning, som garanterat inte ändrar tillstånd under sökningen::"

msgid ""
">>> class A:\n"
"...     @property\n"
"...     def f(self):\n"
"...         print('Running')\n"
"...         return 10\n"
"...\n"
">>> a = A()\n"
">>> getattr(a, 'f')\n"
"Running\n"
"10\n"
">>> inspect.getattr_static(a, 'f')\n"
"<property object at 0x1022bd788>"
msgstr ""
"&gt;&gt;&gt; klass A:\n"
"...     @egenskap\n"
"... def f(self):\n"
"... print('Kör')\n"
"... return 10\n"
"...\n"
"&gt;&gt;&gt; a = A()\n"
"&gt;&gt;&gt; getattr(a, 'f')\n"
"Löpning\n"
"10\n"
"&gt;&gt;&gt; inspect.getattr_static(a, 'f')\n"
"<property object at 0x1022bd788>"

msgid "pydoc"
msgstr "pydoc"

msgid ""
"The :mod:`pydoc` module now provides a much-improved web server interface, "
"as well as a new command-line option ``-b`` to automatically open a browser "
"window to display that server:"
msgstr ""
"Modulen :mod:`pydoc` tillhandahåller nu ett mycket förbättrat "
"webbservergränssnitt samt ett nytt kommandoradsalternativ ``-b`` för att "
"automatiskt öppna ett webbläsarfönster för att visa den servern:"

msgid "$ pydoc3.2 -b"
msgstr "$ pydoc3.2 -b"

msgid "(Contributed by Ron Adam; :issue:`2001`.)"
msgstr "(Bidrag från Ron Adam; :issue:`2001`.)"

msgid "dis"
msgstr "dis"

msgid ""
"The :mod:`dis` module gained two new functions for inspecting code, :func:"
"`~dis.code_info` and :func:`~dis.show_code`.  Both provide detailed code "
"object information for the supplied function, method, source code string or "
"code object.  The former returns a string and the latter prints it::"
msgstr ""
"Modulen :mod:`dis` har fått två nya funktioner för att inspektera kod, :func:"
"`~dis.code_info` och :func:`~dis.show_code`.  Båda ger detaljerad "
"information om kodobjekt för den angivna funktionen, metoden, "
"källkodsträngen eller kodobjektet.  Den förstnämnda returnerar en sträng och "
"den sistnämnda skriver ut den::"

msgid ""
">>> import dis, random\n"
">>> dis.show_code(random.choice)\n"
"Name:              choice\n"
"Filename:          /Library/Frameworks/Python.framework/Versions/3.2/lib/"
"python3.2/random.py\n"
"Argument count:    2\n"
"Kw-only arguments: 0\n"
"Number of locals:  3\n"
"Stack size:        11\n"
"Flags:             OPTIMIZED, NEWLOCALS, NOFREE\n"
"Constants:\n"
"   0: 'Choose a random element from a non-empty sequence.'\n"
"   1: 'Cannot choose from an empty sequence'\n"
"Names:\n"
"   0: _randbelow\n"
"   1: len\n"
"   2: ValueError\n"
"   3: IndexError\n"
"Variable names:\n"
"   0: self\n"
"   1: seq\n"
"   2: i"
msgstr ""
">>> import dis, slumpmässig\n"
">>> dis.show_code(slumpmässigt.val)\n"
"Namn: val\n"
"Filnamn:          /Library/Frameworks/Python.framework/Versions/3.2/lib/"
"python3.2/random.py\n"
"Antal argument:    2\n"
"Enda argument: 0\n"
"Antal lokalinställningar:  3\n"
"Stapelstorlek: 11\n"
"Flaggor:             OPTIMERAD, NYA LOKALA, NOFREE\n"
"Konstanter:\n"
"   0: \"Välj ett slumpmässigt element från en icke-tom sekvens\n"
"   1: 'Kan inte välja från en tom sekvens'\n"
"Namn: _randbelow\n"
"   0: _randbelow\n"
"   1: len\n"
"   2: VärdeFel\n"
"   3: Indexfel\n"
"Namn på variabler:\n"
"   0: själv\n"
"   1: seq\n"
"   2: i"

msgid ""
"In addition, the :func:`~dis.dis` function now accepts string arguments so "
"that the common idiom ``dis(compile(s, '', 'eval'))`` can be shortened to "
"``dis(s)``::"
msgstr ""
"Dessutom accepterar funktionen :func:`~dis.dis` nu strängargument så att det "
"vanliga idiomet ``dis(compile(s, '', 'eval'))`` kan förkortas till "
"``dis(s)``::"

msgid ""
">>> dis('3*x+1 if x%2==1 else x//2')\n"
"  1           0 LOAD_NAME                0 (x)\n"
"              3 LOAD_CONST               0 (2)\n"
"              6 BINARY_MODULO\n"
"              7 LOAD_CONST               1 (1)\n"
"             10 COMPARE_OP               2 (==)\n"
"             13 POP_JUMP_IF_FALSE       28\n"
"             16 LOAD_CONST               2 (3)\n"
"             19 LOAD_NAME                0 (x)\n"
"             22 BINARY_MULTIPLY\n"
"             23 LOAD_CONST               1 (1)\n"
"             26 BINARY_ADD\n"
"             27 RETURN_VALUE\n"
"        >>   28 LOAD_NAME                0 (x)\n"
"             31 LOAD_CONST               0 (2)\n"
"             34 BINARY_FLOOR_DIVIDE\n"
"             35 RETURN_VALUE"
msgstr ""
">>> dis('3*x+1 if x%2==1 else x//2')\n"
"  1 0 LOAD_NAME 0 (x)\n"
"              3 LOAD_CONST 0 (2)\n"
"              6 BINÄR_MODULO\n"
"              7 LOAD_CONST 1 (1)\n"
"             10 COMPARE_OP 2 (==)\n"
"             13 POP_JUMP_IF_FALSE 28\n"
"             16 LOAD_CONST 2 (3)\n"
"             19 LOAD_NAME 0 (x)\n"
"             22 BINÄR_MULTIPLICERA\n"
"             23 LOAD_CONST 1 (1)\n"
"             26 BINÄR_ADD\n"
"             27 RETUR_VÄRDE\n"
"        >> 28 LADDA_NAMN 0 (x)\n"
"             31 LOAD_CONST 0 (2)\n"
"             34 BINÄR_GOLV_DELA\n"
"             35 RETUR_VÄRDE"

msgid ""
"Taken together, these improvements make it easier to explore how CPython is "
"implemented and to see for yourself what the language syntax does under-the-"
"hood."
msgstr ""
"Sammantaget gör dessa förbättringar det lättare att utforska hur CPython "
"implementeras och att själv se vad språksyntaxen gör under huven."

msgid "(Contributed by Nick Coghlan in :issue:`9147`.)"
msgstr "(Bidrag från Nick Coghlan i :issue:`9147`.)"

msgid "dbm"
msgstr "dbm"

msgid ""
"All database modules now support the :meth:`!get` and :meth:`!setdefault` "
"methods."
msgstr ""
"Alla databasmoduler stöder nu metoderna :meth:`!get` och :meth:`!setdefault`."

msgid "(Suggested by Ray Allen in :issue:`9523`.)"
msgstr "(Föreslagen av Ray Allen i :issue:`9523`.)"

msgid "ctypes"
msgstr "ctyper"

msgid ""
"A new type, :class:`ctypes.c_ssize_t` represents the C :c:type:`ssize_t` "
"datatype."
msgstr ""
"En ny typ, :class:`ctypes.c_ssize_t` representerar datatypen C :c:type:"
"`ssize_t`."

msgid "site"
msgstr "plats"

msgid ""
"The :mod:`site` module has three new functions useful for reporting on the "
"details of a given Python installation."
msgstr ""
"Modulen :mod:`site` har tre nya funktioner som är användbara för att "
"rapportera om detaljerna i en viss Python-installation."

msgid ""
":func:`~site.getsitepackages` lists all global site-packages directories."
msgstr ""
":func:`~site.getsitepackages` listar alla globala kataloger för platspaket."

msgid ""
":func:`~site.getuserbase` reports on the user's base directory where data "
"can be stored."
msgstr ""
":func:`~site.getuserbase` rapporterar om användarens baskatalog där data kan "
"lagras."

msgid ""
":func:`~site.getusersitepackages` reveals the user-specific site-packages "
"directory path."
msgstr ""
":func:`~site.getusersitepackages` avslöjar den användarspecifika "
"katalogvägen för webbplatsens paket."

msgid ""
">>> import site\n"
">>> site.getsitepackages()\n"
"['/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-"
"packages',\n"
" '/Library/Frameworks/Python.framework/Versions/3.2/lib/site-python',\n"
" '/Library/Python/3.2/site-packages']\n"
">>> site.getuserbase()\n"
"'/Users/raymondhettinger/Library/Python/3.2'\n"
">>> site.getusersitepackages()\n"
"'/Users/raymondhettinger/Library/Python/3.2/lib/python/site-packages'"
msgstr ""
">>> import site\n"
">>> site.getsitepackages()\n"
"['/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-"
"packages',\n"
" '/Library/Frameworks/Python.framework/Versions/3.2/lib/site-python',\n"
" '/Library/Python/3.2/site-packages']\n"
">>> site.getuserbase()\n"
"'/Users/raymondhettinger/Library/Python/3.2'\n"
">>> site.getusersitepackages()\n"
"'/Users/raymondhettinger/Library/Python/3.2/lib/python/site-packages'"

msgid ""
"Conveniently, some of site's functionality is accessible directly from the "
"command-line:"
msgstr ""
"En del av webbplatsens funktioner kan enkelt nås direkt från kommandoraden:"

msgid ""
"$ python -m site --user-base\n"
"/Users/raymondhettinger/.local\n"
"$ python -m site --user-site\n"
"/Users/raymondhettinger/.local/lib/python3.2/site-packages"
msgstr ""
"$ python -m webbplats --användarbas\n"
"/Användare/raymondhettinger/.local\n"
"$ python -m webbplats --användarwebbplats\n"
"/Users/raymondhettinger/.local/lib/python3.2/site-paket"

msgid "(Contributed by Tarek Ziadé in :issue:`6693`.)"
msgstr "(Bidrag från Tarek Ziadé i :issue:`6693`.)"

msgid "sysconfig"
msgstr "sysconfig"

msgid ""
"The new :mod:`sysconfig` module makes it straightforward to discover "
"installation paths and configuration variables that vary across platforms "
"and installations."
msgstr ""
"Den nya modulen :mod:`sysconfig` gör det enkelt att hitta "
"installationssökvägar och konfigurationsvariabler som varierar mellan olika "
"plattformar och installationer."

msgid ""
"The module offers access simple access functions for platform and version "
"information:"
msgstr ""
"Modulen ger tillgång till enkla åtkomstfunktioner för plattforms- och "
"versionsinformation:"

msgid ""
":func:`~sysconfig.get_platform` returning values like *linux-i586* or "
"*macosx-10.6-ppc*."
msgstr ""
":func:`~sysconfig.get_platform` returnerar värden som *linux-i586* eller "
"*macosx-10.6-ppc*."

msgid ""
":func:`~sysconfig.get_python_version` returns a Python version string such "
"as \"3.2\"."
msgstr ""
":func:`~sysconfig.get_python_version` returnerar en Python-versionsträng, t."
"ex. \"3.2\"."

msgid ""
"It also provides access to the paths and variables corresponding to one of "
"seven named schemes used by ``distutils``.  Those include *posix_prefix*, "
"*posix_home*, *posix_user*, *nt*, *nt_user*, *os2*, *os2_home*:"
msgstr ""
"Den ger också tillgång till sökvägar och variabler som motsvarar ett av sju "
"namngivna system som används av ``distutils``.  Dessa inkluderar "
"*posix_prefix*, *posix_home*, *posix_user*, *nt*, *nt_user*, *os2*, "
"*os2_home*:"

msgid ""
":func:`~sysconfig.get_paths` makes a dictionary containing installation "
"paths for the current installation scheme."
msgstr ""
":func:`~sysconfig.get_paths` skapar en ordbok som innehåller "
"installationssökvägar för det aktuella installationsschemat."

msgid ""
":func:`~sysconfig.get_config_vars` returns a dictionary of platform specific "
"variables."
msgstr ""
":func:`~sysconfig.get_config_vars` returnerar en ordbok med "
"plattformsspecifika variabler."

msgid "There is also a convenient command-line interface:"
msgstr "Det finns också ett bekvämt kommandoradsgränssnitt:"

msgid ""
"C:\\Python32>python -m sysconfig\n"
"Platform: \"win32\"\n"
"Python version: \"3.2\"\n"
"Current installation scheme: \"nt\"\n"
"\n"
"Paths:\n"
"        data = \"C:\\Python32\"\n"
"        include = \"C:\\Python32\\Include\"\n"
"        platinclude = \"C:\\Python32\\Include\"\n"
"        platlib = \"C:\\Python32\\Lib\\site-packages\"\n"
"        platstdlib = \"C:\\Python32\\Lib\"\n"
"        purelib = \"C:\\Python32\\Lib\\site-packages\"\n"
"        scripts = \"C:\\Python32\\Scripts\"\n"
"        stdlib = \"C:\\Python32\\Lib\"\n"
"\n"
"Variables:\n"
"        BINDIR = \"C:\\Python32\"\n"
"        BINLIBDEST = \"C:\\Python32\\Lib\"\n"
"        EXE = \".exe\"\n"
"        INCLUDEPY = \"C:\\Python32\\Include\"\n"
"        LIBDEST = \"C:\\Python32\\Lib\"\n"
"        SO = \".pyd\"\n"
"        VERSION = \"32\"\n"
"        abiflags = \"\"\n"
"        base = \"C:\\Python32\"\n"
"        exec_prefix = \"C:\\Python32\"\n"
"        platbase = \"C:\\Python32\"\n"
"        prefix = \"C:\\Python32\"\n"
"        projectbase = \"C:\\Python32\"\n"
"        py_version = \"3.2\"\n"
"        py_version_nodot = \"32\"\n"
"        py_version_short = \"3.2\"\n"
"        srcdir = \"C:\\Python32\"\n"
"        userbase = \"C:\\Documents and Settings\\Raymond\\Application "
"Data\\Python\""
msgstr ""
"C:\\Python32>python -m sysconfig\n"
"Plattform: \"win32\"\n"
"Python version: \"3.2\"\n"
"Nuvarande installationsschema: \"nt\"\n"
"\n"
"Sökvägar:\n"
"        data = \"C:\\Python32\"\n"
"        include = \"C:\\Python32\\Include\"\n"
"        platinclude = \"C:\\Python32\\Include\"\n"
"        platlib = \"C:\\Python32\\Lib\\site-packages\"\n"
"        platstdlib = \"C:\\Python32\\Lib\"\n"
"        purelib = \"C:\\Python32\\Lib\\site-packages\"\n"
"        scripts = \"C:\\Python32\\Scripts\"\n"
"        stdlib = \"C:\\Python32\\Lib\"\n"
"\n"
"Variabler:\n"
"        BINDIR = \"C:\\Python32\"\n"
"        BINLIBDEST = \"C:\\Python32\\Lib\"\n"
"        EXE = \".exe\"\n"
"        INCLUDEPY = \"C:\\Python32\\Include\"\n"
"        LIBDEST = \"C:\\Python32\\Lib\"\n"
"        SO = \".pyd\"\n"
"        VERSION = \"32\"\n"
"        abiflags = \"\"\n"
"        bas = \"C:\\Python32\"\n"
"        exec_prefix = \"C:\\Python32\"\n"
"        platbase = \"C:\\Python32\"\n"
"        prefix = \"C:\\Python32\"\n"
"        projektbas = \"C:\\Python32\"\n"
"        py_version = \"3.2\"\n"
"        py_version_nodot = \"32\"\n"
"        py_version_short = \"3.2\"\n"
"        srcdir = \"C:\\Python32\"\n"
"        userbase = \"C:\\Dokument och "
"inställningar\\Raymond\\Applikationsdata\\Python\""

msgid "(Moved out of Distutils by Tarek Ziadé.)"
msgstr "(Flyttad från Distutils av Tarek Ziadé.)"

msgid "pdb"
msgstr "pdb"

msgid ""
"The :mod:`pdb` debugger module gained a number of usability improvements:"
msgstr ""
"Felsökningsmodulen :mod:`pdb` har fått ett antal förbättringar av "
"användbarheten:"

msgid ""
":file:`pdb.py` now has a ``-c`` option that executes commands as given in a :"
"file:`.pdbrc` script file."
msgstr ""
":file:`pdb.py` har nu ett ``-c`` alternativ som exekverar kommandon som ges "
"i en :file:`.pdbrc` scriptfil."

msgid ""
"A :file:`.pdbrc` script file can contain ``continue`` and ``next`` commands "
"that continue debugging."
msgstr ""
"En skriptfil av typen :file:`.pdbrc` kan innehålla kommandona ``continue`` "
"och ``next`` som fortsätter felsökningen."

msgid ""
"The :class:`~pdb.Pdb` class constructor now accepts a *nosigint* argument."
msgstr ""
"Klasskonstruktören :class:`~pdb.Pdb` accepterar nu ett *nosigint*-argument."

msgid ""
"New commands: ``l(list)``, ``ll(long list)`` and ``source`` for listing "
"source code."
msgstr ""
"Nya kommandon: ``l(list)``, ``ll(long list)`` och ``source`` för listning av "
"källkod."

msgid ""
"New commands: ``display`` and ``undisplay`` for showing or hiding the value "
"of an expression if it has changed."
msgstr ""
"Nya kommandon: ``display`` och ``undisplay`` för att visa eller dölja värdet "
"på ett uttryck om det har ändrats."

msgid ""
"New command: ``interact`` for starting an interactive interpreter containing "
"the global and local  names found in the current scope."
msgstr ""
"Nytt kommando: ``interact`` för att starta en interaktiv tolk som innehåller "
"de globala och lokala namn som finns i det aktuella omfånget."

msgid "Breakpoints can be cleared by breakpoint number."
msgstr "Brytpunkter kan rensas med hjälp av brytpunktsnummer."

msgid "(Contributed by Georg Brandl, Antonio Cuni and Ilya Sandler.)"
msgstr "(Bidrag från Georg Brandl, Antonio Cuni och Ilya Sandler.)"

msgid "configparser"
msgstr "konfigurationsanalysator"

msgid ""
"The :mod:`configparser` module was modified to improve usability and "
"predictability of the default parser and its supported INI syntax.  The old :"
"class:`!ConfigParser` class was removed in favor of :class:`!"
"SafeConfigParser` which has in turn been renamed to :class:`~configparser."
"ConfigParser`. Support for inline comments is now turned off by default and "
"section or option duplicates are not allowed in a single configuration "
"source."
msgstr ""
"Modulen :mod:`configparser` har modifierats för att förbättra användbarheten "
"och förutsägbarheten för standardparsern och dess stödda INI-syntax.  Den "
"gamla klassen :class:`!ConfigParser` togs bort till förmån för :class:`!"
"SafeConfigParser` som i sin tur har bytt namn till :class:`~configparser."
"ConfigParser`. Stöd för inline-kommentarer är nu avstängt som standard och "
"dubbletter av avsnitt eller alternativ tillåts inte i en enda "
"konfigurationskälla."

msgid "Config parsers gained a new API based on the mapping protocol::"
msgstr "Config-parsers fick ett nytt API baserat på mappningsprotokollet::"

msgid ""
">>> parser = ConfigParser()\n"
">>> parser.read_string(\"\"\"\n"
"... [DEFAULT]\n"
"... location = upper left\n"
"... visible = yes\n"
"... editable = no\n"
"... color = blue\n"
"...\n"
"... [main]\n"
"... title = Main Menu\n"
"... color = green\n"
"...\n"
"... [options]\n"
"... title = Options\n"
"... \"\"\")\n"
">>> parser['main']['color']\n"
"'green'\n"
">>> parser['main']['editable']\n"
"'no'\n"
">>> section = parser['options']\n"
">>> section['title']\n"
"'Options'\n"
">>> section['title'] = 'Options (editable: %(editable)s)'\n"
">>> section['title']\n"
"'Options (editable: no)'"
msgstr ""
">>> parser = ConfigParser()\n"
">>> parser.read_string(\"\"\"\n"
"... [DEFAULT]\n"
"... plats = övre vänster\n"
"... synlig = ja\n"
"... redigerbar = nej\n"
"... färg = blå\n"
"...\n"
"... [huvud]\n"
"... titel = Huvudmeny\n"
"... färg = grön\n"
"...\n"
"... [alternativ]\n"
"... titel = Alternativ\n"
"... \"\"\")\n"
">>> parser['main']['color']\n"
"'grön'\n"
">>> parser['main']['editable']\n"
"'no'\n"
">>> sektion = parser['alternativ']\n"
">>> avsnitt['titel']\n"
"'Alternativ'\n"
">>> section['title'] = 'Alternativ (redigerbara: %(editable)s)'\n"
">>> section['title']\n"
"\"Alternativ (redigerbara: nej)"

msgid ""
"The new API is implemented on top of the classical API, so custom parser "
"subclasses should be able to use it without modifications."
msgstr ""
"Det nya API:et implementeras ovanpå det klassiska API:et, så anpassade "
"parserunderklasser bör kunna använda det utan ändringar."

msgid ""
"The INI file structure accepted by config parsers can now be customized. "
"Users can specify alternative option/value delimiters and comment prefixes, "
"change the name of the *DEFAULT* section or switch the interpolation syntax."
msgstr ""
"INI-filstrukturen som accepteras av konfigurationsanalysatorer kan nu "
"anpassas. Användare kan ange alternativa avgränsare för alternativ/värden "
"och kommentarsprefix, ändra namnet på avsnittet *DEFAULT* eller byta syntax "
"för interpolering."

msgid ""
"There is support for pluggable interpolation including an additional "
"interpolation handler :class:`~configparser.ExtendedInterpolation`::"
msgstr ""
"Det finns stöd för pluggbar interpolering inklusive en extra "
"interpolationshanterare :class:`~configparser.ExtendedInterpolation`::"

msgid ""
">>> parser = ConfigParser(interpolation=ExtendedInterpolation())\n"
">>> parser.read_dict({'buildout': {'directory': '/home/ambv/zope9'},\n"
"...                   'custom': {'prefix': '/usr/local'}})\n"
">>> parser.read_string(\"\"\"\n"
"... [buildout]\n"
"... parts =\n"
"...   zope9\n"
"...   instance\n"
"... find-links =\n"
"...   ${buildout:directory}/downloads/dist\n"
"...\n"
"... [zope9]\n"
"... recipe = plone.recipe.zope9install\n"
"... location = /opt/zope\n"
"...\n"
"... [instance]\n"
"... recipe = plone.recipe.zope9instance\n"
"... zope9-location = ${zope9:location}\n"
"... zope-conf = ${custom:prefix}/etc/zope.conf\n"
"... \"\"\")\n"
">>> parser['buildout']['find-links']\n"
"'\\n/home/ambv/zope9/downloads/dist'\n"
">>> parser['instance']['zope-conf']\n"
"'/usr/local/etc/zope.conf'\n"
">>> instance = parser['instance']\n"
">>> instance['zope-conf']\n"
"'/usr/local/etc/zope.conf'\n"
">>> instance['zope9-location']\n"
"'/opt/zope'"
msgstr ""
">>> parser = ConfigParser(interpolation=ExtendedInterpolation())\n"
">>> parser.read_dict({'buildout': {'directory': '/home/ambv/zope9'},\n"
"...                   'custom': {\"prefix\": \"/usr/local\"}})\n"
">>> parser.read_string(\"\"\"\n"
"... [buildout]\n"
"... delar =\n"
"... zope9\n"
"... instans\n"
"... hitta länkar =\n"
"... ${buildout:directory}/nedladdningar/dist\n"
"...\n"
"... [zope9]\n"
"... recept = plone.recipe.zope9install\n"
"... plats = /opt/zope\n"
"...\n"
"... [instance]\n"
"... recept = plone.recipe.zope9instance\n"
"... zope9-placering = ${zope9:location}\n"
"... zope-conf = ${custom:prefix}/etc/zope.conf\n"
"... \"\"\")\n"
">>> parser['buildout']['find-links']\n"
"'\\n/home/ambv/zope9/downloads/dist'\n"
">>> parser['instance']['zope-conf']\n"
"'/usr/local/etc/zope.conf'\n"
">>> instans = parser['instans']\n"
">>> instans['zope-conf']\n"
"'/usr/local/etc/zope.conf'\n"
">>> instans['zope9-placering']\n"
"'/opt/zope'"

msgid ""
"A number of smaller features were also introduced, like support for "
"specifying encoding in read operations, specifying fallback values for get-"
"functions, or reading directly from dictionaries and strings."
msgstr ""
"Ett antal mindre funktioner introducerades också, som stöd för att ange "
"kodning i läsoperationer, ange reservvärden för get-funktioner eller läsa "
"direkt från ordböcker och strängar."

msgid "(All changes contributed by Łukasz Langa.)"
msgstr "(Alla ändringar har gjorts av Łukasz Langa.)"

msgid "urllib.parse"
msgstr "urllib.parse"

msgid ""
"A number of usability improvements were made for the :mod:`urllib.parse` "
"module."
msgstr ""
"Ett antal förbättringar av användbarheten har gjorts för modulen :mod:"
"`urllib.parse`."

msgid ""
"The :func:`~urllib.parse.urlparse` function now supports `IPv6 <https://en."
"wikipedia.org/wiki/IPv6>`_ addresses as described in :rfc:`2732`:"
msgstr ""
"Funktionen :func:`~urllib.parse.urlparse` stöder nu `IPv6 <https://en."
"wikipedia.org/wiki/IPv6>`_-adresser enligt beskrivningen i :rfc:`2732`:"

msgid ""
"The :func:`~urllib.parse.urldefrag` function now returns a :term:`named "
"tuple`::"
msgstr ""
"Funktionen :func:`~urllib.parse.urldefrag` returnerar nu en :term:`named "
"tuple`::"

msgid ""
">>> r = urllib.parse.urldefrag('http://python.org/about/#target')\n"
">>> r\n"
"DefragResult(url='http://python.org/about/', fragment='target')\n"
">>> r[0]\n"
"'http://python.org/about/'\n"
">>> r.fragment\n"
"'target'"
msgstr ""
">>> r = urllib.parse.urldefrag('http://python.org/about/#target')\n"
">>> r\n"
"DefragResult(url='http://python.org/about/', fragment='target')\n"
">>> r[0]\n"
"'http://python.org/about/'\n"
">>> r.fragment\n"
"'target'"

msgid ""
"And, the :func:`~urllib.parse.urlencode` function is now much more flexible, "
"accepting either a string or bytes type for the *query* argument.  If it is "
"a string, then the *safe*, *encoding*, and *error* parameters are sent to :"
"func:`~urllib.parse.quote_plus` for encoding::"
msgstr ""
"Och funktionen :func:`~urllib.parse.urlencode` är nu mycket mer flexibel och "
"accepterar antingen en sträng eller en bytes-typ för argumentet *query*.  Om "
"det är en sträng skickas parametrarna *safe*, *encoding* och *error* till :"
"func:`~urllib.parse.quote_plus` för kodning:"

msgid ""
">>> urllib.parse.urlencode([\n"
"...      ('type', 'telenovela'),\n"
"...      ('name', '¿Dónde Está Elisa?')],\n"
"...      encoding='latin-1')\n"
"'type=telenovela&name=%BFD%F3nde+Est%E1+Elisa%3F'"
msgstr ""
">>> urllib.parse.urlencode([\n"
"... ('type', 'telenovela'),\n"
"... ('name', '¿Dónde Está Elisa?')],\n"
"... encoding='latin-1')\n"
"'type=telenovela&name=%BFD%F3nde+Est%E1+Elisa%3F'"

msgid ""
"As detailed in :ref:`parsing-ascii-encoded-bytes`, all the :mod:`urllib."
"parse` functions now accept ASCII-encoded byte strings as input, so long as "
"they are not mixed with regular strings.  If ASCII-encoded byte strings are "
"given as parameters, the return types will also be an ASCII-encoded byte "
"strings:"
msgstr ""
"Som beskrivs i :ref:`parsing-ascii-encoded-bytes`, accepterar nu alla :mod:"
"`urllib.parse`-funktioner ASCII-kodade bytesträngar som indata, så länge de "
"inte blandas med vanliga strängar.  Om ASCII-kodade bytesträngar anges som "
"parametrar kommer även returtyperna att vara ASCII-kodade bytesträngar:"

msgid ""
"(Work by Nick Coghlan, Dan Mahn, and Senthil Kumaran in :issue:`2987`, :"
"issue:`5468`, and :issue:`9873`.)"
msgstr ""
"(Arbete av Nick Coghlan, Dan Mahn, och Senthil Kumaran i :issue:`2987`, :"
"issue:`5468`, och :issue:`9873`)"

msgid "mailbox"
msgstr "brevlåda"

msgid ""
"Thanks to a concerted effort by R. David Murray, the :mod:`mailbox` module "
"has been fixed for Python 3.2.  The challenge was that mailbox had been "
"originally designed with a text interface, but email messages are best "
"represented with :class:`bytes` because various parts of a message may have "
"different encodings."
msgstr ""
"Tack vare en samlad insats av R. David Murray har modulen :mod:`mailbox` "
"åtgärdats för Python 3.2.  Utmaningen var att mailbox ursprungligen hade "
"utformats med ett textgränssnitt, men e-postmeddelanden representeras bäst "
"med :class:`bytes` eftersom olika delar av ett meddelande kan ha olika "
"kodningar."

msgid ""
"The solution harnessed the :mod:`email` package's binary support for parsing "
"arbitrary email messages.  In addition, the solution required a number of "
"API changes."
msgstr ""
"Lösningen utnyttjade :mod:`email`-paketets binära stöd för att tolka "
"godtyckliga e-postmeddelanden.  Dessutom krävde lösningen ett antal API-"
"ändringar."

msgid ""
"As expected, the :meth:`~mailbox.Mailbox.add` method for :class:`mailbox."
"Mailbox` objects now accepts binary input."
msgstr ""
"Som väntat accepterar nu metoden :meth:`~mailbox.Mailbox.add` för :class:"
"`mailbox.Mailbox`-objekt binär indata."

msgid ""
":class:`~io.StringIO` and text file input are deprecated.  Also, string "
"input will fail early if non-ASCII characters are used.  Previously it would "
"fail when the email was processed in a later step."
msgstr ""
":class:`~io.StringIO` och inmatning av textfiler är föråldrade.  Dessutom "
"kommer stränginmatning att misslyckas tidigt om icke-ASCII-tecken används.  "
"Tidigare misslyckades det när e-postmeddelandet bearbetades i ett senare "
"steg."

msgid ""
"There is also support for binary output.  The :meth:`~mailbox.Mailbox."
"get_file` method now returns a file in the binary mode (where it used to "
"incorrectly set the file to text-mode).  There is also a new :meth:`~mailbox."
"Mailbox.get_bytes` method that returns a :class:`bytes` representation of a "
"message corresponding to a given *key*."
msgstr ""
"Det finns också stöd för binär utdata.  Metoden :meth:`~mailbox.Mailbox."
"get_file` returnerar nu en fil i binärt läge (där den tidigare felaktigt "
"satte filen i textläge).  Det finns också en ny metod :meth:`~mailbox."
"Mailbox.get_bytes` som returnerar en :class:`bytes`-representation av ett "
"meddelande som motsvarar en given *key*."

msgid ""
"It is still possible to get non-binary output using the old API's :meth:"
"`~mailbox.Mailbox.get_string` method, but that approach is not very useful.  "
"Instead, it is best to extract messages from a :class:`~mailbox.Message` "
"object or to load them from binary input."
msgstr ""
"Det är fortfarande möjligt att få icke-binär utdata med hjälp av det gamla "
"API:ets :meth:`~mailbox.Mailbox.get_string`-metod, men det "
"tillvägagångssättet är inte särskilt användbart.  Istället är det bäst att "
"extrahera meddelanden från ett :class:`~mailbox.Message`-objekt eller att "
"ladda dem från binär indata."

msgid ""
"(Contributed by R. David Murray, with efforts from Steffen Daode Nurpmeso "
"and an initial patch by Victor Stinner in :issue:`9124`.)"
msgstr ""
"(Bidrag från R. David Murray, med insatser från Steffen Daode Nurpmeso och "
"en första patch av Victor Stinner i :issue:`9124`.)"

msgid "turtledemo"
msgstr "sköldpaddsemo"

msgid ""
"The demonstration code for the :mod:`turtle` module was moved from the "
"*Demo* directory to main library.  It includes over a dozen sample scripts "
"with lively displays.  Being on :data:`sys.path`, it can now be run directly "
"from the command-line:"
msgstr ""
"Demonstrationskoden för modulen :mod:`turtle` har flyttats från katalogen "
"*Demo* till huvudbiblioteket.  Den innehåller över ett dussin exempelskript "
"med livliga skärmar.  Eftersom den finns på :data:`sys.path` kan den nu "
"köras direkt från kommandoraden:"

msgid "$ python -m turtledemo"
msgstr "$ python -m turtledemo"

msgid ""
"(Moved from the Demo directory by Alexander Belopolsky in :issue:`10199`.)"
msgstr ""
"(Flyttad från Demo-katalogen av Alexander Belopolsky i :issue:`10199`.)"

msgid "Multi-threading"
msgstr "Multi-threading"

msgid ""
"The mechanism for serializing execution of concurrently running Python "
"threads (generally known as the :term:`GIL` or Global Interpreter Lock) has "
"been rewritten.  Among the objectives were more predictable switching "
"intervals and reduced overhead due to lock contention and the number of "
"ensuing system calls.  The notion of a \"check interval\" to allow thread "
"switches has been abandoned and replaced by an absolute duration expressed "
"in seconds.  This parameter is tunable through :func:`sys."
"setswitchinterval`. It currently defaults to 5 milliseconds."
msgstr ""
"Mekanismen för serialisering av exekvering av Python-trådar som körs "
"samtidigt (allmänt känd som :term:`GIL` eller Global Interpreter Lock) har "
"skrivits om.  Bland målen fanns mer förutsägbara växlingsintervall och "
"minskad overhead på grund av låskonflikter och antalet efterföljande "
"systemanrop.  Begreppet \"kontrollintervall\" för att tillåta trådbyten har "
"övergivits och ersatts av en absolut varaktighet uttryckt i sekunder.  Denna "
"parameter kan ställas in genom :func:`sys.setswitchinterval`. Standardvärdet "
"är för närvarande 5 millisekunder."

msgid ""
"Additional details about the implementation can be read from a `python-dev "
"mailing-list message <https://mail.python.org/pipermail/python-dev/2009-"
"October/093321.html>`_ (however, \"priority requests\" as exposed in this "
"message have not been kept for inclusion)."
msgstr ""
"Ytterligare detaljer om implementeringen kan läsas i ett meddelande från "
"`python-dev mailing-list <https://mail.python.org/pipermail/python-dev/2009-"
"October/093321.html>`_ (dock har \"priority requests\" som anges i detta "
"meddelande inte tagits med för inkludering)."

msgid "(Contributed by Antoine Pitrou.)"
msgstr "(Bidrag från Antoine Pitrou.)"

msgid ""
"Regular and recursive locks now accept an optional *timeout* argument to "
"their :meth:`~threading.Lock.acquire` method.  (Contributed by Antoine "
"Pitrou; :issue:`7316`.)"
msgstr ""
"Vanliga och rekursiva lås accepterar nu ett valfritt *timeout*-argument till "
"sin :meth:`~threading.Lock.acquire`-metod.  (Bidrag från Antoine Pitrou; :"
"issue:`7316`.)"

msgid ""
"Similarly, :meth:`threading.Semaphore.acquire` also gained a *timeout* "
"argument.  (Contributed by Torsten Landschoff; :issue:`850728`.)"
msgstr ""
"På samma sätt har :meth:`threading.Semaphore.acquire` också fått ett "
"*timeout*-argument.  (Bidrag från Torsten Landschoff; :issue:`850728`.)"

msgid ""
"Regular and recursive lock acquisitions can now be interrupted by signals on "
"platforms using Pthreads.  This means that Python programs that deadlock "
"while acquiring locks can be successfully killed by repeatedly sending "
"SIGINT to the process (by pressing :kbd:`Ctrl+C` in most shells). "
"(Contributed by Reid Kleckner; :issue:`8844`.)"
msgstr ""
"Vanliga och rekursiva låsförvärv kan nu avbrytas av signaler på plattformar "
"som använder Pthreads.  Detta innebär att Python-program som låser sig medan "
"de förvärvar lås kan dödas genom att upprepade gånger skicka SIGINT till "
"processen (genom att trycka på :kbd:`Ctrl+C` i de flesta skal). (Bidrag från "
"Reid Kleckner; :issue:`8844`.)"

msgid "Optimizations"
msgstr "Optimeringar"

msgid "A number of small performance enhancements have been added:"
msgstr "Ett antal små prestandaförbättringar har lagts till:"

msgid ""
"Python's peephole optimizer now recognizes patterns such ``x in {1, 2, 3}`` "
"as being a test for membership in a set of constants.  The optimizer recasts "
"the :class:`set` as a :class:`frozenset` and stores the pre-built constant."
msgstr ""
"Pythons peephole-optimerare känner nu igen mönster som ``x i {1, 2, 3}`` som "
"ett test för medlemskap i en uppsättning konstanter.  Optimeraren omformar :"
"class:`set` till :class:`frozenset` och lagrar den förbyggda konstanten."

msgid ""
"Now that the speed penalty is gone, it is practical to start writing "
"membership tests using set-notation.  This style is both semantically clear "
"and operationally fast::"
msgstr ""
"Nu när hastighetsstraffet är borta är det praktiskt att börja skriva "
"medlemskapstest med set-notation.  Denna stil är både semantiskt tydlig och "
"operationellt snabb::"

msgid ""
"extension = name.rpartition('.')[2]\n"
"if extension in {'xml', 'html', 'xhtml', 'css'}:\n"
"    handle(name)"
msgstr ""
"extension = namn.rpartition('.')[2]\n"
"if extension in {'xml', 'html', 'xhtml', 'css'}:\n"
"    handle(namn)"

msgid ""
"(Patch and additional tests contributed by Dave Malcolm; :issue:`6690`)."
msgstr ""
"(Patch och ytterligare tester bidragna av Dave Malcolm; :issue:`6690`)."

msgid ""
"Serializing and unserializing data using the :mod:`pickle` module is now "
"several times faster."
msgstr ""
"Serialisering och unsialisering av data med modulen :mod:`pickle` är nu "
"flera gånger snabbare."

msgid ""
"(Contributed by Alexandre Vassalotti, Antoine Pitrou and the Unladen Swallow "
"team in :issue:`9410` and :issue:`3873`.)"
msgstr ""
"(Bidrag från Alexandre Vassalotti, Antoine Pitrou och Unladen Swallow-teamet "
"i :issue:`9410` och :issue:`3873`.)"

msgid ""
"The `Timsort algorithm <https://en.wikipedia.org/wiki/Timsort>`_ used in :"
"meth:`list.sort` and :func:`sorted` now runs faster and uses less memory "
"when called with a :term:`key function`.  Previously, every element of a "
"list was wrapped with a temporary object that remembered the key value "
"associated with each element.  Now, two arrays of keys and values are sorted "
"in parallel.  This saves the memory consumed by the sort wrappers, and it "
"saves time lost to delegating comparisons."
msgstr ""
"Timsort-algoritmen <https://en.wikipedia.org/wiki/Timsort>`_ som används i :"
"meth:`list.sort` och :func:`sorted` körs nu snabbare och använder mindre "
"minne när den anropas med en :term:`key function`.  Tidigare omslöts varje "
"element i en lista med ett temporärt objekt som kom ihåg nyckelvärdet som "
"associerades med varje element.  Nu sorteras två arrayer med nycklar och "
"värden parallellt.  Detta sparar det minne som används av sorteringsomslagen "
"och sparar tid som går förlorad på att delegera jämförelser."

msgid "(Patch by Daniel Stutzbach in :issue:`9915`.)"
msgstr "(Patch av Daniel Stutzbach i :issue:`9915`.)"

msgid ""
"JSON decoding performance is improved and memory consumption is reduced "
"whenever the same string is repeated for multiple keys.  Also, JSON encoding "
"now uses the C speedups when the ``sort_keys`` argument is true."
msgstr ""
"JSON-avkodningens prestanda har förbättrats och minnesförbrukningen har "
"minskat när samma sträng upprepas för flera nycklar.  Dessutom använder JSON-"
"kodningen nu C-hastighetsökningarna när argumentet ``sort_keys`` är sant."

msgid ""
"(Contributed by Antoine Pitrou in :issue:`7451` and by Raymond Hettinger and "
"Antoine Pitrou in :issue:`10314`.)"
msgstr ""
"(Bidrag från Antoine Pitrou i :issue:`7451` och från Raymond Hettinger och "
"Antoine Pitrou i :issue:`10314`.)"

msgid ""
"Recursive locks (created with the :func:`threading.RLock` API) now benefit "
"from a C implementation which makes them as fast as regular locks, and "
"between 10x and 15x faster than their previous pure Python implementation."
msgstr ""
"Rekursiva lås (skapade med API:et :func:`threading.RLock`) har nu en C-"
"implementering som gör dem lika snabba som vanliga lås och mellan 10 och 15 "
"gånger snabbare än den tidigare rena Python-implementeringen."

msgid "(Contributed by Antoine Pitrou; :issue:`3001`.)"
msgstr "(Bidrag från Antoine Pitrou; :issue:`3001`.)"

msgid ""
"The fast-search algorithm in stringlib is now used by the :meth:`~str."
"split`, :meth:`~str.rsplit`, :meth:`~str.splitlines` and :meth:`~str."
"replace` methods on :class:`bytes`, :class:`bytearray` and :class:`str` "
"objects. Likewise, the algorithm is also used by :meth:`~str.rfind`, :meth:"
"`~str.rindex`, :meth:`~str.rsplit` and :meth:`~str.rpartition`."
msgstr ""
"Fast-search-algoritmen i stringlib används nu av metoderna :meth:`~str."
"split`, :meth:`~str.rsplit`, :meth:`~str.splitlines` och :meth:`~str."
"replace` för objekten :class:`bytes`, :class:`bytearray` och :class:`str`. "
"På samma sätt används algoritmen också av :meth:`~str.rfind`, :meth:`~str."
"rindex`, :meth:`~str.rsplit` och :meth:`~str.rpartition`."

msgid "(Patch by Florent Xicluna in :issue:`7622` and :issue:`7462`.)"
msgstr "(Patch av Florent Xicluna i :issue:`7622` och :issue:`7462`.)"

msgid ""
"Integer to string conversions now work two \"digits\" at a time, reducing "
"the number of division and modulo operations."
msgstr ""
"Konvertering av heltal till strängar fungerar nu med två \"siffror\" i "
"taget, vilket minskar antalet divisions- och moduloperationer."

msgid "(:issue:`6713` by Gawain Bolton, Mark Dickinson, and Victor Stinner.)"
msgstr "(:issue:`6713` av Gawain Bolton, Mark Dickinson och Victor Stinner.)"

msgid ""
"There were several other minor optimizations. Set differencing now runs "
"faster when one operand is much larger than the other (patch by Andress "
"Bennetts in :issue:`8685`).  The :meth:`!array.repeat` method has a faster "
"implementation (:issue:`1569291` by Alexander Belopolsky). The :class:`~http."
"server.BaseHTTPRequestHandler` has more efficient buffering (:issue:`3709` "
"by Andrew Schaaf).  The :func:`operator.attrgetter` function has been sped-"
"up (:issue:`10160` by Christos Georgiou).  And :class:`~configparser."
"ConfigParser` loads multi-line arguments a bit faster (:issue:`7113` by "
"Łukasz Langa)."
msgstr ""
"Det fanns flera andra mindre optimeringar. Set differencing går nu snabbare "
"när den ena operanden är mycket större än den andra (patch av Andress "
"Bennetts i :issue:`8685`).  Metoden :meth:`!array.repeat` har en snabbare "
"implementation (:issue:`1569291` by Alexander Belopolsky). Klassen :class:"
"`~http.server.BaseHTTPRequestHandler` har effektivare buffring (:issue:"
"`3709` by Andrew Schaaf).  Funktionen :func:`operator.attrgetter` har blivit "
"snabbare (:issue:`10160` by Christos Georgiou).  Och :class:`~configparser."
"ConfigParser` läser in argument på flera rader lite snabbare (:issue:`7113` "
"by Łukasz Langa)."

msgid "Unicode"
msgstr "Unicode"

msgid ""
"Python has been updated to `Unicode 6.0.0 <https://unicode.org/versions/"
"Unicode6.0.0/>`_.  The update to the standard adds over 2,000 new characters "
"including `emoji <https://en.wikipedia.org/wiki/Emoji>`_ symbols which are "
"important for mobile phones."
msgstr ""
"Python har uppdaterats till `Unicode 6.0.0 <https://unicode.org/versions/"
"Unicode6.0.0/>`_.  Uppdateringen av standarden lägger till över 2.000 nya "
"tecken inklusive `emoji <https://en.wikipedia.org/wiki/Emoji>`_-symboler som "
"är viktiga för mobiltelefoner."

msgid ""
"In addition, the updated standard has altered the character properties for "
"two Kannada characters (U+0CF1, U+0CF2) and one New Tai Lue numeric "
"character (U+19DA), making the former eligible for use in identifiers while "
"disqualifying the latter.  For more information, see `Unicode Character "
"Database Changes <https://www.unicode.org/versions/Unicode6.0.0/"
"#Database_Changes>`_."
msgstr ""
"Dessutom har den uppdaterade standarden ändrat teckenegenskaperna för två "
"Kannada-tecken (U+0CF1, U+0CF2) och ett numeriskt New Tai Lue-tecken "
"(U+19DA), vilket gör de förra kvalificerade för användning i identifierare "
"medan de senare diskvalificeras.  För mer information, se `Unicode Character "
"Database Changes <https://www.unicode.org/versions/Unicode6.0.0/"
"#Database_Changes>`_."

msgid "Codecs"
msgstr "Codecs"

msgid "Support was added for *cp720* Arabic DOS encoding (:issue:`1616979`)."
msgstr ""
"Stöd har lagts till för *cp720* arabisk DOS-kodning (:issue:`1616979`)."

msgid ""
"MBCS encoding no longer ignores the error handler argument. In the default "
"strict mode, it raises an :exc:`UnicodeDecodeError` when it encounters an "
"undecodable byte sequence and an :exc:`UnicodeEncodeError` for an "
"unencodable character."
msgstr ""
"MBCS-kodning ignorerar inte längre felhanteringsargumentet. I standardläget "
"strict ger den upphov till ett :exc:`UnicodeDecodeError` när den stöter på "
"en oavkodbar byte-sekvens och ett :exc:`UnicodeEncodeError` för ett "
"oavkodbart tecken."

msgid ""
"The MBCS codec supports ``'strict'`` and ``'ignore'`` error handlers for "
"decoding, and ``'strict'`` and ``'replace'`` for encoding."
msgstr ""
"MBCS codec stöder felhanterarna ``'strict'`` och ``'ignore'`` för avkodning "
"och ``'strict'`` och ``'replace'`` för kodning."

msgid ""
"To emulate Python3.1 MBCS encoding, select the ``'ignore'`` handler for "
"decoding and the ``'replace'`` handler for encoding."
msgstr ""
"För att emulera Python3.1 MBCS-kodning, välj ``'ignore'`` hanteraren för "
"avkodning och ``'replace'`` hanteraren för kodning."

msgid ""
"On Mac OS X, Python decodes command line arguments with ``'utf-8'`` rather "
"than the locale encoding."
msgstr ""
"På Mac OS X avkodar Python kommandoradsargument med ``'utf-8'`` snarare än "
"med lokal kodning."

msgid ""
"By default, :mod:`tarfile` uses ``'utf-8'`` encoding on Windows (instead of "
"``'mbcs'``) and the ``'surrogateescape'`` error handler on all operating "
"systems."
msgstr ""
"Som standard använder :mod:`tarfile` kodningen ``'utf-8`` i Windows (i "
"stället för ``'mbcs``) och felhanteraren ``'surrogateescape`` i alla "
"operativsystem."

msgid "Documentation"
msgstr "Dokumentation"

msgid "The documentation continues to be improved."
msgstr "Dokumentationen fortsätter att förbättras."

msgid ""
"A table of quick links has been added to the top of lengthy sections such "
"as :ref:`built-in-funcs`.  In the case of :mod:`itertools`, the links are "
"accompanied by tables of cheatsheet-style summaries to provide an overview "
"and memory jog without having to read all of the docs."
msgstr ""
"En tabell med snabblänkar har lagts till längst upp i långa avsnitt som :ref:"
"`built-in-funcs`.  När det gäller :mod:`itertools` åtföljs länkarna av "
"tabeller med sammanfattningar i fusklappsstil för att ge en översikt och en "
"minneshjälp utan att behöva läsa hela dokumentationen."

msgid ""
"In some cases, the pure Python source code can be a helpful adjunct to the "
"documentation, so now many modules now feature quick links to the latest "
"version of the source code.  For example, the :mod:`functools` module "
"documentation has a quick link at the top labeled:"
msgstr ""
"I vissa fall kan den rena Python-källkoden vara ett bra komplement till "
"dokumentationen, så nu har många moduler snabblänkar till den senaste "
"versionen av källkoden.  Till exempel har dokumentationen för modulen :mod:"
"`functools` en snabblänk högst upp med texten:"

msgid "**Source code** :source:`Lib/functools.py`."
msgstr "**Källkod** :source:`Lib/functools.py`."

msgid ""
"(Contributed by Raymond Hettinger; see `rationale <https://rhettinger."
"wordpress.com/2011/01/28/open-your-source-more/>`_.)"
msgstr ""
"(Bidrag från Raymond Hettinger; se `rationale <https://rhettinger.wordpress."
"com/2011/01/28/open-your-source-more/>`_.)"

msgid ""
"The docs now contain more examples and recipes.  In particular, :mod:`re` "
"module has an extensive section, :ref:`re-examples`.  Likewise, the :mod:"
"`itertools` module continues to be updated with new :ref:`itertools-recipes`."
msgstr ""
"Dokumentationen innehåller nu fler exempel och recept.  I synnerhet har "
"modulen :mod:`re` ett omfattande avsnitt, :ref:`re-examples`.  På samma sätt "
"fortsätter modulen :mod:`itertools` att uppdateras med nya :ref:`itertools-"
"recipes`."

msgid ""
"The :mod:`datetime` module now has an auxiliary implementation in pure "
"Python. No functionality was changed.  This just provides an easier-to-read "
"alternate implementation."
msgstr ""
"Modulen :mod:`datetime` har nu en hjälpartimplementering i ren Python. Ingen "
"funktionalitet har ändrats.  Detta ger bara en mer lättläst alternativ "
"implementering."

msgid "(Contributed by Alexander Belopolsky in :issue:`9528`.)"
msgstr "(Bidrag från Alexander Belopolsky i :issue:`9528`.)"

msgid ""
"The unmaintained :file:`Demo` directory has been removed.  Some demos were "
"integrated into the documentation, some were moved to the :file:`Tools/demo` "
"directory, and others were removed altogether."
msgstr ""
"Den ounderhållna :file:`Demo`-katalogen har tagits bort.  Vissa demos "
"integrerades i dokumentationen, andra flyttades till katalogen :file:`Tools/"
"demo` och andra togs bort helt och hållet."

msgid "(Contributed by Georg Brandl in :issue:`7962`.)"
msgstr "(Bidrag från Georg Brandl i :issue:`7962`.)"

msgid "IDLE"
msgstr "IDLE"

msgid ""
"The format menu now has an option to clean source files by stripping "
"trailing whitespace."
msgstr ""
"Formatmenyn har nu ett alternativ för att rensa källfiler genom att ta bort "
"efterföljande blanksteg."

msgid "(Contributed by Raymond Hettinger; :issue:`5150`.)"
msgstr "(Bidrag från Raymond Hettinger; :issue:`5150`.)"

msgid "IDLE on Mac OS X now works with both Carbon AquaTk and Cocoa AquaTk."
msgstr "IDLE på Mac OS X fungerar nu med både Carbon AquaTk och Cocoa AquaTk."

msgid ""
"(Contributed by Kevin Walzer, Ned Deily, and Ronald Oussoren; :issue:`6075`.)"
msgstr ""
"(Bidrag från Kevin Walzer, Ned Deily och Ronald Oussoren; :issue:`6075`.)"

msgid "Code Repository"
msgstr "Kodförvar"

msgid ""
"In addition to the existing Subversion code repository at https://svn.python."
"org there is now a `Mercurial <https://www.mercurial-scm.org/>`_ repository "
"at https://hg.python.org/\\ ."
msgstr ""
"Förutom det befintliga Subversion-kodarkivet på https://svn.python.org finns "
"det nu ett `Mercurial <https://www.mercurial-scm.org/>`_-arkiv på https://hg."
"python.org/\\ ."

msgid ""
"After the 3.2 release, there are plans to switch to Mercurial as the primary "
"repository.  This distributed version control system should make it easier "
"for members of the community to create and share external changesets.  See :"
"pep:`385` for details."
msgstr ""
"Efter lanseringen av 3.2 finns det planer på att byta till Mercurial som "
"primärt arkiv.  Detta distribuerade versionskontrollsystem bör göra det "
"enklare för medlemmar i communityn att skapa och dela externa "
"ändringsuppsättningar.  Se :pep:`385` för mer information."

msgid ""
"To learn to use the new version control system, see the `Quick Start "
"<https://www.mercurial-scm.org/wiki/QuickStart>`_ or the `Guide to Mercurial "
"Workflows <https://www.mercurial-scm.org/guide>`_."
msgstr ""
"Om du vill lära dig att använda det nya versionshanteringssystemet kan du "
"läsa \"Snabb start\" <https://www.mercurial-scm.org/wiki/QuickStart>`_ eller "
"\"Guide till Mercurial-arbetsflöden\" <https://www.mercurial-scm.org/"
"guide>`_."

msgid "Build and C API Changes"
msgstr "Ändringar i Build och C API"

msgid "Changes to Python's build process and to the C API include:"
msgstr "Ändringar i Pythons byggprocess och i C API inkluderar:"

msgid ""
"The *idle*, *pydoc* and *2to3* scripts are now installed with a version-"
"specific suffix on ``make altinstall`` (:issue:`10679`)."
msgstr ""
"Skripten *idle*, *pydoc* och *2to3* installeras nu med ett versionsspecifikt "
"suffix på ``make altinstall`` (:issue:`10679``)."

msgid ""
"The C functions that access the Unicode Database now accept and return "
"characters from the full Unicode range, even on narrow unicode builds "
"(Py_UNICODE_TOLOWER, Py_UNICODE_ISDECIMAL, and others).  A visible "
"difference in Python is that :func:`unicodedata.numeric` now returns the "
"correct value for large code points, and :func:`repr` may consider more "
"characters as printable."
msgstr ""
"C-funktionerna som använder Unicode-databasen accepterar och returnerar nu "
"tecken från hela Unicode-intervallet, även på smala Unicode-byggnader "
"(Py_UNICODE_TOLOWER, Py_UNICODE_ISDECIMAL och andra).  En synlig skillnad i "
"Python är att :func:`unicodedata.numeric` nu returnerar rätt värde för stora "
"kodpunkter, och :func:`repr` kan betrakta fler tecken som skrivbara."

msgid ""
"(Reported by Bupjoe Lee and fixed by Amaury Forgeot D'Arc; :issue:`5127`.)"
msgstr ""
"(Rapporterades av Bupjoe Lee och åtgärdades av Amaury Forgeot D'Arc; :issue:"
"`5127`.)"

msgid ""
"Computed gotos are now enabled by default on supported compilers (which are "
"detected by the configure script).  They can still be disabled selectively "
"by specifying ``--without-computed-gotos``."
msgstr ""
"Beräknade gotos är nu aktiverade som standard på kompilatorer som stöds "
"(vilket upptäcks av configure-skriptet).  De kan fortfarande inaktiveras "
"selektivt genom att ange ``--without-computed-gotos``."

msgid "(Contributed by Antoine Pitrou; :issue:`9203`.)"
msgstr "(Bidrag från Antoine Pitrou; :issue:`9203`.)"

msgid ""
"The option ``--with-wctype-functions`` was removed.  The built-in unicode "
"database is now used for all functions."
msgstr ""
"Alternativet ``--with-wctype-functions`` togs bort.  Den inbyggda unicode-"
"databasen används nu för alla funktioner."

msgid "(Contributed by Amaury Forgeot D'Arc; :issue:`9210`.)"
msgstr "(Bidrag från Amaury Forgeot D'Arc; :issue:`9210`.)"

msgid ""
"Hash values are now values of a new type, :c:type:`Py_hash_t`, which is "
"defined to be the same size as a pointer.  Previously they were of type "
"long, which on some 64-bit operating systems is still only 32 bits long.  As "
"a result of this fix, :class:`set` and :class:`dict` can now hold more than "
"``2**32`` entries on builds with 64-bit pointers (previously, they could "
"grow to that size but their performance degraded catastrophically)."
msgstr ""
"Hash-värden är nu värden av en ny typ, :c:type:`Py_hash_t`, som är "
"definierad att vara lika stor som en pekare.  Tidigare var de av typen long, "
"som på vissa 64-bitars operativsystem fortfarande bara är 32 bitar långa.  "
"Som ett resultat av den här korrigeringen kan :class:`set` och :class:`dict` "
"nu innehålla mer än ``2**32`` poster på byggen med 64-bitars pekare "
"(tidigare kunde de växa till den storleken men deras prestanda försämrades "
"katastrofalt)."

msgid ""
"(Suggested by Raymond Hettinger and implemented by Benjamin Peterson; :issue:"
"`9778`.)"
msgstr ""
"(Föreslagen av Raymond Hettinger och implementerad av Benjamin Peterson; :"
"issue:`9778`.)"

msgid ""
"A new macro :c:macro:`!Py_VA_COPY` copies the state of the variable argument "
"list.  It is equivalent to C99 *va_copy* but available on all Python "
"platforms (:issue:`2443`)."
msgstr ""
"Ett nytt makro :c:macro:`!Py_VA_COPY` kopierar tillståndet för variabelns "
"argumentlista.  Det motsvarar C99 *va_copy* men är tillgängligt på alla "
"Python-plattformar (:issue:`2443`)."

msgid ""
"A new C API function :c:func:`!PySys_SetArgvEx` allows an embedded "
"interpreter to set :data:`sys.argv` without also modifying :data:`sys.path` "
"(:issue:`5753`)."
msgstr ""
"En ny C API-funktion :c:func:`!PySys_SetArgvEx` tillåter en inbäddad tolk "
"att ställa in :data:`sys.argv` utan att också ändra :data:`sys.path` (:issue:"
"`5753`)."

msgid ""
":c:func:`!PyEval_CallObject` is now only available in macro form.  The "
"function declaration, which was kept for backwards compatibility reasons, is "
"now removed -- the macro was introduced in 1997 (:issue:`8276`)."
msgstr ""
":c:func:`!PyEval_CallObject` är nu endast tillgänglig i makroform.  "
"Funktionsdeklarationen, som behölls av bakåtkompatibilitetsskäl, är nu "
"borttagen -- makrot introducerades 1997 (:issue:`8276`)."

msgid ""
"There is a new function :c:func:`PyLong_AsLongLongAndOverflow` which is "
"analogous to :c:func:`PyLong_AsLongAndOverflow`.  They both serve to convert "
"Python :class:`int` into a native fixed-width type while providing detection "
"of cases where the conversion won't fit (:issue:`7767`)."
msgstr ""
"Det finns en ny funktion :c:func:`PyLong_AsLongLongAndOverflow` som är "
"analog med :c:func:`PyLong_AsLongAndOverflow`.  De tjänar båda till att "
"konvertera Python :class:`int` till en inbyggd typ med fast bredd samtidigt "
"som de ger möjlighet att upptäcka fall där konverteringen inte passar (:"
"issue:`7767`)."

msgid ""
"The :c:func:`PyUnicode_CompareWithASCIIString` function now returns *not "
"equal* if the Python string is *NUL* terminated."
msgstr ""
"Funktionen :c:func:`PyUnicode_CompareWithASCIIString` returnerar nu *not "
"equal* om Python-strängen är *NUL*-terminerad."

msgid ""
"There is a new function :c:func:`PyErr_NewExceptionWithDoc` that is like :c:"
"func:`PyErr_NewException` but allows a docstring to be specified. This lets "
"C exceptions have the same self-documenting capabilities as their pure "
"Python counterparts (:issue:`7033`)."
msgstr ""
"Det finns en ny funktion :c:func:`PyErr_NewExceptionWithDoc` som är som :c:"
"func:`PyErr_NewException` men tillåter att en docstring anges. Detta gör att "
"C-undantag har samma självdokumenterande funktioner som deras rena Python-"
"motsvarigheter (:issue:`7033`)."

msgid ""
"When compiled with the ``--with-valgrind`` option, the pymalloc allocator "
"will be automatically disabled when running under Valgrind.  This gives "
"improved memory leak detection when running under Valgrind, while taking "
"advantage of pymalloc at other times (:issue:`2422`)."
msgstr ""
"Vid kompilering med alternativet ``--with-valgrind`` kommer "
"allokeringsverktyget pymalloc automatiskt att inaktiveras vid körning under "
"Valgrind.  Detta ger förbättrad detektering av minnesläckor när man kör "
"under Valgrind, samtidigt som man kan dra nytta av pymalloc vid andra "
"tillfällen (:issue:`2422`)."

msgid ""
"Removed the ``O?`` format from the *PyArg_Parse* functions.  The format is "
"no longer used and it had never been documented (:issue:`8837`)."
msgstr ""
"Tog bort ``O?``-formatet från *PyArg_Parse*-funktionerna.  Formatet används "
"inte längre och det har aldrig dokumenterats (:issue:`8837`)."

msgid ""
"There were a number of other small changes to the C-API.  See the `Misc/NEWS "
"<https://github.com/python/cpython/blob/v3.2.6/Misc/NEWS>`__ file for a "
"complete list."
msgstr ""
"Det gjordes ett antal andra små ändringar i C-API.  Se filen `Misc/NEWS "
"<https://github.com/python/cpython/blob/v3.2.6/Misc/NEWS>`__ för en "
"fullständig lista."

msgid ""
"Also, there were a number of updates to the Mac OS X build, see `Mac/"
"BuildScript/README.txt <https://github.com/python/cpython/blob/v3.2.6/Mac/"
"BuildScript/README.txt>`_ for details.  For users running a 32/64-bit build, "
"there is a known problem with the default Tcl/Tk on Mac OS X 10.6. "
"Accordingly, we recommend installing an updated alternative such as "
"`ActiveState Tcl/Tk 8.5.9 <https://web.archive.org/web/20101208191259/"
"https://www.activestate.com/activetcl/downloads>`_\\. See https://www.python."
"org/download/mac/tcltk/ for additional details."
msgstr ""
"Det har också gjorts ett antal uppdateringar av Mac OS X-versionen, se `Mac/"
"BuildScript/README.txt <https://github.com/python/cpython/blob/v3.2.6/Mac/"
"BuildScript/README.txt>`_ för detaljer.  För användare som kör en 32/64-"
"bitars version finns det ett känt problem med standard Tcl/Tk på Mac OS X "
"10.6. Följaktligen rekommenderar vi att du installerar ett uppdaterat "
"alternativ som `ActiveState Tcl/Tk 8.5.9 <https://web.archive.org/"
"web/20101208191259/https://www.activestate.com/activetcl/downloads>`_\\. Se "
"https://www.python.org/download/mac/tcltk/ för ytterligare information."

msgid "Porting to Python 3.2"
msgstr "Portning till Python 3.2"

msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr ""
"I det här avsnittet listas tidigare beskrivna ändringar och andra buggfixar "
"som kan kräva ändringar i din kod:"

msgid ""
"The :mod:`configparser` module has a number of clean-ups.  The major change "
"is to replace the old :class:`!ConfigParser` class with long-standing "
"preferred alternative :class:`!SafeConfigParser`.  In addition there are a "
"number of smaller incompatibilities:"
msgstr ""
"Modulen :mod:`configparser` har ett antal upprensningar.  Den största "
"förändringen är att ersätta den gamla :class:`!ConfigParser`-klassen med det "
"sedan länge föredragna alternativet :class:`!SafeConfigParser`.  Dessutom "
"finns det ett antal mindre inkompatibiliteter:"

msgid ""
"The interpolation syntax is now validated on :meth:`~configparser."
"ConfigParser.get` and :meth:`~configparser.ConfigParser.set` operations. In "
"the default interpolation scheme, only two tokens with percent signs are "
"valid: ``%(name)s`` and ``%%``, the latter being an escaped percent sign."
msgstr ""
"Syntaxen för interpolering valideras nu för operationerna :meth:"
"`~configparser.ConfigParser.get` och :meth:`~configparser.ConfigParser.set`. "
"I standardinterpolationsschemat är endast två tokens med procenttecken "
"giltiga: ``%(name)s`` och ``%%``, där det senare är ett undangömt "
"procenttecken."

msgid ""
"The :meth:`~configparser.ConfigParser.set` and :meth:`~configparser."
"ConfigParser.add_section` methods now verify that values are actual "
"strings.  Formerly, unsupported types could be introduced unintentionally."
msgstr ""
"Metoderna :meth:`~configparser.ConfigParser.set` och :meth:`~configparser."
"ConfigParser.add_section` kontrollerar nu att värdena är faktiska strängar.  "
"Tidigare kunde typer som inte stöddes införas oavsiktligt."

msgid ""
"Duplicate sections or options from a single source now raise either :exc:"
"`~configparser.DuplicateSectionError` or :exc:`~configparser."
"DuplicateOptionError`.  Formerly, duplicates would silently overwrite a "
"previous entry."
msgstr ""
"Duplicerade avsnitt eller alternativ från en enda källa ger nu upphov till "
"antingen :exc:`~configparser.DuplicateSectionError` eller :exc:"
"`~configparser.DuplicateOptionError`.  Tidigare skulle dubbletter tyst "
"skriva över en tidigare post."

msgid ""
"Inline comments are now disabled by default so now the **;** character can "
"be safely used in values."
msgstr ""
"Inline-kommentarer är nu inaktiverade som standard, så nu kan tecknet **;** "
"användas på ett säkert sätt i värden."

msgid ""
"Comments now can be indented.  Consequently, for **;** or **#** to appear at "
"the start of a line in multiline values, it has to be interpolated.  This "
"keeps comment prefix characters in values from being mistaken as comments."
msgstr ""
"Kommentarer kan nu vara indragna.  För att **;** eller **#** ska visas i "
"början av en rad i värden med flera rader måste de därför interpoleras.  "
"Detta förhindrar att prefixtecken för kommentarer i värden misstas för "
"kommentarer."

msgid ""
"``\"\"`` is now a valid value and is no longer automatically converted to an "
"empty string. For empty strings, use ``\"option =\"`` in a line."
msgstr ""
"``\"\"`` är nu ett giltigt värde och konverteras inte längre automatiskt "
"till en tom sträng. För tomma strängar, använd ``\"option =\"`` i en rad."

msgid ""
"The :mod:`!nntplib` module was reworked extensively, meaning that its APIs "
"are often incompatible with the 3.1 APIs."
msgstr ""
"Modulen :mod:`!nntplib` har genomgått en omfattande omarbetning, vilket "
"innebär att dess API:er ofta är inkompatibla med 3.1 API:erna."

msgid ""
":class:`bytearray` objects can no longer be used as filenames; instead, they "
"should be converted to :class:`bytes`."
msgstr ""
":class:`bytearray`-objekt kan inte längre användas som filnamn; istället bör "
"de konverteras till :class:`bytes`."

msgid ""
"The :meth:`!array.tostring` and :meth:`!array.fromstring` have been renamed "
"to :meth:`array.tobytes() <array.array.tobytes>` and :meth:`array."
"frombytes() <array.array.frombytes>` for clarity.  The old names have been "
"deprecated. (See :issue:`8990`.)"
msgstr ""
":meth:`!array.tostring` och :meth:`!array.fromstring` har bytt namn till :"
"meth:`array.tobytes() <array.array.tobytes>` och :meth:`array.frombytes() "
"<array.array.frombytes>` för tydlighetens skull.  De gamla namnen har "
"utgått. (Se :issue:`8990`.)"

msgid "``PyArg_Parse*()`` functions:"
msgstr "``PyArg_Parse*()`` funktioner:"

msgid "\"t#\" format has been removed: use \"s#\" or \"s*\" instead"
msgstr "formatet \"t#\" har tagits bort: använd \"s#\" eller \"s*\" istället"

msgid "\"w\" and \"w#\" formats has been removed: use \"w*\" instead"
msgstr "formaten \"w\" och \"w#\" har tagits bort: använd \"w*\" istället"

msgid ""
"The :c:type:`!PyCObject` type, deprecated in 3.1, has been removed.  To wrap "
"opaque C pointers in Python objects, the :c:type:`PyCapsule` API should be "
"used instead; the new type has a well-defined interface for passing typing "
"safety information and a less complicated signature for calling a destructor."
msgstr ""
"Typen :c:type:`!PyCObject`, som var föråldrad i 3.1, har tagits bort.  För "
"att paketera opaka C-pekare i Python-objekt bör :c:type:`PyCapsule` API "
"användas istället; den nya typen har ett väldefinierat gränssnitt för att "
"skicka information om typningssäkerhet och en mindre komplicerad signatur "
"för att anropa en destruktor."

msgid ""
"The :func:`!sys.setfilesystemencoding` function was removed because it had a "
"flawed design."
msgstr ""
"Funktionen :func:`!sys.setfilesystemencoding` togs bort eftersom den hade en "
"felaktig design."

msgid ""
"The :func:`random.seed` function and method now salt string seeds with an "
"sha512 hash function.  To access the previous version of *seed* in order to "
"reproduce Python 3.1 sequences, set the *version* argument to *1*, ``random."
"seed(s, version=1)``."
msgstr ""
"Funktionen och metoden :func:`random.seed` saltar nu strängfrön med en "
"sha512-hashfunktion.  För att komma åt den tidigare versionen av *seed* för "
"att reproducera Python 3.1-sekvenser, sätt *version*-argumentet till *1*, "
"``random.seed(s, version=1)``."

msgid ""
"The previously deprecated :func:`!string.maketrans` function has been "
"removed in favor of the static methods :meth:`bytes.maketrans` and :meth:"
"`bytearray.maketrans`.  This change solves the confusion around which types "
"were supported by the :mod:`string` module.  Now, :class:`str`, :class:"
"`bytes`, and :class:`bytearray` each have their own **maketrans** and "
"**translate** methods with intermediate translation tables of the "
"appropriate type."
msgstr ""
"Den tidigare föråldrade funktionen :func:`!string.maketrans` har tagits bort "
"till förmån för de statiska metoderna :meth:`bytes.maketrans` och :meth:"
"`bytearray.maketrans`.  Denna ändring löser förvirringen kring vilka typer "
"som stöds av modulen :mod:`string`.  Nu har :class:`str`, :class:`bytes` "
"och :class:`bytearray` var och en sina egna **maketrans**- och **translate**-"
"metoder med mellanliggande översättningstabeller av lämplig typ."

msgid "(Contributed by Georg Brandl; :issue:`5675`.)"
msgstr "(Bidrag från Georg Brandl; :issue:`5675`.)"

msgid ""
"The previously deprecated :func:`!contextlib.nested` function has been "
"removed in favor of a plain :keyword:`with` statement which can accept "
"multiple context managers.  The latter technique is faster (because it is "
"built-in), and it does a better job finalizing multiple context managers "
"when one of them raises an exception::"
msgstr ""
"Den tidigare föråldrade :func:`!contextlib.nested`-funktionen har tagits "
"bort till förmån för en vanlig :keyword:`with`-sats som kan acceptera flera "
"kontexthanterare.  Den senare tekniken är snabbare (eftersom den är "
"inbyggd), och den gör ett bättre jobb med att avsluta flera kontexthanterare "
"när en av dem ger upphov till ett undantag::"

msgid ""
"with open('mylog.txt') as infile, open('a.out', 'w') as outfile:\n"
"    for line in infile:\n"
"        if '<critical>' in line:\n"
"            outfile.write(line)"
msgstr ""
"med open('mylog.txt') som infile, open('a.out', 'w') som outfile:\n"
"    för rad i infile:\n"
"        if '<critical>' i rad:\n"
"            outfile.write(rad)"

msgid ""
"(Contributed by Georg Brandl and Mattias Brändström; `appspot issue 53094 "
"<https://codereview.appspot.com/53094>`_.)"
msgstr ""
"(Bidrag från Georg Brandl och Mattias Brändström; `appspot issue 53094 "
"<https://codereview.appspot.com/53094>`_.)"

msgid ""
":func:`struct.pack` now only allows bytes for the ``s`` string pack code. "
"Formerly, it would accept text arguments and implicitly encode them to bytes "
"using UTF-8.  This was problematic because it made assumptions about the "
"correct encoding and because a variable-length encoding can fail when "
"writing to fixed length segment of a structure."
msgstr ""
":func:`struct.pack` tillåter nu endast byte för ``s`` strängpaketkoden. "
"Tidigare accepterade den textargument och kodade dem implicit till byte med "
"UTF-8.  Detta var problematiskt eftersom det gjorde antaganden om den "
"korrekta kodningen och eftersom en kodning med variabel längd kan misslyckas "
"när man skriver till ett segment med fast längd i en struktur."

msgid ""
"Code such as ``struct.pack('<6sHHBBB', 'GIF87a', x, y)`` should be rewritten "
"with to use bytes instead of text, ``struct.pack('<6sHHBBB', b'GIF87a', x, "
"y)``."
msgstr ""
"Kod som ``struct.pack('<6sHHBBB', 'GIF87a', x, y)`` bör skrivas om för att "
"använda bytes istället för text, ``struct.pack('<6sHHBBB', b'GIF87a', x, "
"y)``."

msgid ""
"(Discovered by David Beazley and fixed by Victor Stinner; :issue:`10783`.)"
msgstr ""
"(Upptäckt av David Beazley och åtgärdad av Victor Stinner; :issue:`10783`.)"

msgid ""
"The :class:`xml.etree.ElementTree` class now raises an :exc:`xml.etree."
"ElementTree.ParseError` when a parse fails. Previously it raised an :exc:"
"`xml.parsers.expat.ExpatError`."
msgstr ""
"Klassen :class:`xml.etree.ElementTree` ger nu upphov till ett :exc:`xml."
"etree.ElementTree.ParseError` när en parsning misslyckas. Tidigare gav den "
"upphov till ett :exc:`xml.parsers.expat.ExpatError`."

msgid ""
"The new, longer :func:`str` value on floats may break doctests which rely on "
"the old output format."
msgstr ""
"Det nya, längre :func:`str`-värdet på floats kan bryta doctests som förlitar "
"sig på det gamla utdataformatet."

msgid ""
"In :class:`subprocess.Popen`, the default value for *close_fds* is now "
"``True`` under Unix; under Windows, it is ``True`` if the three standard "
"streams are set to ``None``, ``False`` otherwise.  Previously, *close_fds* "
"was always ``False`` by default, which produced difficult to solve bugs or "
"race conditions when open file descriptors would leak into the child process."
msgstr ""
"I :class:`subprocess.Popen` är standardvärdet för *close_fds* nu ``True`` "
"under Unix; under Windows är det ``True`` om de tre standardströmmarna är "
"inställda på ``None``, annars ``False``.  Tidigare var *close_fds* alltid "
"``False`` som standard, vilket gjorde det svårt att lösa buggar eller "
"tävlingsförhållanden när öppna filbeskrivare skulle läcka in i barnprocessen."

msgid ""
"Support for legacy HTTP 0.9 has been removed from :mod:`urllib.request` and :"
"mod:`http.client`.  Such support is still present on the server side (in :"
"mod:`http.server`)."
msgstr ""
"Stöd för äldre HTTP 0.9 har tagits bort från :mod:`urllib.request` och :mod:"
"`http.client`.  Sådant stöd finns fortfarande på serversidan (i :mod:`http."
"server`)."

msgid "(Contributed by Antoine Pitrou, :issue:`10711`.)"
msgstr "(Bidrag från Antoine Pitrou, :issue:`10711`.)"

msgid ""
"SSL sockets in timeout mode now raise :exc:`socket.timeout` when a timeout "
"occurs, rather than a generic :exc:`~ssl.SSLError`."
msgstr ""
"SSL-uttag i timeout-läge ger nu upphov till :exc:`socket.timeout` när en "
"timeout inträffar, i stället för ett generiskt :exc:`~ssl.SSLError`."

msgid "(Contributed by Antoine Pitrou, :issue:`10272`.)"
msgstr "(Bidrag från Antoine Pitrou, :issue:`10272`.)"

msgid ""
"The misleading functions :c:func:`!PyEval_AcquireLock` and :c:func:`!"
"PyEval_ReleaseLock` have been officially deprecated.  The thread-state aware "
"APIs (such as :c:func:`PyEval_SaveThread` and :c:func:"
"`PyEval_RestoreThread`) should be used instead."
msgstr ""
"De vilseledande funktionerna :c:func:`!PyEval_AcquireLock` och :c:func:`!"
"PyEval_ReleaseLock` har officiellt utgått.  De trådstatusmedvetna API:erna "
"(t.ex. :c:func:`PyEval_SaveThread` och :c:func:`PyEval_RestoreThread`) bör "
"användas istället."

msgid ""
"Due to security risks, :func:`!asyncore.handle_accept` has been deprecated, "
"and a new function, :func:`!asyncore.handle_accepted`, was added to replace "
"it."
msgstr ""
"På grund av säkerhetsrisker har :func:`!asyncore.handle_accept` utgått och "
"en ny funktion, :func:`!asyncore.handle_accepted`, har lagts till för att "
"ersätta den."

msgid "(Contributed by Giampaolo Rodola in :issue:`6706`.)"
msgstr "(Bidrag från Giampaolo Rodola i :issue:`6706`.)"

msgid ""
"Due to the new :term:`GIL` implementation, :c:func:`!PyEval_InitThreads` "
"cannot be called before :c:func:`Py_Initialize` anymore."
msgstr ""
"På grund av den nya :term:`GIL`-implementationen kan :c:func:`!"
"PyEval_InitThreads` inte längre anropas före :c:func:`Py_Initialize`."
