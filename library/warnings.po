# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!warnings` --- Warning control"
msgstr ":mod:`!warnings` --- Varningskontroll"

msgid "**Source code:** :source:`Lib/warnings.py`"
msgstr "**Källkod:** :source:`Lib/warnings.py`"

msgid ""
"Warning messages are typically issued in situations where it is useful to "
"alert the user of some condition in a program, where that condition "
"(normally) doesn't warrant raising an exception and terminating the "
"program.  For example, one might want to issue a warning when a program uses "
"an obsolete module."
msgstr ""
"Varningsmeddelanden utfärdas vanligtvis i situationer där det är lämpligt "
"att varna användaren för ett visst tillstånd i ett program, där detta "
"tillstånd (normalt) inte motiverar att ett undantag görs och programmet "
"avslutas.  Man kan t.ex. vilja utfärda en varning när ett program använder "
"en föråldrad modul."

msgid ""
"Python programmers issue warnings by calling the :func:`warn` function "
"defined in this module.  (C programmers use :c:func:`PyErr_WarnEx`; see :ref:"
"`exceptionhandling` for details)."
msgstr ""
"Python-programmerare utfärdar varningar genom att anropa funktionen :func:"
"`warn` som definieras i denna modul.  (C-programmerare använder :c:func:"
"`PyErr_WarnEx`; se :ref:`exceptionhandling` för detaljer)."

msgid ""
"Warning messages are normally written to :data:`sys.stderr`, but their "
"disposition can be changed flexibly, from ignoring all warnings to turning "
"them into exceptions.  The disposition of warnings can vary based on the :"
"ref:`warning category <warning-categories>`, the text of the warning "
"message, and the source location where it is issued.  Repetitions of a "
"particular warning for the same source location are typically suppressed."
msgstr ""
"Varningsmeddelanden skrivs normalt till :data:`sys.stderr`, men deras "
"disposition kan ändras på ett flexibelt sätt, från att ignorera alla "
"varningar till att omvandla dem till undantag.  Dispositionen för varningar "
"kan variera beroende på :ref:``warning category <warning-categories>``, "
"texten i varningsmeddelandet och källplatsen där den utfärdades.  "
"Upprepningar av en viss varning för samma källplats undertrycks vanligtvis."

msgid ""
"There are two stages in warning control: first, each time a warning is "
"issued, a determination is made whether a message should be issued or not; "
"next, if a message is to be issued, it is formatted and printed using a user-"
"settable hook."
msgstr ""
"Det finns två steg i varningskontrollen: först, varje gång en varning "
"utfärdas, avgörs om ett meddelande ska utfärdas eller inte; därefter, om ett "
"meddelande ska utfärdas, formateras och skrivs det ut med hjälp av en krok "
"som kan ställas in av användaren."

msgid ""
"The determination whether to issue a warning message is controlled by the :"
"ref:`warning filter <warning-filter>`, which is a sequence of matching rules "
"and actions. Rules can be added to the filter by calling :func:"
"`filterwarnings` and reset to its default state by calling :func:"
"`resetwarnings`."
msgstr ""
"Avgörandet om ett varningsmeddelande ska utfärdas styrs av :ref:``warning "
"filter <warning-filter>``, som är en sekvens av matchande regler och "
"åtgärder. Regler kan läggas till i filtret genom att anropa :func:"
"`filterwarnings` och återställas till dess standardtillstånd genom att "
"anropa :func:`resetwarnings`."

msgid ""
"The printing of warning messages is done by calling :func:`showwarning`, "
"which may be overridden; the default implementation of this function formats "
"the message by calling :func:`formatwarning`, which is also available for "
"use by custom implementations."
msgstr ""
"Utskriften av varningsmeddelanden sker genom anrop av :func:`showwarning`, "
"som kan åsidosättas; standardimplementeringen av denna funktion formaterar "
"meddelandet genom anrop av :func:`formatwarning`, som också kan användas av "
"anpassade implementeringar."

msgid ""
":func:`logging.captureWarnings` allows you to handle all warnings with the "
"standard logging infrastructure."
msgstr ""
":func:`logging.captureWarnings` gör att du kan hantera alla varningar med "
"standardinfrastrukturen för loggning."

msgid "Warning Categories"
msgstr "Varningskategorier"

msgid ""
"There are a number of built-in exceptions that represent warning categories. "
"This categorization is useful to be able to filter out groups of warnings."
msgstr ""
"Det finns ett antal inbyggda undantag som representerar varningskategorier. "
"Denna kategorisering är användbar för att kunna filtrera bort grupper av "
"varningar."

msgid ""
"While these are technically :ref:`built-in exceptions <warning-categories-as-"
"exceptions>`, they are documented here, because conceptually they belong to "
"the warnings mechanism."
msgstr ""
"Även om dessa tekniskt sett är :ref:`inbyggda undantag <warning-categories-"
"as-exceptions>`, dokumenteras de här, eftersom de konceptuellt sett hör till "
"varningsmekanismen."

msgid ""
"User code can define additional warning categories by subclassing one of the "
"standard warning categories.  A warning category must always be a subclass "
"of the :exc:`Warning` class."
msgstr ""
"Användarkod kan definiera ytterligare varningskategorier genom att subklassa "
"en av standardvarningskategorierna.  En varningskategori måste alltid vara "
"en subklass av klassen :exc:`Warning`."

msgid "The following warnings category classes are currently defined:"
msgstr "Följande klasser av varningskategorier är för närvarande definierade:"

msgid "Class"
msgstr "Klass"

msgid "Description"
msgstr "Beskrivning"

msgid ":exc:`Warning`"
msgstr ":exc:`Warning`"

msgid ""
"This is the base class of all warning category classes.  It is a subclass "
"of :exc:`Exception`."
msgstr ""
"Detta är basklassen för alla klasser i varningskategorin.  Den är en "
"underklass till :exc:`Exception`."

msgid ":exc:`UserWarning`"
msgstr ":exc:`UserWarning`"

msgid "The default category for :func:`warn`."
msgstr "Standardkategorin för :func:`warn`."

msgid ":exc:`DeprecationWarning`"
msgstr ":exc:`DeprecationWarning`"

msgid ""
"Base category for warnings about deprecated features when those warnings are "
"intended for other Python developers (ignored by default, unless triggered "
"by code in ``__main__``)."
msgstr ""
"Baskategori för varningar om föråldrade funktioner när dessa varningar är "
"avsedda för andra Python-utvecklare (ignoreras som standard, såvida de inte "
"utlöses av kod i ``__main__``)."

msgid ":exc:`SyntaxWarning`"
msgstr ":exc:`SyntaxWarning`"

msgid "Base category for warnings about dubious syntactic features."
msgstr "Baskategori för varningar om tvivelaktiga syntaktiska egenskaper."

msgid ":exc:`RuntimeWarning`"
msgstr ":exc:`RuntimeWarning`"

msgid "Base category for warnings about dubious runtime features."
msgstr "Baskategori för varningar om tvivelaktiga runtime-funktioner."

msgid ":exc:`FutureWarning`"
msgstr ":exc:`FutureWarning`"

msgid ""
"Base category for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Baskategori för varningar om föråldrade funktioner när dessa varningar är "
"avsedda för slutanvändare av program som är skrivna i Python."

msgid ":exc:`PendingDeprecationWarning`"
msgstr ":exc:`PendingDeprecationWarning`"

msgid ""
"Base category for warnings about features that will be deprecated in the "
"future (ignored by default)."
msgstr ""
"Baskategori för varningar om funktioner som kommer att bli föråldrade i "
"framtiden (ignoreras som standard)."

msgid ":exc:`ImportWarning`"
msgstr ":exc:`ImportWarning`"

msgid ""
"Base category for warnings triggered during the process of importing a "
"module (ignored by default)."
msgstr ""
"Baskategori för varningar som utlöses under import av en modul (ignoreras "
"som standard)."

msgid ":exc:`UnicodeWarning`"
msgstr ":exc:`UnicodeWarning`"

msgid "Base category for warnings related to Unicode."
msgstr "Baskategori för varningar relaterade till Unicode."

msgid ":exc:`BytesWarning`"
msgstr ":exc:`BytesWarning`"

msgid ""
"Base category for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Baskategori för varningar relaterade till :class:`bytes` och :class:"
"`bytearray`."

msgid ":exc:`ResourceWarning`"
msgstr ":exc:`ResourceWarning`"

msgid ""
"Base category for warnings related to resource usage (ignored by default)."
msgstr ""
"Baskategori för varningar relaterade till resursanvändning (ignoreras som "
"standard)."

msgid ""
"Previously :exc:`DeprecationWarning` and :exc:`FutureWarning` were "
"distinguished based on whether a feature was being removed entirely or "
"changing its behaviour. They are now distinguished based on their intended "
"audience and the way they're handled by the default warnings filters."
msgstr ""
"Tidigare skilde sig :exc:`DeprecationWarning` och :exc:`FutureWarning` åt "
"baserat på om en funktion togs bort helt eller ändrade sitt beteende. De "
"skiljer sig nu åt baserat på deras avsedda målgrupp och hur de hanteras av "
"standardfiltren för varningar."

msgid "The Warnings Filter"
msgstr "Filtret för varningar"

msgid ""
"The warnings filter controls whether warnings are ignored, displayed, or "
"turned into errors (raising an exception)."
msgstr ""
"Filtret för varningar styr om varningar ska ignoreras, visas eller omvandlas "
"till fel (skapa ett undantag)."

msgid ""
"Conceptually, the warnings filter maintains an ordered list of filter "
"specifications; any specific warning is matched against each filter "
"specification in the list in turn until a match is found; the filter "
"determines the disposition of the match.  Each entry is a tuple of the form "
"(*action*, *message*, *category*, *module*, *lineno*), where:"
msgstr ""
"Begreppsmässigt upprätthåller varningsfiltret en ordnad lista med "
"filterspecifikationer; en specifik varning matchas mot varje "
"filterspecifikation i listan i tur och ordning tills en matchning hittas; "
"filtret avgör hur matchningen ska hanteras.  Varje post är en tupel av "
"formen (*action*, *message*, *category*, *module*, *lineno*), där:"

msgid "*action* is one of the following strings:"
msgstr "*action* är en av följande strängar:"

msgid "Value"
msgstr "Värde"

msgid "Disposition"
msgstr "Disposition"

msgid "``\"default\"``"
msgstr "``\"standard\"``"

msgid ""
"print the first occurrence of matching warnings for each location (module + "
"line number) where the warning is issued"
msgstr ""
"skriva ut den första förekomsten av matchande varningar för varje plats "
"(modul + radnummer) där varningen utfärdas"

msgid "``\"error\"``"
msgstr "``\"fel\"``"

msgid "turn matching warnings into exceptions"
msgstr "omvandla matchande varningar till undantag"

msgid "``\"ignore\"``"
msgstr "``\"ignorera\"``"

msgid "never print matching warnings"
msgstr "skriv aldrig ut matchande varningar"

msgid "``\"always\"``"
msgstr "``\"alltid\"``"

msgid "always print matching warnings"
msgstr "alltid skriva ut matchande varningar"

msgid "``\"all\"``"
msgstr "``\"alla\"``"

msgid "alias to \"always\""
msgstr "alias till \"alltid\""

msgid "``\"module\"``"
msgstr "``\"modul\"``"

msgid ""
"print the first occurrence of matching warnings for each module where the "
"warning is issued (regardless of line number)"
msgstr ""
"skriva ut den första förekomsten av matchande varningar för varje modul där "
"varningen utfärdas (oavsett radnummer)"

msgid "``\"once\"``"
msgstr "\"en gång\""

msgid ""
"print only the first occurrence of matching warnings, regardless of location"
msgstr ""
"skriv bara ut den första förekomsten av matchande varningar, oavsett plats"

msgid ""
"*message* is a string containing a regular expression that the start of the "
"warning message must match, case-insensitively.  In :option:`-W` and :envvar:"
"`PYTHONWARNINGS`, *message* is a literal string that the start of the "
"warning message must contain (case-insensitively), ignoring any whitespace "
"at the start or end of *message*."
msgstr ""
"*message* är en sträng som innehåller ett reguljärt uttryck som början av "
"varningsmeddelandet måste matcha, utan hänsyn till skiftlägesskillnader.  I :"
"option:`-W` och :envvar:`PYTHONWARNINGS` är *message* en bokstavlig sträng "
"som början av varningsmeddelandet måste innehålla (utan hänsyn till "
"skiftlägesskillnader), varvid eventuella blanksteg i början eller slutet av "
"*message* ignoreras."

msgid ""
"*category* is a class (a subclass of :exc:`Warning`) of which the warning "
"category must be a subclass in order to match."
msgstr ""
"*category* är en klass (en subklass av :exc:`Warning`) som varningskategorin "
"måste vara en subklass av för att matcha."

msgid ""
"*module* is a string containing a regular expression that the start of the "
"fully qualified module name must match, case-sensitively.  In :option:`-W` "
"and :envvar:`PYTHONWARNINGS`, *module* is a literal string that the fully "
"qualified module name must be equal to (case-sensitively), ignoring any "
"whitespace at the start or end of *module*."
msgstr ""
"*module* är en sträng som innehåller ett reguljärt uttryck som början av det "
"fullständigt kvalificerade modulnamnet måste matcha (skiftlägeskänsligt).  "
"I :option:`-W` och :envvar:`PYTHONWARNINGS` är *module* en bokstavlig sträng "
"som det fullständigt kvalificerade modulnamnet måste vara lika med "
"(skiftlägeskänsligt), utan hänsyn till eventuella blanksteg i början eller "
"slutet av *module*."

msgid ""
"*lineno* is an integer that the line number where the warning occurred must "
"match, or ``0`` to match all line numbers."
msgstr ""
"*lineno* är ett heltal som det radnummer där varningen inträffade måste "
"matcha, eller ``0`` för att matcha alla radnummer."

msgid ""
"Since the :exc:`Warning` class is derived from the built-in :exc:`Exception` "
"class, to turn a warning into an error we simply raise ``category(message)``."
msgstr ""
"Eftersom klassen :exc:`Warning` är härledd från den inbyggda klassen :exc:"
"`Exception` kan vi helt enkelt höja ``category(message)`` för att omvandla "
"en varning till ett fel."

msgid ""
"If a warning is reported and doesn't match any registered filter then the "
"\"default\" action is applied (hence its name)."
msgstr ""
"Om en varning rapporteras och inte matchar något registrerat filter "
"tillämpas \"standard\"-åtgärden (därav namnet)."

msgid "Repeated Warning Suppression Criteria"
msgstr "Kriterier för undertryckande av upprepad varning"

msgid ""
"The filters that suppress repeated warnings apply the following criteria to "
"determine if a warning is considered a repeat:"
msgstr ""
"De filter som undertrycker upprepade varningar tillämpar följande kriterier "
"för att avgöra om en varning anses vara upprepad:"

msgid ""
"``\"default\"``: A warning is considered a repeat only if the (*message*, "
"*category*, *module*, *lineno*) are all the same."
msgstr ""
"``\"standard\"``: En varning betraktas som en upprepning endast om "
"(*message*, *category*, *module*, *lineno*) är identiska."

msgid ""
"``\"module\"``: A warning is considered a repeat if the (*message*, "
"*category*, *module*) are the same, ignoring the line number."
msgstr ""
"``\"modul\"``: En varning betraktas som en upprepning om (*message*, "
"*category*, *module*) är desamma, utan hänsyn till radnummer."

msgid ""
"``\"once\"``: A warning is considered a repeat if the (*message*, "
"*category*) are the same, ignoring the module and line number."
msgstr ""
"``\"en gång\"``: En varning betraktas som en upprepning om (*meddelande*, "
"*kategori*) är desamma, utan hänsyn till modul- och radnummer."

msgid "Describing Warning Filters"
msgstr "Beskrivning av varningsfilter"

msgid ""
"The warnings filter is initialized by :option:`-W` options passed to the "
"Python interpreter command line and the :envvar:`PYTHONWARNINGS` environment "
"variable. The interpreter saves the arguments for all supplied entries "
"without interpretation in :data:`sys.warnoptions`; the :mod:`warnings` "
"module parses these when it is first imported (invalid options are ignored, "
"after printing a message to :data:`sys.stderr`)."
msgstr ""
"Varningsfiltret initieras av :option:`-W` alternativ som skickas till Python-"
"tolkens kommandorad och miljövariabeln :envvar:`PYTHONWARNINGS`. Tolken "
"sparar argumenten för alla medföljande poster utan tolkning i :data:`sys."
"warnoptions`; modulen :mod:`warnings` analyserar dessa när den importeras "
"första gången (ogiltiga alternativ ignoreras efter att ett meddelande "
"skrivits ut till :data:`sys.stderr`)."

msgid ""
"Individual warnings filters are specified as a sequence of fields separated "
"by colons::"
msgstr ""
"Enskilda varningsfilter anges som en sekvens av fält åtskilda med kolon::"

msgid "action:message:category:module:line"
msgstr "åtgärd:meddelande:kategori:modul:linje"

msgid ""
"The meaning of each of these fields is as described in :ref:`warning-"
"filter`. When listing multiple filters on a single line (as for :envvar:"
"`PYTHONWARNINGS`), the individual filters are separated by commas and the "
"filters listed later take precedence over those listed before them (as "
"they're applied left-to-right, and the most recently applied filters take "
"precedence over earlier ones)."
msgstr ""
"Betydelsen av vart och ett av dessa fält beskrivs i :ref:`warning-filter`. "
"När flera filter listas på en rad (som för :envvar:`PYTHONWARNINGS`) "
"separeras de enskilda filtren med kommatecken och de filter som listas "
"senare har företräde framför de som listas före dem (eftersom de tillämpas "
"från vänster till höger och de senast tillämpade filtren har företräde "
"framför de tidigare)."

msgid ""
"Commonly used warning filters apply to either all warnings, warnings in a "
"particular category, or warnings raised by particular modules or packages. "
"Some examples::"
msgstr ""
"Vanligt förekommande varningsfilter gäller antingen alla varningar, "
"varningar i en viss kategori eller varningar som orsakas av vissa moduler "
"eller paket. Några exempel::"

msgid ""
"default                      # Show all warnings (even those ignored by "
"default)\n"
"ignore                       # Ignore all warnings\n"
"error                        # Convert all warnings to errors\n"
"error::ResourceWarning       # Treat ResourceWarning messages as errors\n"
"default::DeprecationWarning  # Show DeprecationWarning messages\n"
"ignore,default:::mymodule    # Only report warnings triggered by "
"\"mymodule\"\n"
"error:::mymodule             # Convert warnings to errors in \"mymodule\""
msgstr ""
"default # Visa alla varningar (även de som ignoreras som standard)\n"
"ignore # Ignorera alla varningar\n"
"error # Konvertera alla varningar till fel\n"
"error::ResourceWarning # Behandla ResourceWarning-meddelanden som fel\n"
"default::DeprecationWarning # Visa DeprecationWarning-meddelanden\n"
"ignore,default:::mymodule # Rapportera bara varningar som utlöses av "
"\"mymodule\"\n"
"error:::mymodule # Konvertera varningar till fel i \"mymodule\""

msgid "Default Warning Filter"
msgstr "Standard varningsfilter"

msgid ""
"By default, Python installs several warning filters, which can be overridden "
"by the :option:`-W` command-line option, the :envvar:`PYTHONWARNINGS` "
"environment variable and calls to :func:`filterwarnings`."
msgstr ""
"Som standard installerar Python flera varningsfilter som kan åsidosättas med "
"kommandoradsalternativet :option:`-W`, miljövariabeln :envvar:"
"`PYTHONWARNINGS` och anrop till :func:`filterwarnings`."

msgid ""
"In regular release builds, the default warning filter has the following "
"entries (in order of precedence)::"
msgstr ""
"I vanliga versionsversioner har standardvarningsfiltret följande poster (i "
"prioritetsordning)::"

msgid ""
"default::DeprecationWarning:__main__\n"
"ignore::DeprecationWarning\n"
"ignore::PendingDeprecationWarning\n"
"ignore::ImportWarning\n"
"ignore::ResourceWarning"
msgstr ""
"default::DeprecationWarning:__main__\n"
"ignorera::DeprecationWarning\n"
"ignore::PendingDeprecationWarning\n"
"ignore::ImportWarning\n"
"ignore::ResourceWarning"

msgid ""
"In a :ref:`debug build <debug-build>`, the list of default warning filters "
"is empty."
msgstr ""
"I en :ref:`debug build <debug-build>` är listan över standardvarningsfilter "
"tom."

msgid ""
":exc:`DeprecationWarning` is now ignored by default in addition to :exc:"
"`PendingDeprecationWarning`."
msgstr ""
":exc:`DeprecationWarning` ignoreras nu som standard i tillägg till :exc:"
"`PendingDeprecationWarning`."

msgid ""
":exc:`DeprecationWarning` is once again shown by default when triggered "
"directly by code in ``__main__``."
msgstr ""
":exc:`DeprecationWarning` visas återigen som standard när den utlöses direkt "
"av kod i ``__main__``."

msgid ""
":exc:`BytesWarning` no longer appears in the default filter list and is "
"instead configured via :data:`sys.warnoptions` when :option:`-b` is "
"specified twice."
msgstr ""
":exc:`BytesWarning` visas inte längre i standardfilterlistan och "
"konfigureras istället via :data:`sys.warnoptions` när :option:`-b` anges två "
"gånger."

msgid "Overriding the default filter"
msgstr "Åsidosätta standardfiltret"

msgid ""
"Developers of applications written in Python may wish to hide *all* Python "
"level warnings from their users by default, and only display them when "
"running tests or otherwise working on the application. The :data:`sys."
"warnoptions` attribute used to pass filter configurations to the interpreter "
"can be used as a marker to indicate whether or not warnings should be "
"disabled::"
msgstr ""
"Utvecklare av applikationer skrivna i Python kanske vill dölja *alla* "
"varningar på Python-nivå från sina användare som standard, och bara visa dem "
"när de kör tester eller på annat sätt arbetar med applikationen. Attributet :"
"data:`sys.warnoptions` som används för att skicka filterkonfigurationer till "
"tolken kan användas som en markör för att ange om varningar ska inaktiveras "
"eller inte::"

msgid ""
"import sys\n"
"\n"
"if not sys.warnoptions:\n"
"    import warnings\n"
"    warnings.simplefilter(\"ignore\")"
msgstr ""
"import sys\n"
"\n"
"if not sys.warnoptions:\n"
"    import warnings\n"
"    warnings.simplefilter(\"ignore\")"

msgid ""
"Developers of test runners for Python code are advised to instead ensure "
"that *all* warnings are displayed by default for the code under test, using "
"code like::"
msgstr ""
"Utvecklare av testlöpare för Python-kod rekommenderas att istället se till "
"att *alla* varningar visas som standard för den kod som testas, med hjälp av "
"kod som::"

msgid ""
"import sys\n"
"\n"
"if not sys.warnoptions:\n"
"    import os, warnings\n"
"    warnings.simplefilter(\"default\") # Change the filter in this process\n"
"    os.environ[\"PYTHONWARNINGS\"] = \"default\" # Also affect subprocesses"
msgstr ""
"import sys\n"
"\n"
"if not sys.warnoptions:\n"
"    import os, warnings\n"
"    warnings.simplefilter(\"default\") # Change the filter in this process\n"
"    os.environ[\"PYTHONWARNINGS\"] = \"default\" # Also affect subprocesses"

msgid ""
"Finally, developers of interactive shells that run user code in a namespace "
"other than ``__main__`` are advised to ensure that :exc:`DeprecationWarning` "
"messages are made visible by default, using code like the following (where "
"``user_ns`` is the module used to execute code entered interactively)::"
msgstr ""
"Slutligen rekommenderas utvecklare av interaktiva skal som kör användarkod i "
"ett annat namnområde än ``__main__`` att se till att :exc:"
"`DeprecationWarning`-meddelanden görs synliga som standard, med hjälp av kod "
"som följande (där ``user_ns`` är den modul som används för att köra kod som "
"matas in interaktivt)::"

msgid ""
"import warnings\n"
"warnings.filterwarnings(\"default\", category=DeprecationWarning,\n"
"                                   module=user_ns.get(\"__name__\"))"
msgstr ""
"import varningar\n"
"warnings.filterwarnings(\"default\", kategori=DeprecationWarning,\n"
"                                   modul=användare_ns.get(\"__name__\"))"

msgid "Temporarily Suppressing Warnings"
msgstr "Tillfälligt undertryckande av varningar"

msgid ""
"If you are using code that you know will raise a warning, such as a "
"deprecated function, but do not want to see the warning (even when warnings "
"have been explicitly configured via the command line), then it is possible "
"to suppress the warning using the :class:`catch_warnings` context manager::"
msgstr ""
"Om du använder kod som du vet kommer att ge upphov till en varning, t.ex. en "
"föråldrad funktion, men inte vill se varningen (även när varningar "
"uttryckligen har konfigurerats via kommandoraden), är det möjligt att "
"undertrycka varningen med hjälp av kontexthanteraren :class:"
"`catch_warnings`::"

msgid ""
"import warnings\n"
"\n"
"def fxn():\n"
"    warnings.warn(\"deprecated\", DeprecationWarning)\n"
"\n"
"with warnings.catch_warnings():\n"
"    warnings.simplefilter(\"ignore\")\n"
"    fxn()"
msgstr ""
"import warnings\n"
"\n"
"def fxn():\n"
"    warnings.warn(\"deprecated\", DeprecationWarning)\n"
"\n"
"with warnings.catch_warnings():\n"
"    warnings.simplefilter(\"ignore\")\n"
"    fxn()"

msgid ""
"While within the context manager all warnings will simply be ignored. This "
"allows you to use known-deprecated code without having to see the warning "
"while not suppressing the warning for other code that might not be aware of "
"its use of deprecated code."
msgstr ""
"När du befinner dig i kontexthanteraren ignoreras alla varningar helt "
"enkelt. Detta gör att du kan använda känd föråldrad kod utan att behöva se "
"varningen samtidigt som varningen inte undertrycks för annan kod som kanske "
"inte är medveten om att den använder föråldrad kod."

msgid ""
"See :ref:`warning-concurrent-safe` for details on the concurrency-safety of "
"the :class:`catch_warnings` context manager when used in programs using "
"multiple threads or async functions."
msgstr ""
"Se :ref:`warning-concurrent-safe` för detaljer om samtidighetssäkerheten för "
"kontexthanteraren :class:`catch_warnings` när den används i program som "
"använder flera trådar eller asynkrona funktioner."

msgid "Testing Warnings"
msgstr "Varningar för testning"

msgid ""
"To test warnings raised by code, use the :class:`catch_warnings` context "
"manager. With it you can temporarily mutate the warnings filter to "
"facilitate your testing. For instance, do the following to capture all "
"raised warnings to check::"
msgstr ""
"Om du vill testa varningar som orsakas av kod använder du kontexthanteraren :"
"class:`catch_warnings`. Med den kan du tillfälligt ändra varningsfiltret för "
"att underlätta din testning. Gör till exempel följande för att fånga upp "
"alla varningar för att kontrollera::"

msgid ""
"import warnings\n"
"\n"
"def fxn():\n"
"    warnings.warn(\"deprecated\", DeprecationWarning)\n"
"\n"
"with warnings.catch_warnings(record=True) as w:\n"
"    # Cause all warnings to always be triggered.\n"
"    warnings.simplefilter(\"always\")\n"
"    # Trigger a warning.\n"
"    fxn()\n"
"    # Verify some things\n"
"    assert len(w) == 1\n"
"    assert issubclass(w[-1].category, DeprecationWarning)\n"
"    assert \"deprecated\" in str(w[-1].message)"
msgstr ""
"import warnings\n"
"\n"
"def fxn():\n"
"    warnings.warn(\"deprecated\", DeprecationWarning)\n"
"\n"
"with warnings.catch_warnings(record=True) as w:\n"
"    # Cause all warnings to always be triggered.\n"
"    warnings.simplefilter(\"always\")\n"
"    # Trigger a warning.\n"
"    fxn()\n"
"    # Verify some things\n"
"    assert len(w) == 1\n"
"    assert issubclass(w[-1].category, DeprecationWarning)\n"
"    assert \"deprecated\" in str(w[-1].message)"

msgid ""
"One can also cause all warnings to be exceptions by using ``error`` instead "
"of ``always``. One thing to be aware of is that if a warning has already "
"been raised because of a ``once``/``default`` rule, then no matter what "
"filters are set the warning will not be seen again unless the warnings "
"registry related to the warning has been cleared."
msgstr ""
"Man kan också få alla varningar att bli undantag genom att använda ``error`` "
"istället för ``always``. En sak man bör vara medveten om är att om en "
"varning redan har tagits upp på grund av en ``once``/`default``-regel, så "
"kommer varningen inte att visas igen oavsett vilka filter som ställs in, "
"såvida inte varningsregistret som är relaterat till varningen har rensats."

msgid ""
"Once the context manager exits, the warnings filter is restored to its state "
"when the context was entered. This prevents tests from changing the warnings "
"filter in unexpected ways between tests and leading to indeterminate test "
"results."
msgstr ""
"När kontexthanteraren avslutas återställs varningsfiltret till det tillstånd "
"som rådde när kontexten skapades. Detta förhindrar att testerna ändrar "
"varningsfiltret på oväntade sätt mellan testerna, vilket leder till "
"obestämda testresultat."

msgid ""
"When testing multiple operations that raise the same kind of warning, it is "
"important to test them in a manner that confirms each operation is raising a "
"new warning (e.g. set warnings to be raised as exceptions and check the "
"operations raise exceptions, check that the length of the warning list "
"continues to increase after each operation, or else delete the previous "
"entries from the warnings list before each new operation)."
msgstr ""
"När du testar flera operationer som ger upphov till samma typ av varning är "
"det viktigt att du testar dem på ett sätt som bekräftar att varje operation "
"ger upphov till en ny varning (t.ex. genom att ställa in att varningar ska "
"ges upphov till undantag och kontrollera att operationerna ger upphov till "
"undantag, kontrollera att varningslistans längd fortsätter att öka efter "
"varje operation, eller radera de tidigare posterna från varningslistan före "
"varje ny operation)."

msgid "Updating Code For New Versions of Dependencies"
msgstr "Uppdatering av kod för nya versioner av beroenden"

msgid ""
"Warning categories that are primarily of interest to Python developers "
"(rather than end users of applications written in Python) are ignored by "
"default."
msgstr ""
"Varningskategorier som främst är av intresse för Python-utvecklare (snarare "
"än slutanvändare av program som skrivits i Python) ignoreras som standard."

msgid ""
"Notably, this \"ignored by default\" list includes :exc:`DeprecationWarning` "
"(for every module except ``__main__``), which means developers should make "
"sure to test their code with typically ignored warnings made visible in "
"order to receive timely notifications of future breaking API changes "
"(whether in the standard library or third party packages)."
msgstr ""
"Noterbart är att denna \"ignoreras som standard\"-lista innehåller :exc:"
"`DeprecationWarning` (för alla moduler utom ``__main__``), vilket innebär "
"att utvecklare bör se till att testa sin kod med typiskt ignorerade "
"varningar synliggjorda för att i god tid få meddelanden om framtida API-"
"ändringar (oavsett om det är i standardbiblioteket eller tredjepartspaket)."

msgid ""
"In the ideal case, the code will have a suitable test suite, and the test "
"runner will take care of implicitly enabling all warnings when running tests "
"(the test runner provided by the :mod:`unittest` module does this)."
msgstr ""
"I det ideala fallet har koden en lämplig testsvit och testköraren tar hand "
"om att implicit aktivera alla varningar när tester körs (testköraren som "
"tillhandahålls av modulen :mod:`unittest` gör detta)."

msgid ""
"In less ideal cases, applications can be checked for use of deprecated "
"interfaces by passing :option:`-Wd <-W>` to the Python interpreter (this is "
"shorthand for :option:`!-W default`) or setting ``PYTHONWARNINGS=default`` "
"in the environment. This enables default handling for all warnings, "
"including those that are ignored by default. To change what action is taken "
"for encountered warnings you can change what argument is passed to :option:`-"
"W` (e.g. :option:`!-W error`). See the :option:`-W` flag for more details on "
"what is possible."
msgstr ""
"I mindre idealiska fall kan applikationer kontrolleras för användning av "
"föråldrade gränssnitt genom att skicka :option:`-Wd <-W>` till Python-tolken "
"(detta är en förkortning för :option:`!-W default`) eller ställa in "
"``PYTHONWARNINGS=default`` i miljön. Detta aktiverar standardhantering för "
"alla varningar, inklusive de som ignoreras som standard. För att ändra "
"vilken åtgärd som vidtas för varningar kan du ändra vilket argument som "
"skickas till :option:`-W` (t.ex. :option:`!-W error`). Se flaggan :option:`-"
"W` för mer information om vad som är möjligt."

msgid "Available Functions"
msgstr "Tillgängliga funktioner"

msgid ""
"Issue a warning, or maybe ignore it or raise an exception.  The *category* "
"argument, if given, must be a :ref:`warning category class <warning-"
"categories>`; it defaults to :exc:`UserWarning`.  Alternatively, *message* "
"can be a :exc:`Warning` instance, in which case *category* will be ignored "
"and ``message.__class__`` will be used. In this case, the message text will "
"be ``str(message)``. This function raises an exception if the particular "
"warning issued is changed into an error by the :ref:`warnings filter "
"<warning-filter>`.  The *stacklevel* argument can be used by wrapper "
"functions written in Python, like this::"
msgstr ""
"Utfärda en varning, eller kanske ignorera den eller skapa ett undantag.  "
"Argumentet *category*, om det anges, måste vara en :ref:``warning category "
"class <warning-categories>``; standard är :exc:`UserWarning`.  Alternativt "
"kan *message* vara en :exc:`Warning`-instans, i vilket fall *category* "
"kommer att ignoreras och ``message.__class__`` kommer att användas. I detta "
"fall kommer meddelandetexten att vara ``str(message)``. Denna funktion ger "
"upphov till ett undantag om den utfärdade varningen ändras till ett fel av :"
"ref:``warnings filter <warning-filter>``.  Argumentet *stacklevel* kan "
"användas av omslagsfunktioner skrivna i Python, så här::"

msgid ""
"def deprecated_api(message):\n"
"    warnings.warn(message, DeprecationWarning, stacklevel=2)"
msgstr ""
"def deprecated_api(meddelande):\n"
"    warnings.warn(message, DeprecationWarning, stacklevel=2)"

msgid ""
"This makes the warning refer to ``deprecated_api``'s caller, rather than to "
"the source of ``deprecated_api`` itself (since the latter would defeat the "
"purpose of the warning message)."
msgstr ""
"Detta gör att varningen hänvisar till ``deprecated_api``'s anropare, snarare "
"än till källan till ``deprecated_api`` själv (eftersom det senare skulle "
"motverka syftet med varningsmeddelandet)."

msgid ""
"The *skip_file_prefixes* keyword argument can be used to indicate which "
"stack frames are ignored when counting stack levels. This can be useful when "
"you want the warning to always appear at call sites outside of a package "
"when a constant *stacklevel* does not fit all call paths or is otherwise "
"challenging to maintain. If supplied, it must be a tuple of strings. When "
"prefixes are supplied, stacklevel is implicitly overridden to be ``max(2, "
"stacklevel)``. To cause a warning to be attributed to the caller from "
"outside of the current package you might write::"
msgstr ""
"Nyckelordsargumentet *skip_file_prefixes* kan användas för att ange vilka "
"stackramar som ska ignoreras när man räknar stacknivåer. Detta kan vara "
"användbart när du vill att varningen alltid ska visas på anropsplatser "
"utanför ett paket när en konstant *stacklevel* inte passar alla anropsvägar "
"eller på annat sätt är svår att underhålla. Om det anges måste det vara en "
"tupel av strängar. När prefix anges åsidosätts stacklevel implicit till att "
"vara ``max(2, stacklevel)``. För att få en varning att tillskrivas den som "
"anropar från utanför det aktuella paketet kan du skriva::"

msgid ""
"# example/lower.py\n"
"_warn_skips = (os.path.dirname(__file__),)\n"
"\n"
"def one_way(r_luxury_yacht=None, t_wobbler_mangrove=None):\n"
"    if r_luxury_yacht:\n"
"        warnings.warn(\"Please migrate to t_wobbler_mangrove=.\",\n"
"                      skip_file_prefixes=_warn_skips)\n"
"\n"
"# example/higher.py\n"
"from . import lower\n"
"\n"
"def another_way(**kw):\n"
"    lower.one_way(**kw)"
msgstr ""
"# example/lower.py\n"
"_warn_skips = (os.path.dirname(__file__),)\n"
"\n"
"def one_way(r_luxury_yacht=None, t_wobbler_mangrove=None):\n"
"    if r_luxury_yacht:\n"
"        warnings.warn(\"Please migrate to t_wobbler_mangrove=.\",\n"
"                      skip_file_prefixes=_warn_skips)\n"
"\n"
"# example/higher.py\n"
"from . import lower\n"
"\n"
"def another_way(**kw):\n"
"    lower.one_way(**kw)"

msgid ""
"This makes the warning refer to both the ``example.lower.one_way()`` and "
"``package.higher.another_way()`` call sites only from calling code living "
"outside of ``example`` package."
msgstr ""
"Detta gör att varningen hänvisar till både anropsställena ``example.lower."
"one_way()`` och ``package.higher.another_way()`` endast vid anrop av kod som "
"ligger utanför ``example``-paketet."

msgid ""
"*source*, if supplied, is the destroyed object which emitted a :exc:"
"`ResourceWarning`."
msgstr ""
"*source*, om det anges, är det förstörda objekt som gav upphov till en :exc:"
"`ResourceWarning`."

msgid "Added *source* parameter."
msgstr "Parametern *source* har lagts till."

msgid "Added *skip_file_prefixes*."
msgstr "Lagt till *skip_file_prefixes*."

msgid ""
"This is a low-level interface to the functionality of :func:`warn`, passing "
"in explicitly the message, category, filename and line number, and "
"optionally the module name and the registry (which should be the "
"``__warningregistry__`` dictionary of the module).  The module name defaults "
"to the filename with ``.py`` stripped; if no registry is passed, the warning "
"is never suppressed. *message* must be a string and *category* a subclass "
"of :exc:`Warning` or *message* may be a :exc:`Warning` instance, in which "
"case *category* will be ignored."
msgstr ""
"Detta är ett lågnivågränssnitt till funktionaliteten i :func:`warn`, som "
"explicit skickar in meddelandet, kategorin, filnamnet och radnumret, samt "
"eventuellt modulnamnet och registret (som bör vara modulens "
"``__warningregistry__``-ordbok).  Modulnamnet är som standard filnamnet med "
"``.py`` borttaget; om inget register skickas med undertrycks aldrig "
"varningen. *message* måste vara en sträng och *category* en underklass till :"
"exc:`Warning` eller så kan *message* vara en instans av :exc:`Warning`, i "
"vilket fall *category* ignoreras."

msgid ""
"*module_globals*, if supplied, should be the global namespace in use by the "
"code for which the warning is issued.  (This argument is used to support "
"displaying source for modules found in zipfiles or other non-filesystem "
"import sources)."
msgstr ""
"*module_globals*, om det anges, bör vara det globala namnrymden som används "
"av koden för vilken varningen utfärdas.  (Detta argument används för att "
"visa källan för moduler som finns i zip-filer eller andra importkällor som "
"inte är filsystem)."

msgid "Add the *source* parameter."
msgstr "Lägg till parametern *source*."

msgid ""
"Write a warning to a file.  The default implementation calls "
"``formatwarning(message, category, filename, lineno, line)`` and writes the "
"resulting string to *file*, which defaults to :data:`sys.stderr`.  You may "
"replace this function with any callable by assigning to ``warnings."
"showwarning``. *line* is a line of source code to be included in the warning "
"message; if *line* is not supplied, :func:`showwarning` will try to read the "
"line specified by *filename* and *lineno*."
msgstr ""
"Skriva en varning till en fil.  Standardimplementeringen anropar "
"``formatwarning(message, category, filename, lineno, line)`` och skriver den "
"resulterande strängen till *file*, som är standard för :data:`sys.stderr`.  "
"Du kan ersätta denna funktion med en valfri anropsbar funktion genom att "
"tilldela den till ``warnings.showwarning``. *line* är en rad källkod som ska "
"ingå i varningsmeddelandet; om *line* inte anges kommer :func:`showwarning` "
"att försöka läsa den rad som anges av *filename* och *lineno*."

msgid ""
"Format a warning the standard way.  This returns a string which may contain "
"embedded newlines and ends in a newline.  *line* is a line of source code to "
"be included in the warning message; if *line* is not supplied, :func:"
"`formatwarning` will try to read the line specified by *filename* and "
"*lineno*."
msgstr ""
"Formatera en varning på vanligt sätt.  Detta returnerar en sträng som kan "
"innehålla inbäddade nya rader och som slutar med en ny rad.  *line* är en "
"rad med källkod som ska ingå i varningsmeddelandet; om *line* inte anges "
"kommer :func:`formatwarning` att försöka läsa den rad som anges av "
"*filename* och *lineno*."

msgid ""
"Insert an entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The entry is inserted at the front by default; if "
"*append* is true, it is inserted at the end.  This checks the types of the "
"arguments, compiles the *message* and *module* regular expressions, and "
"inserts them as a tuple in the list of warnings filters.  Entries closer to "
"the front of the list override entries later in the list, if both match a "
"particular warning.  Omitted arguments default to a value that matches "
"everything."
msgstr ""
"Infoga en post i listan över :ref:``warnings filter specifications <warning-"
"filter>`.  Som standard infogas posten längst fram; om *append* är true "
"infogas den i slutet.  Detta kontrollerar argumentens typer, sammanställer "
"de reguljära uttrycken *message* och *module* och infogar dem som en tupel i "
"listan över varningsfilter.  Poster längre fram i listan åsidosätter poster "
"längre fram i listan, om båda matchar en viss varning.  Utelämnade argument "
"får som standard ett värde som matchar allt."

msgid ""
"Insert a simple entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The meaning of the function parameters is as for :func:"
"`filterwarnings`, but regular expressions are not needed as the filter "
"inserted always matches any message in any module as long as the category "
"and line number match."
msgstr ""
"Infoga en enkel post i listan över :ref:``warnings filter specifications "
"<warning-filter>`.  Betydelsen av funktionsparametrarna är densamma som för :"
"func:`filterwarnings`, men reguljära uttryck behövs inte eftersom det "
"infogade filtret alltid matchar alla meddelanden i alla moduler så länge som "
"kategorin och radnumret matchar."

msgid ""
"Reset the warnings filter.  This discards the effect of all previous calls "
"to :func:`filterwarnings`, including that of the :option:`-W` command line "
"options and calls to :func:`simplefilter`."
msgstr ""
"Återställer filtret för varningar.  Detta tar bort effekten av alla tidigare "
"anrop till :func:`filterwarnings`, inklusive effekten av "
"kommandoradsalternativen :option:`-W` och anrop till :func:`simplefilter`."

msgid "Decorator to indicate that a class, function or overload is deprecated."
msgstr ""
"Dekorator för att ange att en klass, funktion eller överbelastning är "
"avskriven."

msgid ""
"When this decorator is applied to an object, deprecation warnings may be "
"emitted at runtime when the object is used. :term:`static type checkers "
"<static type checker>` will also generate a diagnostic on usage of the "
"deprecated object."
msgstr ""
"När denna dekorator används på ett objekt kan varningar om att objektet är "
"föråldrat utfärdas vid körning när objektet används. :term:``static type "
"checkers <static type checker>`` kommer också att generera en diagnos vid "
"användning av det föråldrade objektet."

msgid "Usage::"
msgstr "Användning::"

msgid ""
"from warnings import deprecated\n"
"from typing import overload\n"
"\n"
"@deprecated(\"Use B instead\")\n"
"class A:\n"
"    pass\n"
"\n"
"@deprecated(\"Use g instead\")\n"
"def f():\n"
"    pass\n"
"\n"
"@overload\n"
"@deprecated(\"int support is deprecated\")\n"
"def g(x: int) -> int: ...\n"
"@overload\n"
"def g(x: str) -> int: ..."
msgstr ""
"from warnings import deprecated\n"
"from typing import overload\n"
"\n"
"@deprecated(\"Use B instead\")\n"
"class A:\n"
"    pass\n"
"\n"
"@deprecated(\"Use g instead\")\n"
"def f():\n"
"    pass\n"
"\n"
"@overload\n"
"@deprecated(\"int support is deprecated\")\n"
"def g(x: int) -> int: ...\n"
"@overload\n"
"def g(x: str) -> int: ..."

msgid ""
"The warning specified by *category* will be emitted at runtime on use of "
"deprecated objects. For functions, that happens on calls; for classes, on "
"instantiation and on creation of subclasses. If the *category* is ``None``, "
"no warning is emitted at runtime. The *stacklevel* determines where the "
"warning is emitted. If it is ``1`` (the default), the warning is emitted at "
"the direct caller of the deprecated object; if it is higher, it is emitted "
"further up the stack. Static type checker behavior is not affected by the "
"*category* and *stacklevel* arguments."
msgstr ""
"Den varning som specificeras av *category* kommer att utfärdas vid körning "
"vid användning av föråldrade objekt. För funktioner sker detta vid anrop, "
"för klasser vid instansiering och skapande av underklasser. Om *category* är "
"``None`` avges ingen varning vid körning. *stacklevel* avgör var varningen "
"utfärdas. Om den är ``1`` (standard) skickas varningen till den som direkt "
"anropar det föråldrade objektet; om den är högre skickas den längre upp i "
"stacken. Den statiska typkontrollens beteende påverkas inte av argumenten "
"*category* och *stacklevel*."

msgid ""
"The deprecation message passed to the decorator is saved in the "
"``__deprecated__`` attribute on the decorated object. If applied to an "
"overload, the decorator must be after the :func:`@overload <typing."
"overload>` decorator for the attribute to exist on the overload as returned "
"by :func:`typing.get_overloads`."
msgstr ""
"Deprecation-meddelandet som skickas till dekoratorn sparas i attributet "
"``__deprecated__`` på det dekorerade objektet. Om det tillämpas på en "
"överbelastning måste dekoratorn vara efter dekoratorn :func:`@overload "
"<typing.overload>` för att attributet ska finnas på överbelastningen som "
"returneras av :func:`typing.get_overloads`."

msgid "See :pep:`702`."
msgstr "Se :pep:`702`."

msgid "Available Context Managers"
msgstr "Tillgängliga kontexthanterare"

msgid ""
"A context manager that copies and, upon exit, restores the warnings filter "
"and the :func:`showwarning` function. If the *record* argument is :const:"
"`False` (the default) the context manager returns :class:`None` on entry. If "
"*record* is :const:`True`, a list is returned that is progressively "
"populated with objects as seen by a custom :func:`showwarning` function "
"(which also suppresses output to ``sys.stdout``). Each object in the list "
"has attributes with the same names as the arguments to :func:`showwarning`."
msgstr ""
"En kontexthanterare som kopierar och, vid avslut, återställer "
"varningsfiltret och funktionen :func:`showwarning`. Om argumentet *record* "
"är :const:`False` (standard) returnerar kontexthanteraren :class:`None` vid "
"inmatning. Om *record* är :const:`True` returneras en lista som successivt "
"fylls på med objekt som ses av en anpassad :func:`showwarning`-funktion (som "
"också undertrycker utdata till ``sys.stdout``). Varje objekt i listan har "
"attribut med samma namn som argumenten till :func:`showwarning`."

msgid ""
"The *module* argument takes a module that will be used instead of the module "
"returned when you import :mod:`warnings` whose filter will be protected. "
"This argument exists primarily for testing the :mod:`warnings` module itself."
msgstr ""
"Argumentet *module* tar en modul som kommer att användas istället för den "
"modul som returneras när du importerar :mod:`warnings` vars filter kommer "
"att skyddas. Detta argument finns främst för att testa själva modulen :mod:"
"`warnings`."

msgid ""
"If the *action* argument is not ``None``, the remaining arguments are passed "
"to :func:`simplefilter` as if it were called immediately on entering the "
"context."
msgstr ""
"Om argumentet *action* inte är ``None``, skickas de återstående argumenten "
"till :func:`simplefilter` som om det hade anropats direkt när det kom in i "
"kontexten."

msgid ""
"See :ref:`warning-filter` for the meaning of the *category* and *lineno* "
"parameters."
msgstr ""
"Se :ref:`warning-filter` för betydelsen av parametrarna *category* och "
"*lineno*."

msgid "Added the *action*, *category*, *lineno*, and *append* parameters."
msgstr "Lagt till parametrarna *action*, *category*, *lineno* och *append*."

msgid "Concurrent safety of Context Managers"
msgstr "Samtidig säkerhet för kontexthanterare"

msgid ""
"The behavior of :class:`catch_warnings` context manager depends on the :data:"
"`sys.flags.context_aware_warnings` flag.  If the flag is true, the context "
"manager behaves in a concurrent-safe fashion and otherwise not. Concurrent-"
"safe means that it is both thread-safe and safe to use within :ref:`asyncio "
"coroutines <coroutine>` and tasks.  Being thread-safe means that behavior is "
"predictable in a multi-threaded program.  The flag defaults to true for free-"
"threaded builds and false otherwise."
msgstr ""
"Beteendet hos kontexthanteraren :class:`catch_warnings` beror på flaggan :"
"data:`sys.flags.context_aware_warnings`.  Om flaggan är true beter sig "
"kontexthanteraren på ett concurrent-safe sätt och annars inte. Concurrent-"
"safe innebär att den är både trådsäker och säker att använda inom :ref:"
"`asyncio coroutines <coroutine>` och uppgifter.  Att vara trådsäker innebär "
"att beteendet är förutsägbart i ett flertrådat program.  Flaggan är som "
"standard true för fritt trådade program och false i annat fall."

msgid ""
"If the :data:`~sys.flags.context_aware_warnings` flag is false, then :class:"
"`catch_warnings` will modify the global attributes of the :mod:`warnings` "
"module.  This is not safe if used within a concurrent program (using "
"multiple threads or using asyncio coroutines).  For example, if two or more "
"threads use the :class:`catch_warnings` class at the same time, the behavior "
"is undefined."
msgstr ""
"Om flaggan :data:`~sys.flags.context_aware_warnings` är false kommer :class:"
"`catch_warnings` att ändra de globala attributen för modulen :mod:"
"`warnings`.  Detta är inte säkert om det används i ett samtidigt program "
"(med flera trådar eller asyncio coroutines).  Om t.ex. två eller flera "
"trådar använder klassen :class:`catch_warnings` samtidigt är beteendet "
"odefinierat."

msgid ""
"If the flag is true, :class:`catch_warnings` will not modify global "
"attributes and will instead use a :class:`~contextvars.ContextVar` to store "
"the newly established warning filtering state.  A context variable provides "
"thread-local storage and it makes the use of :class:`catch_warnings` thread-"
"safe."
msgstr ""
"Om flaggan är true kommer :class:`catch_warnings` inte att ändra globala "
"attribut och kommer istället att använda en :class:`~contextvars.ContextVar` "
"för att lagra det nyligen etablerade filtreringstillståndet för varningar.  "
"En kontextvariabel ger trådlokal lagring och det gör användningen av :class:"
"`catch_warnings` trådsäker."

msgid ""
"The *record* parameter of the context handler also behaves differently "
"depending on the value of the flag.  When *record* is true and the flag is "
"false, the context manager works by replacing and then later restoring the "
"module's :func:`showwarning` function.  That is not concurrent-safe."
msgstr ""
"Parametern *record* i kontexthanteraren beter sig också på olika sätt "
"beroende på flaggans värde.  När *record* är true och flaggan är false, "
"fungerar kontexthanteraren genom att ersätta och senare återställa modulens :"
"func:`showwarning`-funktion.  Det är inte simultansäkert."

msgid ""
"When *record* is true and the flag is true, the :func:`showwarning` function "
"is not replaced.  Instead, the recording status is indicated by an internal "
"property in the context variable.  In this case, the :func:`showwarning` "
"function will not be restored when exiting the context handler."
msgstr ""
"När *record* är true och flaggan är true, ersätts inte funktionen :func:"
"`showwarning`.  Istället indikeras inspelningsstatusen av en intern egenskap "
"i kontextvariabeln.  I detta fall kommer funktionen :func:`showwarning` inte "
"att återställas när kontexthanteraren avslutas."

msgid ""
"The :data:`~sys.flags.context_aware_warnings` flag can be set the :option:`-"
"X context_aware_warnings<-X>` command-line option or by the :envvar:"
"`PYTHON_CONTEXT_AWARE_WARNINGS` environment variable."
msgstr ""
"Flaggan :data:`~sys.flags.context_aware_warnings` kan ställas in med "
"kommandoradsalternativet :option:`-X context_aware_warnings<-X>` eller med "
"miljövariabeln :envvar:`PYTHON_CONTEXT_AWARE_WARNINGS`."

msgid ""
"It is likely that most programs that desire thread-safe behaviour of the "
"warnings module will also want to set the :data:`~sys.flags."
"thread_inherit_context` flag to true.  That flag causes threads created by :"
"class:`threading.Thread` to start with a copy of the context variables from "
"the thread starting it.  When true, the context established by :class:"
"`catch_warnings` in one thread will also apply to new threads started by "
"it.  If false, new threads will start with an empty warnings context "
"variable, meaning that any filtering that was established by a :class:"
"`catch_warnings` context manager will no longer be active."
msgstr ""
"Det är troligt att de flesta program som vill ha ett trådsäkert beteende i "
"varningsmodulen också vill sätta flaggan :data:`~sys.flags."
"thread_inherit_context` till true.  Denna flagga gör att trådar som skapas "
"av :class:`threading.Thread` börjar med en kopia av kontextvariablerna från "
"den tråd som startar den.  När den är true kommer kontexten som etablerats "
"av :class:`catch_warnings` i en tråd även att gälla för nya trådar som "
"startas av den.  Om false, kommer nya trådar att starta med en tom warnings-"
"kontextvariabel, vilket innebär att all filtrering som upprättades av en :"
"class:`catch_warnings`-kontexthanterare inte längre kommer att vara aktiv."

msgid ""
"Added the :data:`sys.flags.context_aware_warnings` flag and the use of a "
"context variable for :class:`catch_warnings` if the flag is true.  Previous "
"versions of Python acted as if the flag was always set to false."
msgstr ""
"Lade till :data:`sys.flags.context_aware_warnings`-flaggan och användningen "
"av en kontextvariabel för :class:`catch_warnings` om flaggan är true.  "
"Tidigare versioner av Python agerade som om flaggan alltid var satt till "
"false."

msgid "warnings"
msgstr "varningar"
