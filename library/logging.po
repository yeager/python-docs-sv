# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!logging` --- Logging facility for Python"
msgstr ":mod:`!logging` --- Loggningsfunktion för Python"

msgid "**Source code:** :source:`Lib/logging/__init__.py`"
msgstr "**Källkod:** :source:`Lib/logging/__init__.py`"

msgid ""
"This page contains the API reference information. For tutorial information "
"and discussion of more advanced topics, see"
msgstr ""
"Den här sidan innehåller API-referensinformation. För information om "
"handledning och diskussion om mer avancerade ämnen, se"

msgid ":ref:`Basic Tutorial <logging-basic-tutorial>`"
msgstr ":ref:``Basic Tutorial <logging-basic-tutorial>``"

msgid ":ref:`Advanced Tutorial <logging-advanced-tutorial>`"
msgstr ":ref:`Avancerad handledning <logging-advanced-tutorial>`"

msgid ":ref:`Logging Cookbook <logging-cookbook>`"
msgstr ":ref:`Loggning av kokbok <logging-cookbook>`"

msgid ""
"This module defines functions and classes which implement a flexible event "
"logging system for applications and libraries."
msgstr ""
"Denna modul definierar funktioner och klasser som implementerar ett "
"flexibelt händelseloggningssystem för applikationer och bibliotek."

msgid ""
"The key benefit of having the logging API provided by a standard library "
"module is that all Python modules can participate in logging, so your "
"application log can include your own messages integrated with messages from "
"third-party modules."
msgstr ""
"Den största fördelen med att API:et för loggning tillhandahålls av en "
"standardbiblioteksmodul är att alla Python-moduler kan delta i loggning, så "
"att din applikationslogg kan innehålla dina egna meddelanden integrerade med "
"meddelanden från tredjepartsmoduler."

msgid "Here's a simple example of idiomatic usage: ::"
msgstr "Här är ett enkelt exempel på idiomatisk användning: ::"

msgid ""
"# myapp.py\n"
"import logging\n"
"import mylib\n"
"logger = logging.getLogger(__name__)\n"
"\n"
"def main():\n"
"    logging.basicConfig(filename='myapp.log', level=logging.INFO)\n"
"    logger.info('Started')\n"
"    mylib.do_something()\n"
"    logger.info('Finished')\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""
"# myapp.py\n"
"import logging\n"
"import mylib\n"
"logger = logging.getLogger(__name__)\n"
"\n"
"def main():\n"
"    logging.basicConfig(filename='myapp.log', level=logging.INFO)\n"
"    logger.info('Started')\n"
"    mylib.do_something()\n"
"    logger.info('Finished')\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"

msgid ""
"# mylib.py\n"
"import logging\n"
"logger = logging.getLogger(__name__)\n"
"\n"
"def do_something():\n"
"    logger.info('Doing something')"
msgstr ""
"# mylib.py\n"
"import logging\n"
"logger = logging.getLogger(__name__)\n"
"\n"
"def do_something():\n"
"    logger.info('Doing something')"

msgid "If you run *myapp.py*, you should see this in *myapp.log*:"
msgstr "Om du kör *myapp.py* bör du se detta i *myapp.log*:"

msgid ""
"INFO:__main__:Started\n"
"INFO:mylib:Doing something\n"
"INFO:__main__:Finished"
msgstr ""
"INFO:__main__:Startade\n"
"INFO:mylib:Gör något\n"
"INFO:__main__:Avslutad"

msgid ""
"The key feature of this idiomatic usage is that the majority of code is "
"simply creating a module level logger with ``getLogger(__name__)``, and "
"using that logger to do any needed logging. This is concise, while allowing "
"downstream code fine-grained control if needed. Logged messages to the "
"module-level logger get forwarded to handlers of loggers in higher-level "
"modules, all the way up to the highest-level logger known as the root "
"logger; this approach is known as hierarchical logging."
msgstr ""
"Den viktigaste egenskapen hos denna idiomatiska användning är att "
"majoriteten av koden helt enkelt skapar en logger på modulnivå med "
"``getLogger(__name__)`` och använder den loggern för att göra all nödvändig "
"loggning. Detta är kortfattat, samtidigt som det tillåter nedströmskod "
"finkornig kontroll om det behövs. Loggade meddelanden till loggern på "
"modulnivå vidarebefordras till hanterare av loggrar i moduler på högre "
"nivåer, hela vägen upp till loggern på högsta nivå, känd som rotloggern; "
"detta tillvägagångssätt kallas hierarkisk loggning."

msgid ""
"For logging to be useful, it needs to be configured: setting the levels and "
"destinations for each logger, potentially changing how specific modules log, "
"often based on command-line arguments or application configuration. In most "
"cases, like the one above, only the root logger needs to be so configured, "
"since all the lower level loggers at module level eventually forward their "
"messages to its handlers.  :func:`~logging.basicConfig` provides a quick way "
"to configure the root logger that handles many use cases."
msgstr ""
"För att loggning ska vara användbar måste den konfigureras: ange nivåer och "
"destinationer för varje logger, eventuellt ändra hur specifika moduler "
"loggar, ofta baserat på kommandoradsargument eller programkonfiguration. I "
"de flesta fall, som i fallet ovan, är det bara rotloggaren som behöver "
"konfigureras på detta sätt, eftersom alla loggar på lägre nivåer på "
"modulnivå i slutändan vidarebefordrar sina meddelanden till dess hanterare. :"
"func:`~logging.basicConfig` ger ett snabbt sätt att konfigurera rotloggaren "
"som hanterar många användningsfall."

msgid ""
"The module provides a lot of functionality and flexibility.  If you are "
"unfamiliar with logging, the best way to get to grips with it is to view the "
"tutorials (**see the links above and on the right**)."
msgstr ""
"Modulen ger mycket funktionalitet och flexibilitet.  Om du inte är bekant "
"med loggning är det bästa sättet att komma igång att titta på "
"handledningarna (**se länkarna ovan och till höger**)."

msgid ""
"The basic classes defined by the module, together with their attributes and "
"methods, are listed in the sections below."
msgstr ""
"De grundläggande klasser som definieras av modulen, tillsammans med deras "
"attribut och metoder, listas i avsnitten nedan."

msgid "Loggers expose the interface that application code directly uses."
msgstr "Loggar exponerar det gränssnitt som applikationskoden använder direkt."

msgid ""
"Handlers send the log records (created by loggers) to the appropriate "
"destination."
msgstr ""
"Hanterare skickar loggposter (som skapats av loggar) till lämplig "
"destination."

msgid ""
"Filters provide a finer grained facility for determining which log records "
"to output."
msgstr ""
"Filter ger en mer finfördelad möjlighet att bestämma vilka loggposter som "
"ska matas ut."

msgid "Formatters specify the layout of log records in the final output."
msgstr ""
"Formatterare specificerar layouten för loggposter i den slutliga utskriften."

msgid "Logger Objects"
msgstr "Logger-objekt"

msgid ""
"Loggers have the following attributes and methods.  Note that Loggers should "
"*NEVER* be instantiated directly, but always through the module-level "
"function ``logging.getLogger(name)``.  Multiple calls to :func:`getLogger` "
"with the same name will always return a reference to the same Logger object."
msgstr ""
"Loggrar har följande attribut och metoder.  Observera att loggar *ALDRIG* "
"ska instansieras direkt, utan alltid genom funktionen ``logging."
"getLogger(name)`` på modulnivå.  Flera anrop till :func:`getLogger` med "
"samma namn kommer alltid att returnera en referens till samma Logger-objekt."

msgid ""
"The ``name`` is potentially a period-separated hierarchical value, like "
"``foo.bar.baz`` (though it could also be just plain ``foo``, for example). "
"Loggers that are further down in the hierarchical list are children of "
"loggers higher up in the list.  For example, given a logger with a name of "
"``foo``, loggers with names of ``foo.bar``, ``foo.bar.baz``, and ``foo.bam`` "
"are all descendants of ``foo``.  In addition, all loggers are descendants of "
"the root logger. The logger name hierarchy is analogous to the Python "
"package hierarchy, and identical to it if you organise your loggers on a per-"
"module basis using the recommended construction ``logging."
"getLogger(__name__)``.  That's because in a module, ``__name__`` is the "
"module's name in the Python package namespace."
msgstr ""
"Namnet kan vara ett periodseparerat hierarkiskt värde, t.ex. \"foo.bar."
"baz\" (men det kan också vara bara \"foo\", till exempel). Loggar som ligger "
"längre ner i den hierarkiska listan är barn till loggar högre upp i listan.  "
"Om du till exempel har en logger med namnet ``foo``, är loggrar med namnen "
"``foo.bar``, ``foo.bar.baz`` och ``foo.bam`` alla ättlingar till ``foo``.  "
"Dessutom är alla loggrar ättlingar till rotloggaren. Loggarnas namnhierarki "
"är analog med Pythons pakethierarki, och identisk med den om du organiserar "
"dina loggar per modul med hjälp av den rekommenderade konstruktionen "
"``logging.getLogger(__name__)``.  Det beror på att i en modul är "
"``__name__`` modulens namn i Python-paketets namnrymd."

msgid ""
"This is the logger's name, and is the value that was passed to :func:"
"`getLogger` to obtain the logger."
msgstr ""
"Detta är loggarens namn och är det värde som skickades till :func:"
"`getLogger` för att hämta loggern."

msgid "This attribute should be treated as read-only."
msgstr "Detta attribut bör behandlas som skrivskyddat."

msgid "The threshold of this logger, as set by the :meth:`setLevel` method."
msgstr ""
"Tröskelvärdet för denna logger, som anges med metoden :meth:`setLevel`."

msgid ""
"Do not set this attribute directly - always use :meth:`setLevel`, which has "
"checks for the level passed to it."
msgstr ""
"Ställ inte in detta attribut direkt - använd alltid :meth:`setLevel`, som "
"kontrollerar den nivå som skickas till den."

msgid ""
"The parent logger of this logger. It may change based on later instantiation "
"of loggers which are higher up in the namespace hierarchy."
msgstr ""
"Den här loggarens överordnade logger. Den kan ändras beroende på senare "
"instansiering av loggrar som ligger högre upp i namnrymdshierarkin."

msgid "This value should be treated as read-only."
msgstr "Detta värde bör behandlas som skrivskyddat."

msgid ""
"If this attribute evaluates to true, events logged to this logger will be "
"passed to the handlers of higher level (ancestor) loggers, in addition to "
"any handlers attached to this logger. Messages are passed directly to the "
"ancestor loggers' handlers - neither the level nor filters of the ancestor "
"loggers in question are considered."
msgstr ""
"Om detta attribut utvärderas till true, kommer händelser som loggas i denna "
"logger att skickas till hanterare av loggrar på högre nivå (förfäder), "
"utöver eventuella hanterare som är kopplade till denna logger. Meddelanden "
"skickas direkt till de överordnade loggarnas hanterare - varken nivån eller "
"filtren för de överordnade loggarna i fråga beaktas."

msgid ""
"If this evaluates to false, logging messages are not passed to the handlers "
"of ancestor loggers."
msgstr ""
"Om detta utvärderas till false, skickas inte loggarnas meddelanden till "
"hanterarna av förfädernas loggar."

msgid ""
"Spelling it out with an example: If the propagate attribute of the logger "
"named ``A.B.C`` evaluates to true, any event logged to ``A.B.C`` via a "
"method call such as ``logging.getLogger('A.B.C').error(...)`` will [subject "
"to passing that logger's level and filter settings] be passed in turn to any "
"handlers attached to loggers named ``A.B``, ``A`` and the root logger, after "
"first being passed to any handlers attached to ``A.B.C``. If any logger in "
"the chain ``A.B.C``, ``A.B``, ``A`` has its ``propagate`` attribute set to "
"false, then that is the last logger whose handlers are offered the event to "
"handle, and propagation stops at that point."
msgstr ""
"Stava ut det med ett exempel: Om propagate-attributet för loggern med namnet "
"``A.B.C`` utvärderas till true, kommer alla händelser som loggas till ``A.B."
"C`` via ett metodanrop som ``logging.getLogger('A.B.C').error(...)`` [med "
"förbehåll för att loggarens nivå- och filterinställningar passerar] att i "
"sin tur passera till alla hanterare som är kopplade till loggar med namnen "
"``A.B``, ``A`` och rotloggern, efter att först ha passerat till alla "
"hanterare som är kopplade till ``A.B.C``. Om någon logger i kedjan ``A.B."
"C``, ``A.B``, ``A`` har sitt ``propagate``-attribut satt till false, så är "
"det den sista loggern vars hanterare erbjuds händelsen att hantera, och "
"spridningen stoppas vid den punkten."

msgid "The constructor sets this attribute to ``True``."
msgstr "Konstruktören sätter detta attribut till ``True``."

msgid ""
"If you attach a handler to a logger *and* one or more of its ancestors, it "
"may emit the same record multiple times. In general, you should not need to "
"attach a handler to more than one logger - if you just attach it to the "
"appropriate logger which is highest in the logger hierarchy, then it will "
"see all events logged by all descendant loggers, provided that their "
"propagate setting is left set to ``True``. A common scenario is to attach "
"handlers only to the root logger, and to let propagation take care of the "
"rest."
msgstr ""
"Om du kopplar en hanterare till en logger *och* en eller flera av dess "
"förfäder kan det hända att den skickar ut samma post flera gånger. I "
"allmänhet behöver du inte koppla en hanterare till mer än en logger - om du "
"bara kopplar den till den lämpliga logger som är högst upp i loggerhierarkin "
"kommer den att se alla händelser som loggas av alla loggrar i nedstigande "
"led, förutsatt att deras propagate-inställning är inställd på ``True``. Ett "
"vanligt scenario är att bifoga hanterare endast till rotloggaren och låta "
"spridningen ta hand om resten."

msgid "The list of handlers directly attached to this logger instance."
msgstr ""
"Listan över handläggare som är direkt kopplade till denna loggerinstans."

msgid ""
"This attribute should be treated as read-only; it is normally changed via "
"the :meth:`addHandler` and :meth:`removeHandler` methods, which use locks to "
"ensure thread-safe operation."
msgstr ""
"Detta attribut bör behandlas som skrivskyddat; det ändras normalt via "
"metoderna :meth:`addHandler` och :meth:`removeHandler`, som använder lås för "
"att säkerställa trådsäker drift."

msgid ""
"This attribute disables handling of any events. It is set to ``False`` in "
"the initializer, and only changed by logging configuration code."
msgstr ""
"Detta attribut inaktiverar hantering av alla händelser. Det sätts till "
"``False`` i initialiseraren och ändras endast genom konfigurationskod för "
"loggning."

msgid ""
"Sets the threshold for this logger to *level*. Logging messages which are "
"less severe than *level* will be ignored; logging messages which have "
"severity *level* or higher will be emitted by whichever handler or handlers "
"service this logger, unless a handler's level has been set to a higher "
"severity level than *level*."
msgstr ""
"Sätter tröskelvärdet för denna logger till *level*. Loggmeddelanden som är "
"mindre allvarliga än *level* ignoreras; loggmeddelanden som har "
"allvarlighetsgrad *level* eller högre kommer att skickas ut av den eller de "
"hanterare som betjänar denna logger, såvida inte hanterarens nivå har "
"ställts in på en högre allvarlighetsgrad än *level*."

msgid ""
"When a logger is created, the level is set to :const:`NOTSET` (which causes "
"all messages to be processed when the logger is the root logger, or "
"delegation to the parent when the logger is a non-root logger). Note that "
"the root logger is created with level :const:`WARNING`."
msgstr ""
"När en logger skapas sätts nivån till :const:`NOTSET` (vilket gör att alla "
"meddelanden behandlas när loggern är rotlogger, eller delegeras till "
"föräldern när loggern är en icke-rotlogger). Observera att rotloggaren "
"skapas med nivån :const:`WARNING`."

msgid ""
"The term 'delegation to the parent' means that if a logger has a level of "
"NOTSET, its chain of ancestor loggers is traversed until either an ancestor "
"with a level other than NOTSET is found, or the root is reached."
msgstr ""
"Termen \"delegering till överordnad\" innebär att om en logger har nivån "
"NOTSET, genomkorsas dess kedja av överordnade loggrar tills antingen en "
"överordnad med en annan nivå än NOTSET hittas eller roten nås."

msgid ""
"If an ancestor is found with a level other than NOTSET, then that ancestor's "
"level is treated as the effective level of the logger where the ancestor "
"search began, and is used to determine how a logging event is handled."
msgstr ""
"Om en förfader hittas med en annan nivå än NOTSET, behandlas den förfaderns "
"nivå som den effektiva nivån för den logger där förfaderssökningen började "
"och används för att avgöra hur en logghändelse ska hanteras."

msgid ""
"If the root is reached, and it has a level of NOTSET, then all messages will "
"be processed. Otherwise, the root's level will be used as the effective "
"level."
msgstr ""
"Om roten nås och den har en nivå på NOTSET kommer alla meddelanden att "
"behandlas. I annat fall kommer rotens nivå att användas som effektiv nivå."

msgid "See :ref:`levels` for a list of levels."
msgstr "Se :ref:`levels` för en lista över nivåer."

msgid ""
"The *level* parameter now accepts a string representation of the level such "
"as 'INFO' as an alternative to the integer constants such as :const:`INFO`. "
"Note, however, that levels are internally stored as integers, and methods "
"such as e.g. :meth:`getEffectiveLevel` and :meth:`isEnabledFor` will return/"
"expect to be passed integers."
msgstr ""
"Parametern *level* accepterar nu en strängrepresentation av nivån, t.ex. "
"'INFO', som ett alternativ till heltalskonstanter som :const:`INFO`. "
"Observera dock att nivåer lagras internt som heltal, och metoder som t.ex. :"
"meth:`getEffectiveLevel` och :meth:`isEnabledFor` returnerar/förväntar sig "
"att få heltal skickade till sig."

msgid ""
"Indicates if a message of severity *level* would be processed by this "
"logger. This method checks first the module-level level set by ``logging."
"disable(level)`` and then the logger's effective level as determined by :"
"meth:`getEffectiveLevel`."
msgstr ""
"Anger om ett meddelande med allvarlighetsgrad *level* skulle behandlas av "
"denna logger. Den här metoden kontrollerar först nivån på modulnivå som "
"anges av ``logging.disable(level)`` och sedan loggarens effektiva nivå som "
"bestäms av :meth:`getEffectiveLevel`."

msgid ""
"Indicates the effective level for this logger. If a value other than :const:"
"`NOTSET` has been set using :meth:`setLevel`, it is returned. Otherwise, the "
"hierarchy is traversed towards the root until a value other than :const:"
"`NOTSET` is found, and that value is returned. The value returned is an "
"integer, typically one of :const:`logging.DEBUG`, :const:`logging.INFO` etc."
msgstr ""
"Anger den effektiva nivån för denna logger. Om ett annat värde än :const:"
"`NOTSET` har angetts med :meth:`setLevel`, returneras det. I annat fall "
"genomkorsas hierarkin mot roten tills ett annat värde än :const:`NOTSET` "
"hittas, och det värdet returneras. Värdet som returneras är ett heltal, "
"vanligtvis ett av :const:`logging.DEBUG`, :const:`logging.INFO` etc."

msgid ""
"Returns a logger which is a descendant to this logger, as determined by the "
"suffix. Thus, ``logging.getLogger('abc').getChild('def.ghi')`` would return "
"the same logger as would be returned by ``logging.getLogger('abc.def."
"ghi')``. This is a convenience method, useful when the parent logger is "
"named using e.g. ``__name__`` rather than a literal string."
msgstr ""
"Returnerar en logger som är en ättling till denna logger, vilket bestäms av "
"suffixet. Således skulle ``logging.getLogger('abc').getChild('def.ghi')`` "
"returnera samma logger som skulle returneras av ``logging.getLogger('abc.def."
"ghi')``. Detta är en bekvämlighetsmetod som är användbar när den överordnade "
"loggern namnges med t.ex. ``__name__`` i stället för en bokstavlig sträng."

msgid ""
"Returns a set of loggers which are immediate children of this logger. So for "
"example ``logging.getLogger().getChildren()`` might return a set containing "
"loggers named ``foo`` and ``bar``, but a logger named ``foo.bar`` wouldn't "
"be included in the set. Likewise, ``logging.getLogger('foo').getChildren()`` "
"might return a set including a logger named ``foo.bar``, but it wouldn't "
"include one named ``foo.bar.baz``."
msgstr ""
"Returnerar en uppsättning loggrar som är omedelbara barn till denna logger. "
"Så till exempel kan ``logging.getLogger().getChildren()`` returnera en "
"uppsättning som innehåller loggrar med namnen ``foo`` och ``bar``, men en "
"logger med namnet ``foo.bar`` skulle inte ingå i uppsättningen. På samma "
"sätt kan ``logging.getLogger('foo').getChildren()`` returnera en uppsättning "
"som innehåller en logger med namnet ``foo.bar``, men den skulle inte "
"innehålla en med namnet ``foo.bar.baz``."

msgid ""
"Logs a message with level :const:`DEBUG` on this logger. The *msg* is the "
"message format string, and the *args* are the arguments which are merged "
"into *msg* using the string formatting operator. (Note that this means that "
"you can use keywords in the format string, together with a single dictionary "
"argument.) No % formatting operation is performed on *msg* when no *args* "
"are supplied."
msgstr ""
"Loggar ett meddelande med nivån :const:`DEBUG` på den här loggern. *msg* är "
"meddelandets formatsträng och *args* är de argument som slås samman till "
"*msg* med hjälp av strängformateringsoperatorn. (Observera att detta innebär "
"att du kan använda nyckelord i formatsträngen tillsammans med ett enda "
"ordboksargument) Ingen % formatering utförs på *msg* när inga *args* anges."

msgid ""
"There are four keyword arguments in *kwargs* which are inspected: "
"*exc_info*, *stack_info*, *stacklevel* and *extra*."
msgstr ""
"Det finns fyra nyckelordsargument i *kwargs* som inspekteras: *exc_info*, "
"*stack_info*, *stacklevel* och *extra*."

msgid ""
"If *exc_info* does not evaluate as false, it causes exception information to "
"be added to the logging message. If an exception tuple (in the format "
"returned by :func:`sys.exc_info`) or an exception instance is provided, it "
"is used; otherwise, :func:`sys.exc_info` is called to get the exception "
"information."
msgstr ""
"Om *exc_info* inte utvärderas som false, läggs information om undantaget "
"till i loggmeddelandet. Om en undantagstupel (i det format som returneras "
"av :func:`sys.exc_info`) eller en undantagsinstans tillhandahålls, används "
"den; annars anropas :func:`sys.exc_info` för att hämta "
"undantagsinformationen."

msgid ""
"The second optional keyword argument is *stack_info*, which defaults to "
"``False``. If true, stack information is added to the logging message, "
"including the actual logging call. Note that this is not the same stack "
"information as that displayed through specifying *exc_info*: The former is "
"stack frames from the bottom of the stack up to the logging call in the "
"current thread, whereas the latter is information about stack frames which "
"have been unwound, following an exception, while searching for exception "
"handlers."
msgstr ""
"Det andra valfria nyckelordsargumentet är *stack_info*, som har "
"standardvärdet ``False``. Om det är sant läggs stackinformation till i "
"loggmeddelandet, inklusive det faktiska loggningsanropet. Observera att "
"detta inte är samma stackinformation som den som visas om du anger "
"*exc_info*: Den förstnämnda är stapelramar från botten av stacken fram till "
"loggningsanropet i den aktuella tråden, medan den sistnämnda är information "
"om stapelramar som har rullats upp efter ett undantag när man söker efter "
"undantagshanterare."

msgid ""
"You can specify *stack_info* independently of *exc_info*, e.g. to just show "
"how you got to a certain point in your code, even when no exceptions were "
"raised. The stack frames are printed following a header line which says:"
msgstr ""
"Du kan ange *stack_info* oberoende av *exc_info*, t.ex. om du bara vill visa "
"hur du kom till en viss punkt i din kod, även om inga undantag uppstod. "
"Stackramarna skrivs ut efter en rubrikrad som säger:"

msgid "Stack (most recent call last):"
msgstr "Stack (senaste anropet senast):"

msgid ""
"This mimics the ``Traceback (most recent call last):`` which is used when "
"displaying exception frames."
msgstr ""
"Detta efterliknar ``Traceback (most recent call last):`` som används vid "
"visning av undantagsramar."

msgid ""
"The third optional keyword argument is *stacklevel*, which defaults to "
"``1``. If greater than 1, the corresponding number of stack frames are "
"skipped when computing the line number and function name set in the :class:"
"`LogRecord` created for the logging event. This can be used in logging "
"helpers so that the function name, filename and line number recorded are not "
"the information for the helper function/method, but rather its caller. The "
"name of this parameter mirrors the equivalent one in the :mod:`warnings` "
"module."
msgstr ""
"Det tredje valfria nyckelordsargumentet är *stacklevel*, som har "
"standardvärdet ``1``. Om det är större än 1 hoppas motsvarande antal stack "
"frames över vid beräkning av radnummer och funktionsnamn som anges i :class:"
"`LogRecord` som skapats för loggningshändelsen. Detta kan användas i "
"hjälpfunktioner för loggning så att det funktionsnamn, filnamn och radnummer "
"som registreras inte är information för hjälpfunktionen/metoden, utan för "
"den som anropar den. Namnet på denna parameter speglar motsvarande parameter "
"i modulen :mod:`warnings`."

msgid ""
"The fourth keyword argument is *extra* which can be used to pass a "
"dictionary which is used to populate the :attr:`~object.__dict__` of the :"
"class:`LogRecord` created for the logging event with user-defined "
"attributes. These custom attributes can then be used as you like. For "
"example, they could be incorporated into logged messages. For example::"
msgstr ""
"Det fjärde nyckelordsargumentet är *extra* som kan användas för att skicka "
"en ordbok som används för att fylla i :attr:`~object.__dict__` i :class:"
"`LogRecord` som skapats för loggningshändelsen med användardefinierade "
"attribut. Dessa anpassade attribut kan sedan användas som du vill. De kan t."
"ex. införlivas i loggade meddelanden. Till exempel::"

msgid ""
"FORMAT = '%(asctime)s %(clientip)-15s %(user)-8s %(message)s'\n"
"logging.basicConfig(format=FORMAT)\n"
"d = {'clientip': '192.168.0.1', 'user': 'fbloggs'}\n"
"logger = logging.getLogger('tcpserver')\n"
"logger.warning('Protocol problem: %s', 'connection reset', extra=d)"
msgstr ""
"FORMAT = '%(asctime)s %(clientip)-15s %(user)-8s %(message)s'\n"
"loggning.basicConfig(format=FORMAT)\n"
"d = {'clientip': '192.168.0.1', 'user': 'fbloggs'}\n"
"logger = logging.getLogger('tcpserver')\n"
"logger.warning('Protokollproblem: %s', 'anslutning återställd', extra=d)"

msgid "would print something like"
msgstr "skulle skriva ut något i stil med"

msgid ""
"2006-02-08 22:20:02,165 192.168.0.1 fbloggs  Protocol problem: connection "
"reset"
msgstr ""
"2006-02-08 22:20:02,165 192.168.0.1 fbloggs Protokollproblem: återställning "
"av anslutning"

msgid ""
"The keys in the dictionary passed in *extra* should not clash with the keys "
"used by the logging system. (See the section on :ref:`logrecord-attributes` "
"for more information on which keys are used by the logging system.)"
msgstr ""
"Nycklarna i den ordbok som skickas till *extra* får inte krocka med de "
"nycklar som används av loggningssystemet. (Se avsnittet om :ref:`logrecord-"
"attributes` för mer information om vilka nycklar som används av "
"loggningssystemet)"

msgid ""
"If you choose to use these attributes in logged messages, you need to "
"exercise some care. In the above example, for instance, the :class:"
"`Formatter` has been set up with a format string which expects 'clientip' "
"and 'user' in the attribute dictionary of the :class:`LogRecord`. If these "
"are missing, the message will not be logged because a string formatting "
"exception will occur. So in this case, you always need to pass the *extra* "
"dictionary with these keys."
msgstr ""
"Om du väljer att använda dessa attribut i loggade meddelanden måste du vara "
"lite försiktig. I exemplet ovan har t.ex. :class:`Formatter` konfigurerats "
"med en formatsträng som förväntar sig att 'clientip' och 'user' finns i "
"attributordlistan för :class:`LogRecord`. Om dessa saknas kommer meddelandet "
"inte att loggas eftersom ett undantag för strängformatering inträffar. Så i "
"det här fallet måste du alltid skicka den *extra* ordlistan med dessa "
"nycklar."

msgid ""
"While this might be annoying, this feature is intended for use in "
"specialized circumstances, such as multi-threaded servers where the same "
"code executes in many contexts, and interesting conditions which arise are "
"dependent on this context (such as remote client IP address and "
"authenticated user name, in the above example). In such circumstances, it is "
"likely that specialized :class:`Formatter`\\ s would be used with "
"particular :class:`Handler`\\ s."
msgstr ""
"Även om detta kan vara irriterande är den här funktionen avsedd att användas "
"under speciella omständigheter, t.ex. flertrådade servrar där samma kod körs "
"i många sammanhang och intressanta villkor som uppstår är beroende av detta "
"sammanhang (t.ex. fjärrklientens IP-adress och autentiserat användarnamn i "
"exemplet ovan). Under sådana omständigheter är det troligt att "
"specialiserade :class:`Formatter` s skulle användas med särskilda :class:"
"`Handler` s."

msgid ""
"If no handler is attached to this logger (or any of its ancestors, taking "
"into account the relevant :attr:`Logger.propagate` attributes), the message "
"will be sent to the handler set on :data:`lastResort`."
msgstr ""
"Om ingen hanterare är kopplad till denna logger (eller någon av dess "
"förfäder, med hänsyn till relevanta :attr:`Logger.propagate`-attribut), "
"kommer meddelandet att skickas till den hanterare som är inställd på :data:"
"`lastResort`."

msgid "The *stack_info* parameter was added."
msgstr "Parametern *stack_info* har lagts till."

msgid "The *exc_info* parameter can now accept exception instances."
msgstr "Parametern *exc_info* kan nu acceptera undantagsinstanser."

msgid "The *stacklevel* parameter was added."
msgstr "Parametern *stacklevel* har lagts till."

msgid ""
"Logs a message with level :const:`INFO` on this logger. The arguments are "
"interpreted as for :meth:`debug`."
msgstr ""
"Loggar ett meddelande med nivå :const:`INFO` på denna logger. Argumenten "
"tolkas som för :meth:`debug`."

msgid ""
"Logs a message with level :const:`WARNING` on this logger. The arguments are "
"interpreted as for :meth:`debug`."
msgstr ""
"Loggar ett meddelande med nivå :const:`WARNING` på denna logger. Argumenten "
"tolkas som för :meth:`debug`."

msgid ""
"There is an obsolete method ``warn`` which is functionally identical to "
"``warning``. As ``warn`` is deprecated, please do not use it - use "
"``warning`` instead."
msgstr ""
"Det finns en föråldrad metod ``warn`` som är funktionellt identisk med "
"``warning``. Eftersom ``warn`` är föråldrad, vänligen använd den inte - "
"använd ``warning`` istället."

msgid ""
"Logs a message with level :const:`ERROR` on this logger. The arguments are "
"interpreted as for :meth:`debug`."
msgstr ""
"Loggar ett meddelande med nivån :const:`ERROR` på denna logger. Argumenten "
"tolkas som för :meth:`debug`."

msgid ""
"Logs a message with level :const:`CRITICAL` on this logger. The arguments "
"are interpreted as for :meth:`debug`."
msgstr ""
"Loggar ett meddelande med nivå :const:`CRITICAL` på denna logger. Argumenten "
"tolkas som för :meth:`debug`."

msgid ""
"Logs a message with integer level *level* on this logger. The other "
"arguments are interpreted as for :meth:`debug`."
msgstr ""
"Loggar ett meddelande med heltalsnivån *level* på denna logger. De andra "
"argumenten tolkas som för :meth:`debug`."

msgid ""
"Logs a message with level :const:`ERROR` on this logger. The arguments are "
"interpreted as for :meth:`debug`. Exception info is added to the logging "
"message. This method should only be called from an exception handler."
msgstr ""
"Loggar ett meddelande med nivån :const:`ERROR` på denna logger. Argumenten "
"tolkas som för :meth:`debug`. Undantagsinformation läggs till i "
"logningsmeddelandet. Denna metod bör endast anropas från en "
"undantagshanterare."

msgid "Adds the specified filter *filter* to this logger."
msgstr "Lägger till det angivna filtret *filter* till denna logger."

msgid "Removes the specified filter *filter* from this logger."
msgstr "Tar bort det angivna filtret *filter* från den här loggern."

msgid ""
"Apply this logger's filters to the record and return ``True`` if the record "
"is to be processed. The filters are consulted in turn, until one of them "
"returns a false value. If none of them return a false value, the record will "
"be processed (passed to handlers). If one returns a false value, no further "
"processing of the record occurs."
msgstr ""
"Tillämpa denna loggers filter på posten och returnera ``True`` om posten ska "
"behandlas. Filtren konsulteras i tur och ordning tills ett av dem returnerar "
"ett falskt värde. Om inget av dem returnerar ett falskt värde kommer posten "
"att behandlas (skickas till handläggare). Om ett filter returnerar ett "
"falskt värde sker ingen ytterligare behandling av posten."

msgid "Adds the specified handler *hdlr* to this logger."
msgstr "Lägger till den angivna hanteraren *hdlr* till denna logger."

msgid "Removes the specified handler *hdlr* from this logger."
msgstr "Tar bort den angivna hanteraren *hdlr* från denna logger."

msgid ""
"Finds the caller's source filename and line number. Returns the filename, "
"line number, function name and stack information as a 4-element tuple. The "
"stack information is returned as ``None`` unless *stack_info* is ``True``."
msgstr ""
"Hittar anroparens källfilnamn och radnummer. Returnerar filnamn, radnummer, "
"funktionsnamn och stackinformation som en tupel med 4 element. "
"Stackinformationen returneras som ``None`` om inte *stack_info* är ``True``."

msgid ""
"The *stacklevel* parameter is passed from code calling the :meth:`debug` and "
"other APIs. If greater than 1, the excess is used to skip stack frames "
"before determining the values to be returned. This will generally be useful "
"when calling logging APIs from helper/wrapper code, so that the information "
"in the event log refers not to the helper/wrapper code, but to the code that "
"calls it."
msgstr ""
"Parametern *stacklevel* skickas från kod som anropar :meth:`debug` och andra "
"API:er. Om den är större än 1 används överskottet för att hoppa över "
"stackrutor innan man bestämmer vilka värden som ska returneras. Detta är i "
"allmänhet användbart när loggnings-API:er anropas från hjälp-/omslagskod, så "
"att informationen i händelseloggen inte hänvisar till hjälp-/omslagskoden "
"utan till den kod som anropar den."

msgid ""
"Handles a record by passing it to all handlers associated with this logger "
"and its ancestors (until a false value of *propagate* is found). This method "
"is used for unpickled records received from a socket, as well as those "
"created locally. Logger-level filtering is applied using :meth:`~Logger."
"filter`."
msgstr ""
"Hanterar en post genom att skicka den till alla hanterare som är associerade "
"med denna logger och dess förfäder (tills ett falskt värde för *propagate* "
"hittas). Den här metoden används för obehandlade poster som tas emot från "
"ett uttag, samt för poster som skapas lokalt. Filtrering på loggarnivå görs "
"med :meth:`~Logger.filter`."

msgid ""
"This is a factory method which can be overridden in subclasses to create "
"specialized :class:`LogRecord` instances."
msgstr ""
"Detta är en fabriksmetod som kan åsidosättas i underklasser för att skapa "
"specialiserade :class:`LogRecord`-instanser."

msgid ""
"Checks to see if this logger has any handlers configured. This is done by "
"looking for handlers in this logger and its parents in the logger hierarchy. "
"Returns ``True`` if a handler was found, else ``False``. The method stops "
"searching up the hierarchy whenever a logger with the 'propagate' attribute "
"set to false is found - that will be the last logger which is checked for "
"the existence of handlers."
msgstr ""
"Kontrollerar om denna logger har några hanterare konfigurerade. Detta görs "
"genom att leta efter hanterare i den här loggern och dess föräldrar i "
"loggerhierarkin. Returnerar ``True`` om en hanterare hittades, annars "
"``False``. Metoden slutar att söka uppåt i hierarkin när en logger med "
"attributet 'propagate' inställt på false hittas - det blir den sista loggern "
"som kontrolleras för förekomsten av hanterare."

msgid "Loggers can now be pickled and unpickled."
msgstr "Skogshuggare kan nu bli inlagda och oinlagda."

msgid "Logging Levels"
msgstr "Loggningsnivåer"

msgid ""
"The numeric values of logging levels are given in the following table. These "
"are primarily of interest if you want to define your own levels, and need "
"them to have specific values relative to the predefined levels. If you "
"define a level with the same numeric value, it overwrites the predefined "
"value; the predefined name is lost."
msgstr ""
"De numeriska värdena för loggningsnivåerna anges i följande tabell. Dessa är "
"främst intressanta om du vill definiera dina egna nivåer och vill att de ska "
"ha specifika värden i förhållande till de fördefinierade nivåerna. Om du "
"definierar en nivå med samma numeriska värde, skriver den över det "
"fördefinierade värdet; det fördefinierade namnet försvinner."

msgid "Level"
msgstr "Nivå"

msgid "Numeric value"
msgstr "Numeriskt värde"

msgid "What it means / When to use it"
msgstr "Vad det betyder / När det ska användas"

msgid "0"
msgstr "0"

msgid ""
"When set on a logger, indicates that ancestor loggers are to be consulted to "
"determine the effective level. If that still resolves to :const:`!NOTSET`, "
"then all events are logged. When set on a handler, all events are handled."
msgstr ""
"När den är inställd på en logger indikerar den att föregående loggar ska "
"konsulteras för att bestämma den effektiva nivån. Om detta fortfarande "
"resulterar i :const:`!NOTSET`, loggas alla händelser. När den är inställd på "
"en hanterare hanteras alla händelser."

msgid "10"
msgstr "10"

msgid ""
"Detailed information, typically only of interest to a developer trying to "
"diagnose a problem."
msgstr ""
"Detaljerad information som vanligtvis bara är av intresse för en utvecklare "
"som försöker diagnostisera ett problem."

msgid "20"
msgstr "20"

msgid "Confirmation that things are working as expected."
msgstr "Bekräftelse på att saker och ting fungerar som förväntat."

msgid "30"
msgstr "30"

msgid ""
"An indication that something unexpected happened, or that a problem might "
"occur in the near future (e.g. 'disk space low'). The software is still "
"working as expected."
msgstr ""
"En indikation på att något oväntat har hänt eller att ett problem kan uppstå "
"inom en snar framtid (t.ex. \"lågt diskutrymme\"). Programvaran fungerar "
"fortfarande som förväntat."

msgid "40"
msgstr "40"

msgid ""
"Due to a more serious problem, the software has not been able to perform "
"some function."
msgstr ""
"På grund av ett mer allvarligt problem har programvaran inte kunnat utföra "
"någon funktion."

msgid "50"
msgstr "50"

msgid ""
"A serious error, indicating that the program itself may be unable to "
"continue running."
msgstr ""
"Ett allvarligt fel som indikerar att själva programmet kanske inte kan "
"fortsätta att köras."

msgid "Handler Objects"
msgstr "Handläggarobjekt"

msgid ""
"Handlers have the following attributes and methods. Note that :class:"
"`Handler` is never instantiated directly; this class acts as a base for more "
"useful subclasses. However, the :meth:`!__init__` method in subclasses needs "
"to call :meth:`Handler.__init__`."
msgstr ""
"Hanterare har följande attribut och metoder. Observera att :class:`Handler` "
"aldrig instansieras direkt; denna klass fungerar som en bas för mer "
"användbara subklasser. Metoden :meth:`!__init__` i underklasser måste dock "
"anropa :meth:`Handler.__init__`."

msgid ""
"Initializes the :class:`Handler` instance by setting its level, setting the "
"list of filters to the empty list and creating a lock (using :meth:"
"`createLock`) for serializing access to an I/O mechanism."
msgstr ""
"Initialiserar :class:`Handler`-instansen genom att ange dess nivå, ange "
"listan med filter till den tomma listan och skapa ett lås (med :meth:"
"`createLock`) för serialisering av åtkomst till en I/O-mekanism."

msgid ""
"Initializes a thread lock which can be used to serialize access to "
"underlying I/O functionality which may not be threadsafe."
msgstr ""
"Initialiserar ett trådlås som kan användas för att serialisera åtkomst till "
"underliggande I/O-funktionalitet som kanske inte är trådsäker."

msgid "Acquires the thread lock created with :meth:`createLock`."
msgstr "Förvärvar det trådlås som skapats med :meth:`createLock`."

msgid "Releases the thread lock acquired with :meth:`acquire`."
msgstr "Frigör trådlåset som förvärvats med :meth:`acquire`."

msgid ""
"Sets the threshold for this handler to *level*. Logging messages which are "
"less severe than *level* will be ignored. When a handler is created, the "
"level is set to :const:`NOTSET` (which causes all messages to be processed)."
msgstr ""
"Sätter tröskelvärdet för denna hanterare till *level*. Loggmeddelanden som "
"är mindre allvarliga än *level* ignoreras. När en hanterare skapas sätts "
"nivån till :const:`NOTSET` (vilket gör att alla meddelanden behandlas)."

msgid ""
"The *level* parameter now accepts a string representation of the level such "
"as 'INFO' as an alternative to the integer constants such as :const:`INFO`."
msgstr ""
"Parametern *level* accepterar nu en strängrepresentation av nivån, t.ex. "
"'INFO', som ett alternativ till heltalskonstanter, t.ex. :const:`INFO`."

msgid ""
"Sets the formatter for this handler to *fmt*. The *fmt* argument must be a :"
"class:`Formatter` instance or ``None``."
msgstr ""
"Ställer in formateraren för denna hanterare till *fmt*. Argumentet *fmt* "
"måste vara en instans av :class:`Formatter` eller ``None``."

msgid "Adds the specified filter *filter* to this handler."
msgstr "Lägger till det angivna filtret *filter* till denna hanterare."

msgid "Removes the specified filter *filter* from this handler."
msgstr "Tar bort det angivna filtret *filter* från den här hanteraren."

msgid ""
"Apply this handler's filters to the record and return ``True`` if the record "
"is to be processed. The filters are consulted in turn, until one of them "
"returns a false value. If none of them return a false value, the record will "
"be emitted. If one returns a false value, the handler will not emit the "
"record."
msgstr ""
"Tillämpa den här hanterarens filter på posten och returnera ``True`` om "
"posten ska behandlas. Filtren konsulteras i tur och ordning tills ett av dem "
"returnerar ett falskt värde. Om inget av dem returnerar ett falskt värde "
"kommer posten att sändas ut. Om ett av filtren returnerar ett falskt värde, "
"kommer hanteraren inte att skicka ut posten."

msgid ""
"Ensure all logging output has been flushed. This version does nothing and is "
"intended to be implemented by subclasses."
msgstr ""
"Säkerställ att all loggningsutdata har rensats. Den här versionen gör "
"ingenting och är avsedd att implementeras av underklasser."

msgid ""
"Tidy up any resources used by the handler. This version does no output but "
"removes the handler from an internal map of handlers, which is used for "
"handler lookup by name."
msgstr ""
"Städa upp alla resurser som används av hanteraren. Den här versionen gör "
"ingen utmatning men tar bort hanteraren från en intern karta över hanterare, "
"som används för att söka efter hanterare med namn."

msgid ""
"Subclasses should ensure that this gets called from overridden :meth:`close` "
"methods."
msgstr ""
"Subklasser bör se till att detta anropas från åsidosatta :meth:`close`-"
"metoder."

msgid ""
"Conditionally emits the specified logging record, depending on filters which "
"may have been added to the handler. Wraps the actual emission of the record "
"with acquisition/release of the I/O thread lock."
msgstr ""
"Sänder villkorligt ut den angivna loggningsposten, beroende på filter som "
"kan ha lagts till i hanteraren. Omsluter den faktiska utsändningen av posten "
"med förvärv/lösen av I/O-trådens lås."

msgid ""
"This method should be called from handlers when an exception is encountered "
"during an :meth:`emit` call. If the module-level attribute :data:"
"`raiseExceptions` is ``False``, exceptions get silently ignored. This is "
"what is mostly wanted for a logging system - most users will not care about "
"errors in the logging system, they are more interested in application "
"errors. You could, however, replace this with a custom handler if you wish. "
"The specified record is the one which was being processed when the exception "
"occurred. (The default value of :data:`raiseExceptions` is ``True``, as that "
"is more useful during development)."
msgstr ""
"Denna metod bör anropas från hanterare när ett undantag inträffar under ett "
"anrop av :meth:`emit`. Om modulnivåattributet :data:`raiseExceptions` är "
"``False``, ignoreras undantag i tysthet. Detta är vad som oftast önskas för "
"ett loggningssystem - de flesta användare kommer inte att bry sig om fel i "
"loggningssystemet, de är mer intresserade av applikationsfel. Du kan dock "
"ersätta detta med en anpassad hanterare om du vill. Den angivna posten är "
"den som höll på att bearbetas när undantaget inträffade. (Standardvärdet "
"för :data:`raiseExceptions` är ``True``, eftersom det är mer användbart "
"under utveckling)."

msgid ""
"Do formatting for a record - if a formatter is set, use it. Otherwise, use "
"the default formatter for the module."
msgstr ""
"Gör formatering för en post - om en formaterare är inställd, använd den. "
"Annars används standardformateringen för modulen."

msgid ""
"Do whatever it takes to actually log the specified logging record. This "
"version is intended to be implemented by subclasses and so raises a :exc:"
"`NotImplementedError`."
msgstr ""
"Gör vad som krävs för att faktiskt logga den angivna loggningsposten. Denna "
"version är avsedd att implementeras av underklasser och ger därför upphov "
"till ett :exc:`NotImplementedError`."

msgid ""
"This method is called after a handler-level lock is acquired, which is "
"released after this method returns. When you override this method, note that "
"you should be careful when calling anything that invokes other parts of the "
"logging API which might do locking, because that might result in a deadlock. "
"Specifically:"
msgstr ""
"Denna metod anropas efter att ett lås på hanterarnivå har förvärvats, vilket "
"frigörs efter att denna metod returneras. När du åsidosätter den här "
"metoden, observera att du bör vara försiktig när du anropar något som "
"anropar andra delar av loggnings-API:t som kan göra låsning, eftersom det "
"kan leda till ett dödläge. Specifikt för detta:"

msgid ""
"Logging configuration APIs acquire the module-level lock, and then "
"individual handler-level locks as those handlers are configured."
msgstr ""
"API:er för loggningskonfiguration förvärvar låset på modulnivå och sedan lås "
"på individuell hanterarnivå när dessa hanterare konfigureras."

msgid ""
"Many logging APIs lock the module-level lock. If such an API is called from "
"this method, it could cause a deadlock if a configuration call is made on "
"another thread, because that thread will try to acquire the module-level "
"lock *before* the handler-level lock, whereas this thread tries to acquire "
"the module-level lock *after* the handler-level lock (because in this "
"method, the handler-level lock has already been acquired)."
msgstr ""
"Många API:er för loggning låser låset på modulnivå. Om ett sådant API "
"anropas från den här metoden kan det orsaka ett dödläge om ett "
"konfigurationsanrop görs i en annan tråd, eftersom den tråden kommer att "
"försöka förvärva låset på modulnivå *före* låset på hanterarnivå, medan den "
"här tråden försöker förvärva låset på modulnivå *efter* låset på "
"hanterarnivå (eftersom låset på hanterarnivå redan har förvärvats i den här "
"metoden)."

msgid ""
"For a list of handlers included as standard, see :mod:`logging.handlers`."
msgstr ""
"För en lista över de handlers som ingår som standard, se :mod:`logging."
"handlers`."

msgid "Formatter Objects"
msgstr "Formateringsobjekt"

msgid ""
"Responsible for converting a :class:`LogRecord` to an output string to be "
"interpreted by a human or external system."
msgstr ""
"Ansvarig för att omvandla en :class:`LogRecord` till en utdatasträng som kan "
"tolkas av en människa eller ett externt system."

msgid "Parameters"
msgstr "Parametrar"

msgid ""
"A format string in the given *style* for the logged output as a whole. The "
"possible mapping keys are drawn from the :class:`LogRecord` object's :ref:"
"`logrecord-attributes`. If not specified, ``'%(message)s'`` is used, which "
"is just the logged message."
msgstr ""
"En formatsträng i den angivna *stilen* för den loggade utdata som helhet. De "
"möjliga mappningsnycklarna hämtas från :class:`LogRecord`-objektets :ref:"
"`logrecord-attributes`. Om inget anges används ``'%(message)s'``, vilket "
"bara är det loggade meddelandet."

msgid ""
"A format string in the given *style* for the date/time portion of the logged "
"output. If not specified, the default described in :meth:`formatTime` is "
"used."
msgstr ""
"En formatsträng i den angivna *stilen* för datum/tid-delen av den loggade "
"utdata. Om inget anges används standardvärdet som beskrivs i :meth:"
"`formatTime`."

msgid ""
"Can be one of ``'%'``, ``'{'`` or ``'$'`` and determines how the format "
"string will be merged with its data: using one of :ref:`old-string-"
"formatting` (``%``), :meth:`str.format` (``{``) or :class:`string.Template` "
"(``$``). This only applies to *fmt* and *datefmt* (e.g. ``'%(message)s'`` "
"versus ``'{message}'``), not to the actual log messages passed to the "
"logging methods. However, there are :ref:`other ways <formatting-styles>` to "
"use ``{``- and ``$``-formatting for log messages."
msgstr ""
"Kan vara en av ``'%'``, ``'{'`` eller ``'$'`` och bestämmer hur "
"formatsträngen ska slås samman med dess data: med hjälp av en av :ref:`old-"
"string-formatting` (``%``), :meth:`str.format` (``{``) eller :class:`string."
"Template` (``$``). Detta gäller endast för *fmt* och *datefmt* (t.ex. "
"``'%(message)s'`` jämfört med ``'{message}'``), inte för de faktiska "
"loggmeddelanden som skickas till loggmetoderna. Det finns dock :ref:`andra "
"sätt <formatting-styles>` att använda ``{``- och ``$``-formatering för "
"loggmeddelanden."

msgid ""
"If ``True`` (the default), incorrect or mismatched *fmt* and *style* will "
"raise a :exc:`ValueError`; for example, ``logging.Formatter('%(asctime)s - "
"%(message)s', style='{')``."
msgstr ""
"Om ``True`` (standard) kommer felaktig eller ej matchande *fmt* och *style* "
"att ge upphov till ett :exc:`ValueError`; till exempel ``logging."
"Formatter('%(asctime)s - %(message)s', style='{')``."

msgid ""
"A dictionary with default values to use in custom fields. For example, "
"``logging.Formatter('%(ip)s %(message)s', defaults={\"ip\": None})``"
msgstr ""
"En ordbok med standardvärden som ska användas i anpassade fält. Till exempel "
"``logging.Formatter('%(ip)s %(message)s', defaults={\"ip\": None})``"

msgid "Added the *style* parameter."
msgstr "Lagt till parametern *style*."

msgid "Added the *validate* parameter."
msgstr "Lagt till parametern *validate*."

msgid "Added the *defaults* parameter."
msgstr "Parametern *defaults* har lagts till."

msgid ""
"The record's attribute dictionary is used as the operand to a string "
"formatting operation. Returns the resulting string. Before formatting the "
"dictionary, a couple of preparatory steps are carried out. The *message* "
"attribute of the record is computed using *msg* % *args*. If the formatting "
"string contains ``'(asctime)'``, :meth:`formatTime` is called to format the "
"event time. If there is exception information, it is formatted using :meth:"
"`formatException` and appended to the message. Note that the formatted "
"exception information is cached in attribute *exc_text*. This is useful "
"because the exception information can be pickled and sent across the wire, "
"but you should be careful if you have more than one :class:`Formatter` "
"subclass which customizes the formatting of exception information. In this "
"case, you will have to clear the cached value (by setting the *exc_text* "
"attribute to ``None``) after a formatter has done its formatting, so that "
"the next formatter to handle the event doesn't use the cached value, but "
"recalculates it afresh."
msgstr ""
"Postens attributordbok används som operand i en strängformateringsoperation. "
"Returnerar den resulterande strängen. Innan ordlistan formateras utförs ett "
"par förberedande steg. Attributet *message* för posten beräknas med hjälp av "
"*msg* % *args*. Om formateringssträngen innehåller ``'(asctime)'``, anropas :"
"meth:`formatTime` för att formatera händelsetiden. Om det finns "
"undantagsinformation formateras den med :meth:`formatException` och läggs "
"till i meddelandet. Observera att den formaterade undantagsinformationen "
"cachelagras i attributet *exc_text*. Detta är användbart eftersom "
"undantagsinformationen kan plockas ut och skickas över kabeln, men du bör "
"vara försiktig om du har mer än en :class:`Formatter`-underklass som "
"anpassar formateringen av undantagsinformation. I så fall måste du rensa det "
"cachade värdet (genom att sätta attributet *exc_text* till ``None``) efter "
"att en formaterare har gjort sin formatering, så att nästa formaterare som "
"hanterar händelsen inte använder det cachade värdet, utan räknar om det på "
"nytt."

msgid ""
"If stack information is available, it's appended after the exception "
"information, using :meth:`formatStack` to transform it if necessary."
msgstr ""
"Om stackinformation finns tillgänglig läggs den till efter "
"undantagsinformationen, med hjälp av :meth:`formatStack` för att omvandla "
"den vid behov."

msgid ""
"This method should be called from :meth:`format` by a formatter which wants "
"to make use of a formatted time. This method can be overridden in formatters "
"to provide for any specific requirement, but the basic behavior is as "
"follows: if *datefmt* (a string) is specified, it is used with :func:`time."
"strftime` to format the creation time of the record. Otherwise, the format "
"'%Y-%m-%d %H:%M:%S,uuu' is used, where the uuu part is a millisecond value "
"and the other letters are as per the :func:`time.strftime` documentation.  "
"An example time in this format is ``2003-01-23 00:29:50,411``.  The "
"resulting string is returned."
msgstr ""
"Denna metod bör anropas från :meth:`format` av en formaterare som vill "
"använda en formaterad tid. Denna metod kan åsidosättas i formaterare för att "
"tillgodose specifika krav, men det grundläggande beteendet är följande: om "
"*datefmt* (en sträng) anges, används den med :func:`time.strftime` för att "
"formatera skapelsetiden för posten. Annars används formatet '%Y-%m-%d %H:%M:"
"%S,uuu', där uuu-delen är ett millisekundvärde och de andra bokstäverna är "
"enligt dokumentationen för :func:`time.strftime`.  Ett exempel på tid i "
"detta format är ``2003-01-23 00:29:50,411``.  Den resulterande strängen "
"returneras."

msgid ""
"This function uses a user-configurable function to convert the creation time "
"to a tuple. By default, :func:`time.localtime` is used; to change this for a "
"particular formatter instance, set the ``converter`` attribute to a function "
"with the same signature as :func:`time.localtime` or :func:`time.gmtime`. To "
"change it for all formatters, for example if you want all logging times to "
"be shown in GMT, set the ``converter`` attribute in the ``Formatter`` class."
msgstr ""
"Denna funktion använder en användarkonfigurerbar funktion för att konvertera "
"skapelsetiden till en tupel. Som standard används :func:`time.localtime`; "
"för att ändra detta för en viss formateringsinstans, ställ in attributet "
"``converter`` till en funktion med samma signatur som :func:`time.localtime` "
"eller :func:`time.gmtime`. Om du vill ändra detta för alla formaterare, t."
"ex. om du vill att alla loggningstider ska visas i GMT, anger du attributet "
"``converter`` i klassen ``Formatter``."

msgid ""
"Previously, the default format was hard-coded as in this example: "
"``2010-09-06 22:38:15,292`` where the part before the comma is handled by a "
"strptime format string (``'%Y-%m-%d %H:%M:%S'``), and the part after the "
"comma is a millisecond value. Because strptime does not have a format "
"placeholder for milliseconds, the millisecond value is appended using "
"another format string, ``'%s,%03d'`` --- and both of these format strings "
"have been hardcoded into this method. With the change, these strings are "
"defined as class-level attributes which can be overridden at the instance "
"level when desired. The names of the attributes are ``default_time_format`` "
"(for the strptime format string) and ``default_msec_format`` (for appending "
"the millisecond value)."
msgstr ""
"Tidigare var standardformatet hårdkodat som i det här exemplet: ``2010-09-06 "
"22:38:15,292`` där delen före kommatecknet hanteras av en strptime-"
"formatsträng (``'%Y-%m-%d %H:%M:%S'``) och delen efter kommatecknet är ett "
"millisekundvärde. Eftersom strptime inte har någon formatplatshållare för "
"millisekunder läggs millisekundvärdet till med hjälp av en annan "
"formatsträng, ``'%s,%03d'`` --- och båda dessa formatsträngar har varit "
"hårdkodade i den här metoden. I och med ändringen definieras dessa strängar "
"som attribut på klassnivå som kan åsidosättas på instansnivå när så önskas. "
"Namnen på attributen är ``default_time_format`` (för strptime-"
"formatsträngen) och ``default_msec_format`` (för att lägga till "
"millisekundvärdet)."

msgid "The ``default_msec_format`` can be ``None``."
msgstr "Standard_msec_format kan vara \"ingen\"."

msgid ""
"Formats the specified exception information (a standard exception tuple as "
"returned by :func:`sys.exc_info`) as a string. This default implementation "
"just uses :func:`traceback.print_exception`. The resulting string is "
"returned."
msgstr ""
"Formaterar den angivna undantagsinformationen (en standardtupel för undantag "
"som returneras av :func:`sys.exc_info`) som en sträng. Denna "
"standardimplementering använder bara :func:`traceback.print_exception`. Den "
"resulterande strängen returneras."

msgid ""
"Formats the specified stack information (a string as returned by :func:"
"`traceback.print_stack`, but with the last newline removed) as a string. "
"This default implementation just returns the input value."
msgstr ""
"Formaterar den angivna stackinformationen (en sträng som returneras av :func:"
"`traceback.print_stack`, men med den sista nya raden borttagen) som en "
"sträng. Denna standardimplementering returnerar bara inmatningsvärdet."

msgid ""
"A base formatter class suitable for subclassing when you want to format a "
"number of records. You can pass a :class:`Formatter` instance which you want "
"to use to format each line (that corresponds to a single record). If not "
"specified, the default formatter (which just outputs the event message) is "
"used as the line formatter."
msgstr ""
"En basformateringsklass som lämpar sig för underklassning när du vill "
"formatera ett antal poster. Du kan skicka en :class:`Formatter`-instans som "
"du vill använda för att formatera varje rad (som motsvarar en enda post). Om "
"inget anges används standardformateraren (som bara matar ut "
"händelsemeddelandet) som radformaterare."

msgid ""
"Return a header for a list of *records*. The base implementation just "
"returns the empty string. You will need to override this method if you want "
"specific behaviour, e.g. to show the count of records, a title or a "
"separator line."
msgstr ""
"Returnerar ett sidhuvud för en lista med *poster*. Basimplementeringen "
"returnerar bara den tomma strängen. Du måste åsidosätta den här metoden om "
"du vill ha ett specifikt beteende, t.ex. om du vill visa antalet poster, en "
"titel eller en separationsrad."

msgid ""
"Return a footer for a list of *records*. The base implementation just "
"returns the empty string. You will need to override this method if you want "
"specific behaviour, e.g. to show the count of records or a separator line."
msgstr ""
"Returnerar en sidfot för en lista med *poster*. Basimplementeringen "
"returnerar bara den tomma strängen. Du måste åsidosätta den här metoden om "
"du vill ha ett specifikt beteende, t.ex. om du vill visa antalet poster "
"eller en separationsrad."

msgid ""
"Return formatted text for a list of *records*. The base implementation just "
"returns the empty string if there are no records; otherwise, it returns the "
"concatenation of the header, each record formatted with the line formatter, "
"and the footer."
msgstr ""
"Returnerar formaterad text för en lista med *poster*. Basimplementeringen "
"returnerar bara den tomma strängen om det inte finns några poster; annars "
"returneras konkateneringen av rubriken, varje post som formaterats med "
"radformateraren och sidfoten."

msgid "Filter Objects"
msgstr "Filtrera objekt"

msgid ""
"``Filters`` can be used by ``Handlers`` and ``Loggers`` for more "
"sophisticated filtering than is provided by levels. The base filter class "
"only allows events which are below a certain point in the logger hierarchy. "
"For example, a filter initialized with 'A.B' will allow events logged by "
"loggers 'A.B', 'A.B.C', 'A.B.C.D', 'A.B.D' etc. but not 'A.BB', 'B.A.B' etc. "
"If initialized with the empty string, all events are passed."
msgstr ""
"``Filters`` kan användas av ``Handlers`` och ``Loggers`` för mer "
"sofistikerad filtrering än vad som tillhandahålls av levels. "
"Basfilterklassen tillåter endast händelser som ligger under en viss punkt i "
"loggerhierarkin. Exempelvis kommer ett filter som initieras med \"A.B\" att "
"tillåta händelser som loggas av loggrarna \"A.B\", \"A.B.C\", \"A.B.C.D\", "
"\"A.B.D\" etc. men inte \"A.BB\", \"B.A.B\" etc. Om den initieras med en tom "
"sträng skickas alla händelser vidare."

msgid ""
"Returns an instance of the :class:`Filter` class. If *name* is specified, it "
"names a logger which, together with its children, will have its events "
"allowed through the filter. If *name* is the empty string, allows every "
"event."
msgstr ""
"Returnerar en instans av klassen :class:`Filter`. Om *name* anges, namnges "
"en logger som, tillsammans med sina underordnade loggar, kommer att få sina "
"händelser tillåtna genom filtret. Om *name* är en tom sträng tillåts alla "
"händelser."

msgid ""
"Is the specified record to be logged? Returns false for no, true for yes. "
"Filters can either modify log records in-place or return a completely "
"different record instance which will replace the original log record in any "
"future processing of the event."
msgstr ""
"Ska den angivna posten loggas? Returnerar false för nej, true för ja. Filter "
"kan antingen ändra loggposter på plats eller returnera en helt annan "
"postinstans som kommer att ersätta den ursprungliga loggposten vid framtida "
"behandling av händelsen."

msgid ""
"Note that filters attached to handlers are consulted before an event is "
"emitted by the handler, whereas filters attached to loggers are consulted "
"whenever an event is logged (using :meth:`debug`, :meth:`info`, etc.), "
"before sending an event to handlers. This means that events which have been "
"generated by descendant loggers will not be filtered by a logger's filter "
"setting, unless the filter has also been applied to those descendant loggers."
msgstr ""
"Observera att filter som är kopplade till hanterare konsulteras innan en "
"händelse sänds ut av hanteraren, medan filter som är kopplade till loggrar "
"konsulteras när en händelse loggas (med :meth:`debug`, :meth:`info`, etc.), "
"innan en händelse skickas till hanterare. Detta innebär att händelser som "
"har genererats av loggar i nedstigande led inte filtreras av en loggers "
"filterinställning, såvida inte filtret också har tillämpats på dessa loggar "
"i nedstigande led."

msgid ""
"You don't actually need to subclass ``Filter``: you can pass any instance "
"which has a ``filter`` method with the same semantics."
msgstr ""
"Du behöver faktiskt inte underklassa ``Filter``: du kan skicka vilken "
"instans som helst som har en ``filter``-metod med samma semantik."

msgid ""
"You don't need to create specialized ``Filter`` classes, or use other "
"classes with a ``filter`` method: you can use a function (or other callable) "
"as a filter. The filtering logic will check to see if the filter object has "
"a ``filter`` attribute: if it does, it's assumed to be a ``Filter`` and its :"
"meth:`~Filter.filter` method is called. Otherwise, it's assumed to be a "
"callable and called with the record as the single parameter. The returned "
"value should conform to that returned by :meth:`~Filter.filter`."
msgstr ""
"Du behöver inte skapa specialiserade ``Filter``-klasser eller använda andra "
"klasser med en ``filter``-metod: du kan använda en funktion (eller annan "
"anropsbar) som ett filter. Filtreringslogiken kommer att kontrollera om "
"filterobjektet har ett ``filter``-attribut: om det gör det, antas det vara "
"ett ``Filter`` och dess :meth:`~Filter.filter`-metod anropas. Annars antas "
"den vara en callable och anropas med posten som enda parameter. Det "
"returnerade värdet bör överensstämma med det som returneras av :meth:"
"`~Filter.filter`."

msgid ""
"You can now return a :class:`LogRecord` instance from filters to replace the "
"log record rather than modifying it in place. This allows filters attached "
"to a :class:`Handler` to modify the log record before it is emitted, without "
"having side effects on other handlers."
msgstr ""
"Du kan nu returnera en :class:`LogRecord`-instans från filter för att "
"ersätta loggposten i stället för att modifiera den på plats. Detta gör att "
"filter som är kopplade till en :class:`Handler` kan modifiera loggposten "
"innan den sänds ut, utan att det får bieffekter på andra handlers."

msgid ""
"Although filters are used primarily to filter records based on more "
"sophisticated criteria than levels, they get to see every record which is "
"processed by the handler or logger they're attached to: this can be useful "
"if you want to do things like counting how many records were processed by a "
"particular logger or handler, or adding, changing or removing attributes in "
"the :class:`LogRecord` being processed. Obviously changing the LogRecord "
"needs to be done with some care, but it does allow the injection of "
"contextual information into logs (see :ref:`filters-contextual`)."
msgstr ""
"Även om filter främst används för att filtrera poster baserat på mer "
"sofistikerade kriterier än nivåer, får de se varje post som bearbetas av den "
"hanterare eller logger de är kopplade till: detta kan vara användbart om du "
"vill göra saker som att räkna hur många poster som bearbetades av en viss "
"logger eller hanterare, eller lägga till, ändra eller ta bort attribut i :"
"class:`LogRecord` som bearbetas. Självklart måste ändring av LogRecord göras "
"med viss försiktighet, men det gör det möjligt att injicera kontextuell "
"information i loggar (se :ref:`filters-contextual`)."

msgid "LogRecord Objects"
msgstr "LogRecord-objekt"

msgid ""
":class:`LogRecord` instances are created automatically by the :class:"
"`Logger` every time something is logged, and can be created manually via :"
"func:`makeLogRecord` (for example, from a pickled event received over the "
"wire)."
msgstr ""
":class:`LogRecord`-instanser skapas automatiskt av :class:`Logger` varje "
"gång något loggas, och kan skapas manuellt via :func:`makeLogRecord` (t.ex. "
"från en inlagd händelse som tas emot över kabeln)."

msgid "Contains all the information pertinent to the event being logged."
msgstr ""
"Innehåller all information som är relevant för den händelse som loggas."

msgid ""
"The primary information is passed in *msg* and *args*, which are combined "
"using ``msg % args`` to create the :attr:`!message` attribute of the record."
msgstr ""
"Den primära informationen skickas i *msg* och *args*, som kombineras med "
"hjälp av ``msg % args`` för att skapa attributet :attr:`!message` för posten."

msgid ""
"The name of the logger used to log the event represented by this :class:`!"
"LogRecord`. Note that the logger name in the :class:`!LogRecord` will always "
"have this value, even though it may be emitted by a handler attached to a "
"different (ancestor) logger."
msgstr ""
"Namnet på den logger som används för att logga den händelse som "
"representeras av denna :class:`!LogRecord`. Observera att loggarens namn i :"
"class:`!LogRecord` alltid kommer att ha detta värde, även om det kan sändas "
"ut av en hanterare som är kopplad till en annan (förfaderlig) logger."

msgid ""
"The :ref:`numeric level <levels>` of the logging event (such as ``10`` for "
"``DEBUG``, ``20`` for ``INFO``, etc). Note that this is converted to *two* "
"attributes of the LogRecord: :attr:`!levelno` for the numeric value and :"
"attr:`!levelname` for the corresponding level name."
msgstr ""
":ref:``numerisk nivå <levels>`` för loggningshändelsen (t.ex. ``10`` för "
"``DEBUG``, ``20`` för ``INFO``, etc.). Observera att detta konverteras till "
"*två* attribut i LogRecord: :attr:`!levelno` för det numeriska värdet och :"
"attr:`!levelname` för motsvarande nivånamn."

msgid ""
"The full string path of the source file where the logging call was made."
msgstr "Den fullständiga sökvägen till källfilen där loggningsanropet gjordes."

msgid "The line number in the source file where the logging call was made."
msgstr "Radnumret i källfilen där loggningsanropet gjordes."

msgid ""
"The event description message, which can be a %-format string with "
"placeholders for variable data, or an arbitrary object (see :ref:`arbitrary-"
"object-messages`)."
msgstr ""
"Händelsebeskrivningsmeddelandet, som kan vara en %-format sträng med "
"platshållare för variabeldata, eller ett godtyckligt objekt (se :ref:"
"`arbitrary-object-messages`)."

msgid ""
"Variable data to merge into the *msg* argument to obtain the event "
"description."
msgstr ""
"Variabel data som ska sammanfogas med *msg*-argumentet för att få en "
"beskrivning av händelsen."

msgid ""
"An exception tuple with the current exception information, as returned by :"
"func:`sys.exc_info`, or ``None`` if no exception information is available."
msgstr ""
"En exception-tupel med aktuell exceptioninformation, som returneras av :func:"
"`sys.exc_info`, eller ``None`` om ingen exceptioninformation finns "
"tillgänglig."

msgid ""
"The name of the function or method from which the logging call was invoked."
msgstr ""
"Namnet på den funktion eller metod från vilken anropet för loggning gjordes."

msgid ""
"A text string representing stack information from the base of the stack in "
"the current thread, up to the logging call."
msgstr ""
"En textsträng som representerar stackinformation från stackens bas i den "
"aktuella tråden, fram till loggningsanropet."

msgid ""
"Returns the message for this :class:`LogRecord` instance after merging any "
"user-supplied arguments with the message. If the user-supplied message "
"argument to the logging call is not a string, :func:`str` is called on it to "
"convert it to a string. This allows use of user-defined classes as messages, "
"whose ``__str__`` method can return the actual format string to be used."
msgstr ""
"Returnerar meddelandet för denna :class:`LogRecord`-instans efter att ha "
"slagit samman eventuella användartillhandahållna argument med meddelandet. "
"Om det användartillhandahållna meddelandeargumentet till loggningsanropet "
"inte är en sträng, anropas :func:`str` för att konvertera det till en "
"sträng. Detta gör det möjligt att använda användardefinierade klasser som "
"meddelanden, vars metod ``__str__`` kan returnera den faktiska formatsträng "
"som ska användas."

msgid ""
"The creation of a :class:`LogRecord` has been made more configurable by "
"providing a factory which is used to create the record. The factory can be "
"set using :func:`getLogRecordFactory` and :func:`setLogRecordFactory` (see "
"this for the factory's signature)."
msgstr ""
"Skapandet av en :class:`LogRecord` har gjorts mer konfigurerbar genom att "
"tillhandahålla en fabrik som används för att skapa posten. Fabriken kan "
"ställas in med hjälp av :func:`getLogRecordFactory` och :func:"
"`setLogRecordFactory` (se detta för fabrikens signatur)."

msgid ""
"This functionality can be used to inject your own values into a :class:"
"`LogRecord` at creation time. You can use the following pattern::"
msgstr ""
"Denna funktionalitet kan användas för att injicera dina egna värden i en :"
"class:`LogRecord` vid skapandet. Du kan använda följande mönster::"

msgid ""
"old_factory = logging.getLogRecordFactory()\n"
"\n"
"def record_factory(*args, **kwargs):\n"
"    record = old_factory(*args, **kwargs)\n"
"    record.custom_attribute = 0xdecafbad\n"
"    return record\n"
"\n"
"logging.setLogRecordFactory(record_factory)"
msgstr ""
"old_factory = loggning.getLogRecordFactory()\n"
"\n"
"def record_factory(*args, **kwargs):\n"
"    record = old_factory(*args, **kwargs)\n"
"    record.custom_attribute = 0xdecafbad\n"
"    returnera record\n"
"\n"
"logging.setLogRecordFactory(record_factory)"

msgid ""
"With this pattern, multiple factories could be chained, and as long as they "
"don't overwrite each other's attributes or unintentionally overwrite the "
"standard attributes listed above, there should be no surprises."
msgstr ""
"Med detta mönster kan flera fabriker kedjas, och så länge de inte skriver "
"över varandras attribut eller oavsiktligt skriver över standardattributen "
"som anges ovan, bör det inte finnas några överraskningar."

msgid "LogRecord attributes"
msgstr "LogRecord-attribut"

msgid ""
"The LogRecord has a number of attributes, most of which are derived from the "
"parameters to the constructor. (Note that the names do not always correspond "
"exactly between the LogRecord constructor parameters and the LogRecord "
"attributes.) These attributes can be used to merge data from the record into "
"the format string. The following table lists (in alphabetical order) the "
"attribute names, their meanings and the corresponding placeholder in a %-"
"style format string."
msgstr ""
"LogRecord har ett antal attribut, varav de flesta härleds från parametrarna "
"till konstruktören. (Observera att namnen inte alltid överensstämmer exakt "
"mellan parametrarna i LogRecord-konstruktören och LogRecord-attributen) "
"Dessa attribut kan användas för att sammanfoga data från posten till "
"formatsträngen. I följande tabell listas (i alfabetisk ordning) "
"attributnamnen, deras betydelser och motsvarande platshållare i en %-style-"
"formatsträng."

msgid ""
"If you are using {}-formatting (:func:`str.format`), you can use ``{attrname}"
"`` as the placeholder in the format string. If you are using $-formatting (:"
"class:`string.Template`), use the form ``${attrname}``. In both cases, of "
"course, replace ``attrname`` with the actual attribute name you want to use."
msgstr ""
"Om du använder {}-formatering (:func:`str.format`) kan du använda "
"``{attrname}`` som platshållare i formatsträngen. Om du använder $-"
"formatering (:class:`string.Template`), använd formen ``${attrname}``. I "
"båda fallen ska du naturligtvis ersätta ``attrname`` med det faktiska "
"attributnamn som du vill använda."

msgid ""
"In the case of {}-formatting, you can specify formatting flags by placing "
"them after the attribute name, separated from it with a colon. For example: "
"a placeholder of ``{msecs:03.0f}`` would format a millisecond value of ``4`` "
"as ``004``. Refer to the :meth:`str.format` documentation for full details "
"on the options available to you."
msgstr ""
"När det gäller {}-formatering kan du ange formateringsflaggor genom att "
"placera dem efter attributnamnet, åtskilda från det med ett kolon. Till "
"exempel: en platshållare på ``{msecs:03.0f}`` skulle formatera ett "
"millisekundvärde på ``4`` som ``004``. Se :meth:`str.format`-dokumentationen "
"för fullständig information om de alternativ som finns tillgängliga för dig."

msgid "Attribute name"
msgstr "Attribut namn"

msgid "Format"
msgstr "Format"

msgid "Description"
msgstr "Beskrivning"

msgid "args"
msgstr "args"

msgid "You shouldn't need to format this yourself."
msgstr "Du ska inte behöva formatera detta själv."

msgid ""
"The tuple of arguments merged into ``msg`` to produce ``message``, or a dict "
"whose values are used for the merge (when there is only one argument, and it "
"is a dictionary)."
msgstr ""
"Den tupel av argument som sammanfogas i ``msg`` för att producera "
"``message``, eller en dict vars värden används för sammanfogningen (när det "
"bara finns ett argument och det är en dictionary)."

msgid "asctime"
msgstr "asctime"

msgid "``%(asctime)s``"
msgstr "``%(asctime)s``"

msgid ""
"Human-readable time when the :class:`LogRecord` was created.  By default "
"this is of the form '2003-07-08 16:49:45,896' (the numbers after the comma "
"are millisecond portion of the time)."
msgstr ""
"Humanläsbar tid när :class:`LogRecord` skapades.  Som standard är den av "
"formen '2003-07-08 16:49:45,896' (siffrorna efter kommatecknet är "
"millisekunddelar av tiden)."

msgid "created"
msgstr "skapad"

msgid "``%(created)f``"
msgstr "``%(created)f``"

msgid ""
"Time when the :class:`LogRecord` was created (as returned by :func:`time."
"time_ns` / 1e9)."
msgstr ""
"Tidpunkt då :class:`LogRecord` skapades (returneras av :func:`time."
"time_ns` / 1e9)."

msgid "exc_info"
msgstr "exc_info"

msgid ""
"Exception tuple (à la ``sys.exc_info``) or, if no exception has occurred, "
"``None``."
msgstr ""
"Exception tuple (à la ``sys.exc_info``) eller, om inget undantag har "
"inträffat, ``None``."

msgid "filename"
msgstr "filnamn"

msgid "``%(filename)s``"
msgstr "``%(filename)s``"

msgid "Filename portion of ``pathname``."
msgstr "Filnamnsdelen av ``pathname``."

msgid "funcName"
msgstr "funcNamn"

msgid "``%(funcName)s``"
msgstr "``%(funcName)s``"

msgid "Name of function containing the logging call."
msgstr "Namn på den funktion som innehåller loggningsanropet."

msgid "levelname"
msgstr "nivånamn"

msgid "``%(levelname)s``"
msgstr "``%(levelname)s``"

msgid ""
"Text logging level for the message (``'DEBUG'``, ``'INFO'``, ``'WARNING'``, "
"``'ERROR'``, ``'CRITICAL'``)."
msgstr ""
"Textloggningsnivå för meddelandet (``'DEBUG'``, ``'INFO'``, ``'WARNING'``, "
"``'ERROR'``, ``'CRITICAL'``)."

msgid "levelno"
msgstr "nivåno"

msgid "``%(levelno)s``"
msgstr "``%(levelno)s``"

msgid ""
"Numeric logging level for the message (:const:`DEBUG`, :const:`INFO`, :const:"
"`WARNING`, :const:`ERROR`, :const:`CRITICAL`)."
msgstr ""
"Numerisk loggningsnivå för meddelandet (:const:`DEBUG`, :const:`INFO`, :"
"const:`WARNING`, :const:`ERROR`, :const:`CRITICAL`)."

msgid "lineno"
msgstr "lineno"

msgid "``%(lineno)d``"
msgstr "``%(lineno)d``"

msgid "Source line number where the logging call was issued (if available)."
msgstr "Källans radnummer där loggningsanropet utfärdades (om tillgängligt)."

msgid "message"
msgstr "Typ av meddelande"

msgid "``%(message)s``"
msgstr "``%(message)s``"

msgid ""
"The logged message, computed as ``msg % args``. This is set when :meth:"
"`Formatter.format` is invoked."
msgstr ""
"Det loggade meddelandet, beräknat som ``msg % args``. Detta ställs in när :"
"meth:`Formatter.format` anropas."

msgid "module"
msgstr "modul"

msgid "``%(module)s``"
msgstr "``%(module)s``"

msgid "Module (name portion of ``filename``)."
msgstr "Modul (namndelen av ``filnamn``)."

msgid "msecs"
msgstr "msecs"

msgid "``%(msecs)d``"
msgstr "``%(msecs)d``"

msgid ""
"Millisecond portion of the time when the :class:`LogRecord` was created."
msgstr "Millisekund-del av tiden när :class:`LogRecord` skapades."

msgid "msg"
msgstr "msg"

msgid ""
"The format string passed in the original logging call. Merged with ``args`` "
"to produce ``message``, or an arbitrary object (see :ref:`arbitrary-object-"
"messages`)."
msgstr ""
"Den formatsträng som skickades i det ursprungliga loggningsanropet. "
"Sammanslagen med ``args`` för att producera ``message``, eller ett "
"godtyckligt objekt (se :ref:`arbitrary-object-messages`)."

msgid "name"
msgstr "namn"

msgid "``%(name)s``"
msgstr "``%(name)s``"

msgid "Name of the logger used to log the call."
msgstr "Namn på den logger som används för att logga samtalet."

msgid "pathname"
msgstr "sökvägsnamn"

msgid "``%(pathname)s``"
msgstr "``%(pathname)s``"

msgid ""
"Full pathname of the source file where the logging call was issued (if "
"available)."
msgstr ""
"Fullständigt sökvägsnamn för källfilen där loggningsanropet gjordes (om "
"tillgängligt)."

msgid "process"
msgstr "process"

msgid "``%(process)d``"
msgstr "``%(process)d``"

msgid "Process ID (if available)."
msgstr "Process-ID (om tillgängligt)."

msgid "processName"
msgstr "processnamn"

msgid "``%(processName)s``"
msgstr "``%(processName)s``"

msgid "Process name (if available)."
msgstr "Processnamn (om tillgängligt)."

msgid "relativeCreated"
msgstr "relativt skapad"

msgid "``%(relativeCreated)d``"
msgstr "``%(relativeCreated)d``"

msgid ""
"Time in milliseconds when the LogRecord was created, relative to the time "
"the logging module was loaded."
msgstr ""
"Tid i millisekunder när LogRecord skapades, i förhållande till den tidpunkt "
"då loggmodulen laddades."

msgid "stack_info"
msgstr "stack_info"

msgid ""
"Stack frame information (where available) from the bottom of the stack in "
"the current thread, up to and including the stack frame of the logging call "
"which resulted in the creation of this record."
msgstr ""
"Stack frame-information (om sådan finns) från botten av stacken i den "
"aktuella tråden, till och med stack frame för det logganrop som resulterade "
"i att denna post skapades."

msgid "thread"
msgstr "tråd"

msgid "``%(thread)d``"
msgstr "``%(thread)d``"

msgid "Thread ID (if available)."
msgstr "Tråd-ID (om tillgängligt)."

msgid "threadName"
msgstr "trådnamn"

msgid "``%(threadName)s``"
msgstr "``%(threadName)s``"

msgid "Thread name (if available)."
msgstr "Trådnamn (om tillgängligt)."

msgid "taskName"
msgstr "uppgiftsnamn"

msgid "``%(taskName)s``"
msgstr "``%(taskName)s``"

msgid ":class:`asyncio.Task` name (if available)."
msgstr ":class:`asyncio.Task` namn (om tillgängligt)."

msgid "*processName* was added."
msgstr "*processName* har lagts till."

msgid "*taskName* was added."
msgstr "*taskName* lades till."

msgid "LoggerAdapter Objects"
msgstr "LoggerAdapter-objekt"

msgid ""
":class:`LoggerAdapter` instances are used to conveniently pass contextual "
"information into logging calls. For a usage example, see the section on :ref:"
"`adding contextual information to your logging output <context-info>`."
msgstr ""
":class:`LoggerAdapter`-instanser används för att enkelt skicka kontextuell "
"information till loggningsanrop. Ett exempel på användning finns i avsnittet "
"om :ref:`Lägga till kontextuell information i loggningsutdata <context-"
"info>`."

msgid ""
"Returns an instance of :class:`LoggerAdapter` initialized with an "
"underlying :class:`Logger` instance, a dict-like object (*extra*), and a "
"boolean (*merge_extra*) indicating whether or not the *extra* argument of "
"individual log calls should be merged with the :class:`LoggerAdapter` extra. "
"The default behavior is to ignore the *extra* argument of individual log "
"calls and only use the one of the :class:`LoggerAdapter` instance"
msgstr ""
"Returnerar en instans av :class:`LoggerAdapter` som initierats med en "
"underliggande instans av :class:`Logger`, ett diktliknande objekt (*extra*) "
"och ett boolean (*merge_extra*) som anger om *extra*-argumentet för enskilda "
"logganrop ska slås samman med :class:`LoggerAdapter` extra eller inte. "
"Standardbeteendet är att ignorera *extra*-argumentet för enskilda logganrop "
"och endast använda det som finns i :class:`LoggerAdapter`-instansen"

msgid ""
"Modifies the message and/or keyword arguments passed to a logging call in "
"order to insert contextual information. This implementation takes the object "
"passed as *extra* to the constructor and adds it to *kwargs* using key "
"'extra'. The return value is a (*msg*, *kwargs*) tuple which has the "
"(possibly modified) versions of the arguments passed in."
msgstr ""
"Ändrar argumenten för meddelande och/eller nyckelord som skickas till ett "
"loggningsanrop för att infoga kontextuell information. Denna implementation "
"tar det objekt som skickas som *extra* till konstruktören och lägger till "
"det i *kwargs* med nyckeln 'extra'. Returvärdet är en (*msg*, *kwargs*) "
"tupel som innehåller (eventuellt modifierade) versioner av de argument som "
"skickats in."

msgid "Delegates to the underlying :attr:`!manager` on *logger*."
msgstr "Delegerar till den underliggande :attr:`!manager` på *logger*."

msgid "Delegates to the underlying :meth:`!_log` method on *logger*."
msgstr "Delegerar till den underliggande :meth:`!_log`-metoden på *logger*."

msgid ""
"In addition to the above, :class:`LoggerAdapter` supports the following "
"methods of :class:`Logger`: :meth:`~Logger.debug`, :meth:`~Logger.info`, :"
"meth:`~Logger.warning`, :meth:`~Logger.error`, :meth:`~Logger.exception`, :"
"meth:`~Logger.critical`, :meth:`~Logger.log`, :meth:`~Logger.isEnabledFor`, :"
"meth:`~Logger.getEffectiveLevel`, :meth:`~Logger.setLevel` and :meth:"
"`~Logger.hasHandlers`. These methods have the same signatures as their "
"counterparts in :class:`Logger`, so you can use the two types of instances "
"interchangeably."
msgstr ""
"Utöver ovanstående stöder :class:`LoggerAdapter` följande metoder i :class:"
"`Logger`: :meth:`~Logger.debug`, :meth:`~Logger.info`, :meth:`~Logger."
"warning`, :meth:`~Logger.error`, :meth:`~Logger.exception`, :meth:`~Logger."
"critical`, :meth:`~Logger.log`, :meth:`~Logger.isEnabledFor`, :meth:`~Logger."
"getEffectiveLevel`, :meth:`~Logger.setLevel` och :meth:`~Logger."
"hasHandlers`. Dessa metoder har samma signaturer som sina motsvarigheter i :"
"class:`Logger`, så du kan använda de två typerna av instanser omväxlande."

msgid ""
"The :meth:`~Logger.isEnabledFor`, :meth:`~Logger.getEffectiveLevel`, :meth:"
"`~Logger.setLevel` and :meth:`~Logger.hasHandlers` methods were added to :"
"class:`LoggerAdapter`.  These methods delegate to the underlying logger."
msgstr ""
"Metoderna :meth:`~Logger.isEnabledFor`, :meth:`~Logger.getEffectiveLevel`, :"
"meth:`~Logger.setLevel` och :meth:`~Logger.hasHandlers` lades till i :class:"
"`LoggerAdapter`.  Dessa metoder delegerar till den underliggande loggern."

msgid ""
"Attribute :attr:`!manager` and method :meth:`!_log` were added, which "
"delegate to the underlying logger and allow adapters to be nested."
msgstr ""
"Attributet :attr:`!manager` och metoden :meth:`!_log` har lagts till, vilka "
"delegerar till den underliggande loggern och tillåter att adaptrar nästlas."

msgid "The *merge_extra* argument was added."
msgstr "Argumentet *merge_extra* har lagts till."

msgid "Thread Safety"
msgstr "Säkerhet för trådar"

msgid ""
"The logging module is intended to be thread-safe without any special work "
"needing to be done by its clients. It achieves this though using threading "
"locks; there is one lock to serialize access to the module's shared data, "
"and each handler also creates a lock to serialize access to its underlying I/"
"O."
msgstr ""
"Loggningsmodulen är avsedd att vara trådsäker utan att något särskilt arbete "
"behöver utföras av dess klienter. Den uppnår detta genom att använda "
"trådlås; det finns ett lås för att serialisera åtkomst till modulens delade "
"data, och varje hanterare skapar också ett lås för att serialisera åtkomst "
"till dess underliggande I/O."

msgid ""
"If you are implementing asynchronous signal handlers using the :mod:`signal` "
"module, you may not be able to use logging from within such handlers. This "
"is because lock implementations in the :mod:`threading` module are not "
"always re-entrant, and so cannot be invoked from such signal handlers."
msgstr ""
"Om du implementerar asynkrona signalhanterare med modulen :mod:`signal` kan "
"det hända att du inte kan använda loggning från sådana hanterare. Detta "
"beror på att låsimplementeringar i modulen :mod:`threading` inte alltid är "
"re-entrant och därför inte kan anropas från sådana signalhanterare."

msgid "Module-Level Functions"
msgstr "Funktioner på modulnivå"

msgid ""
"In addition to the classes described above, there are a number of module-"
"level functions."
msgstr ""
"Förutom de klasser som beskrivs ovan finns det ett antal funktioner på "
"modulnivå."

msgid ""
"Return a logger with the specified name or, if name is ``None``, return the "
"root logger of the hierarchy. If specified, the name is typically a dot-"
"separated hierarchical name like *'a'*, *'a.b'* or *'a.b.c.d'*. Choice of "
"these names is entirely up to the developer who is using logging, though it "
"is recommended that ``__name__`` be used unless you have a specific reason "
"for not doing that, as mentioned in :ref:`logger`."
msgstr ""
"Returnerar en logger med det angivna namnet eller, om namnet är ``None``, "
"hierarkins rotlogger. Om namnet anges är det vanligtvis ett punktseparerat "
"hierarkiskt namn som *'a'*, *'a.b'* eller *'a.b.c.d'*. Valet av dessa namn "
"är helt upp till utvecklaren som använder loggning, men det rekommenderas "
"att ``__name__`` används om du inte har en särskild anledning att inte göra "
"det, som nämns i :ref:`logger`."

msgid ""
"All calls to this function with a given name return the same logger "
"instance. This means that logger instances never need to be passed between "
"different parts of an application."
msgstr ""
"Alla anrop till denna funktion med ett givet namn returnerar samma "
"loggerinstans. Detta innebär att loggerinstanser aldrig behöver skickas "
"mellan olika delar av en applikation."

msgid ""
"Return either the standard :class:`Logger` class, or the last class passed "
"to :func:`setLoggerClass`. This function may be called from within a new "
"class definition, to ensure that installing a customized :class:`Logger` "
"class will not undo customizations already applied by other code. For "
"example::"
msgstr ""
"Returnerar antingen standardklassen :class:`Logger`, eller den sista klassen "
"som skickades till :func:`setLoggerClass`. Denna funktion kan anropas från "
"en ny klassdefinition för att säkerställa att installationen av en anpassad :"
"class:`Logger`-klass inte upphäver anpassningar som redan gjorts av annan "
"kod. Till exempel::"

msgid ""
"class MyLogger(logging.getLoggerClass()):\n"
"    # ... override behaviour here"
msgstr ""
"klass MyLogger(logging.getLoggerClass()):\n"
"    # ... åsidosätt beteende här"

msgid "Return a callable which is used to create a :class:`LogRecord`."
msgstr ""
"Returnerar en callable som används för att skapa en :class:`LogRecord`."

msgid ""
"This function has been provided, along with :func:`setLogRecordFactory`, to "
"allow developers more control over how the :class:`LogRecord` representing a "
"logging event is constructed."
msgstr ""
"Denna funktion har tillkommit, tillsammans med :func:`setLogRecordFactory`, "
"för att ge utvecklare mer kontroll över hur :class:`LogRecord` som "
"representerar en loggningshändelse konstrueras."

msgid ""
"See :func:`setLogRecordFactory` for more information about the how the "
"factory is called."
msgstr ""
"Se :func:`setLogRecordFactory` för mer information om hur fabriken anropas."

msgid ""
"This is a convenience function that calls :meth:`Logger.debug`, on the root "
"logger. The handling of the arguments is in every way identical to what is "
"described in that method."
msgstr ""
"Detta är en bekvämlighetsfunktion som anropar :meth:`Logger.debug`, på "
"rotloggaren. Hanteringen av argumenten är på alla sätt identisk med vad som "
"beskrivs i den metoden."

msgid ""
"The only difference is that if the root logger has no handlers, then :func:"
"`basicConfig` is called, prior to calling ``debug`` on the root logger."
msgstr ""
"Den enda skillnaden är att om rotloggaren inte har några hanterare anropas :"
"func:`basicConfig` innan ``debug`` anropas på rotloggaren."

msgid ""
"For very short scripts or quick demonstrations of ``logging`` facilities, "
"``debug`` and the other module-level functions may be convenient. However, "
"most programs will want to carefully and explicitly control the logging "
"configuration, and should therefore prefer creating a module-level logger "
"and calling :meth:`Logger.debug` (or other level-specific methods) on it, as "
"described at the beginning of this documentation."
msgstr ""
"För mycket korta skript eller snabba demonstrationer av ``loggning`` kan "
"``debug`` och de andra modulnivåfunktionerna vara praktiska. De flesta "
"program vill dock noggrant och uttryckligen kontrollera "
"loggningskonfigurationen och bör därför föredra att skapa en logger på "
"modulnivå och anropa :meth:`Logger.debug` (eller andra nivåspecifika "
"metoder) på den, enligt beskrivningen i början av den här dokumentationen."

msgid ""
"Logs a message with level :const:`INFO` on the root logger. The arguments "
"and behavior are otherwise the same as for :func:`debug`."
msgstr ""
"Loggar ett meddelande med nivån :const:`INFO` på rotloggaren. Argumenten och "
"beteendet är i övrigt detsamma som för :func:`debug`."

msgid ""
"Logs a message with level :const:`WARNING` on the root logger. The arguments "
"and behavior are otherwise the same as for :func:`debug`."
msgstr ""
"Loggar ett meddelande med nivå :const:`WARNING` på rotloggaren. Argumenten "
"och beteendet är i övrigt samma som för :func:`debug`."

msgid ""
"There is an obsolete function ``warn`` which is functionally identical to "
"``warning``. As ``warn`` is deprecated, please do not use it - use "
"``warning`` instead."
msgstr ""
"Det finns en föråldrad funktion ``warn`` som är funktionellt identisk med "
"``warning``. Eftersom ``warn`` är föråldrad, vänligen använd den inte - "
"använd ``warning`` istället."

msgid ""
"Logs a message with level :const:`ERROR` on the root logger. The arguments "
"and behavior are otherwise the same as for :func:`debug`."
msgstr ""
"Loggar ett meddelande med nivå :const:`ERROR` på rotloggaren. Argumenten och "
"beteendet är i övrigt detsamma som för :func:`debug`."

msgid ""
"Logs a message with level :const:`CRITICAL` on the root logger. The "
"arguments and behavior are otherwise the same as for :func:`debug`."
msgstr ""
"Loggar ett meddelande med nivå :const:`CRITICAL` på rotloggaren. Argumenten "
"och beteendet är i övrigt samma som för :func:`debug`."

msgid ""
"Logs a message with level :const:`ERROR` on the root logger. The arguments "
"and behavior are otherwise the same as for :func:`debug`. Exception info is "
"added to the logging message. This function should only be called from an "
"exception handler."
msgstr ""
"Loggar ett meddelande med nivå :const:`ERROR` på rotloggaren. Argumenten och "
"beteendet är i övrigt samma som för :func:`debug`. Undantagsinformation "
"läggs till i loggmeddelandet. Denna funktion bör endast anropas från en "
"undantagshanterare."

msgid ""
"Logs a message with level *level* on the root logger. The arguments and "
"behavior are otherwise the same as for :func:`debug`."
msgstr ""
"Loggar ett meddelande med nivån *level* på rotloggern. Argumenten och "
"beteendet är i övrigt samma som för :func:`debug`."

msgid ""
"Provides an overriding level *level* for all loggers which takes precedence "
"over the logger's own level. When the need arises to temporarily throttle "
"logging output down across the whole application, this function can be "
"useful. Its effect is to disable all logging calls of severity *level* and "
"below, so that if you call it with a value of INFO, then all INFO and DEBUG "
"events would be discarded, whereas those of severity WARNING and above would "
"be processed according to the logger's effective level. If ``logging."
"disable(logging.NOTSET)`` is called, it effectively removes this overriding "
"level, so that logging output again depends on the effective levels of "
"individual loggers."
msgstr ""
"Ger en överordnad nivå *level* för alla loggrar som har företräde framför "
"loggarens egen nivå. Denna funktion kan vara användbar när det uppstår ett "
"behov av att tillfälligt strypa loggningsutmatningen i hela programmet. Dess "
"effekt är att inaktivera alla loggningsanrop med allvarlighetsgrad *nivå* "
"och lägre, så att om du anropar den med ett värde på INFO, kommer alla INFO- "
"och DEBUG-händelser att kasseras, medan de med allvarlighetsgrad WARNING och "
"högre kommer att behandlas enligt loggarens effektiva nivå. Om ``logging."
"disable(logging.NOTSET)`` anropas, tas denna överordnade nivå bort, så att "
"loggningsutdata återigen beror på de enskilda loggarnas effektiva nivåer."

msgid ""
"Note that if you have defined any custom logging level higher than "
"``CRITICAL`` (this is not recommended), you won't be able to rely on the "
"default value for the *level* parameter, but will have to explicitly supply "
"a suitable value."
msgstr ""
"Observera att om du har definierat någon anpassad loggningsnivå som är högre "
"än ``CRITICAL`` (detta rekommenderas inte), kan du inte förlita dig på "
"standardvärdet för parametern *level*, utan måste uttryckligen ange ett "
"lämpligt värde."

msgid ""
"The *level* parameter was defaulted to level ``CRITICAL``. See :issue:"
"`28524` for more information about this change."
msgstr ""
"Parametern *level* var förvald till nivån ``CRITICAL``. Se :issue:`28524` "
"för mer information om denna ändring."

msgid ""
"Associates level *level* with text *levelName* in an internal dictionary, "
"which is used to map numeric levels to a textual representation, for example "
"when a :class:`Formatter` formats a message. This function can also be used "
"to define your own levels. The only constraints are that all levels used "
"must be registered using this function, levels should be positive integers "
"and they should increase in increasing order of severity."
msgstr ""
"Associerar nivån *level* med texten *levelName* i en intern ordbok, som "
"används för att mappa numeriska nivåer till en textuell representation, t."
"ex. när en :class:`Formatter` formaterar ett meddelande. Denna funktion kan "
"också användas för att definiera egna nivåer. De enda begränsningarna är att "
"alla nivåer som används måste registreras med hjälp av denna funktion, att "
"nivåerna ska vara positiva heltal och att de ska öka i allvarlighetsgrad."

msgid ""
"If you are thinking of defining your own levels, please see the section on :"
"ref:`custom-levels`."
msgstr ""
"Om du funderar på att definiera dina egna nivåer, se avsnittet om :ref:"
"`custom-levels`."

msgid ""
"Returns a mapping from level names to their corresponding logging levels. "
"For example, the string \"CRITICAL\" maps to :const:`CRITICAL`. The returned "
"mapping is copied from an internal mapping on each call to this function."
msgstr ""
"Returnerar en mappning från nivånamn till motsvarande loggningsnivåer. "
"Strängen \"CRITICAL\" mappas till exempel till :const:`CRITICAL`. Den "
"returnerade mappningen kopieras från en intern mappning vid varje anrop till "
"denna funktion."

msgid "Returns the textual or numeric representation of logging level *level*."
msgstr ""
"Returnerar den textuella eller numeriska representationen av loggningsnivån "
"*level*."

msgid ""
"If *level* is one of the predefined levels :const:`CRITICAL`, :const:"
"`ERROR`, :const:`WARNING`, :const:`INFO` or :const:`DEBUG` then you get the "
"corresponding string. If you have associated levels with names using :func:"
"`addLevelName` then the name you have associated with *level* is returned. "
"If a numeric value corresponding to one of the defined levels is passed in, "
"the corresponding string representation is returned."
msgstr ""
"Om *level* är en av de fördefinierade nivåerna :const:`CRITICAL`, :const:"
"`ERROR`, :const:`WARNING`, :const:`INFO` eller :const:`DEBUG` så får du "
"motsvarande sträng. Om du har associerat nivåer med namn med hjälp av :func:"
"`addLevelName` så returneras det namn du har associerat med *level*. Om ett "
"numeriskt värde som motsvarar en av de definierade nivåerna skickas in, "
"returneras motsvarande strängrepresentation."

msgid ""
"The *level* parameter also accepts a string representation of the level such "
"as 'INFO'. In such cases, this functions returns the corresponding numeric "
"value of the level."
msgstr ""
"Parametern *level* accepterar också en strängrepresentation av nivån, t.ex. "
"\"INFO\". I sådana fall returnerar denna funktion motsvarande numeriska "
"värde för nivån."

msgid ""
"If no matching numeric or string value is passed in, the string 'Level %s' % "
"level is returned."
msgstr ""
"Om inget matchande numeriskt värde eller strängvärde skickas in returneras "
"strängen \"Level %s\" % level\"."

msgid ""
"Levels are internally integers (as they need to be compared in the logging "
"logic). This function is used to convert between an integer level and the "
"level name displayed in the formatted log output by means of the "
"``%(levelname)s`` format specifier (see :ref:`logrecord-attributes`), and "
"vice versa."
msgstr ""
"Nivåerna är internt heltal (eftersom de måste jämföras i loggningslogiken). "
"Den här funktionen används för att konvertera mellan en heltalsnivå och det "
"nivånamn som visas i den formaterade loggutmatningen med hjälp av "
"formatspecificeraren ``%(levelname)s`` (se :ref:`logrecord-attributes``), "
"och vice versa."

msgid ""
"In Python versions earlier than 3.4, this function could also be passed a "
"text level, and would return the corresponding numeric value of the level. "
"This undocumented behaviour was considered a mistake, and was removed in "
"Python 3.4, but reinstated in 3.4.2 due to retain backward compatibility."
msgstr ""
"I Python-versioner tidigare än 3.4 kunde den här funktionen också ges en "
"textnivå och returnera det motsvarande numeriska värdet för nivån. Detta "
"odokumenterade beteende ansågs vara ett misstag och togs bort i Python 3.4, "
"men återinfördes i 3.4.2 för att bibehålla bakåtkompatibilitet."

msgid ""
"Returns a handler with the specified *name*, or ``None`` if there is no "
"handler with that name."
msgstr ""
"Returnerar en hanterare med det angivna *namnet*, eller ``None`` om det inte "
"finns någon hanterare med det namnet."

msgid "Returns an immutable set of all known handler names."
msgstr "Returnerar en oföränderlig uppsättning av alla kända hanterarnamn."

msgid ""
"Creates and returns a new :class:`LogRecord` instance whose attributes are "
"defined by *attrdict*. This function is useful for taking a pickled :class:"
"`LogRecord` attribute dictionary, sent over a socket, and reconstituting it "
"as a :class:`LogRecord` instance at the receiving end."
msgstr ""
"Skapar och returnerar en ny :class:`LogRecord`-instans vars attribut "
"definieras av *attrdict*. Denna funktion är användbar för att ta en inlagd :"
"class:`LogRecord` attributordbok, skickad över en socket, och återskapa den "
"som en :class:`LogRecord` instans på mottagarsidan."

msgid ""
"Does basic configuration for the logging system by creating a :class:"
"`StreamHandler` with a default :class:`Formatter` and adding it to the root "
"logger. The functions :func:`debug`, :func:`info`, :func:`warning`, :func:"
"`error` and :func:`critical` will call :func:`basicConfig` automatically if "
"no handlers are defined for the root logger."
msgstr ""
"Gör grundläggande konfiguration för loggningssystemet genom att skapa en :"
"class:`StreamHandler` med en standard :class:`Formatter` och lägga till den "
"i rotloggaren. Funktionerna :func:`debug`, :func:`info`, :func:`warning`, :"
"func:`error` och :func:`critical` anropar :func:`basicConfig` automatiskt om "
"inga hanterare har definierats för rotloggaren."

msgid ""
"This function does nothing if the root logger already has handlers "
"configured, unless the keyword argument *force* is set to ``True``."
msgstr ""
"Denna funktion gör ingenting om rotloggaren redan har konfigurerade "
"hanterare, såvida inte nyckelordsargumentet *force* är inställt på ``True``."

msgid ""
"This function should be called from the main thread before other threads are "
"started. In versions of Python prior to 2.7.1 and 3.2, if this function is "
"called from multiple threads, it is possible (in rare circumstances) that a "
"handler will be added to the root logger more than once, leading to "
"unexpected results such as messages being duplicated in the log."
msgstr ""
"Denna funktion bör anropas från huvudtråden innan andra trådar startas. I "
"versioner av Python före 2.7.1 och 3.2, om denna funktion anropas från flera "
"trådar, är det möjligt (i sällsynta fall) att en hanterare läggs till root-"
"loggern mer än en gång, vilket leder till oväntade resultat som att "
"meddelanden dupliceras i loggen."

msgid "The following keyword arguments are supported."
msgstr "Följande nyckelordsargument stöds."

msgid "*filename*"
msgstr "*filnamn*"

msgid ""
"Specifies that a :class:`FileHandler` be created, using the specified "
"filename, rather than a :class:`StreamHandler`."
msgstr ""
"Anger att en :class:`FileHandler` ska skapas med det angivna filnamnet, i "
"stället för en :class:`StreamHandler`."

msgid "*filemode*"
msgstr "*filemode*"

msgid ""
"If *filename* is specified, open the file in this :ref:`mode <filemodes>`. "
"Defaults to ``'a'``."
msgstr ""
"Om *filnamn* anges, öppnas filen i detta :ref:`mode <filemodes>`. Standard "
"är ``'a'``."

msgid "*format*"
msgstr "*format*"

msgid ""
"Use the specified format string for the handler. Defaults to attributes "
"``levelname``, ``name`` and ``message`` separated by colons."
msgstr ""
"Använd den angivna formatsträngen för hanteraren. Standard är attributen "
"``levelname``, ``name`` och ``message`` åtskilda med kolon."

msgid "*datefmt*"
msgstr "*datefmt*"

msgid ""
"Use the specified date/time format, as accepted by :func:`time.strftime`."
msgstr ""
"Använd det angivna datum-/tidsformatet, som accepteras av :func:`time."
"strftime`."

msgid "*style*"
msgstr "*stil*"

msgid ""
"If *format* is specified, use this style for the format string. One of "
"``'%'``, ``'{'`` or ``'$'`` for :ref:`printf-style <old-string-"
"formatting>`, :meth:`str.format` or :class:`string.Template` respectively. "
"Defaults to ``'%'``."
msgstr ""
"Om *format* anges, används denna stil för formatsträngen. En av ``'%'``, "
"``'{'`` eller ``'$'`` för :ref:`printf-style <old-string-formatting>`, :meth:"
"`str.format` respektive :class:`string.Template`. Standardvärdet är ``'%'``."

msgid "*level*"
msgstr "*nivå*"

msgid "Set the root logger level to the specified :ref:`level <levels>`."
msgstr "Ställ in root-loggernivån till den angivna :ref:`level <levels>`."

msgid "*stream*"
msgstr "*strömma*"

msgid ""
"Use the specified stream to initialize the :class:`StreamHandler`. Note that "
"this argument is incompatible with *filename* - if both are present, a "
"``ValueError`` is raised."
msgstr ""
"Använd den angivna strömmen för att initiera :class:`StreamHandler`. "
"Observera att detta argument är inkompatibelt med *filnamn* - om båda är "
"närvarande kommer ett ``ValueError`` att uppstå."

msgid "*handlers*"
msgstr "*handläggare*"

msgid ""
"If specified, this should be an iterable of already created handlers to add "
"to the root logger. Any handlers which don't already have a formatter set "
"will be assigned the default formatter created in this function. Note that "
"this argument is incompatible with *filename* or *stream* - if both are "
"present, a ``ValueError`` is raised."
msgstr ""
"Om detta anges ska det vara en iterabel av redan skapade hanterare som ska "
"läggas till rotloggaren. Alla hanterare som inte redan har en "
"formateringsinställning kommer att tilldelas standardformateringen som "
"skapas i den här funktionen. Observera att detta argument är inkompatibelt "
"med *filnamn* eller *ström* - om båda är närvarande kommer ett "
"``ValueError`` att uppstå."

msgid "*force*"
msgstr "*kraft*"

msgid ""
"If this keyword argument is specified as true, any existing handlers "
"attached to the root logger are removed and closed, before carrying out the "
"configuration as specified by the other arguments."
msgstr ""
"Om detta nyckelordsargument anges som true, tas alla befintliga hanterare "
"som är kopplade till rotloggaren bort och stängs, innan konfigurationen "
"utförs enligt de andra argumenten."

msgid "*encoding*"
msgstr "*kodning*"

msgid ""
"If this keyword argument is specified along with *filename*, its value is "
"used when the :class:`FileHandler` is created, and thus used when opening "
"the output file."
msgstr ""
"Om detta nyckelordsargument anges tillsammans med *filnamn*, används dess "
"värde när :class:`FileHandler` skapas, och används således när utdatafilen "
"öppnas."

msgid "*errors*"
msgstr "*fel*"

msgid ""
"If this keyword argument is specified along with *filename*, its value is "
"used when the :class:`FileHandler` is created, and thus used when opening "
"the output file. If not specified, the value 'backslashreplace' is used. "
"Note that if ``None`` is specified, it will be passed as such to :func:"
"`open`, which means that it will be treated the same as passing 'errors'."
msgstr ""
"Om detta nyckelordsargument anges tillsammans med *filnamn*, används dess "
"värde när :class:`FileHandler` skapas, och används därmed när utdatafilen "
"öppnas. Om det inte anges används värdet 'backslashreplace'. Observera att "
"om ``None`` anges kommer det att skickas som sådant till :func:`open`, "
"vilket innebär att det kommer att behandlas på samma sätt som att skicka "
"'errors'."

msgid "The *style* argument was added."
msgstr "Argumentet *style* har lagts till."

msgid ""
"The *handlers* argument was added. Additional checks were added to catch "
"situations where incompatible arguments are specified (e.g. *handlers* "
"together with *stream* or *filename*, or *stream* together with *filename*)."
msgstr ""
"Argumentet *handlers* har lagts till. Ytterligare kontroller har lagts till "
"för att fånga upp situationer där inkompatibla argument anges (t.ex. "
"*handlers* tillsammans med *stream* eller *filnamn*, eller *stream* "
"tillsammans med *filnamn*)."

msgid "The *force* argument was added."
msgstr "Argumentet *force* har lagts till."

msgid "The *encoding* and *errors* arguments were added."
msgstr "Argumenten *encoding* och *errors* har lagts till."

msgid ""
"Informs the logging system to perform an orderly shutdown by flushing and "
"closing all handlers. This should be called at application exit and no "
"further use of the logging system should be made after this call."
msgstr ""
"Informerar loggningssystemet om att utföra en ordnad avstängning genom att "
"spola och stänga alla hanterare. Detta anrop bör göras när programmet "
"avslutas och ingen ytterligare användning av loggningssystemet bör göras "
"efter detta anrop."

msgid ""
"When the logging module is imported, it registers this function as an exit "
"handler (see :mod:`atexit`), so normally there's no need to do that manually."
msgstr ""
"När loggningsmodulen importeras registreras den här funktionen som en exit-"
"hanterare (se :mod:`atexit`), så normalt sett behöver du inte göra det "
"manuellt."

msgid ""
"Tells the logging system to use the class *klass* when instantiating a "
"logger. The class should define :meth:`!__init__` such that only a name "
"argument is required, and the :meth:`!__init__` should call :meth:`!Logger."
"__init__`. This function is typically called before any loggers are "
"instantiated by applications which need to use custom logger behavior. After "
"this call, as at any other time, do not instantiate loggers directly using "
"the subclass: continue to use the :func:`logging.getLogger` API to get your "
"loggers."
msgstr ""
"Anger att loggningssystemet ska använda klassen *klass* vid instansiering av "
"en logger. Klassen bör definiera :meth:`!__init__` så att endast ett "
"namnargument krävs, och :meth:`!__init__` bör anropa :meth:`!Logger."
"__init__`. Den här funktionen anropas vanligtvis innan någon logger "
"instansieras av program som behöver använda ett anpassat loggerbeteende. "
"Efter detta anrop, liksom vid alla andra tillfällen, ska du inte instansiera "
"loggrar direkt med hjälp av underklassen: fortsätt att använda :func:"
"`logging.getLogger` API för att hämta dina loggrar."

msgid "Set a callable which is used to create a :class:`LogRecord`."
msgstr "Ställ in en callable som används för att skapa en :class:`LogRecord`."

msgid "The factory callable to be used to instantiate a log record."
msgstr "Den factory callable som ska användas för att instansiera en loggpost."

msgid ""
"This function has been provided, along with :func:`getLogRecordFactory`, to "
"allow developers more control over how the :class:`LogRecord` representing a "
"logging event is constructed."
msgstr ""
"Denna funktion har tillkommit tillsammans med :func:`getLogRecordFactory` "
"för att ge utvecklare mer kontroll över hur :class:`LogRecord` som "
"representerar en loggningshändelse konstrueras."

msgid "The factory has the following signature:"
msgstr "Fabriken har följande signatur:"

msgid ""
"``factory(name, level, fn, lno, msg, args, exc_info, func=None, sinfo=None, "
"**kwargs)``"
msgstr ""
"``factory(namn, nivå, fn, lno, msg, args, exc_info, func=None, sinfo=None, "
"**kwargs)``"

msgid "The logger name."
msgstr "Loggarens namn."

msgid "level"
msgstr "nivå"

msgid "The logging level (numeric)."
msgstr "Loggningsnivå (numerisk)."

msgid "fn"
msgstr "fn"

msgid "The full pathname of the file where the logging call was made."
msgstr ""
"Det fullständiga sökvägsnamnet för den fil där loggningsanropet gjordes."

msgid "lno"
msgstr "lno"

msgid "The line number in the file where the logging call was made."
msgstr "Radnumret i filen där loggningsanropet gjordes."

msgid "The logging message."
msgstr "Loggningens meddelande."

msgid "The arguments for the logging message."
msgstr "Argumenten för loggningsmeddelandet."

msgid "An exception tuple, or ``None``."
msgstr "En undantags-tupel, eller ``None``."

msgid "func"
msgstr "func"

msgid "The name of the function or method which invoked the logging call."
msgstr "Namnet på den funktion eller metod som anropade loggningsanropet."

msgid "sinfo"
msgstr "sinfo"

msgid ""
"A stack traceback such as is provided by :func:`traceback.print_stack`, "
"showing the call hierarchy."
msgstr ""
"En stack traceback som den som tillhandahålls av :func:`traceback."
"print_stack`, visar anropshierarkin."

msgid "kwargs"
msgstr "kwargs"

msgid "Additional keyword arguments."
msgstr "Ytterligare nyckelordsargument."

msgid "Module-Level Attributes"
msgstr "Attribut på modulnivå"

msgid ""
"A \"handler of last resort\" is available through this attribute. This is a :"
"class:`StreamHandler` writing to ``sys.stderr`` with a level of ``WARNING``, "
"and is used to handle logging events in the absence of any logging "
"configuration. The end result is to just print the message to ``sys."
"stderr``. This replaces the earlier error message saying that \"no handlers "
"could be found for logger XYZ\". If you need the earlier behaviour for some "
"reason, ``lastResort`` can be set to ``None``."
msgstr ""
"En \"hanterare av sista utväg\" är tillgänglig via detta attribut. Detta är "
"en :class:`StreamHandler` som skriver till ``sys.stderr`` med en nivå av "
"``WARNING``, och används för att hantera loggningshändelser i avsaknad av "
"någon loggningskonfiguration. Slutresultatet är att bara skriva ut "
"meddelandet till ``sys.stderr``. Detta ersätter det tidigare felmeddelandet "
"som sa att \"inga hanterare kunde hittas för logger XYZ\". Om du av någon "
"anledning behöver det tidigare beteendet kan ``lastResort`` sättas till "
"``None``."

msgid "Used to see if exceptions during handling should be propagated."
msgstr "Används för att se om undantag under hanteringen ska spridas."

msgid "Default: ``True``."
msgstr "Standard: ``True``."

msgid ""
"If :data:`raiseExceptions` is ``False``, exceptions get silently ignored. "
"This is what is mostly wanted for a logging system - most users will not "
"care about errors in the logging system, they are more interested in "
"application errors."
msgstr ""
"Om :data:`raiseExceptions` är ``False``, ignoreras undantag i tysthet. Detta "
"är vad som oftast önskas för ett loggningssystem - de flesta användare bryr "
"sig inte om fel i loggningssystemet, de är mer intresserade av "
"applikationsfel."

msgid "Integration with the warnings module"
msgstr "Integration med varningsmodulen"

msgid ""
"The :func:`captureWarnings` function can be used to integrate :mod:`logging` "
"with the :mod:`warnings` module."
msgstr ""
"Funktionen :func:`captureWarnings` kan användas för att integrera :mod:"
"`logging` med modulen :mod:`warnings`."

msgid ""
"This function is used to turn the capture of warnings by logging on and off."
msgstr ""
"Denna funktion används för att aktivera och inaktivera loggning av varningar."

msgid ""
"If *capture* is ``True``, warnings issued by the :mod:`warnings` module will "
"be redirected to the logging system. Specifically, a warning will be "
"formatted using :func:`warnings.formatwarning` and the resulting string "
"logged to a logger named ``'py.warnings'`` with a severity of :const:"
"`WARNING`."
msgstr ""
"Om *capture* är ``True`` kommer varningar som utfärdas av modulen :mod:"
"`warnings` att omdirigeras till loggningssystemet. Specifikt kommer en "
"varning att formateras med :func:`warnings.formatwarning` och den "
"resulterande strängen loggas till en logger med namnet ``'py.warnings'`` med "
"allvarlighetsgraden :const:`WARNING`."

msgid ""
"If *capture* is ``False``, the redirection of warnings to the logging system "
"will stop, and warnings will be redirected to their original destinations (i."
"e. those in effect before ``captureWarnings(True)`` was called)."
msgstr ""
"Om *capture* är ``False`` kommer omdirigeringen av varningar till "
"loggsystemet att upphöra och varningarna kommer att omdirigeras till sina "
"ursprungliga destinationer (dvs. de som gällde innan "
"``captureWarnings(True)`` anropades)."

msgid "Module :mod:`logging.config`"
msgstr "Modul :mod:`logging.config`"

msgid "Configuration API for the logging module."
msgstr "Konfigurations-API för loggningsmodulen."

msgid "Module :mod:`logging.handlers`"
msgstr "Modul :mod:`logging.handlers`"

msgid "Useful handlers included with the logging module."
msgstr "Användbara hanterare som ingår i loggningsmodulen."

msgid ":pep:`282` - A Logging System"
msgstr ":pep:`282` - Ett loggningssystem"

msgid ""
"The proposal which described this feature for inclusion in the Python "
"standard library."
msgstr ""
"Förslaget som beskrev denna funktion för inkludering i Pythons "
"standardbibliotek."

msgid ""
"`Original Python logging package <https://old.red-dove.com/python_logging."
"html>`_"
msgstr ""
"\"Ursprungligt Python-loggningspaket <https://old.red-dove.com/"
"python_logging.html>"

msgid ""
"This is the original source for the :mod:`logging` package.  The version of "
"the package available from this site is suitable for use with Python 1.5.2, "
"2.1.x and 2.2.x, which do not include the :mod:`logging` package in the "
"standard library."
msgstr ""
"Detta är den ursprungliga källan för paketet :mod:`logging`.  Den version av "
"paketet som är tillgänglig från den här webbplatsen är lämplig för "
"användning med Python 1.5.2, 2.1.x och 2.2.x, som inte innehåller paketet :"
"mod:`logging` i standardbiblioteket."

msgid "Errors"
msgstr "Fel"

msgid "logging"
msgstr "loggning"
