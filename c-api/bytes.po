# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Bytes Objects"
msgstr ""

msgid ""
"These functions raise :exc:`TypeError` when expecting a bytes parameter and "
"called with a non-bytes parameter."
msgstr ""

msgid "This subtype of :c:type:`PyObject` represents a Python bytes object."
msgstr ""

msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python bytes type; it "
"is the same object as :class:`bytes` in the Python layer."
msgstr ""

msgid ""
"Return true if the object *o* is a bytes object or an instance of a subtype "
"of the bytes type.  This function always succeeds."
msgstr ""

msgid ""
"Return true if the object *o* is a bytes object, but not an instance of a "
"subtype of the bytes type.  This function always succeeds."
msgstr ""

msgid ""
"Return a new bytes object with a copy of the string *v* as value on success, "
"and ``NULL`` on failure.  The parameter *v* must not be ``NULL``; it will "
"not be checked."
msgstr ""

msgid ""
"Return a new bytes object with a copy of the string *v* as value and length "
"*len* on success, and ``NULL`` on failure.  If *v* is ``NULL``, the contents "
"of the bytes object are uninitialized."
msgstr ""

msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number of "
"arguments, calculate the size of the resulting Python bytes object and "
"return a bytes object with the values formatted into it.  The variable "
"arguments must be C types and must correspond exactly to the format "
"characters in the *format* string.  The following format characters are "
"allowed:"
msgstr ""

msgid "Format Characters"
msgstr ""

msgid "Type"
msgstr ""

msgid "Comment"
msgstr ""

msgid "``%%``"
msgstr ""

msgid "*n/a*"
msgstr ""

msgid "The literal % character."
msgstr ""

msgid "``%c``"
msgstr ""

msgid "int"
msgstr ""

msgid "A single byte, represented as a C int."
msgstr ""

msgid "``%d``"
msgstr ""

msgid "Equivalent to ``printf(\"%d\")``. [1]_"
msgstr ""

msgid "``%u``"
msgstr ""

msgid "unsigned int"
msgstr ""

msgid "Equivalent to ``printf(\"%u\")``. [1]_"
msgstr ""

msgid "``%ld``"
msgstr ""

msgid "long"
msgstr ""

msgid "Equivalent to ``printf(\"%ld\")``. [1]_"
msgstr ""

msgid "``%lu``"
msgstr ""

msgid "unsigned long"
msgstr ""

msgid "Equivalent to ``printf(\"%lu\")``. [1]_"
msgstr ""

msgid "``%zd``"
msgstr ""

msgid ":c:type:`\\ Py_ssize_t`"
msgstr ""

msgid "Equivalent to ``printf(\"%zd\")``. [1]_"
msgstr ""

msgid "``%zu``"
msgstr ""

msgid "size_t"
msgstr ""

msgid "Equivalent to ``printf(\"%zu\")``. [1]_"
msgstr ""

msgid "``%i``"
msgstr ""

msgid "Equivalent to ``printf(\"%i\")``. [1]_"
msgstr ""

msgid "``%x``"
msgstr ""

msgid "Equivalent to ``printf(\"%x\")``. [1]_"
msgstr ""

msgid "``%s``"
msgstr ""

msgid "const char\\*"
msgstr ""

msgid "A null-terminated C character array."
msgstr ""

msgid "``%p``"
msgstr ""

msgid "const void\\*"
msgstr ""

msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal "
"``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""

msgid ""
"An unrecognized format character causes all the rest of the format string to "
"be copied as-is to the result object, and any extra arguments discarded."
msgstr ""

msgid ""
"For integer specifiers (d, u, ld, lu, zd, zu, i, x): the 0-conversion flag "
"has effect even when a precision is given."
msgstr ""

msgid ""
"Identical to :c:func:`PyBytes_FromFormat` except that it takes exactly two "
"arguments."
msgstr ""

msgid ""
"Return the bytes representation of object *o* that implements the buffer "
"protocol."
msgstr ""

msgid "Return the length of the bytes in bytes object *o*."
msgstr ""

msgid "Similar to :c:func:`PyBytes_Size`, but without error checking."
msgstr ""

msgid ""
"Return a pointer to the contents of *o*.  The pointer refers to the internal "
"buffer of *o*, which consists of ``len(o) + 1`` bytes.  The last byte in the "
"buffer is always null, regardless of whether there are any other null "
"bytes.  The data must not be modified in any way, unless the object was just "
"created using ``PyBytes_FromStringAndSize(NULL, size)``. It must not be "
"deallocated.  If *o* is not a bytes object at all, :c:func:"
"`PyBytes_AsString` returns ``NULL`` and raises :exc:`TypeError`."
msgstr ""

msgid "Similar to :c:func:`PyBytes_AsString`, but without error checking."
msgstr ""

msgid ""
"Return the null-terminated contents of the object *obj* through the output "
"variables *buffer* and *length*. Returns ``0`` on success."
msgstr ""

msgid ""
"If *length* is ``NULL``, the bytes object may not contain embedded null "
"bytes; if it does, the function returns ``-1`` and a :exc:`ValueError` is "
"raised."
msgstr ""

msgid ""
"The buffer refers to an internal buffer of *obj*, which includes an "
"additional null byte at the end (not counted in *length*).  The data must "
"not be modified in any way, unless the object was just created using "
"``PyBytes_FromStringAndSize(NULL, size)``.  It must not be deallocated.  If "
"*obj* is not a bytes object at all, :c:func:`PyBytes_AsStringAndSize` "
"returns ``-1`` and raises :exc:`TypeError`."
msgstr ""

msgid ""
"Previously, :exc:`TypeError` was raised when embedded null bytes were "
"encountered in the bytes object."
msgstr ""

msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*; the caller will own the new reference.  The reference "
"to the old value of *bytes* will be stolen.  If the new object cannot be "
"created, the old reference to *bytes* will still be discarded and the value "
"of *\\*bytes* will be set to ``NULL``; the appropriate exception will be set."
msgstr ""

msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*.  This version releases the :term:`strong reference` to "
"*newpart* (i.e. decrements its reference count)."
msgstr ""

msgid "Similar to ``sep.join(iterable)`` in Python."
msgstr ""

msgid ""
"*sep* must be Python :class:`bytes` object. (Note that :c:func:"
"`PyUnicode_Join` accepts ``NULL`` separator and treats it as a space, "
"whereas :c:func:`PyBytes_Join` doesn't accept ``NULL`` separator.)"
msgstr ""

msgid ""
"*iterable* must be an iterable object yielding objects that implement the :"
"ref:`buffer protocol <bufferobjects>`."
msgstr ""

msgid ""
"On success, return a new :class:`bytes` object. On error, set an exception "
"and return ``NULL``."
msgstr ""

msgid ""
"Resize a bytes object. *newsize* will be the new length of the bytes object. "
"You can think of it as creating a new bytes object and destroying the old "
"one, only more efficiently. Pass the address of an existing bytes object as "
"an lvalue (it may be written into), and the new size desired.  On success, "
"*\\*bytes* holds the resized bytes object and ``0`` is returned; the address "
"in *\\*bytes* may differ from its input value.  If the reallocation fails, "
"the original bytes object at *\\*bytes* is deallocated, *\\*bytes* is set to "
"``NULL``, :exc:`MemoryError` is set, and ``-1`` is returned."
msgstr ""

msgid "object"
msgstr ""

msgid "bytes"
msgstr ""
