# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Generator Objects"
msgstr ""

msgid ""
"Generator objects are what Python uses to implement generator iterators. "
"They are normally created by iterating over a function that yields values, "
"rather than explicitly calling :c:func:`PyGen_New` or :c:func:"
"`PyGen_NewWithQualName`."
msgstr ""

msgid "The C structure used for generator objects."
msgstr ""

msgid "The type object corresponding to generator objects."
msgstr ""

msgid ""
"Return true if *ob* is a generator object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""

msgid ""
"Return true if *ob*'s type is :c:type:`PyGen_Type`; *ob* must not be "
"``NULL``.  This function always succeeds."
msgstr ""

msgid ""
"Create and return a new generator object based on the *frame* object. A "
"reference to *frame* is stolen by this function. The argument must not be "
"``NULL``."
msgstr ""

msgid ""
"Create and return a new generator object based on the *frame* object, with "
"``__name__`` and ``__qualname__`` set to *name* and *qualname*. A reference "
"to *frame* is stolen by this function.  The *frame* argument must not be "
"``NULL``."
msgstr ""
