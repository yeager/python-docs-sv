# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:35+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Lexical analysis"
msgstr "Lexikalisk analys"

msgid ""
"A Python program is read by a *parser*.  Input to the parser is a stream of :"
"term:`tokens <token>`, generated by the *lexical analyzer* (also known as "
"the *tokenizer*). This chapter describes how the lexical analyzer breaks a "
"file into tokens."
msgstr ""
"Ett Python-program läses av en *parser*.  Indata till parsern är en ström "
"av :term:`tokens <token>`, som genereras av den *lexikala analysatorn* (även "
"känd som *tokenizer*). I det här kapitlet beskrivs hur den lexikala "
"analysatorn delar upp en fil i tokens."

msgid ""
"Python reads program text as Unicode code points; the encoding of a source "
"file can be given by an encoding declaration and defaults to UTF-8, see :pep:"
"`3120` for details.  If the source file cannot be decoded, a :exc:"
"`SyntaxError` is raised."
msgstr ""
"Python läser programtext som Unicode-kodpunkter; kodningen av en källfil kan "
"anges med en kodningsdeklaration och standardvärdet är UTF-8, se :pep:`3120` "
"för detaljer.  Om källfilen inte kan avkodas uppstår ett :exc:`SyntaxError`."

msgid "Line structure"
msgstr "Linjestruktur"

msgid "A Python program is divided into a number of *logical lines*."
msgstr "Ett Python-program är indelat i ett antal *logiska rader*."

msgid "Logical lines"
msgstr "Logiska linjer"

msgid ""
"The end of a logical line is represented by the token :data:`~token."
"NEWLINE`. Statements cannot cross logical line boundaries except where :data:"
"`!NEWLINE` is allowed by the syntax (e.g., between statements in compound "
"statements). A logical line is constructed from one or more *physical lines* "
"by following the :ref:`explicit <explicit-joining>` or :ref:`implicit "
"<implicit-joining>` *line joining* rules."
msgstr ""
"Slutet på en logisk rad representeras av token :data:`~token.NEWLINE`. "
"Satser kan inte korsa logiska linjers gränser utom där :data:`!NEWLINE` "
"tillåts av syntaxen (t.ex. mellan satser i sammansatta satser). En logisk "
"linje konstrueras från en eller flera *fysiska linjer* genom att följa :ref:"
"``explicit <explicit-joining>` eller :ref:``implicit <implicit-joining>` "
"*line joining*-reglerna."

msgid "Physical lines"
msgstr "Fysiska linjer"

msgid ""
"A physical line is a sequence of characters terminated by one the following "
"end-of-line sequences:"
msgstr ""
"En fysisk rad är en sekvens av tecken som avslutas med någon av följande "
"radavslutningssekvenser:"

msgid "the Unix form using ASCII LF (linefeed),"
msgstr "unix-formuläret med ASCII LF (radmatning),"

msgid ""
"the Windows form using the ASCII sequence CR LF (return followed by "
"linefeed),"
msgstr ""
"windows-formuläret med hjälp av ASCII-sekvensen CR LF (retur följt av "
"radmatning),"

msgid "the '`Classic Mac OS`__' form using the ASCII CR (return) character."
msgstr "formuläret \"`Classic Mac OS`__\" med ASCII-tecknet CR (return)."

msgid ""
"Regardless of platform, each of these sequences is replaced by a single "
"ASCII LF (linefeed) character. (This is done even inside :ref:`string "
"literals <strings>`.) Each line can use any of the sequences; they do not "
"need to be consistent within a file."
msgstr ""
"Oavsett plattform ersätts var och en av dessa sekvenser med ett enda ASCII "
"LF-tecken (linefeed). (Detta görs även inom :ref:`stränglitteraler "
"<strings>`.) Varje rad kan använda vilken som helst av sekvenserna; de "
"behöver inte vara konsekventa inom en fil."

msgid ""
"The end of input also serves as an implicit terminator for the final "
"physical line."
msgstr ""
"Slutet på inmatningen fungerar också som en implicit terminator för den "
"sista fysiska linjen."

msgid "Formally:"
msgstr "Formellt sett:"

msgid "Comments"
msgstr "Kommentarer"

msgid ""
"A comment starts with a hash character (``#``) that is not part of a string "
"literal, and ends at the end of the physical line.  A comment signifies the "
"end of the logical line unless the implicit line joining rules are invoked. "
"Comments are ignored by the syntax."
msgstr ""
"En kommentar börjar med ett hash-tecken (``#``) som inte är en del av en "
"bokstavlig sträng och slutar vid slutet av den fysiska raden.  En kommentar "
"innebär slutet på den logiska raden om inte de implicita reglerna för "
"radförlängning används. Kommentarer ignoreras av syntaxen."

msgid "Encoding declarations"
msgstr "Deklarationer för kodning"

msgid ""
"If a comment in the first or second line of the Python script matches the "
"regular expression ``coding[=:]\\s*([-\\w.]+)``, this comment is processed "
"as an encoding declaration; the first group of this expression names the "
"encoding of the source code file. The encoding declaration must appear on a "
"line of its own. If it is the second line, the first line must also be a "
"comment-only line. The recommended forms of an encoding expression are ::"
msgstr ""
"Om en kommentar på den första eller andra raden i Python-skriptet matchar "
"det reguljära uttrycket ``coding[=:]\\s*([-\\w.]+)``, behandlas denna "
"kommentar som en kodningsdeklaration; den första gruppen i detta uttryck "
"anger kodningen för källkodsfilen. Kodningsdeklarationen måste stå på en "
"egen rad. Om det är den andra raden, måste den första raden också vara en "
"rad med enbart kommentarer. De rekommenderade formerna för ett "
"kodningsuttryck är ::"

msgid "# -*- coding: <encoding-name> -*-"
msgstr "# -*- kodning: <encoding-name> -*-"

msgid "which is recognized also by GNU Emacs, and ::"
msgstr "som också känns igen av GNU Emacs, och ::"

msgid "# vim:fileencoding=<encoding-name>"
msgstr "# vim:filkodning=<encoding-name>"

msgid "which is recognized by Bram Moolenaar's VIM."
msgstr "som är erkänd av Bram Moolenaars VIM."

msgid ""
"If no encoding declaration is found, the default encoding is UTF-8.  If the "
"implicit or explicit encoding of a file is UTF-8, an initial UTF-8 byte-"
"order mark (``b'\\xef\\xbb\\xbf'``) is ignored rather than being a syntax "
"error."
msgstr ""
"Om ingen kodningsdeklaration hittas är standardkodningen UTF-8.  Om den "
"implicita eller explicita kodningen av en fil är UTF-8 ignoreras en initial "
"UTF-8 byteordermarkering (``b'\\xef\\xbb\\xbf'``) i stället för att utgöra "
"ett syntaxfel."

msgid ""
"If an encoding is declared, the encoding name must be recognized by Python "
"(see :ref:`standard-encodings`). The encoding is used for all lexical "
"analysis, including string literals, comments and identifiers."
msgstr ""
"Om en kodning deklareras, måste kodningsnamnet kännas igen av Python (se :"
"ref:`standard-encodings`). Kodningen används för all lexikal analys, "
"inklusive stränglitteraler, kommentarer och identifierare."

msgid ""
"All lexical analysis, including string literals, comments and identifiers, "
"works on Unicode text decoded using the source encoding. Any Unicode code "
"point, except the NUL control character, can appear in Python source."
msgstr ""
"All lexikal analys, inklusive stränglitteraler, kommentarer och "
"identifierare, fungerar på Unicode-text som avkodas med hjälp av "
"källkodningen. Alla Unicode-kodpunkter, utom kontrolltecknet NUL, kan "
"förekomma i Python-källan."

msgid "Explicit line joining"
msgstr "Explicit sammanfogning av linjer"

msgid ""
"Two or more physical lines may be joined into logical lines using backslash "
"characters (``\\``), as follows: when a physical line ends in a backslash "
"that is not part of a string literal or comment, it is joined with the "
"following forming a single logical line, deleting the backslash and the "
"following end-of-line character.  For example::"
msgstr ""
"Två eller flera fysiska rader kan sammanfogas till logiska rader med hjälp "
"av backslash-tecken (`````) enligt följande: När en fysisk rad slutar med "
"ett backslash-tecken som inte är en del av en bokstavlig sträng eller en "
"kommentar, sammanfogas den med den följande och bildar en enda logisk rad, "
"varvid backslash-tecknet och det följande radslutstecknet tas bort.  Till "
"exempel::"

msgid ""
"if 1900 < year < 2100 and 1 <= month <= 12 \\\n"
"   and 1 <= day <= 31 and 0 <= hour < 24 \\\n"
"   and 0 <= minute < 60 and 0 <= second < 60:   # Looks like a valid date\n"
"        return 1"
msgstr ""
"om 1900 < år < 2100 och 1 <= månad <= 12 \\\n"
"   och 1 <= dag <= 31 och 0 <= timme < 24 \\\n"
"   och 0 <= minut <= 60 och 0 <= sekund <= 60: # Ser ut som ett giltigt "
"datum\n"
"        returnera 1"

msgid ""
"A line ending in a backslash cannot carry a comment.  A backslash does not "
"continue a comment.  A backslash does not continue a token except for string "
"literals (i.e., tokens other than string literals cannot be split across "
"physical lines using a backslash).  A backslash is illegal elsewhere on a "
"line outside a string literal."
msgstr ""
"En rad som slutar med ett backslash kan inte innehålla en kommentar.  En "
"backslash fortsätter inte en kommentar.  En backslash fortsätter inte en "
"token utom för stränglitteraler (dvs. andra tokens än stränglitteraler kan "
"inte delas över fysiska rader med hjälp av en backslash).  Ett backslash är "
"olagligt på andra ställen på en rad utanför en stränglitteral."

msgid "Implicit line joining"
msgstr "Implicit sammanfogning av linjer"

msgid ""
"Expressions in parentheses, square brackets or curly braces can be split "
"over more than one physical line without using backslashes. For example::"
msgstr ""
"Uttryck inom parenteser, hakparenteser eller hakklamrar kan delas upp på mer "
"än en fysisk rad utan att använda bindestreck. Till exempel::"

msgid ""
"month_names = ['Januari', 'Februari', 'Maart',      # These are the\n"
"               'April',   'Mei',      'Juni',       # Dutch names\n"
"               'Juli',    'Augustus', 'September',  # for the months\n"
"               'Oktober', 'November', 'December']   # of the year"
msgstr ""
"month_names = ['Januari', 'Februari', 'Maart', # Dessa är de nederländska\n"
"               'April', 'Mei', 'Juni', # nederländska namnen\n"
"               'Juli', 'Augustus', 'September', # för månaderna\n"
"               'Oktober', 'November', 'December']   # av året"

msgid ""
"Implicitly continued lines can carry comments.  The indentation of the "
"continuation lines is not important.  Blank continuation lines are allowed. "
"There is no NEWLINE token between implicit continuation lines.  Implicitly "
"continued lines can also occur within triple-quoted strings (see below); in "
"that case they cannot carry comments."
msgstr ""
"Implicit fortsatta rader kan innehålla kommentarer.  Indraget på "
"fortsättningsraderna är inte viktigt.  Tomma fortsättningsrader är tillåtna. "
"Det finns ingen NEWLINE-token mellan implicita fortsättningsrader.  Implicit "
"fortsatta rader kan också förekomma inom trippelciterade strängar (se "
"nedan); i så fall kan de inte innehålla kommentarer."

msgid "Blank lines"
msgstr "Tomma rader"

msgid ""
"A logical line that contains only spaces, tabs, formfeeds and possibly a "
"comment, is ignored (i.e., no :data:`~token.NEWLINE` token is generated). "
"During interactive input of statements, handling of a blank line may differ "
"depending on the implementation of the read-eval-print loop. In the standard "
"interactive interpreter, an entirely blank logical line (that is, one "
"containing not even whitespace or a comment) terminates a multi-line "
"statement."
msgstr ""
"En logisk rad som bara innehåller mellanslag, tabbar, formfeeds och "
"eventuellt en kommentar ignoreras (dvs. ingen :data:`~token.NEWLINE` token "
"genereras). Vid interaktiv inmatning av satser kan hanteringen av en tom rad "
"skilja sig åt beroende på hur read-eval-print-loopen implementeras. I den "
"interaktiva standardtolken avslutar en helt tom logisk rad (dvs. en rad som "
"inte ens innehåller blanksteg eller en kommentar) ett flerradigt uttalande."

msgid "Indentation"
msgstr "Indrag"

msgid ""
"Leading whitespace (spaces and tabs) at the beginning of a logical line is "
"used to compute the indentation level of the line, which in turn is used to "
"determine the grouping of statements."
msgstr ""
"Ledande blanksteg (mellanslag och tabbar) i början av en logisk rad används "
"för att beräkna indragningsnivån på raden, som i sin tur används för att "
"bestämma grupperingen av satser."

msgid ""
"Tabs are replaced (from left to right) by one to eight spaces such that the "
"total number of characters up to and including the replacement is a multiple "
"of eight (this is intended to be the same rule as used by Unix).  The total "
"number of spaces preceding the first non-blank character then determines the "
"line's indentation.  Indentation cannot be split over multiple physical "
"lines using backslashes; the whitespace up to the first backslash determines "
"the indentation."
msgstr ""
"Tabbar ersätts (från vänster till höger) med ett till åtta mellanslag så att "
"det totala antalet tecken fram till och med ersättningen är en multipel av "
"åtta (detta är tänkt att vara samma regel som används av Unix).  Det totala "
"antalet mellanslag före det första tecknet som inte är blankt avgör sedan "
"radens indrag.  Indrag kan inte delas upp på flera fysiska rader med hjälp "
"av backslash; blanksteg fram till första backslash bestämmer indraget."

msgid ""
"Indentation is rejected as inconsistent if a source file mixes tabs and "
"spaces in a way that makes the meaning dependent on the worth of a tab in "
"spaces; a :exc:`TabError` is raised in that case."
msgstr ""
"Indragning avvisas som inkonsekvent om en källfil blandar tabbar och "
"mellanslag på ett sätt som gör att betydelsen är beroende av värdet av en "
"tabb i mellanslag; ett :exc:`TabError` uppstår i så fall."

msgid ""
"**Cross-platform compatibility note:** because of the nature of text editors "
"on non-UNIX platforms, it is unwise to use a mixture of spaces and tabs for "
"the indentation in a single source file.  It should also be noted that "
"different platforms may explicitly limit the maximum indentation level."
msgstr ""
"**Kompatibilitet mellan plattformar: ** På grund av textredigerare på andra "
"plattformar än UNIX är det oklokt att använda en blandning av mellanslag och "
"tabbar för indragning i en och samma källfil.  Det bör också noteras att "
"olika plattformar uttryckligen kan begränsa den maximala indragningsnivån."

msgid ""
"A formfeed character may be present at the start of the line; it will be "
"ignored for the indentation calculations above.  Formfeed characters "
"occurring elsewhere in the leading whitespace have an undefined effect (for "
"instance, they may reset the space count to zero)."
msgstr ""
"Ett formfeed-tecken kan finnas i början av raden; det kommer att ignoreras "
"vid indragningsberäkningarna ovan.  Formfeed-tecken som förekommer på andra "
"ställen i det inledande blanksteget har en odefinierad effekt (de kan t.ex. "
"återställa blankstegsräkningen till noll)."

msgid ""
"The indentation levels of consecutive lines are used to generate :data:"
"`~token.INDENT` and :data:`~token.DEDENT` tokens, using a stack, as follows."
msgstr ""
"Indenteringsnivåerna för på varandra följande rader används för att "
"generera :data:`~token.INDENT` och :data:`~token.DEDENT` tokens, med hjälp "
"av en stack, enligt följande."

msgid ""
"Before the first line of the file is read, a single zero is pushed on the "
"stack; this will never be popped off again.  The numbers pushed on the stack "
"will always be strictly increasing from bottom to top.  At the beginning of "
"each logical line, the line's indentation level is compared to the top of "
"the stack. If it is equal, nothing happens. If it is larger, it is pushed on "
"the stack, and one :data:`!INDENT` token is generated.  If it is smaller, it "
"*must* be one of the numbers occurring on the stack; all numbers on the "
"stack that are larger are popped off, and for each number popped off a :data:"
"`!DEDENT` token is generated. At the end of the file, a :data:`!DEDENT` "
"token is generated for each number remaining on the stack that is larger "
"than zero."
msgstr ""
"Innan den första raden i filen läses läggs en enda nolla på stacken; den "
"kommer aldrig att plockas bort igen.  Siffrorna som läggs på stacken är "
"alltid strikt ökande från botten till toppen.  I början av varje logisk rad "
"jämförs radens indragningsnivå med toppen av stacken. Om den är lika stor "
"händer ingenting. Om den är större läggs den på stacken och en :data:`!"
"INDENT`-token genereras.  Om det är mindre *måste* det vara ett av de tal "
"som förekommer på stacken; alla tal på stacken som är större poppas bort och "
"för varje tal som poppas bort genereras en :data:`!DEDENT`-token. I slutet "
"av filen genereras en :data:`!DEDENT`-token för varje tal som är större än "
"noll och som finns kvar på stapeln."

msgid ""
"Here is an example of a correctly (though confusingly) indented piece of "
"Python code::"
msgstr ""
"Här är ett exempel på en korrekt (men förvirrande) indragen bit Python-kod::"

msgid ""
"def perm(l):\n"
"        # Compute the list of all permutations of l\n"
"    if len(l) <= 1:\n"
"                  return [l]\n"
"    r = []\n"
"    for i in range(len(l)):\n"
"             s = l[:i] + l[i+1:]\n"
"             p = perm(s)\n"
"             for x in p:\n"
"              r.append(l[i:i+1] + x)\n"
"    return r"
msgstr ""
"def perm(l):\n"
"        # Beräkna listan över alla permutationer av l\n"
"    om len(l) <= 1:\n"
"                  return [l]\n"
"    r = []\n"
"    for i in range(len(l)):\n"
"             s = l[:i] + l[i+1:]\n"
"             p = perm(s)\n"
"             för x i p:\n"
"              r.append(l[i:i+1] + x)\n"
"    returnera r"

msgid "The following example shows various indentation errors::"
msgstr "Följande exempel visar olika indragningsfel::"

msgid ""
" def perm(l):                       # error: first line indented\n"
"for i in range(len(l)):             # error: not indented\n"
"    s = l[:i] + l[i+1:]\n"
"        p = perm(l[:i] + l[i+1:])   # error: unexpected indent\n"
"        for x in p:\n"
"                r.append(l[i:i+1] + x)\n"
"            return r                # error: inconsistent dedent"
msgstr ""
" def perm(l):                       # fel: första raden indragen\n"
"for i in range(len(l)):             # fel: inte indragen\n"
"    s = l[:i] + l[i+1:]\n"
"        p = perm(l[:i] + l[i+1:]) # fel: oväntat indrag\n"
"        för x i p:\n"
"                r.append(l[i:i+1] + x)\n"
"            return r # fel: inkonsekvent indrag"

msgid ""
"(Actually, the first three errors are detected by the parser; only the last "
"error is found by the lexical analyzer --- the indentation of ``return r`` "
"does not match a level popped off the stack.)"
msgstr ""
"(I själva verket upptäcks de tre första felen av parsern; endast det sista "
"felet upptäcks av den lexikala analysatorn --- indragningen av ``return r`` "
"matchar inte en nivå som poppats från stacken)"

msgid "Whitespace between tokens"
msgstr "Mellanslag mellan symboler"

msgid ""
"Except at the beginning of a logical line or in string literals, the "
"whitespace characters space, tab and formfeed can be used interchangeably to "
"separate tokens.  Whitespace is needed between two tokens only if their "
"concatenation could otherwise be interpreted as a different token. For "
"example, ``ab`` is one token, but ``a b`` is two tokens. However, ``+a`` and "
"``+ a`` both produce two tokens, ``+`` and ``a``, as ``+a`` is not a valid "
"token."
msgstr ""
"Förutom i början av en logisk rad eller i stränglitteraler kan "
"blankstegstecknen mellanslag, tabb och formfeed användas omväxlande för att "
"separera tokens.  Blanksteg behövs mellan två tokens endast om deras "
"sammankoppling annars skulle kunna tolkas som en annan token. Till exempel "
"är ``ab`` en token, men ``a b`` är två tokens. Men ``+a`` och ``+ a`` ger "
"båda två tokens, ``+`` och ``a``, eftersom ``+a`` inte är en giltig token."

msgid "End marker"
msgstr "Slutmarkör"

msgid ""
"At the end of non-interactive input, the lexical analyzer generates an :data:"
"`~token.ENDMARKER` token."
msgstr ""
"I slutet av en icke-interaktiv inmatning genererar den lexikala analysatorn "
"en :data:`~token.ENDMARKER`-token."

msgid "Other tokens"
msgstr "Andra symboler"

msgid ""
"Besides :data:`~token.NEWLINE`, :data:`~token.INDENT` and :data:`~token."
"DEDENT`, the following categories of tokens exist: *identifiers* and "
"*keywords* (:data:`~token.NAME`), *literals* (such as :data:`~token.NUMBER` "
"and :data:`~token.STRING`), and other symbols (*operators* and "
"*delimiters*, :data:`~token.OP`). Whitespace characters (other than logical "
"line terminators, discussed earlier) are not tokens, but serve to delimit "
"tokens. Where ambiguity exists, a token comprises the longest possible "
"string that forms a legal token, when read from left to right."
msgstr ""
"Förutom :data:`~token.NEWLINE`, :data:`~token.INDENT` och :data:`~token."
"DEDENT` finns följande kategorier av tokens: *identifierare* och *nyckelord* "
"(:data:`~token.NAME`), *litertal* (t.ex. :data:`~token.NUMBER` och :data:"
"`~token.STRING`) och andra symboler (*operatorer* och *avgränsare*, :data:"
"`~token.OP`). Whitespace-tecken (andra än logiska radavslutare, som "
"diskuterats tidigare) är inte tokens, utan används för att avgränsa tokens. "
"Vid tvetydighet utgörs en token av den längsta möjliga sträng som utgör en "
"legal token, läst från vänster till höger."

msgid "Names (identifiers and keywords)"
msgstr "Namn (identifierare och nyckelord)"

msgid ""
":data:`~token.NAME` tokens represent *identifiers*, *keywords*, and *soft "
"keywords*."
msgstr ""
":data:`~token.NAME`-tokens representerar *identifierare*, *nyckelord* och "
"*mjuka nyckelord*."

msgid ""
"Within the ASCII range (U+0001..U+007F), the valid characters for names "
"include the uppercase and lowercase letters (``A-Z`` and ``a-z``), the "
"underscore ``_`` and, except for the first character, the digits ``0`` "
"through ``9``."
msgstr ""
"Inom ASCII-området (U+0001..U+007F) omfattar de giltiga tecknen för namn "
"stora och små bokstäver (``A-Z`` och ``a-z``), understrecket ``_`` och, med "
"undantag för det första tecknet, siffrorna ``0`` till ``9``."

msgid ""
"Names must contain at least one character, but have no upper length limit. "
"Case is significant."
msgstr ""
"Namnen måste innehålla minst ett tecken, men har ingen övre längdgräns. "
"Versaler är av betydelse."

msgid ""
"Besides ``A-Z``, ``a-z``, ``_`` and ``0-9``, names can also use \"letter-"
"like\" and \"number-like\" characters from outside the ASCII range, as "
"detailed below."
msgstr ""
"Förutom ``A-Z``, ``a-z``, ``_`` och ``0-9`` kan namn också använda "
"\"bokstavs-liknande\" och \"sifferliknande\" tecken utanför ASCII-området, "
"enligt nedan."

msgid ""
"All identifiers are converted into the `normalization form`_ NFKC while "
"parsing; comparison of identifiers is based on NFKC."
msgstr ""
"Alla identifierare konverteras till `normalization form`_ NFKC under "
"parsing; jämförelse av identifierare baseras på NFKC."

msgid ""
"Formally, the first character of a normalized identifier must belong to the "
"set ``id_start``, which is the union of:"
msgstr ""
"Formellt sett måste det första tecknet i en normaliserad identifierare "
"tillhöra uppsättningen ``id_start``, som är en förening av:"

msgid "Unicode category ``<Lu>`` - uppercase letters (includes ``A`` to ``Z``)"
msgstr "Unicode-kategori ``<Lu>`` - versaler (inkluderar ``A`` till ``Z``)"

msgid "Unicode category ``<Ll>`` - lowercase letters (includes ``a`` to ``z``)"
msgstr ""
"Unicode-kategori ``<Ll>`` - gemena bokstäver (inkluderar ``a`` till ``z``)"

msgid "Unicode category ``<Lt>`` - titlecase letters"
msgstr "Unicode-kategori ``<Lt>`` - stora bokstäver"

msgid "Unicode category ``<Lm>`` - modifier letters"
msgstr "Unicode-kategori ``<Lm>`` - modifieringsbokstäver"

msgid "Unicode category ``<Lo>`` - other letters"
msgstr "Unicode-kategori ``<Lo>`` - andra bokstäver"

msgid "Unicode category ``<Nl>`` - letter numbers"
msgstr "Unicode-kategori ``<Nl>`` - bokstavsnummer"

msgid "{``\"_\"``} - the underscore"
msgstr "{``\"_\"``} - understrykningstecken"

msgid ""
"``<Other_ID_Start>`` - an explicit set of characters in `PropList.txt`_ to "
"support backwards compatibility"
msgstr ""
"``<Other_ID_Start>`` - en explicit uppsättning tecken i `PropList.txt`_ för "
"att stödja bakåtkompatibilitet"

msgid ""
"The remaining characters must belong to the set ``id_continue``, which is "
"the union of:"
msgstr ""
"De återstående tecknen måste tillhöra uppsättningen ``id_continue``, som är "
"en förening av:"

msgid "all characters in ``id_start``"
msgstr "alla tecken i ``id_start``"

msgid "Unicode category ``<Nd>`` - decimal numbers (includes ``0`` to ``9``)"
msgstr "Unicode-kategori ``<Nd>`` - decimala tal (inkluderar ``0`` till ``9``)"

msgid "Unicode category ``<Pc>`` - connector punctuations"
msgstr "Unicode-kategori ``<Pc>`` - anslutande skiljetecken"

msgid "Unicode category ``<Mn>`` - nonspacing marks"
msgstr "Unicode-kategori ``<Mn>`` - tecken utan mellanrum"

msgid "Unicode category ``<Mc>`` - spacing combining marks"
msgstr "Unicode-kategori ``<Mc>`` - avstånd kombinerande tecken"

msgid ""
"``<Other_ID_Continue>`` - another explicit set of characters in `PropList."
"txt`_ to support backwards compatibility"
msgstr ""
"``<Other_ID_Continue>`` - en annan explicit uppsättning tecken i `PropList."
"txt`_ för att stödja bakåtkompatibilitet"

msgid ""
"Unicode categories use the version of the Unicode Character Database as "
"included in the :mod:`unicodedata` module."
msgstr ""
"Unicode-kategorier använder den version av Unicode Character Database som "
"ingår i modulen :mod:`unicodedata`."

msgid ""
"These sets are based on the Unicode standard annex `UAX-31`_. See also :pep:"
"`3131` for further details."
msgstr ""
"Dessa uppsättningar är baserade på Unicode-standardens bilaga `UAX-31`_. Se "
"även :pep:`3131` för ytterligare detaljer."

msgid ""
"Even more formally, names are described by the following lexical definitions:"
msgstr ""
"Ännu mer formellt beskrivs namn med hjälp av följande lexikala definitioner:"

msgid ""
"A non-normative listing of all valid identifier characters as defined by "
"Unicode is available in the `DerivedCoreProperties.txt`_ file in the Unicode "
"Character Database."
msgstr ""
"En icke-normativ lista över alla giltiga identifieringstecken enligt "
"Unicodes definition finns i filen `DerivedCoreProperties.txt`_ i Unicode "
"Character Database."

msgid "Keywords"
msgstr "Nyckelord"

msgid ""
"The following names are used as reserved words, or *keywords* of the "
"language, and cannot be used as ordinary identifiers.  They must be spelled "
"exactly as written here:"
msgstr ""
"Följande namn används som reserverade ord, eller *nyckelord* i språket, och "
"kan inte användas som vanliga identifierare.  De måste stavas exakt som de "
"skrivs här:"

msgid ""
"False      await      else       import     pass\n"
"None       break      except     in         raise\n"
"True       class      finally    is         return\n"
"and        continue   for        lambda     try\n"
"as         def        from       nonlocal   while\n"
"assert     del        global     not        with\n"
"async      elif       if         or         yield"
msgstr ""
"False await else import pass\n"
"None break utom i raise\n"
"True-klassen finally är return\n"
"och fortsätter för lambda try\n"
"som def från icke-lokala medan\n"
"assert del global inte med\n"
"asynkron elif if eller yield"

msgid "Soft Keywords"
msgstr "Mjuka nyckelord"

msgid ""
"Some names are only reserved under specific contexts. These are known as "
"*soft keywords*:"
msgstr ""
"Vissa namn är endast reserverade i specifika sammanhang. Dessa kallas för "
"*mjuka nyckelord*:"

msgid ""
"``match``, ``case``, and ``_``, when used in the :keyword:`match` statement."
msgstr ""
"``match``, ``case`` och ``_``, när de används i :keyword:`match`-satsen."

msgid "``type``, when used in the :keyword:`type` statement."
msgstr "``type``, när den används i :keyword:`type`-satsen."

msgid ""
"These syntactically act as keywords in their specific contexts, but this "
"distinction is done at the parser level, not when tokenizing."
msgstr ""
"Dessa fungerar syntaktiskt som nyckelord i sina specifika sammanhang, men "
"denna åtskillnad görs på parsernivå, inte vid tokenisering."

msgid ""
"As soft keywords, their use in the grammar is possible while still "
"preserving compatibility with existing code that uses these names as "
"identifier names."
msgstr ""
"Som mjuka nyckelord är det möjligt att använda dem i grammatiken samtidigt "
"som kompatibiliteten med befintlig kod som använder dessa namn som "
"identifierarnamn bibehålls."

msgid "``type`` is now a soft keyword."
msgstr "``typ`` är nu ett mjukt nyckelord."

msgid "Reserved classes of identifiers"
msgstr "Reserverade klasser av identifierare"

msgid ""
"Certain classes of identifiers (besides keywords) have special meanings.  "
"These classes are identified by the patterns of leading and trailing "
"underscore characters:"
msgstr ""
"Vissa klasser av identifierare (förutom nyckelord) har speciella "
"betydelser.  Dessa klasser identifieras av mönstren för inledande och "
"avslutande understrykningstecken:"

msgid "``_*``"
msgstr "``_*``"

msgid "Not imported by ``from module import *``."
msgstr "Inte importerad av ``from module import *``."

msgid "``_``"
msgstr "``_``"

msgid ""
"In a ``case`` pattern within a :keyword:`match` statement, ``_`` is a :ref:"
"`soft keyword <soft-keywords>` that denotes a :ref:`wildcard <wildcard-"
"patterns>`."
msgstr ""
"I ett ``case``-mönster i en :keyword:`match`-sats är ``_`` ett :ref:``mjukt "
"nyckelord <soft-keywords>`` som betecknar ett :ref:``viltkort <wildcard-"
"patterns>``."

msgid ""
"Separately, the interactive interpreter makes the result of the last "
"evaluation available in the variable ``_``. (It is stored in the :mod:"
"`builtins` module, alongside built-in functions like ``print``.)"
msgstr ""
"Separat gör den interaktiva tolken resultatet av den senaste utvärderingen "
"tillgängligt i variabeln ``_``. (Den lagras i modulen :mod:`builtins`, "
"tillsammans med inbyggda funktioner som ``print``)"

msgid ""
"Elsewhere, ``_`` is a regular identifier. It is often used to name "
"\"special\" items, but it is not special to Python itself."
msgstr ""
"På andra ställen är ``_`` en vanlig identifierare. Det används ofta för att "
"namnge \"speciella\" objekt, men det är inte speciellt för Python självt."

msgid ""
"The name ``_`` is often used in conjunction with internationalization; refer "
"to the documentation for the :mod:`gettext` module for more information on "
"this convention."
msgstr ""
"Namnet ``_`` används ofta i samband med internationalisering; se "
"dokumentationen för modulen :mod:`gettext` för mer information om denna "
"konvention."

msgid "It is also commonly used for unused variables."
msgstr "Det används också ofta för oanvända variabler."

msgid "``__*__``"
msgstr "``__*__``"

msgid ""
"System-defined names, informally known as \"dunder\" names. These names are "
"defined by the interpreter and its implementation (including the standard "
"library). Current system names are discussed in the :ref:`specialnames` "
"section and elsewhere. More will likely be defined in future versions of "
"Python.  *Any* use of ``__*__`` names, in any context, that does not follow "
"explicitly documented use, is subject to breakage without warning."
msgstr ""
"Systemdefinierade namn, informellt kända som \"dunder\"-namn. Dessa namn "
"definieras av tolken och dess implementation (inklusive "
"standardbiblioteket). Nuvarande systemnamn diskuteras i avsnittet :ref:"
"`specialnames` och på andra ställen. Fler kommer troligen att definieras i "
"framtida versioner av Python.  *All* användning av ``__*__``-namn, i vilket "
"sammanhang som helst, som inte följer explicit dokumenterad användning, är "
"föremål för avbrott utan varning."

msgid "``__*``"
msgstr "``__*``"

msgid ""
"Class-private names.  Names in this category, when used within the context "
"of a class definition, are re-written to use a mangled form to help avoid "
"name clashes between \"private\" attributes of base and derived classes. See "
"section :ref:`atom-identifiers`."
msgstr ""
"Klass-privata namn.  Namn i denna kategori, när de används inom ramen för en "
"klassdefinition, skrivs om för att använda en manglad form för att undvika "
"namnkollisioner mellan \"privata\" attribut i bas- och härledda klasser. Se "
"avsnitt :ref:`atom-identifierare`."

msgid "Literals"
msgstr "Bokstäver"

msgid "Literals are notations for constant values of some built-in types."
msgstr "Literals är beteckningar för konstanta värden av vissa inbyggda typer."

msgid ""
"In terms of lexical analysis, Python has :ref:`string, bytes <strings>` and :"
"ref:`numeric <numbers>` literals."
msgstr ""
"När det gäller lexikal analys har Python :ref:`sträng, bytes <strings>` och :"
"ref:`numerisk <numbers>` literaler."

msgid ""
"Other \"literals\" are lexically denoted using :ref:`keywords <keywords>` "
"(``None``, ``True``, ``False``) and the special :ref:`ellipsis token "
"<lexical-ellipsis>` (``...``)."
msgstr ""
"Andra \"literaler\" betecknas lexikalt med :ref:`nyckelord <keywords>` "
"(``None``, ``True``, ``False``) och den speciella :ref:`ellipsistoken "
"<lexical-ellipsis>` (``...``)."

msgid "String and Bytes literals"
msgstr "Sträng- och Bytes-litteraler"

msgid ""
"String literals are text enclosed in single quotes (``'``) or double quotes "
"(``\"``). For example:"
msgstr ""
"Stränglitteraler är text som omges av enkla citattecken (``'``) eller dubbla "
"citattecken (``\"``). Till exempel"

msgid ""
"\"spam\"\n"
"'eggs'"
msgstr ""
"\"spam\"\n"
"\"ägg"

msgid ""
"The quote used to start the literal also terminates it, so a string literal "
"can only contain the other quote (except with escape sequences, see below). "
"For example:"
msgstr ""
"Det citationstecken som används för att starta literalen avslutar den också, "
"så en strängliteral kan bara innehålla det andra citationstecknet (utom med "
"escape-sekvenser, se nedan). Till exempel"

msgid ""
"'Say \"Hello\", please.'\n"
"\"Don't do that!\""
msgstr ""
"\"Säg \"hej\", tack\n"
"\"Gör inte så där!\""

msgid ""
"Except for this limitation, the choice of quote character (``'`` or ``\"``) "
"does not affect how the literal is parsed."
msgstr ""
"Med undantag för denna begränsning påverkar valet av citattecken (``'`` "
"eller ``\"``) inte hur den bokstavliga texten tolkas."

msgid ""
"Inside a string literal, the backslash (``\\``) character introduces an :dfn:"
"`escape sequence`, which has special meaning depending on the character "
"after the backslash. For example, ``\\\"`` denotes the double quote "
"character, and does *not* end the string:"
msgstr ""
"I en bokstavlig sträng introducerar tecknet backslash (``\\``) en :dfn:"
"`escape-sekvens`, som har en speciell betydelse beroende på tecknet efter "
"backslash. Till exempel, ``````` betecknar det dubbla citattecknet och "
"avslutar *inte* strängen:"

msgid ""
">>> print(\"Say \\\"Hello\\\" to everyone!\")\n"
"Say \"Hello\" to everyone!"
msgstr ""
">>> print(\"Säg \\\"Hej\\\" till alla!\")\n"
"Säg \"Hej\" till alla!"

msgid ""
"See :ref:`escape sequences <escape-sequences>` below for a full list of such "
"sequences, and more details."
msgstr ""
"Se :ref:`escape sequences <escape-sequences>` nedan för en fullständig lista "
"över sådana sekvenser och mer information."

msgid "Triple-quoted strings"
msgstr "Strängar med tre citattecken"

msgid ""
"Strings can also be enclosed in matching groups of three single or double "
"quotes. These are generally referred to as :dfn:`triple-quoted strings`::"
msgstr ""
"Strängar kan också omslutas av matchande grupper om tre enkla eller dubbla "
"citattecken. Dessa kallas i allmänhet :dfn:`triple-quoted strings`::"

msgid "\"\"\"This is a triple-quoted string.\"\"\""
msgstr "\"\"\"Detta är en trippelciterad sträng.\"\"\""

msgid ""
"In triple-quoted literals, unescaped quotes are allowed (and are retained), "
"except that three unescaped quotes in a row terminate the literal, if they "
"are of the same kind (``'`` or ``\"``) used at the start::"
msgstr ""
"I trippelciterade bokstavstexter är oavkortade citattecken tillåtna (och "
"behålls), förutom att tre oavkortade citattecken i rad avslutar "
"bokstavstexten, om de är av samma typ (``'`` eller ``\"``) som användes i "
"början::"

msgid "\"\"\"This string has \"quotes\" inside.\"\"\""
msgstr "\"\"\"Den här strängen har \"citattecken\" inuti.\"\"\""

msgid "Unescaped newlines are also allowed and retained::"
msgstr "Oavkortade nya linjer är också tillåtna och behålls::"

msgid ""
"'''This triple-quoted string\n"
"continues on the next line.'''"
msgstr ""
"'''Denna trippelciterade sträng\n"
"fortsätter på nästa rad.'''"

msgid "String prefixes"
msgstr "Prefix för strängar"

msgid ""
"String literals can have an optional :dfn:`prefix` that influences how the "
"content of the literal is parsed, for example:"
msgstr ""
"Stränglitteraler kan ha ett valfritt :dfn:`prefix` som påverkar hur "
"innehållet i litteralen analyseras, till exempel:"

msgid ""
"b\"data\"\n"
"f'{result=}'"
msgstr ""
"b\"data\"\n"
"f'{result=}'"

msgid "The allowed prefixes are:"
msgstr "De tillåtna prefixen är:"

msgid "``b``: :ref:`Bytes literal <bytes-literal>`"
msgstr "``b``: :ref:`Bytes literal <bytes-literal>`"

msgid "``r``: :ref:`Raw string <raw-strings>`"
msgstr "``r``: :ref:`Raw string <raw-strings>`"

msgid "``f``: :ref:`Formatted string literal <f-strings>` (\"f-string\")"
msgstr "``f``: :ref:``Formaterad sträng litteral <f-strings>` (\"f-string\")"

msgid "``t``: :ref:`Template string literal <t-strings>` (\"t-string\")"
msgstr "``t``: :ref:``Template string literal <t-strings>` (\"t-string\")"

msgid "``u``: No effect (allowed for backwards compatibility)"
msgstr "``u``: Ingen effekt (tillåtet för bakåtkompatibilitet)"

msgid "See the linked sections for details on each type."
msgstr "Se länkade avsnitt för mer information om varje typ."

msgid ""
"Prefixes are case-insensitive (for example, ``B`` works the same as ``b``). "
"The ``r`` prefix can be combined with ``f``, ``t`` or ``b``, so ``fr``, "
"``rf``, ``tr``, ``rt``, ``br`` and ``rb`` are also valid prefixes."
msgstr ""
"Prefixen är skiftlägesokänsliga (till exempel fungerar ``B`` på samma sätt "
"som ``b``). Prefixet ``r`` kan kombineras med ``f``, ``t`` eller ``b``, så "
"``fr``, ``rf``, ``tr``, ``rt``, ``br`` och ``rb`` är också giltiga prefix."

msgid ""
"The ``'rb'`` prefix of raw bytes literals has been added as a synonym of "
"``'br'``."
msgstr ""
"Prefixet ``'rb'`` för råa byteslitteraler har lagts till som en synonym till "
"``'br'``."

msgid ""
"Support for the unicode legacy literal (``u'value'``) was reintroduced to "
"simplify the maintenance of dual Python 2.x and 3.x codebases. See :pep:"
"`414` for more information."
msgstr ""
"Stöd för unicode legacy literal (``u'value'``) återinfördes för att förenkla "
"underhållet av dubbla Python 2.x och 3.x kodbaser. Se :pep:`414` för mer "
"information."

msgid "Formal grammar"
msgstr "Formell grammatik"

msgid ""
"String literals, except :ref:`\"f-strings\" <f-strings>` and :ref:`\"t-"
"strings\" <t-strings>`, are described by the following lexical definitions."
msgstr ""
"Stränglitteraler, utom :ref:`\"f-strings\" <f-strings>` och :ref:`\"t-"
"strings\" <t-strings>`, beskrivs av följande lexikala definitioner."

msgid ""
"These definitions use :ref:`negative lookaheads <lexical-lookaheads>` (``!"
"``) to indicate that an ending quote ends the literal."
msgstr ""
"I dessa definitioner används :ref:``negative lookaheads <lexical-"
"lookaheads>`` (``!``) för att ange att ett avslutande citat avslutar den "
"bokstavliga texten."

msgid ""
"Note that as in all lexical definitions, whitespace is significant. In "
"particular, the prefix (if any) must be immediately followed by the starting "
"quote."
msgstr ""
"Observera att som i alla lexikala definitioner är blanksteg betydelsefulla. "
"I synnerhet måste prefixet (om det finns något) omedelbart följas av det "
"inledande citatet."

msgid "Escape sequences"
msgstr "Escape-sekvenser"

msgid ""
"Unless an ``'r'`` or ``'R'`` prefix is present, escape sequences in string "
"and bytes literals are interpreted according to rules similar to those used "
"by Standard C.  The recognized escape sequences are:"
msgstr ""
"Om inte prefixet ``'r'`` eller ``'R'`` finns med tolkas escape-sekvenser i "
"sträng- och byte-litteraler enligt regler som liknar dem som används av "
"Standard C. De erkända escape-sekvenserna är"

msgid "Escape Sequence"
msgstr "Utrymningssekvens"

msgid "Meaning"
msgstr "Betydelse"

msgid "``\\``\\ <newline>"
msgstr "``\\``\\ <newline>"

msgid ":ref:`string-escape-ignore`"
msgstr ":ref:`sträng-escape-ignore`"

msgid "``\\\\``"
msgstr "``\\\\``"

msgid ":ref:`Backslash <string-escape-escaped-char>`"
msgstr ":ref:`Backslash <string-escape-escaped-char>`"

msgid "``\\'``"
msgstr "``\\'``"

msgid ":ref:`Single quote <string-escape-escaped-char>`"
msgstr ":ref:`Enkel offert <string-escape-escaped-char>`"

msgid "``\\\"``"
msgstr "``\\\"``"

msgid ":ref:`Double quote <string-escape-escaped-char>`"
msgstr ":ref:`Dubbelcitat <string-escape-escaped-char>`"

msgid "``\\a``"
msgstr "``\\a``"

msgid "ASCII Bell (BEL)"
msgstr "ASCII Klocka (BEL)"

msgid "``\\b``"
msgstr "``\\b``"

msgid "ASCII Backspace (BS)"
msgstr "ASCII Backspace (BS)"

msgid "``\\f``"
msgstr "``\\f``"

msgid "ASCII Formfeed (FF)"
msgstr "ASCII Formfeed (FF)"

msgid "``\\n``"
msgstr "``\\n``"

msgid "ASCII Linefeed (LF)"
msgstr "ASCII radmatning (LF)"

msgid "``\\r``"
msgstr "``\\r``"

msgid "ASCII Carriage Return (CR)"
msgstr "ASCII vagnsretur (CR)"

msgid "``\\t``"
msgstr "``\\t``"

msgid "ASCII Horizontal Tab (TAB)"
msgstr "ASCII Horisontell tabb (TAB)"

msgid "``\\v``"
msgstr "``\\v``"

msgid "ASCII Vertical Tab (VT)"
msgstr "ASCII Vertikal tabb (VT)"

msgid ":samp:`\\\\\\\\{ooo}`"
msgstr ":samp:`\\\\\\\\{ooo}`"

msgid ":ref:`string-escape-oct`"
msgstr ":ref:`sträng-escape-oct`"

msgid ":samp:`\\\\x{hh}`"
msgstr ":samp:`\\\\x{hh}`"

msgid ":ref:`string-escape-hex`"
msgstr ":ref:`sträng-escape-hex`"

msgid ":samp:`\\\\N\\\\{{name}\\\\}`"
msgstr ":samp:`\\\\N\\\\{{name}\\\\}``"

msgid ":ref:`string-escape-named`"
msgstr ":ref:`sträng-escape-namn`"

msgid ":samp:`\\\\u{xxxx}`"
msgstr ":samp:`\\\\u{xxxx}`"

msgid ":ref:`Hexadecimal Unicode character <string-escape-long-hex>`"
msgstr ":ref:`Hexadecimal Unicode-tecken <string-escape-long-hex>`"

msgid ":samp:`\\\\U{xxxxxxxx}`"
msgstr ":samp:`\\\\U{xxxxxxxx}`"

msgid "Ignored end of line"
msgstr "Ignorerade slutet av raden"

msgid "A backslash can be added at the end of a line to ignore the newline::"
msgstr ""
"En backslash kan läggas till i slutet av en rad för att ignorera nystrecket::"

msgid ""
">>> 'This string will not include \\\n"
"... backslashes or newline characters.'\n"
"'This string will not include backslashes or newline characters.'"
msgstr ""
">>> 'Denna sträng kommer inte att innehålla \\\n"
"... bindestreck eller tecken för nya rader\n"
"\"Den här strängen innehåller inte bindestreck eller tecken för nya rader"

msgid ""
"The same result can be achieved using :ref:`triple-quoted strings "
"<strings>`, or parentheses and :ref:`string literal concatenation <string-"
"concatenation>`."
msgstr ""
"Samma resultat kan uppnås med hjälp av :ref:`triple-quoted strings "
"<strings>`, eller parenteser och :ref:`string literal concatenation <string-"
"concatenation>`."

msgid "Escaped characters"
msgstr "Försvunna karaktärer"

msgid ""
"To include a backslash in a non-:ref:`raw <raw-strings>` Python string "
"literal, it must be doubled. The ``\\\\`` escape sequence denotes a single "
"backslash character::"
msgstr ""
"För att inkludera ett backslash i en icke-:ref:`raw <raw-strings>` Python-"
"stränglitteral måste det dubbleras. Escapesekvensen ````` betecknar ett enda "
"backslash-tecken::"

msgid ""
">>> print('C:\\\\Program Files')\n"
"C:\\Program Files"
msgstr ""
">>> print('C:\\\\Program Files')\n"
"C:\\Programfiler"

msgid ""
"Similarly, the ``\\'`` and ``\\\"`` sequences denote the single and double "
"quote character, respectively::"
msgstr ""
"På samma sätt betecknar sekvenserna \"````\" och \"````\" enkla respektive "
"dubbla citattecken::"

msgid ""
">>> print('\\' and \\\"')\n"
"' and \""
msgstr ""
">>> print('\\' och \\\"')\n"
"' och \""

msgid "Octal character"
msgstr "Oktal tecken"

msgid ""
"The sequence :samp:`\\\\\\\\{ooo}` denotes a *character* with the octal "
"(base 8) value *ooo*::"
msgstr ""
"Sekvensen :samp:`\\\\\\\\{ooo}` betecknar ett *tecken* med oktalvärdet (bas "
"8) *ooo*::"

msgid ""
">>> '\\120'\n"
"'P'"
msgstr ""
">>> '\\120'\n"
"'P'"

msgid "Up to three octal digits (0 through 7) are accepted."
msgstr "Upp till tre oktala siffror (0 till 7) accepteras."

msgid ""
"In a bytes literal, *character* means a *byte* with the given value. In a "
"string literal, it means a Unicode character with the given value."
msgstr ""
"I en byteslitteral betyder *tecken* en *byte* med det angivna värdet. I en "
"stränglitteral betyder det ett Unicode-tecken med det angivna värdet."

msgid ""
"Octal escapes with value larger than ``0o377`` (255) produce a :exc:"
"`DeprecationWarning`."
msgstr ""
"Oktala escapes med ett värde större än ``0o377`` (255) ger en :exc:"
"`DeprecationWarning`."

msgid ""
"Octal escapes with value larger than ``0o377`` (255) produce a :exc:"
"`SyntaxWarning`. In a future Python version they will raise a :exc:"
"`SyntaxError`."
msgstr ""
"Oktala escapes med värde större än ``0o377`` (255) ger en :exc:"
"`SyntaxWarning`. I en framtida Python-version kommer de att ge upphov till "
"ett :exc:`SyntaxError`."

msgid "Hexadecimal character"
msgstr "Hexadecimalt tecken"

msgid ""
"The sequence :samp:`\\\\x{hh}` denotes a *character* with the hex (base 16) "
"value *hh*::"
msgstr ""
"Sekvensen :samp:`\\\\x{hh}` betecknar ett *tecken* med hex (bas 16)-värdet "
"*hh*::"

msgid ""
">>> '\\x50'\n"
"'P'"
msgstr ""
">>> '\\x50'\n"
"'P'"

msgid "Unlike in Standard C, exactly two hex digits are required."
msgstr "Till skillnad från i Standard C krävs exakt två hexadecimala siffror."

msgid "Named Unicode character"
msgstr "Namngivet Unicode-tecken"

msgid ""
"The sequence :samp:`\\\\N\\\\{{name}\\\\}` denotes a Unicode character with "
"the given *name*::"
msgstr ""
"Sekvensen :samp:`\\\\N\\\\{{name}\\\\}` betecknar ett Unicode-tecken med det "
"angivna *namnet*::"

msgid ""
">>> '\\N{LATIN CAPITAL LETTER P}'\n"
"'P'\n"
">>> '\\N{SNAKE}'\n"
"'🐍'"
msgstr ""
">>> '\\N{LATINSKA VERSALA BOKSTAVEN P}'\n"
"'P'\n"
">>> '\\N{SNAKE}'\n"
"'🐍'"

msgid "This sequence cannot appear in :ref:`bytes literals <bytes-literal>`."
msgstr ""
"Denna sekvens kan inte förekomma i :ref:`bytes literals <bytes-literal>`."

msgid ""
"Support for `name aliases <https://www.unicode.org/Public/16.0.0/ucd/"
"NameAliases.txt>`__ has been added."
msgstr ""
"Stöd för `namnalias <https://www.unicode.org/Public/16.0.0/ucd/NameAliases."
"txt>`__ har lagts till."

msgid "Hexadecimal Unicode characters"
msgstr "Hexadecimal Unicode-tecken"

msgid ""
"These sequences :samp:`\\\\u{xxxx}` and :samp:`\\\\U{xxxxxxxx}` denote the "
"Unicode character with the given hex (base 16) value. Exactly four digits "
"are required for ``\\u``; exactly eight digits are required for ``\\U``. The "
"latter can encode any Unicode character."
msgstr ""
"Dessa sekvenser :samp:`\\\\u{xxxx}` och :samp:`\\\\U{xxxxxxxx}` betecknar "
"Unicode-tecknet med det angivna hex (bas 16)-värdet. Exakt fyra siffror "
"krävs för ``\\u``; exakt åtta siffror krävs för ``U``. Det senare kan koda "
"vilket Unicode-tecken som helst."

msgid ""
">>> '\\u1234'\n"
"'ሴ'\n"
">>> '\\U0001f40d'\n"
"'🐍'"
msgstr ""
">>> '\\u1234'\n"
"'ሴ'\n"
">>> '\\U0001f40d'\n"
"'🐍'"

msgid "These sequences cannot appear in :ref:`bytes literals <bytes-literal>`."
msgstr ""
"Dessa sekvenser kan inte förekomma i :ref:`bytes literals <bytes-literal>`."

msgid "Unrecognized escape sequences"
msgstr "Oigenkända escape-sekvenser"

msgid ""
"Unlike in Standard C, all unrecognized escape sequences are left in the "
"string unchanged, that is, *the backslash is left in the result*::"
msgstr ""
"Till skillnad från Standard C lämnas alla oigenkända escapesekvenser kvar i "
"strängen oförändrade, dvs. *backslash lämnas kvar i resultatet*::"

msgid ""
">>> print('\\q')\n"
"\\q\n"
">>> list('\\q')\n"
"['\\\\', 'q']"
msgstr ""
">>> print('\\q')\n"
"\\q\n"
">>> lista('\\q')\n"
"['\\\\', 'q']"

msgid ""
"Note that for bytes literals, the escape sequences only recognized in string "
"literals (``\\N...``, ``\\u...``, ``\\U...``) fall into the category of "
"unrecognized escapes."
msgstr ""
"Observera att för byte-litteraler faller de escapesekvenser som endast känns "
"igen i sträng-litteraler (``\\N...``, ``\\u...``, ``U...``) i kategorin "
"oigenkända escapes."

msgid "Unrecognized escape sequences produce a :exc:`DeprecationWarning`."
msgstr ""
"Oigenkända escape-sekvenser ger upphov till en :exc:`DeprecationWarning`."

msgid ""
"Unrecognized escape sequences produce a :exc:`SyntaxWarning`. In a future "
"Python version they will raise a :exc:`SyntaxError`."
msgstr ""
"Oigenkända escape-sekvenser ger upphov till en :exc:`SyntaxWarning`. I en "
"framtida Python-version kommer de att ge upphov till ett :exc:`SyntaxError`."

msgid "Bytes literals"
msgstr "Bytes-litteraler"

msgid ""
":dfn:`Bytes literals` are always prefixed with ``'b'`` or ``'B'``; they "
"produce an instance of the :class:`bytes` type instead of the :class:`str` "
"type. They may only contain ASCII characters; bytes with a numeric value of "
"128 or greater must be expressed with escape sequences (typically :ref:"
"`string-escape-hex` or :ref:`string-escape-oct`):"
msgstr ""
":dfn:`Bytes-litteraler` har alltid prefixet ``'b'`` eller ``'B'``; de "
"producerar en instans av typen :class:`bytes` istället för typen :class:"
"`str`. De får endast innehålla ASCII-tecken; bytes med ett numeriskt värde "
"på 128 eller mer måste uttryckas med escape-sekvenser (typiskt :ref:`string-"
"escape-hex` eller :ref:`string-escape-oct`):"

msgid ""
">>> b'\\x89PNG\\r\\n\\x1a\\n'\n"
"b'\\x89PNG\\r\\n\\x1a\\n'\n"
">>> list(b'\\x89PNG\\r\\n\\x1a\\n')\n"
"[137, 80, 78, 71, 13, 10, 26, 10]"
msgstr ""
">>> b'\\x89PNG\\r\\n\\x1a\\n'\n"
"b'\\x89PNG\\r\\n\\x1a\\n'\n"
">>> lista(b'\\x89PNG\\r\\n\\x1a\\n')\n"
"[137, 80, 78, 71, 13, 10, 26, 10]"

msgid ""
"Similarly, a zero byte must be expressed using an escape sequence (typically "
"``\\0`` or ``\\x00``)."
msgstr ""
"På samma sätt måste en nollbyte uttryckas med hjälp av en escape-sekvens "
"(typiskt \"0\" eller \"x00\")."

msgid "Raw string literals"
msgstr "Råa stränglitteraler"

msgid ""
"Both string and bytes literals may optionally be prefixed with a letter "
"``'r'`` or ``'R'``; such constructs are called :dfn:`raw string literals` "
"and :dfn:`raw bytes literals` respectively and treat backslashes as literal "
"characters. As a result, in raw string literals, :ref:`escape sequences "
"<escape-sequences>` are not treated specially:"
msgstr ""
"Både sträng- och byteslitteraler kan eventuellt prefixeras med bokstaven "
"``'r'`` eller ``'R'``; sådana konstruktioner kallas :dfn:`raw string "
"literals` respektive :dfn:`raw bytes literals` och behandlar backslashes som "
"bokstavstecken. Som ett resultat av detta behandlas inte :ref:`escape-"
"sekvenser <escape-sequences>` speciellt i råa stränglitteraler:"

msgid ""
">>> r'\\d{4}-\\d{2}-\\d{2}'\n"
"'\\\\d{4}-\\\\d{2}-\\\\d{2}'"
msgstr ""
">>> r'\\d{4}-\\d{2}-\\d{2}'\n"
"'\\\\d{4}-\\\\d{2}-\\\\d{2}'"

msgid ""
"Even in a raw literal, quotes can be escaped with a backslash, but the "
"backslash remains in the result; for example, ``r\"\\\"\"`` is a valid "
"string literal consisting of two characters: a backslash and a double quote; "
"``r\"\\\"`` is not a valid string literal (even a raw string cannot end in "
"an odd number of backslashes).  Specifically, *a raw literal cannot end in a "
"single backslash* (since the backslash would escape the following quote "
"character).  Note also that a single backslash followed by a newline is "
"interpreted as those two characters as part of the literal, *not* as a line "
"continuation."
msgstr ""
"Även i en rå bokstav kan citattecken undkomma med ett backslash, men "
"backslash kvarstår i resultatet; till exempel är ``r\"\\\"\"`` en giltig "
"stränglitteral som består av två tecken: ett backslash och ett dubbelt "
"citattecken; ``r\"\\\"`` är inte en giltig stränglitteral (även en rå sträng "
"kan inte sluta med ett udda antal backslash).  Specifikt kan *en rå bokstav "
"inte sluta med ett enda backslash* (eftersom backslash skulle undkomma det "
"följande citattecknet).  Observera också att ett enkelt backslash följt av "
"en ny rad tolkas som att de två tecknen är en del av den bokstavliga texten, "
"*inte* som en radfortsättning."

msgid "f-strings"
msgstr "f-strängar"

msgid ""
"A :dfn:`formatted string literal` or :dfn:`f-string` is a string literal "
"that is prefixed with ``f`` or ``F``.  These strings may contain replacement "
"fields, which are expressions delimited by curly braces ``{}``. While other "
"string literals always have a constant value, formatted strings are really "
"expressions evaluated at run time."
msgstr ""
"En :dfn:`formatted string literal` eller :dfn:`f-string` är en "
"stränglitteral som har prefixet ``f`` eller ``F``.  Dessa strängar kan "
"innehålla ersättningsfält, som är uttryck avgränsade med hakparenteser ``{}"
"``. Medan andra stränglitteraler alltid har ett konstant värde, är "
"formaterade strängar i själva verket uttryck som utvärderas vid körning."

msgid ""
"Escape sequences are decoded like in ordinary string literals (except when a "
"literal is also marked as a raw string).  After decoding, the grammar for "
"the contents of the string is:"
msgstr ""
"Escape-sekvenser avkodas på samma sätt som vanliga stränglitteraler (utom "
"när en literal också markeras som en rå sträng).  Efter avkodning är "
"grammatiken för strängens innehåll följande:"

msgid ""
"The parts of the string outside curly braces are treated literally, except "
"that any doubled curly braces ``'{{'`` or ``'}}'`` are replaced with the "
"corresponding single curly brace.  A single opening curly bracket ``'{'`` "
"marks a replacement field, which starts with a Python expression. To display "
"both the expression text and its value after evaluation, (useful in "
"debugging), an equal sign ``'='`` may be added after the expression. A "
"conversion field, introduced by an exclamation point ``'!'`` may follow.  A "
"format specifier may also be appended, introduced by a colon ``':'``. A "
"replacement field ends with a closing curly bracket ``'}'``."
msgstr ""
"De delar av strängen som står utanför hakparenteser behandlas bokstavligt, "
"förutom att eventuella dubbla hakparenteser ``'{{'`` eller ``'}}'`` ersätts "
"med motsvarande enkla hakparentes.  En enkel öppnande hakparentes ``'{'`` "
"markerar ett ersättningsfält, som börjar med ett Python-uttryck. För att "
"visa både uttryckstexten och dess värde efter utvärdering (användbart vid "
"felsökning), kan ett likhetstecken ``'='`` läggas till efter uttrycket. Ett "
"konverteringsfält, som inleds med ett utropstecken ``'!'`` kan följa.  En "
"formatspecifikator kan också läggas till, inledd med ett kolon ``':'``. Ett "
"ersättningsfält avslutas med en avslutande hakparentes ``'}'``."

msgid ""
"Expressions in formatted string literals are treated like regular Python "
"expressions surrounded by parentheses, with a few exceptions. An empty "
"expression is not allowed, and both :keyword:`lambda`  and assignment "
"expressions ``:=`` must be surrounded by explicit parentheses. Each "
"expression is evaluated in the context where the formatted string literal "
"appears, in order from left to right.  Replacement expressions can contain "
"newlines in both single-quoted and triple-quoted f-strings and they can "
"contain comments.  Everything that comes after a ``#`` inside a replacement "
"field is a comment (even closing braces and quotes). In that case, "
"replacement fields must be closed in a different line."
msgstr ""
"Uttryck i formaterade stränglitteraler behandlas som vanliga Python-uttryck "
"omgivna av parenteser, med några få undantag. Ett tomt uttryck är inte "
"tillåtet, och både :keyword:`lambda` och tilldelningsuttryck ``:=`` måste "
"omges av uttryckliga parenteser. Varje uttryck utvärderas i det sammanhang "
"där den formaterade strängbokstaven förekommer, i ordning från vänster till "
"höger.  Ersättningsuttryck kan innehålla nya rader i både enkelciterade och "
"trippelciterade f-strängar och de kan innehålla kommentarer.  Allt som "
"kommer efter en ``#`` inuti ett ersättningsfält är en kommentar (även "
"avslutande parenteser och citattecken). I så fall måste ersättningsfält "
"stängas på en annan rad."

msgid ""
">>> f\"abc{a # This is a comment }\"\n"
"... + 3}\"\n"
"'abc5'"
msgstr ""
">>> f\"abc{a # Detta är en kommentar }\"\n"
"... + 3}\"\n"
"'abc5'"

msgid ""
"Prior to Python 3.7, an :keyword:`await` expression and comprehensions "
"containing an :keyword:`async for` clause were illegal in the expressions in "
"formatted string literals due to a problem with the implementation."
msgstr ""
"Före Python 3.7 var ett :keyword:`await`-uttryck och förståelser som "
"innehöll en :keyword:`async for`-klausul olagliga i uttryck i formaterade "
"stränglitteraler på grund av ett problem med implementeringen."

msgid ""
"Prior to Python 3.12, comments were not allowed inside f-string replacement "
"fields."
msgstr ""
"Före Python 3.12 var kommentarer inte tillåtna i ersättningsfält för f-"
"string."

msgid ""
"When the equal sign ``'='`` is provided, the output will have the expression "
"text, the ``'='`` and the evaluated value. Spaces after the opening brace "
"``'{'``, within the expression and after the ``'='`` are all retained in the "
"output. By default, the ``'='`` causes the :func:`repr` of the expression to "
"be provided, unless there is a format specified. When a format is specified "
"it defaults to the :func:`str` of the expression unless a conversion ``'!"
"r'`` is declared."
msgstr ""
"När likhetstecknet ``'='`` anges, kommer utdata att innehålla "
"uttryckstexten, ``'='`` och det utvärderade värdet. Mellanrum efter den "
"inledande parentesen ``'{'``, inom uttrycket och efter ``'='`` behålls i "
"utdata. Som standard orsakar ``'='`` att :func:`repr` av uttrycket "
"tillhandahålls, såvida inte ett format har angetts. När ett format är "
"specificerat är standardvärdet :func:`str` av uttrycket om inte en "
"konvertering ``'!r'`` är deklarerad."

msgid "The equal sign ``'='``."
msgstr "Likhetstecknet ``'='```."

msgid ""
"If a conversion is specified, the result of evaluating the expression is "
"converted before formatting.  Conversion ``'!s'`` calls :func:`str` on the "
"result, ``'!r'`` calls :func:`repr`, and ``'!a'`` calls :func:`ascii`."
msgstr ""
"Om en konvertering anges, konverteras resultatet av utvärderingen av "
"uttrycket innan det formateras.  Konvertering ``'!s'`` anropar :func:`str` "
"på resultatet, ``'!r'`` anropar :func:`repr`, och ``'!a'`` anropar :func:"
"`ascii`."

msgid ""
"The result is then formatted using the :func:`format` protocol.  The format "
"specifier is passed to the :meth:`~object.__format__` method of the "
"expression or conversion result.  An empty string is passed when the format "
"specifier is omitted.  The formatted result is then included in the final "
"value of the whole string."
msgstr ""
"Resultatet formateras sedan med hjälp av protokollet :func:`format`.  "
"Formatspecificeraren skickas till :meth:`~object.__format__`-metoden för "
"uttrycket eller konverteringsresultatet.  En tom sträng skickas när "
"formatspecificeraren utelämnas.  Det formaterade resultatet ingår då i "
"slutvärdet för hela strängen."

msgid ""
"Top-level format specifiers may include nested replacement fields. These "
"nested fields may include their own conversion fields and :ref:`format "
"specifiers <formatspec>`, but may not include more deeply nested replacement "
"fields. The :ref:`format specifier mini-language <formatspec>` is the same "
"as that used by the :meth:`str.format` method."
msgstr ""
"Formatspecifikatorer på högsta nivån kan innehålla nästlade ersättningsfält. "
"Dessa nästlade fält kan inkludera sina egna konverteringsfält och :ref:"
"`formatspecifikatorer <formatspec>`, men kan inte inkludera mer djupt "
"nästlade ersättningsfält. Den :ref:`formatspecifikator mini-språk "
"<formatspec>` är densamma som används av :meth:`str.format`-metoden."

msgid ""
"Formatted string literals may be concatenated, but replacement fields cannot "
"be split across literals."
msgstr ""
"Formaterade stränglitteraler kan konkateneras, men ersättningsfält kan inte "
"delas upp mellan litteraler."

msgid "Some examples of formatted string literals::"
msgstr "Några exempel på formaterade stränglitteraler::"

msgid ""
">>> name = \"Fred\"\n"
">>> f\"He said his name is {name!r}.\"\n"
"\"He said his name is 'Fred'.\"\n"
">>> f\"He said his name is {repr(name)}.\"  # repr() is equivalent to !r\n"
"\"He said his name is 'Fred'.\"\n"
">>> width = 10\n"
">>> precision = 4\n"
">>> value = decimal.Decimal(\"12.34567\")\n"
">>> f\"result: {value:{width}.{precision}}\"  # nested fields\n"
"'result:      12.35'\n"
">>> today = datetime(year=2017, month=1, day=27)\n"
">>> f\"{today:%B %d, %Y}\"  # using date format specifier\n"
"'January 27, 2017'\n"
">>> f\"{today=:%B %d, %Y}\" # using date format specifier and debugging\n"
"'today=January 27, 2017'\n"
">>> number = 1024\n"
">>> f\"{number:#0x}\"  # using integer format specifier\n"
"'0x400'\n"
">>> foo = \"bar\"\n"
">>> f\"{ foo = }\" # preserves whitespace\n"
"\" foo = 'bar'\"\n"
">>> line = \"The mill's closed\"\n"
">>> f\"{line = }\"\n"
"'line = \"The mill\\'s closed\"'\n"
">>> f\"{line = :20}\"\n"
"\"line = The mill's closed   \"\n"
">>> f\"{line = !r:20}\"\n"
"'line = \"The mill\\'s closed\" '"
msgstr ""
">>> namn = \"Fred\"\n"
">>> f\"Han sa att hans namn är {name!r}.\"\n"
"\"Han sa att hans namn är 'Fred'.\"\n"
">>> f\"Han sa att hans namn är {repr(name)}.\"  # repr() är likvärdigt med !"
"r\n"
"\"Han sa att hans namn är 'Fred'.\"\n"
">>> bredd = 10\n"
">>> precision = 4\n"
">>> värde = decimal.decimal(\"12.34567\")\n"
">>> f\"resultat: {värde:{width}.{precision}}\"  # nästlade fält\n"
"\"resultat: 12,35\n"
">>> today = datetime(year=2017, month=1, day=27)\n"
">>> f\"{idag:%B %d, %Y}\"  # använder datumformatspecificerare\n"
"\"27 januari 2017\n"
">>> f\"{idag=:%B %d, %Å}\" # använder datumformatspecificerare och felsöker\n"
"'idag=27 januari 2017'\n"
">>> nummer = 1024\n"
">>> f\"{number:#0x}\"  # använder formatangivelse för heltal\n"
"'0x400'\n"
">>> foo = \"bar\"\n"
">>> f\"{ foo = }\" # bevarar blanksteg\n"
"\" foo = 'bar'\"\n"
">>> rad = \"Kvarnen är stängd\"\n"
">>> f\"{rad = }\"\n"
"'rad = \"Kvarnen är stängd\"'\n"
">>> f\"{rad = :20}\"\n"
"\"rad = Kvarnen är stängd\"\n"
">>> f\"{rad = !r:20}\"\n"
"'rad = \"Kvarnen är stängd\" '"

msgid ""
"Reusing the outer f-string quoting type inside a replacement field is "
"permitted::"
msgstr ""
"Det är tillåtet att återanvända den yttre citattypen f-string i ett "
"ersättningsfält::"

msgid ""
">>> a = dict(x=2)\n"
">>> f\"abc {a[\"x\"]} def\"\n"
"'abc 2 def'"
msgstr ""
">>> a = dict(x=2)\n"
">>> f\"abc {a[\"x\"]} def\"\n"
"'abc 2 def'"

msgid ""
"Prior to Python 3.12, reuse of the same quoting type of the outer f-string "
"inside a replacement field was not possible."
msgstr ""
"Före Python 3.12 var det inte möjligt att återanvända samma citattyp för den "
"yttre f-strängen i ett ersättningsfält."

msgid ""
"Backslashes are also allowed in replacement fields and are evaluated the "
"same way as in any other context::"
msgstr ""
"Backslash är också tillåtet i ersättningsfält och utvärderas på samma sätt "
"som i alla andra sammanhang::"

msgid ""
">>> a = [\"a\", \"b\", \"c\"]\n"
">>> print(f\"List a contains:\\n{\"\\n\".join(a)}\")\n"
"List a contains:\n"
"a\n"
"b\n"
"c"
msgstr ""
">>> a = [\"a\", \"b\", \"c\"] >>> print(f\"Lista a innehåller \\n{\"\\n\"."
"join(a)})\n"
">>> print(f\"Lista a innehåller:\\n{\"\\n\".join(a)}\")\n"
"Lista a innehåller:\n"
"a\n"
"b\n"
"c"

msgid ""
"Prior to Python 3.12, backslashes were not permitted inside an f-string "
"replacement field."
msgstr ""
"Före Python 3.12 var backslash inte tillåtet inuti ett ersättningsfält för f-"
"strängar."

msgid ""
"Formatted string literals cannot be used as docstrings, even if they do not "
"include expressions."
msgstr ""
"Formaterade stränglitteraler kan inte användas som docstrings, även om de "
"inte innehåller uttryck."

msgid ""
">>> def foo():\n"
"...     f\"Not a docstring\"\n"
"...\n"
">>> foo.__doc__ is None\n"
"True"
msgstr ""
">>> def foo():\n"
"... f\"Inte en docstring\"\n"
"...\n"
">>> foo.__doc__ är Ingen\n"
"Sant"

msgid ""
"See also :pep:`498` for the proposal that added formatted string literals, "
"and :meth:`str.format`, which uses a related format string mechanism."
msgstr ""
"Se även :pep:`498` för förslaget som lade till formaterade stränglitteraler, "
"och :meth:`str.format`, som använder en relaterad formatsträngmekanism."

msgid "t-strings"
msgstr "t-strängar"

msgid ""
"A :dfn:`template string literal` or :dfn:`t-string` is a string literal that "
"is prefixed with ``t`` or ``T``.  These strings follow the same syntax and "
"evaluation rules as :ref:`formatted string literals <f-strings>`, with the "
"following differences:"
msgstr ""
"En :dfn:`template string literal` eller :dfn:`t-string` är en stränglitteral "
"som har prefixet ``t`` eller ``T``.  Dessa strängar följer samma syntax och "
"utvärderingsregler som :ref:``formatated string literals <f-strings>``, med "
"följande skillnader:"

msgid ""
"Rather than evaluating to a ``str`` object, t-strings evaluate to a :class:"
"`~string.templatelib.Template` object from the :mod:`string.templatelib` "
"module."
msgstr ""
"I stället för att utvärderas till ett ``str``-objekt utvärderas t-strängar "
"till ett :class:`~string.templatelib.Template`-objekt från :mod:`string."
"templatelib`-modulen."

msgid ""
"The :func:`format` protocol is not used. Instead, the format specifier and "
"conversions (if any) are passed to a new :class:`~string.templatelib."
"Interpolation` object that is created for each evaluated expression. It is "
"up to code that processes the resulting :class:`~string.templatelib."
"Template` object to decide how to handle format specifiers and conversions."
msgstr ""
"Protokollet :func:`format` används inte. Istället skickas formatangivaren "
"och konverteringar (om några) till ett nytt :class:`~string.templatelib."
"Interpolation`-objekt som skapas för varje utvärderat uttryck. Det är upp "
"till koden som bearbetar det resulterande :class:`~string.templatelib."
"Template`-objektet att bestämma hur formatspecifikatorer och konverteringar "
"ska hanteras."

msgid ""
"Format specifiers containing nested replacement fields are evaluated "
"eagerly, prior to being passed to the :class:`~string.templatelib."
"Interpolation` object. For instance, an interpolation of the form ``{amount:."
"{precision}f}`` will evaluate the expression ``{precision}`` before setting "
"the ``format_spec`` attribute of the resulting :class:`!Interpolation` "
"object; if ``precision`` is (for example) ``2``, the resulting format "
"specifier will be ``'.2f'``."
msgstr ""
"Formatspecifikatorer som innehåller nästlade ersättningsfält utvärderas "
"ivrigt innan de skickas till :class:`~string.templatelib.Interpolation`-"
"objektet. Till exempel kommer en interpolation av formen ``{belopp:."
"{precision}f}`` att utvärdera uttrycket ``{precision}`` innan attributet "
"``format_spec`` ställs in för det resulterande :class:`!Interpolation`-"
"objektet; om ``precision`` är (till exempel) ``2`` kommer den resulterande "
"formatspecifikationen att vara ``'.2f'``."

msgid ""
"When the equal sign ``'='`` is provided in an interpolation expression, the "
"resulting :class:`~string.templatelib.Template` object will have the "
"expression text along with a ``'='`` character placed in its :attr:`~string."
"templatelib.Template.strings` attribute. The :attr:`~string.templatelib."
"Template.interpolations` attribute will also contain an ``Interpolation`` "
"instance for the expression. By default, the :attr:`~string.templatelib."
"Interpolation.conversion` attribute will be set to ``'r'`` (that is, :func:"
"`repr`), unless there is a conversion explicitly specified (in which case it "
"overrides the default) or a format specifier is provided (in which case, the "
"``conversion`` defaults to ``None``)."
msgstr ""
"När likhetstecknet ``'='`` anges i ett interpolationsuttryck, kommer det "
"resulterande :class:`~string.templatelib.Template`-objektet att ha "
"uttryckstexten tillsammans med ett ``'='``-tecken placerat i dess :attr:"
"`~string.templatelib.Template.strings`-attribut. Attributet :attr:`~string."
"templatelib.Template.interpolations` kommer också att innehålla en "
"``Interpolation``-instans för uttrycket. Som standard kommer attributet :"
"attr:`~string.templatelib.Interpolation.conversion` att sättas till ``'r'`` "
"(det vill säga :func:`repr`), såvida inte en konvertering uttryckligen anges "
"(i vilket fall den åsidosätter standardvärdet) eller en formatspecifikator "
"tillhandahålls (i vilket fall ``conversion`` som standard är ``None``)."

msgid "Numeric literals"
msgstr "Numeriska bokstäver"

msgid ""
":data:`~token.NUMBER` tokens represent numeric literals, of which there are "
"three types: integers, floating-point numbers, and imaginary numbers."
msgstr ""
":data:`~token.NUMBER`-tokens representerar numeriska literaler, av vilka det "
"finns tre typer: heltal, flyttal och imaginära tal."

msgid ""
"The numeric value of a numeric literal is the same as if it were passed as a "
"string to the :class:`int`, :class:`float` or :class:`complex` class "
"constructor, respectively. Note that not all valid inputs for those "
"constructors are also valid literals."
msgstr ""
"Det numeriska värdet för en numerisk litteral är detsamma som om den hade "
"skickats som en sträng till klasskonstruktören :class:`int`, :class:`float` "
"eller :class:`complex`. Observera att inte alla giltiga indata för dessa "
"konstruktörer också är giltiga literaler."

msgid ""
"Numeric literals do not include a sign; a phrase like ``-1`` is actually an "
"expression composed of the unary operator '``-``' and the literal ``1``."
msgstr ""
"Numeriska bokstavstecken innehåller inte något tecken; en fras som ``-1`` är "
"egentligen ett uttryck som består av den unära operatorn ``-``` och "
"bokstavstecknet ``1``."

msgid "Integer literals"
msgstr "Heltalslitteraler"

msgid "Integer literals denote whole numbers. For example::"
msgstr "Heltalslitteraler betecknar hela tal. Till exempel::"

msgid ""
"7\n"
"3\n"
"2147483647"
msgstr ""
"7\n"
"3\n"
"2147483647"

msgid ""
"There is no limit for the length of integer literals apart from what can be "
"stored in available memory::"
msgstr ""
"Det finns ingen begränsning för längden på heltalslitteraler förutom vad som "
"kan lagras i tillgängligt minne::"

msgid "7922816251426433759354395033679228162514264337593543950336"
msgstr "7922816251426433759354395033679228162514264337593543950336"

msgid ""
"Underscores can be used to group digits for enhanced readability, and are "
"ignored for determining the numeric value of the literal. For example, the "
"following literals are equivalent::"
msgstr ""
"Underscores kan användas för att gruppera siffror för ökad läsbarhet, och "
"ignoreras för att bestämma det numeriska värdet av literalen. Till exempel "
"är följande literaler likvärdiga::"

msgid ""
"100_000_000_000\n"
"100000000000\n"
"1_00_00_00_00_000"
msgstr ""
"100_000_000_000\n"
"100000000000\n"
"1_00_00_00_00_000"

msgid ""
"Underscores can only occur between digits. For example, ``_123``, ``321_``, "
"and ``123__321`` are *not* valid literals."
msgstr ""
"Underscores kan endast förekomma mellan siffror. Till exempel är ``_123``, "
"``321_`` och ``123__321`` *inte* giltiga bokstavstecken."

msgid ""
"Integers can be specified in binary (base 2), octal (base 8), or hexadecimal "
"(base 16) using the prefixes ``0b``, ``0o`` and ``0x``, respectively. "
"Hexadecimal digits 10 through 15 are represented by letters ``A``-``F``, "
"case-insensitive.  For example::"
msgstr ""
"Heltal kan anges i binär (bas 2), oktal (bas 8) eller hexadecimal (bas 16) "
"med hjälp av prefixen ``0b``, ``0o`` respektive ``0x``. De hexadecimala "
"siffrorna 10 till 15 representeras av bokstäverna ``A``-``F``, utan hänsyn "
"till skiftlägesskillnader.  Till exempel::"

msgid ""
"0b100110111\n"
"0b_1110_0101\n"
"0o177\n"
"0o377\n"
"0xdeadbeef\n"
"0xDead_Beef"
msgstr ""
"0b100110111\n"
"0b_1110_0101\n"
"0o177\n"
"0o377\n"
"0xdeadbeef\n"
"0xDöd_Beef"

msgid ""
"An underscore can follow the base specifier. For example, ``0x_1f`` is a "
"valid literal, but ``0_x1f`` and ``0x__1f`` are not."
msgstr ""
"Ett understreck kan följa basspecificeraren. Till exempel är ``0x_1f`` en "
"giltig bokstav, men ``0_x1f`` och ``0x__1f`` är det inte."

msgid ""
"Leading zeros in a non-zero decimal number are not allowed. For example, "
"``0123`` is not a valid literal. This is for disambiguation with C-style "
"octal literals, which Python used before version 3.0."
msgstr ""
"Ledande nollor i ett decimaltal som inte är noll är inte tillåtna. Till "
"exempel är ``0123`` inte en giltig bokstav. Detta är för disambiguering med "
"C-stil oktala literaler, som Python använde före version 3.0."

msgid ""
"Formally, integer literals are described by the following lexical "
"definitions:"
msgstr ""
"Formellt beskrivs heltalslitteraler med följande lexikala definitioner:"

msgid "Underscores are now allowed for grouping purposes in literals."
msgstr "Underscores är nu tillåtna för grupperingsändamål i literals."

msgid "Floating-point literals"
msgstr "Flyttalslitteraler"

msgid ""
"Floating-point (float) literals, such as ``3.14`` or ``1.5``, denote :ref:"
"`approximations of real numbers <datamodel-float>`."
msgstr ""
"Flyttal (float), t.ex. ``3,14`` eller ``1,5``, betecknar :ref:"
"``approximationer av reella tal <datamodel-float>`."

msgid ""
"They consist of *integer* and *fraction* parts, each composed of decimal "
"digits. The parts are separated by a decimal point, ``.``::"
msgstr ""
"De består av *integer* och *fraction* delar, var och en sammansatt av "
"decimalsiffror. Delarna är åtskilda av ett decimaltecken, ``.``::"

msgid ""
"2.71828\n"
"4.0"
msgstr ""
"2.71828\n"
"4.0"

msgid ""
"Unlike in integer literals, leading zeros are allowed in the numeric parts. "
"For example, ``077.010`` is legal, and denotes the same number as ``77.10``."
msgstr ""
"Till skillnad från i heltalslitteraler är inledande nollor tillåtna i de "
"numeriska delarna. Till exempel är ``077.010`` lagligt och betecknar samma "
"tal som ``77.10``."

msgid ""
"As in integer literals, single underscores may occur between digits to help "
"readability::"
msgstr ""
"Precis som i heltalslitteraler kan enkla understrykningar förekomma mellan "
"siffrorna för att underlätta läsbarheten::"

msgid ""
"96_485.332_123\n"
"3.14_15_93"
msgstr ""
"96_485.332_123\n"
"3.14_15_93"

msgid "Either of these parts, but not both, can be empty. For example::"
msgstr "Endera av dessa delar, men inte båda, kan vara tomma. Till exempel::"

msgid ""
"10.  # (equivalent to 10.0)\n"
".001  # (equivalent to 0.001)"
msgstr ""
"10.  # (motsvarande 10,0)\n"
".001 # (motsvarar 0,001)"

msgid ""
"Optionally, the integer and fraction may be followed by an *exponent*: the "
"letter ``e`` or ``E``, followed by an optional sign, ``+`` or ``-``, and a "
"number in the same format as the integer and fraction parts. The ``e`` or "
"``E`` represents \"times ten raised to the power of\"::"
msgstr ""
"Eventuellt kan heltalet och bråket följas av en *exponent*: bokstaven ``e`` "
"eller ``E``, följt av ett valfritt tecken, ``+`` eller ``-``, och ett tal i "
"samma format som heltalet och bråket. Bokstaven ``e`` eller ``E`` "
"representerar \"gånger tio upphöjt till en potens av\"::"

msgid ""
"1.0e3  # (represents 1.0×10³, or 1000.0)\n"
"1.166e-5  # (represents 1.166×10⁻⁵, or 0.00001166)\n"
"6.02214076e+23  # (represents 6.02214076×10²³, or 602214076000000000000000.)"
msgstr ""
"1.0e3 # (representerar 1,0×10³, eller 1000,0)\n"
"1.166e-5 # (representerar 1,166×10-⁵, eller 0,00001166)\n"
"6.02214076e+23 # (representerar 6,02214076×10²³, eller "
"602214076000000000000000.)"

msgid ""
"In floats with only integer and exponent parts, the decimal point may be "
"omitted::"
msgstr ""
"I flyttal med endast heltals- och exponentdelar kan decimaltecknet "
"utelämnas::"

msgid ""
"1e3  # (equivalent to 1.e3 and 1.0e3)\n"
"0e0  # (equivalent to 0.)"
msgstr ""
"1e3 # (motsvarande 1.e3 och 1.0e3)\n"
"0e0 # (motsvarar 0.)"

msgid ""
"Formally, floating-point literals are described by the following lexical "
"definitions:"
msgstr ""
"Formellt beskrivs flyttalslitteraler med följande lexikala definitioner:"

msgid "Imaginary literals"
msgstr "Imaginära bokstäver"

msgid ""
"Python has :ref:`complex number <typesnumeric>` objects, but no complex "
"literals. Instead, *imaginary literals* denote complex numbers with a zero "
"real part."
msgstr ""
"Python har :ref:``komplexa tal <typesnumeric>`-objekt, men inga komplexa "
"litteraler. Istället betecknar *imaginära literaler* komplexa tal med en "
"reell del på noll."

msgid ""
"For example, in math, the complex number 3+4.2\\ *i* is written as the real "
"number 3 added to the imaginary number 4.2\\ *i*. Python uses a similar "
"syntax, except the imaginary unit is written as ``j`` rather than *i*::"
msgstr ""
"I matematik skrivs till exempel det komplexa talet 3+4,2\\ *i* som det "
"reella talet 3 adderat till det imaginära talet 4,2\\ *i*. Python använder "
"en liknande syntax, förutom att den imaginära enheten skrivs som ``j`` i "
"stället för *i*::"

msgid "3+4.2j"
msgstr "3+4.2j"

msgid ""
"This is an expression composed of the :ref:`integer literal <integers>` "
"``3``, the :ref:`operator <operators>` '``+``', and the :ref:`imaginary "
"literal <imaginary>` ``4.2j``. Since these are three separate tokens, "
"whitespace is allowed between them::"
msgstr ""
"Detta är ett uttryck som består av :ref:``integer literal <integers>```3``, :"
"ref:``operator <operators>```+```, och :ref:``imaginary literal "
"<imaginary>```4.2j``. Eftersom dessa är tre separata tokens tillåts "
"blanksteg mellan dem::"

msgid "3 + 4.2j"
msgstr "3 + 4.2j"

msgid ""
"No whitespace is allowed *within* each token. In particular, the ``j`` "
"suffix, may not be separated from the number before it."
msgstr ""
"Inga blanksteg tillåts *inom* varje token. I synnerhet får suffixet \"j\" "
"inte separeras från siffran före det."

msgid ""
"The number before the ``j`` has the same syntax as a floating-point literal. "
"Thus, the following are valid imaginary literals::"
msgstr ""
"Talet före ``j`` har samma syntax som en flyttalslitteral. Följande är "
"alltså giltiga imaginära literaler::"

msgid ""
"4.2j\n"
"3.14j\n"
"10.j\n"
".001j\n"
"1e100j\n"
"3.14e-10j\n"
"3.14_15_93j"
msgstr ""
"4.2j\n"
"3.14j\n"
"10.j\n"
".001j\n"
"1e100j\n"
"3.14e-10j\n"
"3.14_15_93j"

msgid ""
"Unlike in a floating-point literal the decimal point can be omitted if the "
"imaginary number only has an integer part. The number is still evaluated as "
"a floating-point number, not an integer::"
msgstr ""
"Till skillnad från i en flyttalslitteral kan decimaltecknet utelämnas om det "
"imaginära talet bara har en heltalsdel. Talet utvärderas fortfarande som ett "
"flyttal, inte som ett heltal::"

msgid ""
"10j\n"
"0j\n"
"1000000000000000000000000j   # equivalent to 1e+24j"
msgstr ""
"10j\n"
"0j\n"
"1000000000000000000000000j # motsvarande 1e+24j"

msgid ""
"The ``j`` suffix is case-insensitive. That means you can use ``J`` instead::"
msgstr ""
"Suffixet ``j`` är okänsligt för stora och små bokstäver. Det betyder att du "
"kan använda ``J`` istället för::"

msgid "3.14J   # equivalent to 3.14j"
msgstr "3.14J # motsvarande 3.14j"

msgid ""
"Formally, imaginary literals are described by the following lexical "
"definition:"
msgstr ""
"Formellt beskrivs imaginära literaler med följande lexikala definition:"

msgid "Operators"
msgstr "Operatorer"

msgid "The following tokens are operators:"
msgstr "Följande symboler är operatorer:"

msgid ""
"+       -       *       **      /       //      %      @\n"
"<<      >>      &       |       ^       ~       :=\n"
"<       >       <=      >=      ==      !="
msgstr ""
"+ - * ** / // % @\n"
"<< >> & | ^ ~ :=\n"
"< > <= >= == !="

msgid "Delimiters"
msgstr "Avgränsningstecken"

msgid "The following tokens serve as delimiters in the grammar:"
msgstr "Följande tokens fungerar som avgränsare i grammatiken:"

msgid ""
"(       )       [       ]       {       }\n"
",       :       !       .       ;       @       ="
msgstr ""
"( ) [ ] { }\n"
", : !       . ; @ ="

msgid "The period can also occur in floating-point and imaginary literals."
msgstr "Perioden kan också förekomma i flyttals- och imaginära literaler."

msgid ""
"A sequence of three periods has a special meaning as an :py:data:`Ellipsis` "
"literal:"
msgstr ""
"En sekvens av tre punkter har en särskild betydelse som en :py:data:"
"`Ellipsis`-litteral:"

msgid "..."
msgstr "..."

msgid ""
"The following *augmented assignment operators* serve lexically as "
"delimiters, but also perform an operation:"
msgstr ""
"Följande *förstärkta tilldelningsoperatorer* fungerar lexikalt som "
"avgränsare, men utför också en operation:"

msgid ""
"->      +=      -=      *=      /=      //=     %=\n"
"@=      &=      |=      ^=      >>=     <<=     **="
msgstr ""
"-> += -= *= /= //= %=\n"
"@= &= |= ^= >>= <<= **="

msgid ""
"The following printing ASCII characters have special meaning as part of "
"other tokens or are otherwise significant to the lexical analyzer:"
msgstr ""
"Följande skrivande ASCII-tecken har särskild betydelse som del av andra "
"tokens eller är på annat sätt betydelsefulla för den lexikala analysatorn:"

msgid "'       \"       #       \\"
msgstr "' \" # \\"

msgid ""
"The following printing ASCII characters are not used in Python.  Their "
"occurrence outside string literals and comments is an unconditional error:"
msgstr ""
"Följande skrivande ASCII-tecken används inte i Python.  Deras förekomst "
"utanför stränglitteraler och kommentarer är ett ovillkorligt fel:"

msgid "$       ?       `"
msgstr "$ ?       `"

msgid "lexical analysis"
msgstr "lexikalisk analys"

msgid "parser"
msgstr "analysator"

msgid "token"
msgstr "symbol"

msgid "line structure"
msgstr "linjestruktur"

msgid "logical line"
msgstr "logisk linje"

msgid "physical line"
msgstr "fysisk linje"

msgid "line joining"
msgstr "linjeförbindning"

msgid "NEWLINE token"
msgstr "NEWLINE-token"

msgid "comment"
msgstr "kommentar"

msgid "hash character"
msgstr "hash-tecken"

msgid "# (hash)"
msgstr "# (hash)"

msgid "source character set"
msgstr "källans teckenuppsättning"

msgid "encoding declarations (source file)"
msgstr "deklarationer för kodning (källfil)"

msgid "source encoding declaration"
msgstr "deklaration av källkodning"

msgid "line continuation"
msgstr "linje fortsättning"

msgid "backslash character"
msgstr "backslash-tecken"

msgid "blank line"
msgstr "tom linje"

msgid "indentation"
msgstr "indragning"

msgid "leading whitespace"
msgstr "ledande blanktecken"

msgid "space"
msgstr "tid"

msgid "tab"
msgstr "flik"

msgid "grouping"
msgstr "gruppering"

msgid "statement grouping"
msgstr "gruppering av uttalanden"

msgid "INDENT token"
msgstr "INDENT-token"

msgid "DEDENT token"
msgstr "DEDENT-token"

msgid "identifier"
msgstr "identifierare"

msgid "name"
msgstr "namn"

msgid "keyword"
msgstr "sökord"

msgid "reserved word"
msgstr "reserverat ord"

msgid "soft keyword"
msgstr "mjukt nyckelord"

msgid "_, identifiers"
msgstr "_, identifierare"

msgid "__, identifiers"
msgstr "__, identifierare"

msgid "literal"
msgstr "bokstavlig"

msgid "constant"
msgstr "konstant"

msgid "string literal"
msgstr "sträng bokstavlig"

msgid "bytes literal"
msgstr "bytes bokstavlig"

msgid "ASCII"
msgstr "ASCII"

msgid "' (single quote)"
msgstr "' (enkelt citat)"

msgid "\" (double quote)"
msgstr "\" (dubbla citattecken)"

msgid "triple-quoted string"
msgstr "trippelciterad sträng"

msgid "\"\"\""
msgstr "\"\"\""

msgid "'''"
msgstr "'''"

msgid "u'"
msgstr "u'"

msgid "u\""
msgstr "u\""

msgid "escape sequence"
msgstr "utrymningssekvens"

msgid "Standard C"
msgstr "Standard C"

msgid "C"
msgstr "C"

msgid "\\ (backslash)"
msgstr "\\ (backslash)"

msgid "\\\\"
msgstr "\\\\"

msgid "\\a"
msgstr "\\a"

msgid "\\b"
msgstr "\\b"

msgid "\\f"
msgstr "\\f"

msgid "\\n"
msgstr "\\n"

msgid "\\r"
msgstr "\\r"

msgid "\\t"
msgstr "\\t"

msgid "\\v"
msgstr "\\v"

msgid "\\x"
msgstr "\\x"

msgid "\\u"
msgstr "\\u"

msgid "\\U"
msgstr "\\U"

msgid "unrecognized escape sequence"
msgstr "oigenkänd escape-sekvens"

msgid "b'"
msgstr "b'"

msgid "b\""
msgstr "b\""

msgid "r'"
msgstr "r'"

msgid "raw string literal"
msgstr "rå sträng bokstavlig"

msgid "r\""
msgstr "r\""

msgid "formatted string literal"
msgstr "formaterad sträng bokstavlig"

msgid "interpolated string literal"
msgstr "interpolerad sträng bokstavlig"

msgid "string"
msgstr "sträng"

msgid "formatted literal"
msgstr "formaterad bokstav"

msgid "interpolated literal"
msgstr "interpolerad bokstavlig"

msgid "f-string"
msgstr "f-sträng"

msgid "fstring"
msgstr "fsträng"

msgid "f'"
msgstr "f'"

msgid "f\""
msgstr "f\""

msgid "{} (curly brackets)"
msgstr "{} (inom hakparentes)"

msgid "in formatted string literal"
msgstr "i formaterad sträng bokstavlig"

msgid "! (exclamation)"
msgstr "! (utrop)"

msgid ": (colon)"
msgstr ": (kolon)"

msgid "= (equals)"
msgstr "= (lika med)"

msgid "for help in debugging using string literals"
msgstr "för hjälp med felsökning med hjälp av stränglitteraler"

msgid "number"
msgstr "nummer"

msgid "numeric literal"
msgstr "numerisk bokstav"

msgid "integer literal"
msgstr "heltalslitteral"

msgid "floating-point literal"
msgstr "flyttalslitteral"

msgid "hexadecimal literal"
msgstr "hexadecimal bokstav"

msgid "octal literal"
msgstr "oktal bokstav"

msgid "binary literal"
msgstr "binär bokstav"

msgid "decimal literal"
msgstr "decimal bokstav"

msgid "imaginary literal"
msgstr "imaginär bokstavlig"

msgid "complex literal"
msgstr "komplex bokstavlig"

msgid "0b"
msgstr "0b"

msgid "0o"
msgstr "0o"

msgid "0x"
msgstr "0x"

msgid "_ (underscore)"
msgstr "_ (understreck)"

msgid "in numeric literal"
msgstr "i numerisk bokstav"

msgid ". (dot)"
msgstr ". (punkt)"

msgid "e"
msgstr "l"

msgid "j"
msgstr "j"

msgid "operators"
msgstr "operatorer"

msgid "delimiters"
msgstr "avgränsningstecken"
