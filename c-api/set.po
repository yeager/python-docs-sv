# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Set Objects"
msgstr "Ställ in objekt"

msgid ""
"This section details the public API for :class:`set` and :class:`frozenset` "
"objects.  Any functionality not listed below is best accessed using either "
"the abstract object protocol (including :c:func:`PyObject_CallMethod`, :c:"
"func:`PyObject_RichCompareBool`, :c:func:`PyObject_Hash`, :c:func:"
"`PyObject_Repr`, :c:func:`PyObject_IsTrue`, :c:func:`PyObject_Print`, and :c:"
"func:`PyObject_GetIter`) or the abstract number protocol (including :c:func:"
"`PyNumber_And`, :c:func:`PyNumber_Subtract`, :c:func:`PyNumber_Or`, :c:func:"
"`PyNumber_Xor`, :c:func:`PyNumber_InPlaceAnd`, :c:func:"
"`PyNumber_InPlaceSubtract`, :c:func:`PyNumber_InPlaceOr`, and :c:func:"
"`PyNumber_InPlaceXor`)."
msgstr ""
"Detta avsnitt beskriver det publika API:et för objekten :class:`set` och :"
"class:`frozenset`.  All funktionalitet som inte listas nedan nås bäst med "
"antingen det abstrakta objektprotokollet (inklusive :c:func:"
"`PyObject_CallMethod`, :c:func:`PyObject_RichCompareBool`, :c:func:"
"`PyObject_Hash`, :c:func:`PyObject_Repr`, :c:func:`PyObject_IsTrue`, :c:func:"
"`PyObject_Print` och :c:func:`PyObject_GetIter`) eller det abstrakta "
"nummerprotokollet (inklusive :c:func:`PyNumber_And`, :c:func:"
"`PyNumber_Subtract`, :c:func:`PyNumber_Or`, :c:func:`PyNumber_Xor`, :c:func:"
"`PyNumber_InPlaceAnd`, :c:func:`PyNumber_InPlaceSubtract`, :c:func:"
"`PyNumber_InPlaceOr`, och :c:func:`PyNumber_InPlaceXor`)."

msgid ""
"This subtype of :c:type:`PyObject` is used to hold the internal data for "
"both :class:`set` and :class:`frozenset` objects.  It is like a :c:type:"
"`PyDictObject` in that it is a fixed size for small sets (much like tuple "
"storage) and will point to a separate, variable sized block of memory for "
"medium and large sized sets (much like list storage). None of the fields of "
"this structure should be considered public and all are subject to change.  "
"All access should be done through the documented API rather than by "
"manipulating the values in the structure."
msgstr ""
"Denna subtyp av :c:type:`PyObject` används för att hålla interna data för "
"både :class:`set` och :class:`frozenset` objekt.  Det är som ett :c:type:"
"`PyDictObject` i det att det har en fast storlek för små uppsättningar "
"(ungefär som tuple-lagring) och kommer att peka på ett separat minnesblock "
"med variabel storlek för medelstora och stora uppsättningar (ungefär som "
"listlagring). Inget av fälten i den här strukturen ska betraktas som "
"offentligt och alla kan ändras.  All åtkomst bör ske genom det dokumenterade "
"API:et snarare än genom att manipulera värdena i strukturen."

msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`set` type."
msgstr ""
"Detta är en instans av :c:type:`PyTypeObject` som representerar Python :"
"class:`set`-typen."

msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`frozenset` type."
msgstr ""
"Detta är en instans av :c:type:`PyTypeObject` som representerar Python-"
"typen :class:`frozenset`."

msgid ""
"The following type check macros work on pointers to any Python object. "
"Likewise, the constructor functions work with any iterable Python object."
msgstr ""
"Följande makron för typkontroll fungerar på pekare till alla Python-objekt. "
"På samma sätt fungerar konstruktorfunktionerna med alla itererbara Python-"
"objekt."

msgid ""
"Return true if *p* is a :class:`set` object or an instance of a subtype. "
"This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett :class:`set`-objekt eller en instans av en "
"subtyp. Denna funktion lyckas alltid."

msgid ""
"Return true if *p* is a :class:`frozenset` object or an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett :class:`frozenset`-objekt eller en instans av "
"en subtyp.  Denna funktion lyckas alltid."

msgid ""
"Return true if *p* is a :class:`set` object, a :class:`frozenset` object, or "
"an instance of a subtype.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett :class:`set`-objekt, ett :class:`frozenset`-"
"objekt eller en instans av en subtyp.  Denna funktion lyckas alltid."

msgid ""
"Return true if *p* is a :class:`set` object but not an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett :class:`set`-objekt men inte en instans av en "
"subtyp.  Denna funktion lyckas alltid."

msgid ""
"Return true if *p* is a :class:`set` object or a :class:`frozenset` object "
"but not an instance of a subtype.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett :class:`set`-objekt eller ett :class:"
"`frozenset`-objekt men inte en instans av en subtyp.  Denna funktion lyckas "
"alltid."

msgid ""
"Return true if *p* is a :class:`frozenset` object but not an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Returnerar true om *p* är ett :class:`frozenset`-objekt men inte en instans "
"av en subtyp.  Denna funktion lyckas alltid."

msgid ""
"Return a new :class:`set` containing objects returned by the *iterable*.  "
"The *iterable* may be ``NULL`` to create a new empty set.  Return the new "
"set on success or ``NULL`` on failure.  Raise :exc:`TypeError` if *iterable* "
"is not actually iterable.  The constructor is also useful for copying a set "
"(``c=set(s)``)."
msgstr ""
"Returnerar en ny :class:`set` som innehåller objekt som returneras av "
"*iterable*.  *iterable* kan vara ``NULL`` för att skapa en ny tom "
"uppsättning.  Returnerar den nya uppsättningen vid framgång eller ``NULL`` "
"vid misslyckande.  Utlöser :exc:`TypeError` om *iterable* inte är en "
"iterabel.  Konstruktören är också användbar för att kopiera en uppsättning "
"(``c=set(s)``)."

msgid ""
"Return a new :class:`frozenset` containing objects returned by the "
"*iterable*. The *iterable* may be ``NULL`` to create a new empty frozenset.  "
"Return the new set on success or ``NULL`` on failure.  Raise :exc:"
"`TypeError` if *iterable* is not actually iterable."
msgstr ""
"Returnerar en ny :class:`frozenset` som innehåller objekt som returnerats av "
"*iterable*. *iterable* kan vara ``NULL`` för att skapa en ny tom frozenset.  "
"Returnerar den nya uppsättningen vid framgång eller ``NULL`` vid "
"misslyckande.  Utlöser :exc:`TypeError` om *iterable* inte är en iterable."

msgid ""
"The following functions and macros are available for instances of :class:"
"`set` or :class:`frozenset` or instances of their subtypes."
msgstr ""
"Följande funktioner och makron är tillgängliga för instanser av :class:`set` "
"eller :class:`frozenset` eller instanser av deras subtyper."

msgid ""
"Return the length of a :class:`set` or :class:`frozenset` object. Equivalent "
"to ``len(anyset)``.  Raises a :exc:`SystemError` if *anyset* is not a :class:"
"`set`, :class:`frozenset`, or an instance of a subtype."
msgstr ""
"Returnerar längden på ett :class:`set` eller :class:`frozenset` objekt. "
"Ekvivalent med ``len(anyset)``.  Utlöser ett :exc:`SystemError` om *anyset* "
"inte är en :class:`set`, :class:`frozenset`, eller en instans av en subtyp."

msgid "Macro form of :c:func:`PySet_Size` without error checking."
msgstr "Makroform av :c:func:`PySet_Size` utan felkontroll."

msgid ""
"Return ``1`` if found, ``0`` if not found, and ``-1`` if an error is "
"encountered.  Unlike the Python :meth:`~object.__contains__` method, this "
"function does not automatically convert unhashable sets into temporary "
"frozensets.  Raise a :exc:`TypeError` if the *key* is unhashable. Raise :exc:"
"`SystemError` if *anyset* is not a :class:`set`, :class:`frozenset`, or an "
"instance of a subtype."
msgstr ""
"Returnerar ``1`` om den hittas, ``0`` om den inte hittas och ``-1`` om ett "
"fel inträffar.  Till skillnad från Pythons metod :meth:`~object."
"__contains__` konverterar denna funktion inte automatiskt ohashbara "
"uppsättningar till tillfälliga frozensets.  Orsakar ett :exc:`TypeError` om "
"*nyckeln* är oashbar. Utlös :exc:`SystemError` om *anyset* inte är en :class:"
"`set`, :class:`frozenset` eller en instans av en subtyp."

msgid ""
"Add *key* to a :class:`set` instance.  Also works with :class:`frozenset` "
"instances (like :c:func:`PyTuple_SetItem` it can be used to fill in the "
"values of brand new frozensets before they are exposed to other code).  "
"Return ``0`` on success or ``-1`` on failure. Raise a :exc:`TypeError` if "
"the *key* is unhashable. Raise a :exc:`MemoryError` if there is no room to "
"grow.  Raise a :exc:`SystemError` if *set* is not an instance of :class:"
"`set` or its subtype."
msgstr ""
"Lägg till *nyckel* till en :class:`set`-instans.  Fungerar även med :class:"
"`frozenset`-instanser (som :c:func:`PyTuple_SetItem` kan den användas för "
"att fylla i värdena i helt nya frozensets innan de exponeras för annan "
"kod).  Returnerar ``0`` vid framgång eller ``-1`` vid misslyckande. Ger ett :"
"exc:`TypeError` om *nyckeln* inte är hashbar. Ger ett :exc:`MemoryError` om "
"det inte finns utrymme att växa.  Ge upphov till ett :exc:`SystemError` om "
"*set* inte är en instans av :class:`set` eller dess subtyp."

msgid ""
"The following functions are available for instances of :class:`set` or its "
"subtypes but not for instances of :class:`frozenset` or its subtypes."
msgstr ""
"Följande funktioner är tillgängliga för instanser av :class:`set` eller dess "
"subtyper men inte för instanser av :class:`frozenset` eller dess subtyper."

msgid ""
"Return ``1`` if found and removed, ``0`` if not found (no action taken), and "
"``-1`` if an error is encountered.  Does not raise :exc:`KeyError` for "
"missing keys.  Raise a :exc:`TypeError` if the *key* is unhashable.  Unlike "
"the Python :meth:`~frozenset.discard` method, this function does not "
"automatically convert unhashable sets into temporary frozensets. Raise :exc:"
"`SystemError` if *set* is not an instance of :class:`set` or its subtype."
msgstr ""
"Returnerar ``1`` om nyckeln hittats och tagits bort, ``0`` om den inte "
"hittats (ingen åtgärd vidtagen) och ``-1`` om ett fel uppstått.  Ger inte "
"upphov till :exc:`KeyError` för saknade nycklar.  Ger upphov till ett :exc:"
"`TypeError` om *nyckeln* inte är hashbar.  Till skillnad från Pythons :meth:"
"`~frozenset.discard`-metod konverterar denna funktion inte automatiskt "
"ohashbara uppsättningar till tillfälliga frozensets. Utlöser :exc:"
"`SystemError` om *set* inte är en instans av :class:`set` eller dess subtyp."

msgid ""
"Return a new reference to an arbitrary object in the *set*, and removes the "
"object from the *set*.  Return ``NULL`` on failure.  Raise :exc:`KeyError` "
"if the set is empty. Raise a :exc:`SystemError` if *set* is not an instance "
"of :class:`set` or its subtype."
msgstr ""
"Returnerar en ny referens till ett godtyckligt objekt i *set*, och tar bort "
"objektet från *set*.  Returnerar ``NULL`` om den misslyckas.  Ger upphov "
"till :exc:`KeyError` om uppsättningen är tom. Utlöser ett :exc:`SystemError` "
"om *set* inte är en instans av :class:`set` eller dess subtyp."

msgid ""
"Empty an existing set of all elements. Return ``0`` on success. Return "
"``-1`` and raise :exc:`SystemError` if *set* is not an instance of :class:"
"`set` or its subtype."
msgstr ""
"Tömmer en befintlig uppsättning på alla element. Returnerar ``0`` vid "
"framgång. Returnerar ``-1`` och ger :exc:`SystemError` om *set* inte är en "
"instans av :class:`set` eller dess subtyp."

msgid "object"
msgstr "objekt"

msgid "set"
msgstr "set"

msgid "frozenset"
msgstr "frozenset"

msgid "built-in function"
msgstr "inbyggd funktion"

msgid "len"
msgstr "len"
