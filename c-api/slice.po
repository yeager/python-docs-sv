# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 14:20+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Slice Objects"
msgstr "Slice-objekt"

msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in "
"the Python layer."
msgstr ""
"Typobjektet för slice-objekt.  Detta är samma sak som :class:`slice` i "
"Python-lagret."

msgid ""
"Return true if *ob* is a slice object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Returnerar true om *ob* är ett slice-objekt; *ob* får inte vara ``NULL``.  "
"Denna funktion lyckas alltid."

msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, and "
"*step* parameters are used as the values of the slice object attributes of "
"the same names.  Any of the values may be ``NULL``, in which case the "
"``None`` will be used for the corresponding attribute."
msgstr ""
"Returnerar ett nytt slice-objekt med de angivna värdena.  Parametrarna "
"*start*, *stop* och *step* används som värden för attributen i slice-"
"objektet med samma namn.  Något av värdena kan vara ``NULL``, i vilket fall "
"``None`` kommer att användas för motsvarande attribut."

msgid ""
"Return ``NULL`` with an exception set if the new object could not be "
"allocated."
msgstr ""
"Returnerar ``NULL`` med ett undantag om det nya objektet inte kunde "
"allokeras."

msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than *length* "
"as errors."
msgstr ""
"Hämtar start-, stopp- och stegindex från skivobjektet *slice*, förutsatt en "
"sekvens med längden *length*. Behandlar index som är större än *length* som "
"fel."

msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set (unless "
"one of the indices was not ``None`` and failed to be converted to an "
"integer, in which case ``-1`` is returned with an exception set)."
msgstr ""
"Returnerar ``0`` vid framgång och ``-1`` vid fel utan någon "
"undantagsuppsättning (såvida inte ett av indexen inte var ``None`` och inte "
"kunde konverteras till ett heltal, i vilket fall ``-1`` returneras med en "
"undantagsuppsättning)."

msgid "You probably do not want to use this function."
msgstr "Du vill förmodligen inte använda den här funktionen."

msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` before."
msgstr "Parametertypen för *slice*-parametern var tidigare ``PySliceObject*``."

msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, "
"stop, and step indices from the slice object *slice* assuming a sequence of "
"length *length*, and store the length of the slice in *slicelength*.  Out of "
"bounds indices are clipped in a manner consistent with the handling of "
"normal slices."
msgstr ""
"Användbar ersättning för :c:func:`PySlice_GetIndices`.  Hämtar start-, "
"stopp- och stegindex från skivobjektet *slice* förutsatt en sekvens med "
"längden *length*, och lagrar längden på skivan i *slicelength*.  Index "
"utanför gränserna klipps på ett sätt som överensstämmer med hanteringen av "
"normala skivor."

msgid "Return ``0`` on success and ``-1`` on error with an exception set."
msgstr ""
"Returnerar ``0`` vid framgång och ``-1`` vid fel med en undantagsuppsättning."

msgid ""
"This function is considered not safe for resizable sequences. Its invocation "
"should be replaced by a combination of :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` where ::"
msgstr ""
"Denna funktion anses inte vara säker för sekvenser som kan ändras i storlek. "
"Dess anrop bör ersättas med en kombination av :c:func:`PySlice_Unpack` och :"
"c:func:`PySlice_AdjustIndices` där ::"

msgid ""
"if (PySlice_GetIndicesEx(slice, length, &start, &stop, &step, &slicelength) "
"< 0) {\n"
"    // return error\n"
"}"
msgstr ""
"if (PySlice_GetIndicesEx(slice, length, &start, &stop, &step, &slicelength) "
"< 0) {\n"
"    // returnerar fel\n"
"}"

msgid "is replaced by ::"
msgstr "ersätts av ::"

msgid ""
"if (PySlice_Unpack(slice, &start, &stop, &step) < 0) {\n"
"    // return error\n"
"}\n"
"slicelength = PySlice_AdjustIndices(length, &start, &stop, step);"
msgstr ""
"if (PySlice_Unpack(slice, &start, &stop, &step) < 0) {\n"
"    // returnera fel\n"
"}\n"
"slicelength = PySlice_AdjustIndices(length, &start, &stop, step);"

msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between ``0x03050400`` "
"and ``0x03060000`` (not including) or ``0x03060100`` or higher :c:func:`!"
"PySlice_GetIndicesEx` is implemented as a macro using :c:func:`!"
"PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments *start*, "
"*stop* and *step* are evaluated more than once."
msgstr ""
"Om ``Py_LIMITED_API`` inte är inställt eller är inställt på värdet mellan "
"``0x03050400`` och ``0x03060000`` (ej inkluderat) eller ``0x03060100`` eller "
"högre implementeras :c:func:`!PySlice_GetIndicesEx`` som ett makro med :c:"
"func:`!PySlice_Unpack` och :c:func:`!PySlice_AdjustIndices`. Argumenten "
"*start*, *stop* och *step* utvärderas mer än en gång."

msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) :c:func:`!"
"PySlice_GetIndicesEx` is a deprecated function."
msgstr ""
"Om ``Py_LIMITED_API`` är satt till värdet mindre än ``0x03050400`` eller "
"mellan ``0x03060000`` och ``0x03060100`` (ej inkluderat) :c:func:`!"
"PySlice_GetIndicesEx` är en föråldrad funktion."

msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step values "
"less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""
"Extrahera start-, stopp- och stegdatamedlemmarna från ett slice-objekt som C-"
"heltal.  Minska tyst värden som är större än ``PY_SSIZE_T_MAX`` till "
"``PY_SSIZE_T_MAX``, öka tyst start- och stoppvärdena som är mindre än "
"``PY_SSIZE_T_MIN`` till ``PY_SSIZE_T_MIN`` och öka tyst stegvärdena som är "
"mindre än ``-PY_SSIZE_T_MAX`` till ``-PY_SSIZE_T_MAX``."

msgid "Return ``-1`` with an exception set on error, ``0`` on success."
msgstr "Returnerar ``-1`` med en exception set vid fel, ``0`` vid framgång."

msgid ""
"Adjust start/end slice indices assuming a sequence of the specified length. "
"Out of bounds indices are clipped in a manner consistent with the handling "
"of normal slices."
msgstr ""
"Justera index för start/slut på skivan genom att anta en sekvens med angiven "
"längd. Index utanför gränserna klipps på ett sätt som överensstämmer med "
"hanteringen av normala skivor."

msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr ""
"Returnera längden på skivan.  Alltid framgångsrik.  Anropar inte Python-kod."

msgid "Ellipsis Object"
msgstr "Ellipsobjekt"

msgid ""
"The type of Python :const:`Ellipsis` object.  Same as :class:`types."
"EllipsisType` in the Python layer."
msgstr ""
"Typen av Python :const:`Ellipsis`-objekt.  Samma som :class:`types."
"EllipsisType` i Python-lagret."

msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  Like :c:data:"
"`Py_None`, it is an :term:`immortal` singleton object."
msgstr ""
"Python-objektet ``Ellipsis``.  Detta objekt har inga metoder.  Liksom :c:"
"data:`Py_None` är det ett :term:`immortal` singleton-objekt."

msgid ":c:data:`Py_Ellipsis` is immortal."
msgstr ":c:data:`Py_Ellipsis` är odödlig."
