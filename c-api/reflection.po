# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 14:19+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "Reflection"
msgstr "Reflektion"

msgid "Use :c:func:`PyEval_GetFrameBuiltins` instead."
msgstr "Använd :c:func:`PyEval_GetFrameBuiltins` istället."

msgid ""
"Return a dictionary of the builtins in the current execution frame, or the "
"interpreter of the thread state if no frame is currently executing."
msgstr ""
"Returnerar en ordlista över builtins i den aktuella exekveringsramen, eller "
"tolken för trådtillståndet om ingen ram exekveras för närvarande."

msgid ""
"Use either :c:func:`PyEval_GetFrameLocals` to obtain the same behaviour as "
"calling :func:`locals` in Python code, or else call :c:func:"
"`PyFrame_GetLocals` on the result of :c:func:`PyEval_GetFrame` to access "
"the :attr:`~frame.f_locals` attribute of the currently executing frame."
msgstr ""
"Använd antingen :c:func:`PyEval_GetFrameLocals` för att få samma beteende "
"som när du anropar :func:`locals` i Python-kod, eller anropa :c:func:"
"`PyFrame_GetLocals` på resultatet av :c:func:`PyEval_GetFrame` för att få "
"tillgång till attributet :attr:`~frame.f_locals` för den aktuella ramen."

msgid ""
"Return a mapping providing access to the local variables in the current "
"execution frame, or ``NULL`` if no frame is currently executing."
msgstr ""
"Returnerar en mappning som ger åtkomst till de lokala variablerna i den "
"aktuella körramen, eller ``NULL`` om ingen ram körs för närvarande."

msgid ""
"Refer to :func:`locals` for details of the mapping returned at different "
"scopes."
msgstr ""
"Se :func:`locals` för detaljer om den mappning som returneras i olika scope."

msgid ""
"As this function returns a :term:`borrowed reference`, the dictionary "
"returned for :term:`optimized scopes <optimized scope>` is cached on the "
"frame object and will remain alive as long as the frame object does. Unlike :"
"c:func:`PyEval_GetFrameLocals` and :func:`locals`, subsequent calls to this "
"function in the same frame will update the contents of the cached dictionary "
"to reflect changes in the state of the local variables rather than returning "
"a new snapshot."
msgstr ""
"Eftersom denna funktion returnerar en :term:`lånad referens`, cachelagras "
"den ordbok som returneras för :term:`optimerade scopes <optimized scope>` på "
"ramobjektet och kommer att leva så länge som ramobjektet gör det. Till "
"skillnad från :c:func:`PyEval_GetFrameLocals` och :func:`locals` kommer "
"efterföljande anrop till denna funktion i samma ram att uppdatera innehållet "
"i den cachade ordlistan för att återspegla förändringar i tillståndet för de "
"lokala variablerna i stället för att returnera en ny ögonblicksbild."

msgid ""
"As part of :pep:`667`, :c:func:`PyFrame_GetLocals`, :func:`locals`, and :"
"attr:`FrameType.f_locals <frame.f_locals>` no longer make use of the shared "
"cache dictionary. Refer to the :ref:`What's New entry <whatsnew313-locals-"
"semantics>` for additional details."
msgstr ""
"Som en del av :pep:`667`, :c:func:`PyFrame_GetLocals`, :func:`locals`, och :"
"attr:`FrameType.f_locals <frame.f_locals>` använder inte längre den delade "
"cache-ordboken. Se :ref:``Vad är nytt <whatsnew313-locals-semantics>` för "
"ytterligare information."

msgid "Use :c:func:`PyEval_GetFrameGlobals` instead."
msgstr "Använd :c:func:`PyEval_GetFrameGlobals` istället."

msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr ""
"Returnerar en ordlista över de globala variablerna i den aktuella körramen, "
"eller ``NULL`` om ingen ram körs för närvarande."

msgid ""
"Return the :term:`attached thread state`'s frame, which is ``NULL`` if no "
"frame is currently executing."
msgstr ""
"Returnerar :term:`attached thread state`'s ram, som är ``NULL`` om ingen ram "
"körs för närvarande."

msgid "See also :c:func:`PyThreadState_GetFrame`."
msgstr "Se även :c:func:`PyThreadState_GetFrame`."

msgid ""
"Return a dictionary of the local variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing. Equivalent to calling :func:"
"`locals` in Python code."
msgstr ""
"Returnerar en ordlista över de lokala variablerna i den aktuella körramen, "
"eller ``NULL`` om ingen ram körs för närvarande. Motsvarar anrop av :func:"
"`locals` i Python-kod."

msgid ""
"To access :attr:`~frame.f_locals` on the current frame without making an "
"independent snapshot in :term:`optimized scopes <optimized scope>`, call :c:"
"func:`PyFrame_GetLocals` on the result of :c:func:`PyEval_GetFrame`."
msgstr ""
"För att komma åt :attr:`~frame.f_locals` på den aktuella bildrutan utan att "
"göra en oberoende ögonblicksbild i :term:`optimized scopes <optimized "
"scope>`, anropa :c:func:`PyFrame_GetLocals` på resultatet av :c:func:"
"`PyEval_GetFrame`."

msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing. Equivalent to calling :func:"
"`globals` in Python code."
msgstr ""
"Returnerar en ordlista över de globala variablerna i den aktuella körramen, "
"eller ``NULL`` om ingen ram körs för närvarande. Motsvarar anrop av :func:"
"`globals` i Python-kod."

msgid ""
"Return the name of *func* if it is a function, class or instance object, "
"else the name of *func*\\s type."
msgstr ""
"Returnerar namnet på *func* om det är en funktion, klass eller "
"instansobjekt, annars namnet på *func*s typ."

msgid ""
"Return a description string, depending on the type of *func*. Return values "
"include \"()\" for functions and methods, \" constructor\", \" instance\", "
"and \" object\".  Concatenated with the result of :c:func:"
"`PyEval_GetFuncName`, the result will be a description of *func*."
msgstr ""
"Returnerar en beskrivningssträng, beroende på typen av *func*. Returvärden "
"inkluderar \"()\" för funktioner och metoder, \" constructor\", \" "
"instance\" och \" object\".  Sammankopplat med resultatet av :c:func:"
"`PyEval_GetFuncName` blir resultatet en beskrivning av *func*."
